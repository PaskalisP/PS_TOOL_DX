USE [PS TOOL DX Live]
GO
/****** Object:  Table [dbo].[ZVSTAT_Pay_Cards_Parameters]    Script Date: 21.04.2022 23:45:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ZVSTAT_Pay_Cards_Parameters](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ZVSTA_Parameter_General] [nvarchar](255) NULL,
	[ParameterValue1] [nvarchar](255) NULL,
	[ParameterValue2] [nvarchar](255) NULL,
	[ParameterValue3] [nvarchar](255) NULL,
	[ParameterValue4] [nvarchar](255) NULL,
	[ParameterNr] [float] NULL,
	[Status] [nvarchar](1) NULL,
	[LastAction] [nvarchar](50) NULL,
	[LastUpdateUser] [nvarchar](255) NULL,
	[LastUpdateDate] [datetime] NULL,
 CONSTRAINT [PK_ZVSTAT_Payments_Cards_Parameters] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ZVSTAT_ProofingRules_Parameter]    Script Date: 21.04.2022 23:45:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ZVSTAT_ProofingRules_Parameter](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[Validity_ID] [nvarchar](50) NULL,
	[ValidityType] [nvarchar](50) NULL,
	[ReportingFormLeft] [nvarchar](50) NULL,
	[ReportingFormRight] [nvarchar](50) NULL,
	[ValidityTerm] [nvarchar](255) NULL,
	[ValidityTermDescription] [nvarchar](max) NULL,
	[ValiditySqlParameter] [nvarchar](max) NULL,
	[ValidityTermStatus] [nvarchar](50) NULL,
	[LastAction] [nvarchar](50) NULL,
	[LastUpdateUser] [nvarchar](255) NULL,
	[LastUpdateDate] [datetime] NULL,
 CONSTRAINT [PK_ZVSTA_ProofingRules_Parameter] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ZVSTAT_Reporting]    Script Date: 21.04.2022 23:45:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ZVSTAT_Reporting](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ReportingPeriod] [nvarchar](50) NULL,
	[LfdNr] [float] NULL,
	[FormNr] [nvarchar](10) NULL,
	[FormName] [nvarchar](max) NULL,
	[PositionNr] [nvarchar](50) NULL,
	[PositionName] [nvarchar](max) NULL,
	[Landkontext] [nvarchar](10) NULL,
	[LandCode] [nvarchar](255) NULL,
	[LandCode_Description] [nvarchar](255) NULL,
	[SubdivisionOfCountryCode] [nvarchar](50) NULL,
	[SubdivisionOfCountryName] [nvarchar](255) NULL,
	[LandCode_T] [nvarchar](255) NULL,
	[LandCode_T_Description] [nvarchar](255) NULL,
	[SubdivisionOfCountryCode_T] [nvarchar](50) NULL,
	[SubdivisionOfCountryName_T] [nvarchar](255) NULL,
	[PayCardSystem] [nvarchar](255) NULL,
	[PayCardSystem_Description] [nvarchar](255) NULL,
	[Anzahl] [nvarchar](1) NULL,
	[Wert] [nvarchar](1) NULL,
	[SumPosition] [nvarchar](1) NULL,
	[Anzahl_Value] [float] NULL,
	[Wert_Value] [float] NULL,
	[PositionSQLcommand] [nvarchar](max) NULL,
	[PositionInfo] [nvarchar](max) NULL,
	[LastAction] [nvarchar](50) NULL,
	[LastUpdateUser] [nvarchar](255) NULL,
	[LastUpdateDate] [datetime] NULL,
	[ReportStatus] [nvarchar](1) NULL,
 CONSTRAINT [PK_ZVSTAT_Reporting] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ZVSTAT_ReportingValidityCheck]    Script Date: 21.04.2022 23:45:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ZVSTAT_ReportingValidityCheck](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ReportingPeriod] [nvarchar](50) NULL,
	[Validity_ID] [nvarchar](50) NULL,
	[ValidityType] [nvarchar](50) NULL,
	[ReportingFormLeft] [nvarchar](50) NULL,
	[ReportingFormRight] [nvarchar](50) NULL,
	[ValidityTerm] [nvarchar](255) NULL,
	[ValidityTermDescription] [nvarchar](max) NULL,
	[ValiditySqlParameter] [nvarchar](max) NULL,
	[ValidityCheckResult] [nvarchar](50) NULL,
 CONSTRAINT [PK_ZVSTAT_ReportingValidityCheck] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ON 
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (1, N'UNKNOWN', N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', NULL, NULL, 1, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (2, N'UNKNOWN', N'ONUS', N'nicht-SEPA interne Übertragungen (Überweisungen oder Lastschriften, ohne Verwendung eines externen Zahlungssystems)', NULL, NULL, 2, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (3, N'PAYMENTS', N'CTS_ALL', N'Überweisungen', NULL, NULL, 1, N'N', N'Modification', N'papasp', CAST(N'2021-12-17T17:07:54.703' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (4, N'PAYMENTS', N'CTS_SEPA', N'SEPA Überweisungen', NULL, NULL, 2, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (5, N'PAYMENTS', N'CTS_SEPAI', N'SEPA Instant Überweisungen', NULL, NULL, 3, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (6, N'DIRECT_DEBITS', N'DDS_ALL', N'Lastschriften', NULL, NULL, 1, N'N', N'Modification', N'papasp', CAST(N'2021-12-17T17:08:08.227' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (7, N'DIRECT_DEBITS', N'DDS_SEPAC', N'SEPA Core Lastschriften', NULL, NULL, 2, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (8, N'DIRECT_DEBITS', N'DDS_SEPAB', N'SEPA B2B Lastschriften', NULL, NULL, 3, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (9, N'CARDS', N'PCS_ALL', N'Kartenzahlungen', NULL, NULL, 1, N'N', N'Modification', N'Paskalis', CAST(N'2022-02-12T21:10:46.240' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (10, N'CARDS', N'PCS_VISA', N'Kartenscheme VISA (inkl. V PAY)', NULL, NULL, 3, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:20:50.497' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (11, N'CARDS', N'PCS_MCRD', N'Kartenscheme MASTERCARD (inkl. Maestro)', NULL, NULL, 4, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:21:00.243' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (12, N'CARDS', N'PCS_DINE', N'Kartenscheme Diners', NULL, NULL, 5, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:21:07.300' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (13, N'CARDS', N'PCS_AMEX', N'Kartenscheme American Express', NULL, NULL, 6, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:21:13.473' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (14, N'CARDS', N'PCS_CUP', N'Kartenscheme China Union Pay', NULL, NULL, 7, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:21:19.833' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (15, N'CARDS', N'PCS_DISC', N'Kartenscheme Discover', NULL, NULL, 8, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:21:26.127' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (16, N'CARDS', N'PCS_JCB', N'Kartenscheme JCB', NULL, NULL, 9, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:21:32.217' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (17, N'CARDS', N'PCS_DE_1', N'Kartenscheme girocard', NULL, NULL, 2, N'Y', N'Modification', N'papasp', CAST(N'2021-12-17T11:20:36.617' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (18, N'MCC_CODES', N'G300', N'Airlines (codes between 3000 and 3350)', N'3000', N'3350', 1, N'Y', N'Modification', N'Paskalis', CAST(N'2021-05-12T18:31:05.813' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (19, N'MCC_CODES', N'G335', N'Car rentals (codes between 3351 and 3500)', N'3351', N'3500', 2, N'Y', N'Modification', N'Paskalis', CAST(N'2021-05-12T18:31:20.023' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (20, N'MCC_CODES', N'G350', N'Hotels (codes between 3501 and 3999)', N'3501', N'3999', 3, N'Y', N'Modification', N'Paskalis', CAST(N'2021-05-12T18:31:35.343' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (21, N'MCC_CODES', N'R999', N'MCCs, not listed separately nor included in the groupcodes', N'0', N'0', 4, N'Y', N'Modification', N'Paskalis', CAST(N'2021-05-12T18:31:48.113' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (22, N'MCC_CODES', N'742', N'Veterinary services', N'742', N'742', 5, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (23, N'MCC_CODES', N'743', N'Wine producers', N'743', N'743', 6, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (24, N'MCC_CODES', N'744', N'Champagne producers', N'744', N'744', 7, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (25, N'MCC_CODES', N'763', N'Agricultural Cooperatives', N'763', N'763', 8, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (26, N'MCC_CODES', N'780', N'Landscaping and horticultural services', N'780', N'780', 9, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (27, N'MCC_CODES', N'1353', N'Dia (Spain)-Hypermarkets of Food', N'1353', N'1353', 10, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (28, N'MCC_CODES', N'1406', N'H&M Moda (Spain)-Retail Merchants', N'1406', N'1406', 11, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (29, N'MCC_CODES', N'1520', N'General contractors — residential and commercial', N'1520', N'1520', 12, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (30, N'MCC_CODES', N'1711', N'Heating, plumbing and air-conditioning contractors', N'1711', N'1711', 13, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (31, N'MCC_CODES', N'1731', N'Electrical contractors', N'1731', N'1731', 14, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (32, N'MCC_CODES', N'1740', N'Masonry, stonework, tile setting, plastering and insulation contractors', N'1740', N'1740', 15, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (33, N'MCC_CODES', N'1750', N'Carpentry contractors', N'1750', N'1750', 16, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (34, N'MCC_CODES', N'1761', N'Roofing, siding and sheet metal work contractors', N'1761', N'1761', 17, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (35, N'MCC_CODES', N'1771', N'Concrete work contractors', N'1771', N'1771', 18, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (36, N'MCC_CODES', N'1799', N'Special trade contractors — not elsewhere classified', N'1799', N'1799', 19, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (37, N'MCC_CODES', N'2741', N'Miscellaneous publishing and printing services', N'2741', N'2741', 20, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (38, N'MCC_CODES', N'2791', N'Typesetting, platemaking and related services', N'2791', N'2791', 21, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (39, N'MCC_CODES', N'2842', N'Speciality cleaning, polishing and sanitation preparations', N'2842', N'2842', 22, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (40, N'MCC_CODES', N'4011', N'Railroads', N'4011', N'4011', 23, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (41, N'MCC_CODES', N'4111', N'Local and suburban commuter passenger transportation, including ferries', N'4111', N'4111', 24, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (42, N'MCC_CODES', N'4112', N'Passenger railways', N'4112', N'4112', 25, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (43, N'MCC_CODES', N'4119', N'Ambulance Services', N'4119', N'4119', 26, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (44, N'MCC_CODES', N'4121', N'Taxi-cabs and limousines', N'4121', N'4121', 27, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (45, N'MCC_CODES', N'4131', N'Bus Lines', N'4131', N'4131', 28, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (46, N'MCC_CODES', N'4214', N'Motor freight carriers and trucking — local and long distance, moving and storage companies and local delivery', N'4214', N'4214', 29, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (47, N'MCC_CODES', N'4215', N'Courier services — air and ground and freight forwarders', N'4215', N'4215', 30, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (48, N'MCC_CODES', N'4225', N'Public warehousing and storage — farm products, refrigerated goods and household goods', N'4225', N'4225', 31, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (49, N'MCC_CODES', N'4411', N'Steamships and cruise lines', N'4411', N'4411', 32, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (50, N'MCC_CODES', N'4457', N'Boat Rentals and Leasing', N'4457', N'4457', 33, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (51, N'MCC_CODES', N'4468', N'Marinas, marine service and supplies', N'4468', N'4468', 34, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (52, N'MCC_CODES', N'4511', N'Airlines and Air Carriers (Not Elsewhere Classified)', N'4511', N'4511', 35, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (53, N'MCC_CODES', N'4582', N'Airports, Flying Fields, and Airport Terminals', N'4582', N'4582', 36, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (54, N'MCC_CODES', N'4722', N'Travel agencies and tour operators', N'4722', N'4722', 37, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (55, N'MCC_CODES', N'4723', N'Package Tour Operators – Germany Only', N'4723', N'4723', 38, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (56, N'MCC_CODES', N'4784', N'Tolls and bridge fees', N'4784', N'4784', 39, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (57, N'MCC_CODES', N'4789', N'Transportation services — not elsewhere classified', N'4789', N'4789', 40, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (58, N'MCC_CODES', N'4812', N'Telecommunication equipment and telephone sales', N'4812', N'4812', 41, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (59, N'MCC_CODES', N'4813', N'Key-entry Telecom Merchant providing single local and long-distance phone calls using a central access number in a non–face-to-face environment using key entry', N'4813', N'4813', 42, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (60, N'MCC_CODES', N'4814', N'Telecommunication services, including local and long distance calls, credit card calls, calls through use of magnetic stripe reading telephones and faxes', N'4814', N'4814', 43, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (61, N'MCC_CODES', N'4815', N'Monthly summary telephone charges', N'4815', N'4815', 44, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (62, N'MCC_CODES', N'4816', N'Computer network/information services', N'4816', N'4816', 45, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (63, N'MCC_CODES', N'4821', N'Telegraph services', N'4821', N'4821', 46, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (64, N'MCC_CODES', N'4829', N'Wire transfers and money orders', N'4829', N'4829', 47, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (65, N'MCC_CODES', N'4899', N'Cable and other pay television services', N'4899', N'4899', 48, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (66, N'MCC_CODES', N'4900', N'Utilities — electric, gas, water and sanitary', N'4900', N'4900', 49, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (67, N'MCC_CODES', N'5013', N'Motor vehicle supplies and new parts', N'5013', N'5013', 50, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (68, N'MCC_CODES', N'5021', N'Office and commercial furniture', N'5021', N'5021', 51, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (69, N'MCC_CODES', N'5039', N'Construction materials — not elsewhere classified', N'5039', N'5039', 52, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (70, N'MCC_CODES', N'5044', N'Office, photographic, photocopy and microfilm equipment', N'5044', N'5044', 53, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (71, N'MCC_CODES', N'5045', N'Computers, computer peripheral equipment — not elsewhere classified', N'5045', N'5045', 54, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (72, N'MCC_CODES', N'5046', N'Commercial equipment — not elsewhere classified', N'5046', N'5046', 55, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (73, N'MCC_CODES', N'5047', N'Dental/laboratory/medical/ophthalmic hospital equipment and supplies', N'5047', N'5047', 56, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (74, N'MCC_CODES', N'5051', N'Metal service centres and offices', N'5051', N'5051', 57, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (75, N'MCC_CODES', N'5065', N'Electrical parts and equipment', N'5065', N'5065', 58, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (76, N'MCC_CODES', N'5072', N'Hardware equipment and supplies', N'5072', N'5072', 59, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (77, N'MCC_CODES', N'5074', N'Plumbing and heating equipment and supplies', N'5074', N'5074', 60, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (78, N'MCC_CODES', N'5085', N'Industrial supplies — not elsewhere classified', N'5085', N'5085', 61, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (79, N'MCC_CODES', N'5094', N'Precious stones and metals, watches and jewellery', N'5094', N'5094', 62, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (80, N'MCC_CODES', N'5099', N'Durable goods — not elsewhere classified', N'5099', N'5099', 63, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (81, N'MCC_CODES', N'5111', N'Stationery, office supplies and printing and writing paper', N'5111', N'5111', 64, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (82, N'MCC_CODES', N'5122', N'Drugs, drug proprietors', N'5122', N'5122', 65, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (83, N'MCC_CODES', N'5131', N'Piece goods, notions and other dry goods', N'5131', N'5131', 66, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (84, N'MCC_CODES', N'5137', N'Men’s, women’s and children’s uniforms and commercial clothing', N'5137', N'5137', 67, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (85, N'MCC_CODES', N'5139', N'Commercial footwear', N'5139', N'5139', 68, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (86, N'MCC_CODES', N'5169', N'Chemicals and allied products — not elsewhere classified', N'5169', N'5169', 69, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (87, N'MCC_CODES', N'5172', N'Petroleum and petroleum products', N'5172', N'5172', 70, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (88, N'MCC_CODES', N'5192', N'Books, Periodicals and Newspapers', N'5192', N'5192', 71, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (89, N'MCC_CODES', N'5193', N'Florists’ supplies, nursery stock and flowers', N'5193', N'5193', 72, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (90, N'MCC_CODES', N'5198', N'Paints, varnishes and supplies', N'5198', N'5198', 73, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (91, N'MCC_CODES', N'5199', N'Non-durable goods — not elsewhere classified', N'5199', N'5199', 74, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (92, N'MCC_CODES', N'5200', N'Home supply warehouse outlets', N'5200', N'5200', 75, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (93, N'MCC_CODES', N'5211', N'Lumber and building materials outlets', N'5211', N'5211', 76, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (94, N'MCC_CODES', N'5231', N'Glass, paint and wallpaper shops', N'5231', N'5231', 77, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (95, N'MCC_CODES', N'5251', N'Hardware shops', N'5251', N'5251', 78, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (96, N'MCC_CODES', N'5261', N'Lawn and garden supply outlets, including nurseries', N'5261', N'5261', 79, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (97, N'MCC_CODES', N'5271', N'Mobile home dealers', N'5271', N'5271', 80, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (98, N'MCC_CODES', N'5299', N'Warehouse Club Gas', N'5299', N'5299', 81, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (99, N'MCC_CODES', N'5300', N'Wholesale clubs', N'5300', N'5300', 82, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (100, N'MCC_CODES', N'5309', N'Duty-free shops', N'5309', N'5309', 83, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (101, N'MCC_CODES', N'5310', N'Discount shops', N'5310', N'5310', 84, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (102, N'MCC_CODES', N'5311', N'Department stores', N'5311', N'5311', 85, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (103, N'MCC_CODES', N'5331', N'Variety stores', N'5331', N'5331', 86, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (104, N'MCC_CODES', N'5399', N'Miscellaneous general merchandise', N'5399', N'5399', 87, N'Y', N'Modification', N'PapasP', CAST(N'2021-09-24T16:33:28.833' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (105, N'MCC_CODES', N'5411', N'Groceries and supermarkets', N'5411', N'5411', 88, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (106, N'MCC_CODES', N'5422', N'Freezer and locker meat provisioners', N'5422', N'5422', 89, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (107, N'MCC_CODES', N'5441', N'Candy, nut and confectionery shops', N'5441', N'5441', 90, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (108, N'MCC_CODES', N'5451', N'Dairies', N'5451', N'5451', 91, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (109, N'MCC_CODES', N'5462', N'Bakeries', N'5462', N'5462', 92, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (110, N'MCC_CODES', N'5499', N'Miscellaneous food shops — convenience and speciality retail outlets', N'5499', N'5499', 93, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (111, N'MCC_CODES', N'5511', N'Car and truck dealers (new and used) sales, services, repairs, parts and leasing', N'5511', N'5511', 94, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (112, N'MCC_CODES', N'5521', N'Car and truck dealers (used only) sales, service, repairs, parts and leasing', N'5521', N'5521', 95, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (113, N'MCC_CODES', N'5531', N'Auto Store', N'5531', N'5531', 96, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (114, N'MCC_CODES', N'5532', N'Automotive Tire Stores', N'5532', N'5532', 97, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (115, N'MCC_CODES', N'5533', N'Automotive Parts and Accessories Stores', N'5533', N'5533', 98, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (116, N'MCC_CODES', N'5541', N'Service stations (with or without ancillary services)', N'5541', N'5541', 99, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (117, N'MCC_CODES', N'5542', N'Automated Fuel Dispensers', N'5542', N'5542', 100, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (118, N'MCC_CODES', N'5551', N'Boat Dealers', N'5551', N'5551', 101, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (119, N'MCC_CODES', N'5552', N'Electric Vehicle Charging', N'5552', N'5552', 102, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (120, N'MCC_CODES', N'5561', N'Camper, recreational and utility trailer dealers', N'5561', N'5561', 103, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (121, N'MCC_CODES', N'5571', N'Motorcycle shops and dealers', N'5571', N'5571', 104, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (122, N'MCC_CODES', N'5592', N'Motor home dealers', N'5592', N'5592', 105, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (123, N'MCC_CODES', N'5598', N'Snowmobile dealers', N'5598', N'5598', 106, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (124, N'MCC_CODES', N'5599', N'Miscellaneous automotive, aircraft and farm equipment dealers — not elsewhere classified', N'5599', N'5599', 107, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (125, N'MCC_CODES', N'5611', N'Men’s and boys’ clothing and accessory shops', N'5611', N'5611', 108, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (126, N'MCC_CODES', N'5621', N'Women’s ready-to-wear shops', N'5621', N'5621', 109, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (127, N'MCC_CODES', N'5631', N'Women’s accessory and speciality shops', N'5631', N'5631', 110, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (128, N'MCC_CODES', N'5641', N'Children’s and infants’ wear shops', N'5641', N'5641', 111, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (129, N'MCC_CODES', N'5651', N'Family clothing shops', N'5651', N'5651', 112, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (130, N'MCC_CODES', N'5655', N'Sports and riding apparel shops', N'5655', N'5655', 113, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (131, N'MCC_CODES', N'5661', N'Shoe shops', N'5661', N'5661', 114, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (132, N'MCC_CODES', N'5681', N'Furriers and fur shops', N'5681', N'5681', 115, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (133, N'MCC_CODES', N'5691', N'Men’s and women’s clothing shops', N'5691', N'5691', 116, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (134, N'MCC_CODES', N'5697', N'Tailors, seamstresses, mending and alterations', N'5697', N'5697', 117, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (135, N'MCC_CODES', N'5698', N'Wig and toupee shops', N'5698', N'5698', 118, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (136, N'MCC_CODES', N'5699', N'Miscellaneous apparel and accessory shops', N'5699', N'5699', 119, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (137, N'MCC_CODES', N'5712', N'Furniture, home furnishings and equipment shops and manufacturers, except appliances', N'5712', N'5712', 120, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (138, N'MCC_CODES', N'5713', N'Floor covering services', N'5713', N'5713', 121, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (139, N'MCC_CODES', N'5714', N'Drapery, window covering and upholstery shops', N'5714', N'5714', 122, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (140, N'MCC_CODES', N'5718', N'Fireplaces, fireplace screens and accessories shops', N'5718', N'5718', 123, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (141, N'MCC_CODES', N'5719', N'Miscellaneous home furnishing speciality shops', N'5719', N'5719', 124, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (142, N'MCC_CODES', N'5722', N'Household appliance shops', N'5722', N'5722', 125, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (143, N'MCC_CODES', N'5732', N'Electronics shops', N'5732', N'5732', 126, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (144, N'MCC_CODES', N'5733', N'Music shops — musical instruments, pianos and sheet music', N'5733', N'5733', 127, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (145, N'MCC_CODES', N'5734', N'Computer software outlets', N'5734', N'5734', 128, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (146, N'MCC_CODES', N'5735', N'Record shops', N'5735', N'5735', 129, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (147, N'MCC_CODES', N'5811', N'Caterers', N'5811', N'5811', 130, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (148, N'MCC_CODES', N'5812', N'Eating places and restaurants', N'5812', N'5812', 131, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (149, N'MCC_CODES', N'5813', N'Drinking places (alcoholic beverages) — bars, taverns, night-clubs, cocktail lounges and discothèques', N'5813', N'5813', 132, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (150, N'MCC_CODES', N'5814', N'Fast food restaurants', N'5814', N'5814', 133, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (151, N'MCC_CODES', N'5815', N'Digital Goods Media – Books, Movies, Music', N'5815', N'5815', 134, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (152, N'MCC_CODES', N'5816', N'Digital Goods – Games', N'5816', N'5816', 135, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (153, N'MCC_CODES', N'5817', N'Digital Goods – Applications (Excludes Games)', N'5817', N'5817', 136, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (154, N'MCC_CODES', N'5818', N'Digital Goods – Large Digital Goods Merchant', N'5818', N'5818', 137, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (155, N'MCC_CODES', N'5912', N'Drug stores and pharmacies', N'5912', N'5912', 138, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (156, N'MCC_CODES', N'5921', N'Package shops — beer, wine and liquor', N'5921', N'5921', 139, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (157, N'MCC_CODES', N'5931', N'Used merchandise and second-hand shops', N'5931', N'5931', 140, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (158, N'MCC_CODES', N'5932', N'Antique Shops – Sales, Repairs, and Restoration Services', N'5932', N'5932', 141, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (159, N'MCC_CODES', N'5933', N'Pawn shops', N'5933', N'5933', 142, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (160, N'MCC_CODES', N'5935', N'Wrecking and salvage yards', N'5935', N'5935', 143, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (161, N'MCC_CODES', N'5937', N'Antique Reproductions', N'5937', N'5937', 144, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (162, N'MCC_CODES', N'5940', N'Bicycle Shops – Sales and Service', N'5940', N'5940', 145, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (163, N'MCC_CODES', N'5941', N'Sporting goods shops', N'5941', N'5941', 146, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (164, N'MCC_CODES', N'5942', N'Book Stores', N'5942', N'5942', 147, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (165, N'MCC_CODES', N'5943', N'Stationery, office and school supply shops', N'5943', N'5943', 148, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (166, N'MCC_CODES', N'5944', N'Jewellery, watch, clock and silverware shops', N'5944', N'5944', 149, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (167, N'MCC_CODES', N'5945', N'Hobby, toy and game shops', N'5945', N'5945', 150, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (168, N'MCC_CODES', N'5946', N'Camera and photographic supply shops', N'5946', N'5946', 151, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (169, N'MCC_CODES', N'5947', N'Gift, card, novelty and souvenir shops', N'5947', N'5947', 152, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (170, N'MCC_CODES', N'5948', N'Luggage and leather goods shops', N'5948', N'5948', 153, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (171, N'MCC_CODES', N'5949', N'Sewing, needlework, fabric and piece goods shops', N'5949', N'5949', 154, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (172, N'MCC_CODES', N'5950', N'Glassware and crystal shops', N'5950', N'5950', 155, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (173, N'MCC_CODES', N'5960', N'Direct marketing — insurance services', N'5960', N'5960', 156, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (174, N'MCC_CODES', N'5961', N'Mail Order Houses Including Catalog Order Stores', N'5961', N'5961', 157, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (175, N'MCC_CODES', N'5962', N'Telemarketing — travel-related arrangement services', N'5962', N'5962', 158, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (176, N'MCC_CODES', N'5963', N'Door-to-door sales', N'5963', N'5963', 159, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (177, N'MCC_CODES', N'5964', N'Direct marketing — catalogue merchants', N'5964', N'5964', 160, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (178, N'MCC_CODES', N'5965', N'Direct marketing — combination catalogue and retail merchants', N'5965', N'5965', 161, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (179, N'MCC_CODES', N'5966', N'Direct marketing — outbound telemarketing merchants', N'5966', N'5966', 162, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (180, N'MCC_CODES', N'5967', N'Direct marketing — inbound telemarketing merchants', N'5967', N'5967', 163, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (181, N'MCC_CODES', N'5968', N'Direct marketing — continuity/subscription merchants', N'5968', N'5968', 164, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (182, N'MCC_CODES', N'5969', N'Direct marketing/direct marketers — not elsewhere classified', N'5969', N'5969', 165, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (183, N'MCC_CODES', N'5970', N'Artist’s Supply and Craft Shops', N'5970', N'5970', 166, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (184, N'MCC_CODES', N'5971', N'Art Dealers and Galleries', N'5971', N'5971', 167, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (185, N'MCC_CODES', N'5972', N'Stamp and coin shops', N'5972', N'5972', 168, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (186, N'MCC_CODES', N'5973', N'Religious goods and shops', N'5973', N'5973', 169, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (187, N'MCC_CODES', N'5974', N'Rubber Stamp Store', N'5974', N'5974', 170, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (188, N'MCC_CODES', N'5975', N'Hearing aids — sales, service and supplies', N'5975', N'5975', 171, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (189, N'MCC_CODES', N'5976', N'Orthopaedic goods and prosthetic devices', N'5976', N'5976', 172, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (190, N'MCC_CODES', N'5977', N'Cosmetic Stores', N'5977', N'5977', 173, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (191, N'MCC_CODES', N'5978', N'Typewriter outlets — sales, service and rentals', N'5978', N'5978', 174, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (192, N'MCC_CODES', N'5983', N'Fuel dealers — fuel oil, wood, coal and liquefied petroleum', N'5983', N'5983', 175, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (193, N'MCC_CODES', N'5992', N'Florists', N'5992', N'5992', 176, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (194, N'MCC_CODES', N'5993', N'Cigar shops and stands', N'5993', N'5993', 177, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (195, N'MCC_CODES', N'5994', N'Newsagents and news-stands', N'5994', N'5994', 178, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (196, N'MCC_CODES', N'5995', N'Pet shops, pet food and supplies', N'5995', N'5995', 179, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (197, N'MCC_CODES', N'5996', N'Swimming pools — sales, supplies and services', N'5996', N'5996', 180, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (198, N'MCC_CODES', N'5997', N'Electric razor outlets — sales and service', N'5997', N'5997', 181, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (199, N'MCC_CODES', N'5998', N'Tent and awning shops', N'5998', N'5998', 182, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (200, N'MCC_CODES', N'5999', N'Miscellaneous and speciality retail outlets', N'5999', N'5999', 183, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (201, N'MCC_CODES', N'6010', N'Financial institutions — manual cash disbursements', N'6010', N'6010', 184, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (202, N'MCC_CODES', N'6011', N'Financial institutions — automated cash disbursements', N'6011', N'6011', 185, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (203, N'MCC_CODES', N'6012', N'Financial institutions — merchandise and services', N'6012', N'6012', 186, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (204, N'MCC_CODES', N'6050', N'Quasi Cash—Customer Financial Institution', N'6050', N'6050', 187, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (205, N'MCC_CODES', N'6051', N'Non-financial institutions — foreign currency, money orders (not wire transfer), scrip and travellers’ checks', N'6051', N'6051', 188, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (206, N'MCC_CODES', N'6211', N'Securities — brokers and dealers', N'6211', N'6211', 189, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (207, N'MCC_CODES', N'6236', N'Aero Servicio Carabobo', N'6236', N'6236', 190, N'N', N'Modification', N'PapasP', CAST(N'2021-09-24T16:35:36.247' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (208, N'MCC_CODES', N'6300', N'Insurance sales, underwriting and premiums', N'6300', N'6300', 191, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (209, N'MCC_CODES', N'6381', N'Insurance–Premiums', N'6381', N'6381', 192, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (210, N'MCC_CODES', N'6399', N'Insurance, Not Elsewhere Classified ( no longer valid for first presentment work)', N'6399', N'6399', 193, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (211, N'MCC_CODES', N'6513', N'Real Estate Agents and Managers', N'6513', N'6513', 194, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (212, N'MCC_CODES', N'6529', N'Remote Stored Value Load — Member Financial Institution', N'6529', N'6529', 195, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (213, N'MCC_CODES', N'6530', N'Remove Stored Value Load — Merchant', N'6530', N'6530', 196, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (214, N'MCC_CODES', N'6532', N'Payment Transaction—Customer Financial Institution', N'6532', N'6532', 197, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (215, N'MCC_CODES', N'6533', N'Payment Transaction—Merchant', N'6533', N'6533', 198, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (216, N'MCC_CODES', N'6535', N'Value Purchase–Member Financial Institution', N'6535', N'6535', 199, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (217, N'MCC_CODES', N'6536', N'MoneySend Intracountry', N'6536', N'6536', 200, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (218, N'MCC_CODES', N'6537', N'MoneySend Intercountry', N'6537', N'6537', 201, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (219, N'MCC_CODES', N'6538', N'MoneySend Funding', N'6538', N'6538', 202, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (220, N'MCC_CODES', N'6539', N'Funding Transaction (Excluding MoneySend)', N'6539', N'6539', 203, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (221, N'MCC_CODES', N'6540', N'Non-Financial Institutions – Stored Value Card Purchase/Load', N'6540', N'6540', 204, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (222, N'MCC_CODES', N'6611', N'Overpayments', N'6611', N'6611', 205, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (223, N'MCC_CODES', N'6760', N'Savings Bonds', N'6760', N'6760', 206, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (224, N'MCC_CODES', N'7011', N'Lodging — hotels, motels and resorts', N'7011', N'7011', 207, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (225, N'MCC_CODES', N'7012', N'Timeshares', N'7012', N'7012', 208, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (226, N'MCC_CODES', N'7032', N'Sporting and recreational camps', N'7032', N'7032', 209, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (227, N'MCC_CODES', N'7033', N'Trailer parks and camp-sites', N'7033', N'7033', 210, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (228, N'MCC_CODES', N'7210', N'Laundry, cleaning and garment services', N'7210', N'7210', 211, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (229, N'MCC_CODES', N'7211', N'Laundry services — family and commercial', N'7211', N'7211', 212, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (230, N'MCC_CODES', N'7216', N'Dry cleaners', N'7216', N'7216', 213, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (231, N'MCC_CODES', N'7217', N'Carpet and upholstery cleaning', N'7217', N'7217', 214, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (232, N'MCC_CODES', N'7221', N'Photographic studios', N'7221', N'7221', 215, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (233, N'MCC_CODES', N'7230', N'Barber and Beauty Shops', N'7230', N'7230', 216, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (234, N'MCC_CODES', N'7251', N'Shoe repair shops, shoe shine parlours and hat cleaning shops', N'7251', N'7251', 217, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (235, N'MCC_CODES', N'7261', N'Funeral services and crematoriums', N'7261', N'7261', 218, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (236, N'MCC_CODES', N'7273', N'Dating and escort services', N'7273', N'7273', 219, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (237, N'MCC_CODES', N'7276', N'Tax preparation services', N'7276', N'7276', 220, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (238, N'MCC_CODES', N'7277', N'Counselling services — debt, marriage and personal', N'7277', N'7277', 221, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (239, N'MCC_CODES', N'7278', N'Buying and shopping services and clubs', N'7278', N'7278', 222, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (240, N'MCC_CODES', N'7280', N'Hospital Patient-Personal Funds Withdrawal', N'7280', N'7280', 223, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (241, N'MCC_CODES', N'7295', N'Babysitting Services', N'7295', N'7295', 224, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (242, N'MCC_CODES', N'7296', N'Clothing rentals — costumes, uniforms and formal wear', N'7296', N'7296', 225, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (243, N'MCC_CODES', N'7297', N'Massage parlours', N'7297', N'7297', 226, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (244, N'MCC_CODES', N'7298', N'Health and beauty spas', N'7298', N'7298', 227, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (245, N'MCC_CODES', N'7299', N'Miscellaneous personal services — not elsewhere classified', N'7299', N'7299', 228, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (246, N'MCC_CODES', N'7311', N'Advertising Services', N'7311', N'7311', 229, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (247, N'MCC_CODES', N'7321', N'Consumer credit reporting agencies', N'7321', N'7321', 230, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (248, N'MCC_CODES', N'7322', N'Debt collection agencies', N'7322', N'7322', 231, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (249, N'MCC_CODES', N'7332', N'Blueprinting and Photocopying Services', N'7332', N'7332', 232, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (250, N'MCC_CODES', N'7333', N'Commercial photography, art and graphics', N'7333', N'7333', 233, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (251, N'MCC_CODES', N'7338', N'Quick copy, reproduction and blueprinting services', N'7338', N'7338', 234, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (252, N'MCC_CODES', N'7339', N'Stenographic and secretarial support services', N'7339', N'7339', 235, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (253, N'MCC_CODES', N'7342', N'Exterminating and disinfecting services', N'7342', N'7342', 236, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (254, N'MCC_CODES', N'7349', N'Cleaning, maintenance and janitorial services', N'7349', N'7349', 237, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (255, N'MCC_CODES', N'7361', N'Employment agencies and temporary help services', N'7361', N'7361', 238, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (256, N'MCC_CODES', N'7372', N'Computer programming, data processing and integrated systems design services', N'7372', N'7372', 239, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (257, N'MCC_CODES', N'7375', N'Information retrieval services', N'7375', N'7375', 240, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (258, N'MCC_CODES', N'7379', N'Computer maintenance and repair services — not elsewhere classified', N'7379', N'7379', 241, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (259, N'MCC_CODES', N'7392', N'Management, consulting and public relations services', N'7392', N'7392', 242, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (260, N'MCC_CODES', N'7393', N'Detective  agencies,  protective  agencies  and  security  services,  including  armoured  cars  and guard dogs', N'7393', N'7393', 243, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (261, N'MCC_CODES', N'7394', N'Equipment, tool, furniture and appliance rentals and leasing', N'7394', N'7394', 244, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (262, N'MCC_CODES', N'7395', N'Photofinishing laboratories and photo developing', N'7395', N'7395', 245, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (263, N'MCC_CODES', N'7399', N'Business services — not elsewhere classified', N'7399', N'7399', 246, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (264, N'MCC_CODES', N'7511', N'Truck Stop', N'7511', N'7511', 247, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (265, N'MCC_CODES', N'7512', N'Automobile Rental Agency—not elsewhere classified', N'7512', N'7512', 248, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (266, N'MCC_CODES', N'7513', N'Truck and utility trailer rentals', N'7513', N'7513', 249, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (267, N'MCC_CODES', N'7519', N'Motor home and recreational vehicle rentals', N'7519', N'7519', 250, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (268, N'MCC_CODES', N'7523', N'Parking lots and garages', N'7523', N'7523', 251, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (269, N'MCC_CODES', N'7524', N'Express Payment Service Merchants–Parking Lots and Garages', N'7524', N'7524', 252, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (270, N'MCC_CODES', N'7531', N'Automotive Body Repair Shops', N'7531', N'7531', 253, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (271, N'MCC_CODES', N'7534', N'Tyre retreading and repair shops', N'7534', N'7534', 254, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (272, N'MCC_CODES', N'7535', N'Automotive Paint Shops', N'7535', N'7535', 255, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (273, N'MCC_CODES', N'7538', N'Automotive Service Shops (Non-Dealer)', N'7538', N'7538', 256, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (274, N'MCC_CODES', N'7539', N'Automotive Service Shops (Spain) - Other Merchant Categories', N'7539', N'7539', 257, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (275, N'MCC_CODES', N'7542', N'Car washes', N'7542', N'7542', 258, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (276, N'MCC_CODES', N'7549', N'Towing services', N'7549', N'7549', 259, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (277, N'MCC_CODES', N'7622', N'Electronics repair shops', N'7622', N'7622', 260, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (278, N'MCC_CODES', N'7623', N'Air Conditioning and Refrigeration Repair Shops', N'7623', N'7623', 261, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (279, N'MCC_CODES', N'7629', N'Electrical and small appliance repair shops', N'7629', N'7629', 262, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (280, N'MCC_CODES', N'7631', N'Watch, clock and jewellery repair shops', N'7631', N'7631', 263, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (281, N'MCC_CODES', N'7641', N'Furniture reupholstery, repair and refinishing', N'7641', N'7641', 264, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (282, N'MCC_CODES', N'7692', N'Welding services', N'7692', N'7692', 265, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (283, N'MCC_CODES', N'7699', N'Miscellaneous repair shops and related services', N'7699', N'7699', 266, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (284, N'MCC_CODES', N'7800', N'Government-Owned Lotteries (US Region only)', N'7800', N'7800', 267, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (285, N'MCC_CODES', N'7801', N'Government Licensed On-Line Casinos (On-Line Gambling) (US Region only)', N'7801', N'7801', 268, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (286, N'MCC_CODES', N'7802', N'Government-Licensed Horse/Dog Racing (US Region only)', N'7802', N'7802', 269, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (287, N'MCC_CODES', N'7829', N'Motion picture and video tape production and distribution', N'7829', N'7829', 270, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (288, N'MCC_CODES', N'7832', N'Motion picture theatres', N'7832', N'7832', 271, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (289, N'MCC_CODES', N'7833', N'Express Payment Service — Motion Picture Theater', N'7833', N'7833', 272, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (290, N'MCC_CODES', N'7841', N'Video tape rentals', N'7841', N'7841', 273, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (291, N'MCC_CODES', N'7911', N'Dance halls, studios and schools', N'7911', N'7911', 274, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (292, N'MCC_CODES', N'7922', N'Theatrical producers (except motion pictures) and ticket agencies', N'7922', N'7922', 275, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (293, N'MCC_CODES', N'7929', N'Bands, Orchestras, and Miscellaneous Entertainers (Not Elsewhere Classified)', N'7929', N'7929', 276, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (294, N'MCC_CODES', N'7932', N'Billiard and Pool Establishments', N'7932', N'7932', 277, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (295, N'MCC_CODES', N'7933', N'Bowling Alleys', N'7933', N'7933', 278, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (296, N'MCC_CODES', N'7941', N'Commercial sports, professional sports clubs, athletic fields and sports promoters', N'7941', N'7941', 279, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (297, N'MCC_CODES', N'7991', N'Tourist attractions and exhibits', N'7991', N'7991', 280, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (298, N'MCC_CODES', N'7992', N'Public golf courses', N'7992', N'7992', 281, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (299, N'MCC_CODES', N'7993', N'Video amusement game supplies', N'7993', N'7993', 282, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (300, N'MCC_CODES', N'7994', N'Video game arcades and establishments', N'7994', N'7994', 283, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (301, N'MCC_CODES', N'7995', N'Betting, including Lottery Tickets, Casino Gaming Chips, Off-Track Betting, and Wagers at Race Tracks', N'7995', N'7995', 284, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (302, N'MCC_CODES', N'7996', N'Amusement Parks, Circuses, Carnivals, and Fortune Tellers', N'7996', N'7996', 285, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (303, N'MCC_CODES', N'7997', N'Membership clubs (sports, recreation, athletic), country clubs and private golf courses', N'7997', N'7997', 286, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (304, N'MCC_CODES', N'7998', N'Aquariums, Seaquariums, Dolphinariums, and Zoos', N'7998', N'7998', 287, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (305, N'MCC_CODES', N'7999', N'Recreation services — not elsewhere classified', N'7999', N'7999', 288, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (306, N'MCC_CODES', N'8011', N'Doctors and physicians — not elsewhere classified', N'8011', N'8011', 289, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (307, N'MCC_CODES', N'8021', N'Dentists and orthodontists', N'8021', N'8021', 290, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (308, N'MCC_CODES', N'8031', N'Osteopaths', N'8031', N'8031', 291, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (309, N'MCC_CODES', N'8041', N'Chiropractors', N'8041', N'8041', 292, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (310, N'MCC_CODES', N'8042', N'Optometrists and ophthalmologists', N'8042', N'8042', 293, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (311, N'MCC_CODES', N'8043', N'Opticians, optical goods and eyeglasses', N'8043', N'8043', 294, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (312, N'MCC_CODES', N'8044', N'Optical Goods and Eyeglasses', N'8044', N'8044', 295, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (313, N'MCC_CODES', N'8049', N'Podiatrists and chiropodists', N'8049', N'8049', 296, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (314, N'MCC_CODES', N'8050', N'Nursing and personal care facilities', N'8050', N'8050', 297, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (315, N'MCC_CODES', N'8062', N'Hospitals', N'8062', N'8062', 298, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (316, N'MCC_CODES', N'8071', N'Medical and dental laboratories', N'8071', N'8071', 299, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (317, N'MCC_CODES', N'8099', N'Medical services and health practitioners — not elsewhere classified', N'8099', N'8099', 300, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (318, N'MCC_CODES', N'8111', N'Legal services and attorneys', N'8111', N'8111', 301, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (319, N'MCC_CODES', N'8211', N'Elementary and secondary schools', N'8211', N'8211', 302, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (320, N'MCC_CODES', N'8220', N'Colleges, universities, professional schools and junior colleges', N'8220', N'8220', 303, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (321, N'MCC_CODES', N'8241', N'Correspondence schools', N'8241', N'8241', 304, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (322, N'MCC_CODES', N'8244', N'Business and secretarial schools', N'8244', N'8244', 305, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (323, N'MCC_CODES', N'8249', N'Trade and vocational schools', N'8249', N'8249', 306, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (324, N'MCC_CODES', N'8299', N'Schools and educational services — not elsewhere classified', N'8299', N'8299', 307, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (325, N'MCC_CODES', N'8351', N'Child care services', N'8351', N'8351', 308, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (326, N'MCC_CODES', N'8398', N'Charitable and social service organizations', N'8398', N'8398', 309, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (327, N'MCC_CODES', N'8641', N'Civic, social and fraternal associations', N'8641', N'8641', 310, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (328, N'MCC_CODES', N'8651', N'Political organizations', N'8651', N'8651', 311, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (329, N'MCC_CODES', N'8661', N'Religious organizations', N'8661', N'8661', 312, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (330, N'MCC_CODES', N'8675', N'Automobile Associations', N'8675', N'8675', 313, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (331, N'MCC_CODES', N'8699', N'Membership organization — not elsewhere classified', N'8699', N'8699', 314, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (332, N'MCC_CODES', N'8734', N'Testing laboratories (non-medical)', N'8734', N'8734', 315, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (333, N'MCC_CODES', N'8911', N'Architectural, Engineering, and Surveying Services', N'8911', N'8911', 316, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (334, N'MCC_CODES', N'8931', N'Accounting, Auditing, and Bookkeeping Services', N'8931', N'8931', 317, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (335, N'MCC_CODES', N'8999', N'Professional services — not elsewhere classified', N'8999', N'8999', 318, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (336, N'MCC_CODES', N'9034', N'I-Purchasing Pilot', N'9034', N'9034', 319, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (337, N'MCC_CODES', N'9211', N'Court costs, including alimony and child support', N'9211', N'9211', 320, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (338, N'MCC_CODES', N'9222', N'Fines', N'9222', N'9222', 321, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (339, N'MCC_CODES', N'9223', N'Bail and Bond Payments', N'9223', N'9223', 322, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (340, N'MCC_CODES', N'9311', N'Tax payments', N'9311', N'9311', 323, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (341, N'MCC_CODES', N'9399', N'Government services — not elsewhere classified', N'9399', N'9399', 324, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (342, N'MCC_CODES', N'9402', N'Postal services — government only', N'9402', N'9402', 325, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (343, N'MCC_CODES', N'9405', N'U.S. Federal Government Agencies or Departments', N'9405', N'9405', 326, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (344, N'MCC_CODES', N'9406', N'Government-Owned Lotteries (Non-U.S. region)', N'9406', N'9406', 327, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (345, N'MCC_CODES', N'9700', N'Automated Referral Service', N'9700', N'9700', 328, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (346, N'MCC_CODES', N'9701', N'Visa Credential Server', N'9701', N'9701', 329, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (347, N'MCC_CODES', N'9702', N'Emergency Services (GCAS) (Visa use only)', N'9702', N'9702', 330, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (348, N'MCC_CODES', N'9751', N'UK Supermarkets, Electronic Hot File', N'9751', N'9751', 331, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (349, N'MCC_CODES', N'9752', N'UK Petrol Stations, Electronic Hot File', N'9752', N'9752', 332, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (350, N'MCC_CODES', N'9754', N'Gambling-Horse, Dog Racing, State Lottery', N'9754', N'9754', 333, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (351, N'MCC_CODES', N'9950', N'Intra-Company Purchases', N'9950', N'9950', 334, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (352, N'MCC_CODES', N'5333', N'HYPERMARKETS OF FOOD', N'5333', N'5333', 335, N'Y', N'Modification', N'PapasP', CAST(N'2021-09-24T16:34:34.950' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (353, N'MCC_CODES', N'5715', N'Alcoholic beverage wholesalers', N'5715', N'5715', 336, N'Y', N'Added', N'PapasP', CAST(N'2021-09-24T16:34:54.143' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (354, N'CARDS', N'_Z', N'Kartenscheme Unbekannt', NULL, NULL, 16, N'Y', N'Modification', N'papasp', CAST(N'2022-01-26T14:59:44.727' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (355, N'CARDS', N'PCS_BE_1', N'Bancontact', NULL, NULL, 10, N'Y', N'Added', N'papasp', CAST(N'2022-01-26T15:00:08.010' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (356, N'CARDS', N'PCS_IT_1', N'BANCOMAT', NULL, NULL, 11, N'Y', N'Added', N'papasp', CAST(N'2022-01-26T15:00:40.673' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (357, N'CARDS', N'PCS_MT_1', N'Cashlink MALTA', NULL, NULL, 12, N'Y', N'Added', N'papasp', CAST(N'2022-01-26T15:01:05.027' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (358, N'CARDS', N'PCS_PT_1', N'MB', NULL, NULL, 13, N'Y', N'Added', N'papasp', CAST(N'2022-01-26T15:01:35.483' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (359, N'CARDS', N'PCS_PT_2', N'Rede privada', NULL, NULL, 14, N'Y', N'Added', N'papasp', CAST(N'2022-01-26T15:02:03.657' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] ([ID], [ZVSTA_Parameter_General], [ParameterValue1], [ParameterValue2], [ParameterValue3], [ParameterValue4], [ParameterNr], [Status], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (360, N'CARDS', N'PCS_SI_1', N'KARANTA', NULL, NULL, 15, N'Y', N'Added', N'papasp', CAST(N'2022-01-26T15:02:33.153' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_Pay_Cards_Parameters] OFF
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ON 
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (1, N'ZVSTA_2022_H', N'S101', N'SUM', N'ZVS1', N'ZVS1', N'D1 >= D11', N'Die Anzahl der Online-Konten mit täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D1'') 
,(''ZVS1'',''D11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

 

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
', N'Y', N'Modified', NULL, CAST(N'2022-04-11T19:02:34.057' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (2, N'ZVSTA_2022_H', N'S102', N'SUM', N'ZVS1', N'ZVS1', N'D1 >= D12', N'Die Anzahl der Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D1'') 
,(''ZVS1'',''D12'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y', N'Modified', NULL, CAST(N'2022-04-11T19:02:42.457' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (3, N'ZVSTA_2022_H', N'S103', N'SUM', N'ZVS1', N'ZVS1', N'D11 >= D121', N'Die Anzahl der Online-Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Online-Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D11'') 
,(''ZVS1'',''D121'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y', N'Modified', NULL, CAST(N'2022-04-11T19:02:55.453' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (4, N'ZVSTA_2022_H', N'S104', N'SUM', N'ZVS1', N'ZVS1', N'D12 >= D121', N'Die Anzahl der Online-Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit übertragbaren, täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D12'') 
,(''ZVS1'',''D121'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y', N'Modified', NULL, CAST(N'2022-04-11T19:03:14.747' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (5, N'ZVSTA_2022_H', N'S105', N'SUM', N'ZVS1', N'ZVS1', N'A1 >= A11', N'Die Anzahl der Zahlungskonten, auf die durch Kontoinformationsdienstleister zugegriffen wurde, darf nicht größer sein als die Anzahl der Zahlungskonten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:48.850' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (6, N'ZVSTA_2022_H', N'S201', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I1', N'Es können nicht mehr Karten mit Bargeldfunktion gemeldet werde als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:48.947' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (7, N'ZVSTA_2022_H', N'S202', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I2', N'Es können nicht mehr Karten mit Zahlungsfunktion gemeldet werden als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.040' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (8, N'ZVSTA_2022_H', N'S203', N'SUM', N'ZVS2', N'ZVS2', N'I2 = I21 + I22 + I23', N'Die Anzahl der Karten mit Zahlungsfunktion muss sich aus der Summe der Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I2'') 
,(''ZVS2'',''I21'') 
,(''ZVS2'',''I22'')
,(''ZVS2'',''I23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T16:40:41.633' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (9, N'ZVSTA_2022_H', N'S204.PCS', N'SUM', N'ZVS2', N'ZVS2', N'I21 >= I21.PCS', N'Die Anzahl der Debitkarten eines einzelnen Kartenzahlverfahren (Kartenscheme)* kann nicht größer sein als die Anzahl aller Debitkarten.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I21.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.237' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (10, N'ZVSTA_2022_H', N'S205', N'SUM', N'ZVS2', N'ZVS2', N'I21 <= ∑ I21.PCS', N'Die Anzahl der Debitkarten kann nicht größer sein als die Summe der Karten der Kartenzahlverfahren (Kartenschemes).', N'


DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I21.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.330' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (11, N'ZVSTA_2022_H', N'S206', N'SUM', N'ZVS2', N'ZVS2', N'I22 = ∑ I22.PCS', N'Die Anzahl der Kreditkarten ohne Kreditfunktion muss sich aus der Summe der Karten der Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I22'') 
,(''ZVS2'',''I22.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.423' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (12, N'ZVSTA_2022_H', N'S207', N'SUM', N'ZVS2', N'ZVS2', N'I23 = ∑ I23.PCS', N'Die Anzahl der Kreditkarten mit Kreditfunktion muss sich aus der Summe der Karten der Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I23'') 
,(''ZVS2'',''I23.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.520' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (13, N'ZVSTA_2022_H', N'S208', N'SUM', N'ZVS2', N'ZVS2', N'I3 = I31 + I32', N'Die Anzahl der E-Geld-Karten muss sich aus der Summe der E-Geld-Karten, auf denen E-Geld direkt gespeichert werden kann, und mit Zugang zu einem Konto ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I3'') 
,(''ZVS2'',''I31'') 
,(''ZVS2'',''I32'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.613' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (14, N'ZVSTA_2022_H', N'S209', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I3', N'Es können nicht mehr Karten mit E-Geldfunktion gemeldet werde als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I3'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.707' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (15, N'ZVSTA_2022_H', N'S210', N'SUM', N'ZVS2', N'ZVS2', N'I31 >= I311', N'Es können nicht mehr E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und die mindestens einmal geladen wurden, gemeldet werden als E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I31'') 
,(''ZVS2'',''I311'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.797' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (16, N'ZVSTA_2022_H', N'S211', N'SUM', N'ZVS2', N'ZVS2', N'I0 <= I1 + I2 + I3', N'Die Anzahl der Karten insgesamt kann nicht größer sein als die Summe der Karten nach Funktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I1'') 
,(''ZVS2'',''I2'')
,(''ZVS2'',''I3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.897' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (17, N'ZVSTA_2022_H', N'S212', N'SUM', N'ZVS2', N'ZVS2', N'I1 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit Bargeldfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:49.993' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (18, N'ZVSTA_2022_H', N'S213', N'SUM', N'ZVS2', N'ZVS2', N'I21 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit Debitfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.090' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (19, N'ZVSTA_2022_H', N'S214', N'SUM', N'ZVS2', N'ZVS2', N'I3 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit E-Geldfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I3'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.190' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (20, N'ZVSTA_2022_H', N'S215', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.287' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (21, N'ZVSTA_2022_H', N'S216', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I02', N'Es können nicht mehr Karten mit Kontaktlosfunktion gemeldet werden als Karten insgesamt', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I02'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.387' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (22, N'ZVSTA_2022_H', N'S217', N'SUM', N'ZVS2', N'ZVS2', N'I02 <= I2 + I3', N'Es können nicht mehr Karten mit Kontaktlosfunktion gemeldet werden als die Summe aus Karten mit Zahlungsfunktion und Karten mit E-Geld-Funktion', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I02'') 
,(''ZVS2'',''I2'') 
,(''ZVS2'',''I3'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.483' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (23, N'ZVSTA_2022_H', N'S301', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S11', N'Es können nicht mehr Geldautomaten gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.583' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (24, N'ZVSTA_2022_H', N'S302', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S12', N'Es können nicht mehr Bankautomaten mit Überweisungsfunktion gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S12'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.683' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (25, N'ZVSTA_2022_H', N'S303', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S13', N'Es können nicht mehr Bankautomaten mit Kontaktlosfunktion gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S13'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.783' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (26, N'ZVSTA_2022_H', N'S304', N'SUM', N'ZVS3', N'ZVS3', N'S2 >= S21', N'Es können nicht mehr EFTPOS gemeldet werden als POS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S2'') 
,(''ZVS3'',''S21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.883' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (27, N'ZVSTA_2022_H', N'S305', N'SUM', N'ZVS3', N'ZVS3', N'S21 >= S211', N'Es können nicht mehr EFTPOS mit Kontaktlosfunktion gemeldet werden als EFTPOS selbst.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S21'') 
,(''ZVS3'',''S211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:50.987' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (28, N'ZVSTA_2022_H', N'S306', N'SUM', N'ZVS3', N'ZVS3', N'S21 >= S212', N'Es können nicht mehr EFTPOS, die E-Geld akzeptieren, gemeldet werden als EFTPOS selbst.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S21'') 
,(''ZVS3'',''S212'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.083' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (29, N'ZVSTA_2022_H', N'S307', N'SUM', N'ZVS3', N'ZVS3', N'S32 >= S212', N'Es können nicht mehr EFTPOS, die E-Geld akzeptieren, gemeldet werden als Terminals, die E-Geld akzeptieren, insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S32'') 
,(''ZVS3'',''S212'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.183' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (30, N'ZVSTA_2022_H', N'S308', N'SUM', N'ZVS3', N'ZVS3', N'S3 <= S31 + S32', N'Die Anzahl der E-Geld-Terminals darf nicht größer sein als die Summe der Terminals zum Auf- und Entladen von E-Geld und der Terminals, die E-Geld akzeptieren.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S31'') 
,(''ZVS3'',''S32'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.290' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (31, N'ZVSTA_2022_H', N'S309', N'SUM', N'ZVS3', N'ZVS3', N'S3 >= S31', N'Es können nicht mehr Terminals zum Auf- und Entladen von E-Geld gemeldet werden als E-Geld Terminals insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S31'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.387' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (32, N'ZVSTA_2022_H', N'S310', N'SUM', N'ZVS3', N'ZVS3', N'S3 >= S32', N'Es können nicht mehr Terminals, die E-Geld akzeptieren, gemeldet werden als E-Geld Terminals insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S32'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.487' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (33, N'ZVSTA_2022_H', N'S4101.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT = PCT.1 + PCT.2 + PCT.3', N'Die Unterkategorien „beleghaft ausgelöst“, „elektronisch ausgelöst“ und „Sonstige“ müssen in der Summe die Überweisungen insgesamt ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0),
LandCode Nvarchar(50) default ''W0'')


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PCT.1'') 
,(''ZVS4.1'',''PCT.2'')
,(''ZVS4.1'',''PCT.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,[LandCode]  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''W0'') and [Landkontext] in (''TO'')
GROUP BY PositionNr,FormNr,[LandCode])B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.[LandCode]=B.[LandCode]

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and ROUND(A.Wert_Value,2) = ROUND(B.Wert_Value,2) + ROUND(C.Wert_Value,2) + ROUND(D.Wert_Value,2)
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.587' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (34, N'ZVSTA_2022_H', N'S4102.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2 = PCT.2.R + PCT.2.NR', N'Die elektronischen Überweisungen müssen sich aus der Summe der elektronischen Überweisungen, welche über einen Fernzugang und ohne Fernzugang ausgelöst wurden, ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2'') 
,(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.690' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (35, N'ZVSTA_2022_H', N'S4103.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2 = PCT.21 + PCT.22', N'Die elektronischen Überweisungen müssen sich aus der Summe der Datei/Sammelüberweisungen und der Einzelüberweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2'') 
,(''ZVS4.1'',''PCT.21'') 
,(''ZVS4.1'',''PCT.22'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.793' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (36, N'ZVSTA_2022_H', N'S4104.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.22 = PCT.221 + PCT.222 + PCT.223', N'Die Einzelüberweisungen müssen sich aus der Summe der Onlineüberweisungen, am Bankautomat oder sonstigem durch einen ZDL bereitgestellten Terminal ausgelösten Überweisungen und mobilen Überweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.22'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.222'')
,(''ZVS4.1'',''PCT.223'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.887' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (37, N'ZVSTA_2022_H', N'S4105.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.221 >= PCT.2211', N'Die E-Commerce-Zahlungen dürfen nicht größer sein als die Onlineüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.2211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:51.987' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (38, N'ZVSTA_2022_H', N'S4106.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.223 >= PCT.2231', N'Die mobilen P2P-Überweisungen dürfen nicht größer sein als die mobilen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.223'') 
,(''ZVS4.1'',''PCT.2231'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.087' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (39, N'ZVSTA_2022_H', N'S4107.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R = ∑ PCT.2.R.CTS', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.2.R.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.183' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (40, N'ZVSTA_2022_H', N'S4108.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R >= PCT.221 + PCT.223', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen müssen mindestens so hoch sein wie die Summe der online ausgelösten und mobilen Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.223'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.287' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (41, N'ZVSTA_2022_H', N'S4109.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R <= PCT.221 + PCT.223 + PCT.21', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen dürfen nicht höher sein als die Summe der online initiierten, den mobilen sowie der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.223'')
,(''ZVS4.1'',''PCT.21'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value <= B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.380' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (42, N'ZVSTA_2022_H', N'S4110.CTS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.CTS = PCT.2.R.CTS.1 + PCT.2.R.CTS.2', N'Die über einen Fernzugang ausgelösten Überweisungen je nach Überweisungsverfahren* müssen sich aus den Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.CTS'') 
,(''ZVS4.1'',''PCT.2.R.CTS.1'') 
,(''ZVS4.1'',''PCT.2.R.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.483' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (43, N'ZVSTA_2022_H', N'S4111.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.r0 = ∑ PCT.2.R.CTS.2', N'Die Summe der Überweisungen über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.r0'') 
,(''ZVS4.1'',''PCT.2.R.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.573' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (44, N'ZVSTA_2022_H', N'S4112.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.r0 = PCT.2.R.r1 + PCT.2.R.r3 + PCT.2.R.r4 ', N'Die über einen Fernzugriff ausgelösten Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.r0'') 
,(''ZVS4.1'',''PCT.2.R.r1'') 
,(''ZVS4.1'',''PCT.2.R.r3'')
,(''ZVS4.1'',''PCT.2.R.r4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.667' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (45, N'ZVSTA_2022_H', N'S4113.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR = ∑ PCT.2.NR.CTS', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.2.NR.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.760' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (46, N'ZVSTA_2022_H', N'S4114.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR >= PCT.222', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen müssen mindestens genauso hoch sein wie die an einem Bankautomaten initiierten Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.222'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.853' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (47, N'ZVSTA_2022_H', N'S4115.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR <= PCT.222 + PCT.21', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen dürfen nicht höher sein als die Summer der an einem Bankautomaten initiierten und der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.222'') 
,(''ZVS4.1'',''PCT.21'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:52.947' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (48, N'ZVSTA_2022_H', N'S4116.CTS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.CTS = PCT.2.NR.CTS.1 + PCT.2.NR.CTS.2', N'Die nicht über einen Fernzugang ausgelösten Überweisungen je nach Überweisungsverfahren* müssen sich aus den Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.CTS'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.1'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.037' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (49, N'ZVSTA_2022_H', N'S4117.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.r0 = ∑ PCT.2.NR.CTS.2', N'Die Summe der Überweisungen, nicht über einen Fernzugang, nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.r0'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.133' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (50, N'ZVSTA_2022_H', N'S4118.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.r0 = PCT.2.NR.r2 + PCT.2.NR.r3 + PCT.2.NR', N'Die nicht über einen Fernzugriff ausgelösten Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.r0'') 
,(''ZVS4.1'',''PCT.2.NR.r2'') 
,(''ZVS4.1'',''PCT.2.NR.r3'')
,(''ZVS4.1'',''PCT.2.NR.r4'')
,(''ZVS4.1'',''PCT.2.NR.r5'')
,(''ZVS4.1'',''PCT.2.NR.r6'')
,(''ZVS4.1'',''PCT.2.NR'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.223' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (51, N'ZVSTA_2022_H', N'S4119.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT >= PCT.4', N'Die von einem Zahlungsauslösedienstleister ausgelösten Überweisungen können nicht größer sein als die Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PCT.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.317' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (52, N'ZVSTA_2022_H', N'S4120.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD = PDD.1 + PDD.2', N'Die Lastschriften insgesamt müssen sich aus den Datei/Sammel- und Einzellastschriften ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PDD.1'') 
,(''ZVS4.1'',''PDD.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.407' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (53, N'ZVSTA_2022_H', N'S4121.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD = PDD.3 + PDD.4', N'Die Lastschriften insgesamt müssen sich aus den Lastschriften mit elektronischer und sonstiger Mandatserteilung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PDD.3'') 
,(''ZVS4.1'',''PDD.4'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.503' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (54, N'ZVSTA_2022_H', N'S4122.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.3 = ∑ PDD.3.DDS', N'Die Lastschriften mit elektronischer Mandatserteilung müssen sich aus der Summe der Lastschriften je nach Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.3'') 
,(''ZVS4.1'',''PCT.3.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.593' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (55, N'ZVSTA_2022_H', N'S4123.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.4 = ∑ PDD.4.DDS', N'Die Lastschriften mit sonstiger Mandatserteilung müssen sich aus der Summe der Lastschriften ja nach Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.4'') 
,(''ZVS4.1'',''PCT.4.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.693' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (56, N'ZVSTA_2022_H', N'S4124.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.5 <= PDD', N'Die karteninduzierten Lastschriften dürfen nicht größer sein als die Lastschriften insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.5'') 
,(''ZVS4.1'',''PDD'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.787' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (57, N'ZVSTA_2022_H', N'S4125.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCW = ∑ PCW.PCS', N'Die Bargeldabhebungen mit Karten insgesamt müssen sich aus den Bargeldabhebungen mit Karten der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCW'') 
,(''ZVS4.1'',''PCW.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.883' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (58, N'ZVSTA_2022_H', N'S4126.PCS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCW.PCS = PCW.PCS.1 + PCW.PCS.2 + PCW.PCS.3', N'Für jedes Kartenzahlverfahren (Kartenscheme)* müssen sich die Bargeldabhebungen mit Karten aus den Bargeldabhebungen mit Debitkarten, Kreditkarten ohne Kreditfunktion und Kreditkarten mit Kreditfunktion ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCW.PCS'') 
,(''ZVS4.1'',''PCW.PCS.1'') 
,(''ZVS4.1'',''PCW.PCS.2'')
,(''ZVS4.1'',''PCW.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:53.973' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (59, N'ZVSTA_2022_H', N'S4127.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM = PEM.1 + PEM.2', N'Die Zahlungen mit E-Geld insgesamt müssen sich aus den Zahlungen mit E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und Zahlungen mit E-Geld-Konten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PEM.1'') 
,(''ZVS4.1'',''PEM.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.067' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (60, N'ZVSTA_2022_H', N'S4128.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM = PEM.R + PEM.NR', N'Die Zahlungen mit E-Geld insgesamt müssen sich aus den E-Geld-Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.163' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (61, N'ZVSTA_2022_H', N'S4129.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.2 = PEM.21 + PEM.22 + PEM.23', N'Die Zahlungen mit E-Geld-Konten müssen sich aus der Verfügung per Karte, mobilen E-Geld-Zahlungen und sonstigen E-Geld-Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.2'') 
,(''ZVS4.1'',''PEM.21'') 
,(''ZVS4.1'',''PEM.22'')
,(''ZVS4.1'',''PEM.23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.257' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (62, N'ZVSTA_2022_H', N'S4130.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.22 >= PEM.221', N'Die mobilen E-Geld P2P-Zahlungen dürfen nicht höher sein als die E-Geld P2P-Zahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.22'') 
,(''ZVS4.1'',''PEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.350' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (63, N'ZVSTA_2022_H', N'S4131.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R = PEM.R.1 + PEM.R.2', N'Die über einen Fernzugang ausgelösten E-Geld-Zahlungen müssen sich aus den E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.R.1'') 
,(''ZVS4.1'',''PEM.R.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.450' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (64, N'ZVSTA_2022_H', N'S4132.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R >= PEM.221', N'Die E-Geld-Zahlungen über einen Fernzugang insgesamt dürfen nicht kleiner sein als die mobilen E-Geld P2P-Zahlungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.543' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (65, N'ZVSTA_2022_H', N'S4133.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R.2 = PEM.R.2.r0', N'Die Summe der über einen Fernzugang ausgelösten E-Geld-Zahlungen nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der E-Geld-Zahlungen ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2'') 
,(''ZVS4.1'',''PEM.R.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.637' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (66, N'ZVSTA_2022_H', N'S4134.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R.2.r0 = PEM.R.2.r1 + PEM.R.2.r3 + PEM.R.2.r4 ', N'Die über einen Fernzugriff ausgelösten E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2.r0'') 
,(''ZVS4.1'',''PEM.R.2.r1'') 
,(''ZVS4.1'',''PEM.R.2.r3'')
,(''ZVS4.1'',''PEM.R.2.r4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.733' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (67, N'ZVSTA_2022_H', N'S4135.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR >= PEM.1', N'Die nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen dürfen nicht kleiner sein als E-Geld-Zahlungen mit Karten, auf denen das E-Geld direkt gespeichert werden kann.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR'') 
,(''ZVS4.1'',''PEM.1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.827' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (68, N'ZVSTA_2022_H', N'S4136.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR = PEM.NR.1 + PEM.NR.2', N'Die nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen müssen sich aus den E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR'') 
,(''ZVS4.1'',''PEM.NR.1'') 
,(''ZVS4.1'',''PEM.NR.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:54.920' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (69, N'ZVSTA_2022_H', N'S4137.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR.2 = PEM.NR.2.r0', N'Die Summe der nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der E-Geld-Zahlungen ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR.2'') 
,(''ZVS4.1'',''PEM.NR.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.010' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (70, N'ZVSTA_2022_H', N'S4138.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR.2.r0 = PEM.NR.2.r2 + PEM.NR.2.r4 + PEM.NR.2', N'Die nicht über einen Fernzugriff ausgelösten E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2.r0'') 
,(''ZVS4.1'',''PEM.R.2.r2'') 
,(''ZVS4.1'',''PEM.R.2.r4'')
,(''ZVS4.1'',''PEM.NR.2'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.103' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (71, N'ZVSTA_2022_H', N'S4139.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PTT = PCT + PDD + PCP + PCW + PEM + PCH + PMR + PO', N'Die Zahlungsvorgänge insgesamt müssen sich aus der Summe der Überweisungen, Lastschriften, Kartenzahlungen, Bargeldabhebungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und Sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PTT'')
,(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PCP'')
,(''ZVS4.1'',''PCW'') 
,(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PCH'') 
,(''ZVS4.1'',''PMR'') 
,(''ZVS4.1'',''PO'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E, @CHECK_TABLE F, @CHECK_TABLE G, @CHECK_TABLE H, @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6 AND G.ID = 7 AND H.ID = 8 AND I.ID = 9 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.190' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (72, N'ZVSTA_2022_H', N'S4140.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI = PPI.R + PPI.NR', N'Die Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI'') 
,(''ZVS4.1'',''PPI.R'') 
,(''ZVS4.1'',''PPI.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.287' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (73, N'ZVSTA_2022_H', N'S4141.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI = PPI.PCT + PPI.OTH', N'Die Transaktionen von Zahlungsauslösediensten müssen sich aus den Überweisungen und sonstigen Transaktionen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI'') 
,(''ZVS4.1'',''PPI.PCT'') 
,(''ZVS4.1'',''PPI.OTH'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.377' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (74, N'ZVSTA_2022_H', N'S4142.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI.R = PPI.R.1 + PPI.R.2', N'Die über einen Fernzugang ausgelösten Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI.R'') 
,(''ZVS4.1'',''PPI.R.1'') 
,(''ZVS4.1'',''PPI.R.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.470' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (75, N'ZVSTA_2022_H', N'S4143.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI.NR = PPI.NR.1 + PPI.NR.2', N'Die nicht über einen Fernzugang ausgelösten Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI.NR'') 
,(''ZVS4.1'',''PPI.NR.1'') 
,(''ZVS4.1'',''PPI.NR.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.560' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (76, N'ZVSTA_2022_H', N'S4144.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PTT (empfangen) = PCT (empfangen) + PDD (empfangen', N'Die empfangenen Zahlungsvorgänge insgesamt müssen sich aus der Summe der Überweisungen, Lastschriften, Kartenzahlungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und Sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.1'',''PTT'',''FROM'') 
,(''ZVS4.1'',''PCT'',''FROM'') 
,(''ZVS4.1'',''PDD'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.653' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (77, N'ZVSTA_2022_H', N'S4201.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP = PCP.1 + PCP.2', N'Die Zahlungen mit Karten insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten Zahlungen mit Karten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP'') 
,(''ZVS4.2'',''PCP.1'') 
,(''ZVS4.2'',''PCP.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.740' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (78, N'ZVSTA_2022_H', N'S4202.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.1 = PCP.1.R + PCP.1.NR', N'Die nicht elektronisch ausgelösten Zahlungen mit Karten müssen sich aus den nicht elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.1'') 
,(''ZVS4.2'',''PCP.1.R'') 
,(''ZVS4.2'',''PCP.1.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.827' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (79, N'ZVSTA_2022_H', N'S4203.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2 = PCP.2.R + PCP.2.NR', N'Die elektronisch ausgelösten Zahlungen mit Karten müssen sich aus den elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2'') 
,(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:55.917' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (80, N'ZVSTA_2022_H', N'S4204.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R = ∑ PCP.2.R.PCS', N'Die elektronischen, über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.R.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.013' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (81, N'ZVSTA_2022_H', N'S4205.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R = PCP.2.R.1 + PCP.2.R.4 ', N'Die über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den mobilen und sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.R.1'') 
,(''ZVS4.2'',''PCP.2.R.4'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.103' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (82, N'ZVSTA_2022_H', N'S4206.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS = PCP.2.R.PCS.1 + PCP.2.R.PCS.2 + PCP.2.R.PCS.3', N'Die über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'') 
,(''ZVS4.2'',''PCP.2.R.PCS.1'') 
,(''ZVS4.2'',''PCP.2.R.PCS.2'')
,(''ZVS4.2'',''PCP.2.R.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.190' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (83, N'ZVSTA_2022_H', N'S4207.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS = PCP.2.R.PCS.4 + PCP.2.R.PCS.5', N'Die über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'') 
,(''ZVS4.2'',''PCP.2.R.PCS.4'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.287' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (84, N'ZVSTA_2022_H', N'S4208.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.1 >= PCP.2.R.11', N'Die über einen Fernzugang ausgelösten mobilen P2P-Kartenzahlungen dürfen nicht höher sein als die über einen Fernzugang ausgelösten mobilen Kartenzahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.1'') 
,(''ZVS4.2'',''PCP.2.R.11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.377' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (85, N'ZVSTA_2022_H', N'S4209.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 = ∑ PCP.2.R.PCS.5', N'Die Summe der Kartenzahlungen über Fernzugriff ohne starke Kundenauthentifizierung der einzelnen Kartenzahlverfahren (Kartenschemes) muss den Kartenzahlungen nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.470' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (86, N'ZVSTA_2022_H', N'S4210.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 = PCP.2.R.r1 + PCP.2.R.r4 + PCP.2.R.r5 ', N'Die über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'') 
,(''ZVS4.2'',''PCP.2.R.r1'') 
,(''ZVS4.2'',''PCP.2.R.r4'')
,(''ZVS4.2'',''PCP.2.R.r5'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.560' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (87, N'ZVSTA_2022_H', N'S4211.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR = ∑ PCP.2.NR.PCS', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR'') 
,(''ZVS4.2'',''PCP.2.NR.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.650' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (88, N'ZVSTA_2022_H', N'S4212.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR = PCP.2.NR.2 + PCP.2.NR.3 + PCP.2.NR.4', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR'') 
,(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.3'')
,(''ZVS4.2'',''PCP.2.NR.4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.743' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (89, N'ZVSTA_2022_H', N'S4213.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS = PCP.2.NR.PCS.1 + PCP.2.NR.PCS.2 + PCP.2.NR.PCS.3', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.1'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.2'')
,(''ZVS4.2'',''PCP.2.NR.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.840' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (90, N'ZVSTA_2022_H', N'S4214.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS = PCP.2.NR.PCS.4 + PCP.2.NR.PCS.5', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.4'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:56.930' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (91, N'ZVSTA_2022_H', N'S4215.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.2 >= PCP.2.NR.21', N'Die kontaktlosen Kartenzahlungen an einem physischen EFTPOS dürfen nicht größer sein als die Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.027' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (92, N'ZVSTA_2022_H', N'S4216.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.21 >= PCP.2.NR.211', N'Die kontaktlosen Kartenzahlungen an einem physischen EFTPOS per NFC dürfen nicht größer sein als die kontaktlosen Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.21'') 
,(''ZVS4.2'',''PCP.2.NR.2111'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.120' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (93, N'ZVSTA_2022_H', N'S4217.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.2 >= PCP.2.NR.r6', N'Die elektronischen Kartenzahlungen ohne starke Kundenauthentifizierung an unbeaufsichtigten Terminals für Verkehrsnutzungsentgelte und Parkgebühren können nicht höher sein als elektronische Kartenzahlungen an physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.r6'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.213' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (94, N'ZVSTA_2022_H', N'S4218.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 = ∑ PCP.2.NR.PCS.5', N'Die Summe der Kartenzahlungen nicht über einen Fernzugriff ohne starke Kundenauthentifizierung der einzelnen Kartenzahlverfahren (Kartenschemes) muss den Kartenzahlungen nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.303' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (95, N'ZVSTA_2022_H', N'S4219.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 = PCP.2.NR.r2 + PCP.2.NR.r4 + PCP.2.NR.r5 + PCP.2.NR.r6 + PCP.2.NR.r10', N'Die nicht über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'') 
,(''ZVS4.2'',''PCP.2.NR.r2'') 
,(''ZVS4.2'',''PCP.2.NR.r4'')
,(''ZVS4.2'',''PCP.2.NR.r5'') 
,(''ZVS4.2'',''PCP.2.NR.r6'')
,(''ZVS4.2'',''PCP.2.NR.r10'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
                                 + E.Anzahl_Value + F.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value
+ F.Wert_Value

THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D , @CHECK_TABLE E , @CHECK_TABLE F
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.393' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (96, N'ZVSTA_2022_H', N'S4220.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.1 <= PCP.2.NR.2 + PCP.2.NR.3', N'Die nicht über einen Fernzugang ausgelösten mobilen Kartenzahlungsvorgänge können nicht größer sein die Summe der Kartenzahlungen am EFTPOS-Terminal und am Bankautomat.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.1'') 
,(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.3'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.487' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (97, N'ZVSTA_2022_H', N'S4221.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP (empfangen) = PCP.1 (empfangen) + PCP.2 (empfangen)', N'Die Zahlungen mit Karten an selbst abgerechneten Terminals insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten Zahlungen mit Karten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP'',''FROM'') 
,(''ZVS4.2'',''PCP.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.573' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (98, N'ZVSTA_2022_H', N'S4222.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.1 (empfangen) = PCP.1.R (empfangen) + PCP.1.NR (empfangen)', N'Die nicht elektronisch ausgelösten Zahlungen mit Karten an selbst abgerechneten Terminals müssen sich aus den nicht elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.1'',''FROM'') 
,(''ZVS4.2'',''PCP.1.R'',''FROM'') 
,(''ZVS4.2'',''PCP.1.NR'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.670' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (99, N'ZVSTA_2022_H', N'S4223.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2 (empfangen) = PCP.2.R (empfangen) + PCP.2.NR (empfangen)', N'Die elektronisch ausgelösten Zahlungen mit Karten an selbst abgerechneten Terminals müssen sich aus den elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.760' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (100, N'ZVSTA_2022_H', N'S4224.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R (empfangen) = ∑ PCP.2.R.PCS (empfangen)', N'Die elektronischen, über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.850' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (101, N'ZVSTA_2022_H', N'S4225.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS (empfangen) = PCP.2.R.PCS.1 (empfangen) + PCP.2.R.PCS.2 (empfangen) + PCP.2.R.PCS.3 (empfangen)', N'Die über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.3'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:57.943' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (102, N'ZVSTA_2022_H', N'S4226.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS (empfangen) = PCP.2.R.PCS.4 (empfangen) + PCP.2.R.PCS.5 (empfangen)', N'Die über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.4'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.033' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (103, N'ZVSTA_2022_H', N'S4227.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 (empfangen) = ∑ PCP.2.R.PCS.5 (empfangen)', N'Die Kartenzahlungen, über einen Fernzugriff, ohne starke Kundenauthentifizierung, nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung müssen der Summe der Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) an selbst abge', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.120' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (104, N'ZVSTA_2022_H', N'S4228.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 (empfangen) = PCP.2.R.r1 (empfangen) + PCP.2.R.r5 (empfangen) + PCP.2.R.r8 (empfangen) + PCP.2.R.r9 (empfangen) + PCP.2.R.r10 (empfangen)', N'Die über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r5'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r8'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r9'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r10'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value + E.Anzahl_Value + F.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D , @CHECK_TABLE E, @CHECK_TABLE F         
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.210' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (105, N'ZVSTA_2022_H', N'S4229.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR (empfangen) = ∑ PCP.2.NR.PCS (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.293' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (106, N'ZVSTA_2022_H', N'S4230.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR (empfangen) = PCP.2.NR.2 (empfangen) + PCP.2.NR.3 (empfangen) + PCP.2.NR.4 (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.3'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.4'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.377' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (107, N'ZVSTA_2022_H', N'S4231.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS (empfangen) = PCP.2.NR.PCS.1 (empfangen) + PCP.2.NR.PCS.2 (empfangen) + PCP.2.NR.PCS.3 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.3'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.467' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (108, N'ZVSTA_2022_H', N'S4232.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS (empfangen) = PCP.2.NR.PCS.4 (empfangen) + PCP.2.NR.PCS.5 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.4'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:22:22.373' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (109, N'ZVSTA_2022_H', N'S4233.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 (empfangen) = ∑ PCP.2.NR.PCS.5 (empfangen)', N'Die Kartenzahlungen, nicht über einen Fernzugriff, ohne starke Kundenauthentifizierung, nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung müssen der Summe der Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) an selbs', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.630' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (110, N'ZVSTA_2022_H', N'S4234.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 (empfangen) = PCP.2.NR.r2 (empfangen) + PCP.2.NR.r5 (empfangen) + PCP.2.NR.r6 (empfangen) + PCP.2.NR.r10 (empfangen)', N'Die nicht über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r5'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r6'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r10'',''FROM'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value + E.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D   , @CHECK_TABLE E       
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.713' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (111, N'ZVSTA_2022_H', N'S5101.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT = FCT.1 + FCT.2 + FCT.3', N'Die betrügerischen Überweisungen insgesamt müssen sich aus den beleghaften, beleglosen und sonstigen Überweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FCT.1'') 
,(''ZVS5.1'',''FCT.2'')
,(''ZVS5.1'',''FCT.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.787' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (112, N'ZVSTA_2022_H', N'S5102.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2 = FCT.2.R + FCT.2.NR', N'Die betrügerischen elektronisch ausgelösten Überweisungen müssen sich aus den betrügerischen elektronischen Überweisungen mit und ohne Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2'') 
,(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.877' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (113, N'ZVSTA_2022_H', N'S5103.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2 = FCT.21 + FCT.22', N'Die elektronischen betrügerischen Überweisungen müssen sich aus der Summe der als Datei/Sammelüberweisung und Einzelüberweisung ausgelösten betrügerischenÜberweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2'') 
,(''ZVS5.1'',''FCT.21'') 
,(''ZVS5.1'',''FCT.22'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:58.960' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (114, N'ZVSTA_2022_H', N'S5104.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.22 = FCT.221 + FCT.222 + FCT.223', N'Die betrügerischen Einzelüberweisungen insgesamt müssen sich aus der Summe der betrügerischen Onlineüberweisungen, am Bankautomat oder sonstigem durch einen ZDL bereitgestellten Terminal ausgelösten betrügerischen Überweisungen und mobilen betrügerischen ', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.22'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.222'')
,(''ZVS5.1'',''FCT.223'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.040' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (115, N'ZVSTA_2022_H', N'S5105.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.221 >= FCT.2211', N'Die betrügerischen E-Commerce-Zahlungen dürfen nicht größter sein als die betrügerischen Onlineüberweisungen .', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.2211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.127' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (116, N'ZVSTA_2022_H', N'S5106.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.223 >= FCT.2231', N'Die betrügerischen mobilen P2P-Überweisungen dürfen nicht größer sein als die betrügerischen mobilen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.223'') 
,(''ZVS5.1'',''FCT.2231'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.220' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (117, N'ZVSTA_2022_H', N'S5107.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R = ∑ FCT.2.R.CTS', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.2.R.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.300' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (118, N'ZVSTA_2022_H', N'S5108.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R >= FCT.221 + FCT.223', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen mindestens so hoch sein wie die Summe der online initiierten und mobilen Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.223'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.393' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (119, N'ZVSTA_2022_H', N'S5109.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R <= FCT.221 + FCT.223 + FCT.21', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen dürfen nicht höher sein als die Summe wie die Summe der online initiierten und mobilen Überweisungen, sowie der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.223'')
,(''ZVS5.1'',''FCT.21'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value <= B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.483' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (120, N'ZVSTA_2022_H', N'S5110.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS = FCT.2.R.CTS.1 + FCT.2.R.CTS.2', N'Die über einen Fernzugang ausgelösten betrügerischen Überweisungen je nach Überweisungsverfahren* müssen sich aus den betrügerischen Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.570' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (121, N'ZVSTA_2022_H', N'S5111.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS.1 = FCT.2.R.CTS.1.f1 + FCT.2.R.CTS.1.f2 + FCT.2.R.CTS.1.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* mit starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.657' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (122, N'ZVSTA_2022_H', N'S5112.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS.2 = FCT.2.R.CTS.2.f1 + FCT.2.R.CTS.2.f2 + FCT.2.R.CTS.2.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* ohne starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS.2'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.743' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (123, N'ZVSTA_2022_H', N'S5113.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.r0 = ∑ FCT.2.R.CTS.2', N'Die Summe der betrügerischen Überweisungen über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der betrügerischen Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.r0'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.833' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (124, N'ZVSTA_2022_H', N'S5114.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.r0 = FCT.2.R.r1 + FCT.2.R.r3 + FCT.2.R.r4 + FCT.2.R.r5 + FCT.2.R.r7 + FCT.2.R.r8', N'Die über einen Fernzugriff ausgelösten betrügerischen Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.r0'') 
,(''ZVS5.1'',''FCT.2.R.r1'') 
,(''ZVS5.1'',''FCT.2.R.r3'')
,(''ZVS5.1'',''FCT.2.R.r4'') 
,(''ZVS5.1'',''FCT.2.R.r5'') 
,(''ZVS5.1'',''FCT.2.R.r7'') 
,(''ZVS5.1'',''FCT.2.R.r8'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value
and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 AND G.ID = 7
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:45:59.923' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (125, N'ZVSTA_2022_H', N'S5115.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR = ∑ FCT.2.NR.CTS', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen ergeben sich aus der Summe der einzelnen Überweisungsverfahren.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.2.NR.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.010' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (126, N'ZVSTA_2022_H', N'S5116.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR >= FCT.222', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen mindestens genauso hoch sein wie die an einem Bankautomaten ausgelösten Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.222'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.100' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (127, N'ZVSTA_2022_H', N'S5117.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR <= FCT.222 + FCT.21', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen dürfen nicht höher sein als die Summer der an einem Bankautomaten ausgelösten Überweisungen und der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.222'') 
,(''ZVS5.1'',''FCT.21'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.187' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (128, N'ZVSTA_2022_H', N'S5118.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS = FCT.2.NR.CTS.1 + FCT.2.NR.CTS.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Überweisungen je nach Überweisungsverfahren* müssen sich aus den betrügerischen Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.1'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.273' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (129, N'ZVSTA_2022_H', N'S5119.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS.1 = FCT.2.NR.CTS.1.f1 + FCT.2.NR.CTS.1.f2 + FCT.2.NR.CTS.1.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* mit starker Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.360' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (130, N'ZVSTA_2022_H', N'S5120.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS.2 = FCT.2.NR.CTS.2.f1 + FCT.2.NR.CTS.2.f2 + FCT.2.NR.CTS.2.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* ohne starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS.2'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.447' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (131, N'ZVSTA_2022_H', N'S5121.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.r0 = ∑ FCT.2.NR.CTS.2', N'Die Summe der betrügerischen Überweisungen nicht über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der betrügerischen Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entspr', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.r0'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.533' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (132, N'ZVSTA_2022_H', N'S5122.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.r0 = FCT.2.NR.r2 + FCT.2.NR.r3 + FCT.2.NR.r4 + FCT.2.NR.r5 + FCT.2.NR.r6', N'Die nicht über einen Fernzugriff ausgelösten betrügerischen Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.r0'') 
,(''ZVS5.1'',''FCT.2.NR.r2'') 
,(''ZVS5.1'',''FCT.2.NR.r3'')
,(''ZVS5.1'',''FCT.2.NR.r4'') 
,(''ZVS5.1'',''FCT.2.NR.r5'') 
,(''ZVS5.1'',''FCT.2.NR.r6'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.620' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (133, N'ZVSTA_2022_H', N'S5123.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT >= FCT.4', N'Die betrügerischen Überweisungen, die von einem Zahlungsdienstleister ausgelöst wurden, dürfen nicht höher sein als die betrügerischen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FCT.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.707' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (134, N'ZVSTA_2022_H', N'S5124.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD = FDD.1 + FDD.2', N'Die betrügerischen Lastschriften insgesamt müssen sich aus den betrügerischen Datei/Sammellastschriften und Einzellastschriften ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD'') 
,(''ZVS5.1'',''FDD.1'') 
,(''ZVS5.1'',''FDD.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.797' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (135, N'ZVSTA_2022_H', N'S5125.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD = FDD.3 + FDD.4', N'Die betrügerischen Lastschriften müssen sich aus den betrügerischen Lastschriften mit elektronischer und sonstiger Mandatserteilung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD'') 
,(''ZVS5.1'',''FDD.3'') 
,(''ZVS5.1'',''FDD.4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.883' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (136, N'ZVSTA_2022_H', N'S5126.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.3 = ∑ FDD.3.DDS', N'Die Lastschriften mit elektronischer Mandatserteilung müssen sich aus der Summe der Lastschriften mit elektronischer Mandatserteilung der einzelnen Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.3'') 
,(''ZVS5.1'',''FDD.3.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:00.977' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (137, N'ZVSTA_2022_H', N'S5127.DDS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.3.DDS = FDD.3.DDS.f3 + FDD.3.DDS.f4', N'Die betrügerischen Lastschriften je nach Lastschriftverfahren* mit elektronischer Mandatserteilung müssen sich aus den betrügerischen Lastschriften je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.3.DDS'') 
,(''ZVS5.1'',''FDD.3.DDS.f3'') 
,(''ZVS5.1'',''FDD.3.DDS.f4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.067' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (138, N'ZVSTA_2022_H', N'S5128.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.4 = ∑ FDD.4.DDS', N'Die Lastschriften mit sonstiger Mandatserteilung müssen sich aus der Summe der Lastschriften mit sonstiger Mandatserteilung der einzelnen Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.4'') 
,(''ZVS5.1'',''FDD.4.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.153' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (139, N'ZVSTA_2022_H', N'S5129.DDS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.4.DDS = FDD.4.DDS.f3 + FDD.4.DDS.f4', N'Die betrügerischen Lastschriften je nach Lastschriftverfahren* mit sonstiger Mandatserteilung müssen sich aus den betrügerischen Lastschriften je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.4.DDS'') 
,(''ZVS5.1'',''FDD.4.DDS.f3'') 
,(''ZVS5.1'',''FDD.4.DDS.f4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.243' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (140, N'ZVSTA_2022_H', N'S5130.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW = ∑ FCW.PCS', N'Die betrügerischen Bargeldabhebungen müssen sich aus der Summe der betrügerischen Bargeldabhebungen nach Kartenzahlverfahren (Kartenscheme) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW'') 
,(''ZVS5.1'',''FCW.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:52:28.200' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (141, N'ZVSTA_2022_H', N'S5131.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS = FCW.PCS.1 + FCW.PCS.2 + FCW.PCS.3', N'Die betrügerischen Bargeldabhebungen mit Karten müssen sich für jedes Kartenzahlverfahren (Kartenscheme)* aus den Bargeldabhebungen mit Debitkarten, Kreditkarten ohne Kreditfunktion und Kreditkarten mit Kreditfunktion ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS'') 
,(''ZVS5.1'',''FCW.PCS.1'') 
,(''ZVS5.1'',''FCW.PCS.2'')
,(''ZVS5.1'',''FCW.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.423' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (142, N'ZVSTA_2022_H', N'S5132.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS = FCW.PCS.f1 + FCW.PCS.f3', N'Die betrügerischen Bargeldabhebungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Bargeldabhebungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS'') 
,(''ZVS5.1'',''FCW.PCS.f1'') 
,(''ZVS5.1'',''FCW.PCS.f3'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.513' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (143, N'ZVSTA_2022_H', N'S5133.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS.f1 = FCW.PCS.f11 + FCW.PCS.f12 + FCW.PCS.f13 + FCW.PCS.f16', N'Die betrügerischen Bargeldabhebungen durch Erteilung eines Auftrags durch den Betrüger je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS.f1'') 
,(''ZVS5.1'',''FCW.PCS.f11'') 
,(''ZVS5.1'',''FCW.PCS.f12'')
,(''ZVS5.1'',''FCW.PCS.f13'') 
,(''ZVS5.1'',''FCW.PCS.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.607' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (144, N'ZVSTA_2022_H', N'S5134.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM = FEM.1 + FEM.2', N'Die betrügerischen Zahlungen mit E-Geld insgesamt müssen sich aus den betrügerischen Zahlungen mit E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und betrügerischen Zahlungen mit E-Geld-Konten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FEM.1'') 
,(''ZVS5.1'',''FEM.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.697' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (145, N'ZVSTA_2022_H', N'S5135.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM = FEM.R + FEM.NR', N'Die betrügerischen Zahlungen mit E-Geld insgesamt müssen sich aus den betrügerischen E-Geld-Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.793' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (146, N'ZVSTA_2022_H', N'S5136.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.2 = FEM.21 + FEM.22 + FEM.23', N'Die betrügerischen Zahlungen mit E-Geld-Konten müssen sich aus der Verfügung per Karte, mobilen E-Geld-Zahlungen und sonstigen E-Geld-Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.2'') 
,(''ZVS5.1'',''FEM.21'') 
,(''ZVS5.1'',''FEM.22'')
,(''ZVS5.1'',''FEM.23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.887' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (147, N'ZVSTA_2022_H', N'S5137.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.22 >= FEM.221', N'Die betrügerischen mobilen E-Geld P2P-Zahlungen dürfen nicht höher sein als die E-Geld P2P-Zahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.22'') 
,(''ZVS5.1'',''FEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:01.977' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (148, N'ZVSTA_2022_H', N'S5138.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R = FEM.R.1 + FEM.R.2', N'Die über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen müssen sich aus den betrügerischen E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.R.1'') 
,(''ZVS5.1'',''FEM.R.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.067' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (149, N'ZVSTA_2022_H', N'S5139.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R >= FEM.221', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang insgesamt dürfen nicht kleiner sein als die mobilen E-Geld P2P-Zahlungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.160' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (150, N'ZVSTA_2022_H', N'S5140.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.1 = FEM.R.1.f1 + FEM.R.1.f2 + FEM.R.1.f3', N'Die betrügerischen E-Geld-Zahlungen mit starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.1'') 
,(''ZVS5.1'',''FEM.R.1.f1'') 
,(''ZVS5.1'',''FEM.R.1.f2'')
,(''ZVS5.1'',''FEM.R.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.250' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (151, N'ZVSTA_2022_H', N'S5141.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.1.f1 = FEM.R.1.f11 + FEM.R.1.f12 + FEM.R.1.f13 + FEM.R.1.f14 + FEM.R.1.f15', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang mit starker Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.1.f1'') 
,(''ZVS5.1'',''FEM.R.1.f11'') 
,(''ZVS5.1'',''FEM.R.1.f12'')
,(''ZVS5.1'',''FEM.R.1.f13'') 
,(''ZVS5.1'',''FEM.R.1.f14'') 
,(''ZVS5.1'',''FEM.R.1.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.343' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (152, N'ZVSTA_2022_H', N'S5142.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2 = FEM.R.2.f1 + FEM.R.2.f2 + FEM.R.2.f3', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2'') 
,(''ZVS5.1'',''FEM.R.2.f1'') 
,(''ZVS5.1'',''FEM.R.2.f2'')
,(''ZVS5.1'',''FEM.R.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.430' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (153, N'ZVSTA_2022_H', N'S5143.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2.f1 = FEM.R.2.f11 + FEM.R.2.f12 + FEM.R.2.f13 + FEM.R.2.f14 + FEM.R.2.f15', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang ohne starke Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2.f1'') 
,(''ZVS5.1'',''FEM.R.2.f11'') 
,(''ZVS5.1'',''FEM.R.2.f12'')
,(''ZVS5.1'',''FEM.R.2.f13'') 
,(''ZVS5.1'',''FEM.R.2.f14'') 
,(''ZVS5.1'',''FEM.R.2.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.523' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (154, N'ZVSTA_2022_H', N'S5144.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2 = FEM.R.2.r0', N'Die über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus der Summe der betrügerischen E-Geld-Zahlungen je Grund für die Durchführung ohne starke Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2'') 
,(''ZVS5.1'',''FEM.R.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.613' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (155, N'ZVSTA_2022_H', N'S5145.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2.r0 = FEM.R.2.r1 + FEM.R.2.r3 + FEM.R.2.r4 + FEM.R.2.r5 + FEM.R.2.r7 + FEM.R.2.r8 + FEM.R.2.r9 + FEM.R.2.r10', N'Die über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2.r0'') 
,(''ZVS5.1'',''FEM.R.2.r1'') 
,(''ZVS5.1'',''FEM.R.2.r3'')
,(''ZVS5.1'',''FEM.R.2.r4'') 
,(''ZVS5.1'',''FEM.R.2.r5'')
,(''ZVS5.1'',''FEM.R.2.r7'') 
,(''ZVS5.1'',''FEM.R.2.r8'') 
,(''ZVS5.1'',''FEM.R.2.r9'') 
,(''ZVS5.1'',''FEM.R.2.r10'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H , @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6
AND G.ID = 7
AND H.ID = 8
AND I.ID = 9

END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.703' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (156, N'ZVSTA_2022_H', N'S5146.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR >= FEM.1', N'Die nicht über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen dürfen nicht kleiner sein als E-Geld-Zahlungen mit Karten, auf denen das E-Geld direkt gespeichert werden kann.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR'') 
,(''ZVS5.1'',''FEM.1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.797' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (157, N'ZVSTA_2022_H', N'S5147.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR = FEM.NR.1 + FEM.NR.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen müssen sich aus den betrügerischen E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR'') 
,(''ZVS5.1'',''FEM.NR.1'') 
,(''ZVS5.1'',''FEM.NR.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.883' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (158, N'ZVSTA_2022_H', N'S5148.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.1 = FEM.NR.1.f1 + FEM.NR.1.f2 + FEM.NR.1.f3', N'Die betrügerischen E-Geld-Zahlungen mit starker Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.1'') 
,(''ZVS5.1'',''FEM.NR.1.f1'') 
,(''ZVS5.1'',''FEM.NR.1.f2'')
,(''ZVS5.1'',''FEM.NR.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:02.980' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (159, N'ZVSTA_2022_H', N'S5149.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.1.f1 = FEM.NR.1.f11 + FEM.NR.1.f12 + FEM.NR.1.f13 + FEM.NR.1.f15', N'Die betrügerischen E-Geld-Zahlungen nicht über einen Fernzugang mit starker Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.1.f1'') 
,(''ZVS5.1'',''FEM.NR.1.f11'') 
,(''ZVS5.1'',''FEM.NR.1.f12'')
,(''ZVS5.1'',''FEM.NR.1.f13'') 
,(''ZVS5.1'',''FEM.NR.1.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:03.070' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (160, N'ZVSTA_2022_H', N'S5150.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2 = FEM.NR.2.f1 + FEM.NR.2.f2 + FEM.NR.2.f3', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2'') 
,(''ZVS5.1'',''FEM.NR.2.f1'') 
,(''ZVS5.1'',''FEM.NR.2.f2'')
,(''ZVS5.1'',''FEM.NR.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:54:33.283' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (161, N'ZVSTA_2022_H', N'S5151.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2.f1 = FEM.NR.2.f11 + FEM.NR.2.f12 + FEM.NR.2.f13 + FEM.NR.2.f15', N'Die betrügerischen E-Geld-Zahlungen nicht über einen Fernzugang ohne starke Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2.f1'') 
,(''ZVS5.1'',''FEM.NR.2.f11'') 
,(''ZVS5.1'',''FEM.NR.2.f12'')
,(''ZVS5.1'',''FEM.NR.2.f13'') 
,(''ZVS5.1'',''FEM.NR.2.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:10:14.470' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (162, N'ZVSTA_2022_H', N'S5152.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2 = FEM.NR.2.r0', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus der Summe der betrügerischen E-Geld-Zahlungen je Grund für die Durchführung ohne starke Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2'') 
,(''ZVS5.1'',''FEM.NR.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:03.347' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (163, N'ZVSTA_2022_H', N'S5153.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2.r0 = FEM.NR.2.r2 + FEM.NR.2.r4 + FEM.NR.2.r5 + FEM.NR.2.r6 + FEM.NR.2.r10 ', N'Die nicht über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2.r0'') 
,(''ZVS5.1'',''FEM.NR.2.r2'') 
,(''ZVS5.1'',''FEM.NR.2.r4'')
,(''ZVS5.1'',''FEM.NR.2.r5'') 
,(''ZVS5.1'',''FEM.NR.2.r6'') 
,(''ZVS5.1'',''FEM.NR.2.r10'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:58:28.560' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (164, N'ZVSTA_2022_H', N'S5154.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FTT = FCT + FDD + FCP + FCW + FEM + FCH + FMR + FOT', N'Die betrügerischen Zahlungsvorgänge insgesamt müssen sich aus der Summe der betrügerischen Überweisungen, Lastschriften, Kartenzahlungen, Bargeldabhebungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und sonstigen betrügerischen Zahlungsvorg', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FTT'') 
,(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FDD'')
,(''ZVS5.2'',''FCP'') 
,(''ZVS5.1'',''FCW'')
,(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FCH'') 
,(''ZVS5.1'',''FMR'') 
,(''ZVS5.1'',''FOT'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.FormNr in (''ZVS5.1'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.FormNr in (''ZVS5.2'')

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H , @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6
AND G.ID = 7
AND H.ID = 8
AND I.ID = 9

END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:03.527' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (165, N'ZVSTA_2022_H', N'S5155.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI = FPI.R + FPI.NR', N'Die betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI'') 
,(''ZVS5.1'',''FPI.R'') 
,(''ZVS5.1'',''FPI.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:18:31.293' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (166, N'ZVSTA_2022_H', N'S5156.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI = FPI.CTS + FPI.OTH', N'Die betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Überweisungen und sonstigen betrügerischen Transaktionen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI'') 
,(''ZVS5.1'',''FPI.CTS'') 
,(''ZVS5.1'',''FPI.OTH'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:03.703' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (167, N'ZVSTA_2022_H', N'S5157.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI.R = FPI.R.1 + FPI.R.2', N'Die über einen Fernzugang ausgelösten betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI.R'') 
,(''ZVS5.1'',''FPI.R.1'') 
,(''ZVS5.1'',''FPI.R.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y', N'Modified', N'Paskalis', CAST(N'2022-02-27T19:46:03.793' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (168, N'ZVSTA_2022_H', N'S5158.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI.NR = FPI.NR.1 + FPI.NR.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI.NR'') 
,(''ZVS5.1'',''FPI.NR.1'') 
,(''ZVS5.1'',''FPI.NR.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:19:45.863' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (169, N'ZVSTA_2022_H', N'S5201.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP = FCP.1 + FCP.2', N'Die betrügerischen Kartenzahlungen insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten betrügerischen Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP'') 
,(''ZVS5.2'',''FCP.1'') 
,(''ZVS5.2'',''FCP.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:28:11.790' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (170, N'ZVSTA_2022_H', N'S5202.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.1 = FCP.1.R + FCP.1.NR', N'Die betrügerischen nicht elektronisch ausgelösten Kartenzahlungen müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.1'') 
,(''ZVS5.2'',''FCP.1.R'') 
,(''ZVS5.2'',''FCP.1.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:28:18.117' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (171, N'ZVSTA_2022_H', N'S5203.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2 = FCP.2.R + FCP.2.NR', N'Die betrügerischen elektronisch ausgelösten Kartenzahlungen müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2'') 
,(''ZVS5.2'',''FCP.2.R'') 
,(''ZVS5.2'',''FCP.2.NR'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:28:27.710' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (172, N'ZVSTA_2022_H', N'S5204.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R = ∑ FCP.2.R.PCS', N'Die elektronischen, über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den betrügerischen Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R'') 
,(''ZVS5.2'',''FCP.2.R.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:28:34.907' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (173, N'ZVSTA_2022_H', N'S5205.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R = FCP.2.R.1 + FCP.2.R.4 ', N'Die über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den mobilen und sonstigen betrügerischen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R'') 
,(''ZVS5.2'',''FCP.2.R.1'') 
,(''ZVS5.2'',''FCP.2.R.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:28:40.720' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (174, N'ZVSTA_2022_H', N'S5206.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS = FCP.2.R.PCS.1 + FCP.2.R.PCS.2 + FCP.2.R.PCS.3', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'') 
,(''ZVS5.2'',''FCP.2.R.PCS.1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.2'')
,(''ZVS5.2'',''FCP.2.R.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:28:46.627' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (175, N'ZVSTA_2022_H', N'S5207.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS = FCP.2.R.PCS.4 + FCP.2.R.PCS.5', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:28:59.803' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (176, N'ZVSTA_2022_H', N'S5208.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4 = FCP.2.R.PCS.4.f1 + FCP.2.R.PCS.4.f2 + FCP.2.R.PCS.4.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f2'')
,(''ZVS5.2'',''FCP.2.R.PCS.4.f3'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:29:07.280' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (177, N'ZVSTA_2022_H', N'S5209.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4.f1 = FCP.2.R.PCS.4.f11 + FCP.2.R.PCS.4.f12 + FCP.2.R.PCS.4.f13 + FCP.2.R.PCS.4.f14 + FCP.2.R.PCS.4.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f11'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f12'')
,(''ZVS5.2'',''FCP.2.R.PCS.4.f13'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f14'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f16'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T16:10:35.263' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (178, N'ZVSTA_2022_H', N'S5210.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5 = FCP.2.R.PCS.5.f1 + FCP.2.R.PCS.5.f2 + FCP.2.R.PCS.5.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f2'')
,(''ZVS5.2'',''FCP.2.R.PCS.5.f3'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:29:39.177' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (179, N'ZVSTA_2022_H', N'S5211.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5.f1 = FCP.2.R.PCS.5.f11 + FCP.2.R.PCS.5.f12 + FCP.2.R.PCS.5.f13 + FCP.2.R.PCS.5.f14 + FCP.2.R.PCS.5.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f11'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f12'')
,(''ZVS5.2'',''FCP.2.R.PCS.5.f13'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f14'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:18:17.313' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (180, N'ZVSTA_2022_H', N'S5212.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.1 >= FCP.2.R.11', N'Die über einen Fernzugang ausgelösten betrügerischen mobilen P2P-Kartenzahlungen dürfen nicht höher sein als die über einen Fernzugang ausgelösten mobilen Kartenzahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.1'') 
,(''ZVS5.2'',''FCP.2.R.11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:29:49.900' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (181, N'ZVSTA_2022_H', N'S5213.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR = ∑ FCP.2.NR.PCS', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR'') 
,(''ZVS5.2'',''FCP.2.NR.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:29:57.153' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (182, N'ZVSTA_2022_H', N'S5214.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 = ∑ FCP.2.R.PCS.5', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung je Ausnahmegrun', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:30:03.457' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (183, N'ZVSTA_2022_H', N'S5215.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 = FCP.2.R.r1 + FCP.2.R.r4 + FCP.2.R.r5 + FCP.2.R.r7 + FCP.2.R.r8 + FCP.2.R.r9 + FCP.2.R.r10', N'Die über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'') 
,(''ZVS5.2'',''FCP.2.R.r1'') 
,(''ZVS5.2'',''FCP.2.R.r4'')
,(''ZVS5.2'',''FCP.2.R.r5'') 
,(''ZVS5.2'',''FCP.2.R.r7'') 
,(''ZVS5.2'',''FCP.2.R.r8'') 
,(''ZVS5.2'',''FCP.2.R.r9'') 
,(''ZVS5.2'',''FCP.2.R.r10'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=8
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value + H.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H           
WHERE       
A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 AND G.ID = 7
AND H.ID = 8
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T18:30:09.667' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (184, N'ZVSTA_2022_H', N'S5216.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR = FCP.2.NR.2 + FCP.2.NR.3 + FCP.2.NR.4', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR'') 
,(''ZVS5.2'',''FCP.2.NR.2'') 
,(''ZVS5.2'',''FCP.2.NR.3'')
,(''ZVS5.2'',''FCP.2.NR.4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:06:22.693' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (185, N'ZVSTA_2022_H', N'S5217.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS = FCP.2.NR.PCS.1 + FCP.2.NR.PCS.2 + FCP.2.NR.PCS.3', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.2'')
,(''ZVS5.2'',''FCP.2.NR.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:07:49.800' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (186, N'ZVSTA_2022_H', N'S5218.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS = FCP.2.NR.PCS.4 + FCP.2.NR.PCS.5', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:07:43.880' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (187, N'ZVSTA_2022_H', N'S5219.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4 = FCP.2.NR.PCS.4.f1 + FCP.2.NR.PCS.4.f2 + FCP.2.NR.PCS.4.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f2'')
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:15:55.310' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (188, N'ZVSTA_2022_H', N'S5220.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4.f1 = FCP.2.NR.PCS.4.f11 + FCP.2.NR.PCS.4.f12 + FCP.2.NR.PCS.4.f13 + FCP.2.NR.PCS.4.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f11'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f12'')
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f13'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:15:42.880' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (189, N'ZVSTA_2022_H', N'S5221.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5 = FCP.2.NR.PCS.5.f1 + FCP.2.NR.PCS.5.f2 + FCP.2.NR.PCS.5.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f2'')
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:40:35.147' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (190, N'ZVSTA_2022_H', N'S5222.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5.f1 = FCP.2.NR.PCS.5.f11 + FCP.2.NR.PCS.5.f12 + FCP.2.NR.PCS.5.f13 + FCP.2.NR.PCS.5.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f11'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f12'')
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f13'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:15:36.683' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (191, N'ZVSTA_2022_H', N'S5223.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.2 >= FCP.2.NR.21', N'Die betrügerischen kontaktlosen Kartenzahlungen an einem physischen EFTPOS dürfen nicht größer sein als die Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.2'') 
,(''ZVS5.2'',''FCP.2.NR.21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:16:09.923' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (192, N'ZVSTA_2022_H', N'S5224.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.21 >= FCP.2.NR.211', N'Die betrügerischen kontaktlosen Kartenzahlungen an einem physischen EFTPOS per NFC dürfen nicht größer sein als die kontaktlosen Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.21'') 
,(''ZVS5.2'',''FCP.2.NR.211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



































', N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:33:21.800' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (193, N'ZVSTA_2022_H', N'S5225.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 = ∑ FCP.2.NR.PCS.5', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der Transaktionen ohne starke Kundenauthentifizierung je Ausnahmegrund entsprech', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



































', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:18:02.417' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (194, N'ZVSTA_2022_H', N'S5226.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 = FCP.2.NR.r2 + FCP.2.NR.r4 + FCP.2.NR.r5 + FCP.2.NR.r6 + FCP.2.NR.r10', N'Die nicht über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'') 
,(''ZVS5.2'',''FCP.2.NR.r2'') 
,(''ZVS5.2'',''FCP.2.NR.r4'')
,(''ZVS5.2'',''FCP.2.NR.r5'') 
,(''ZVS5.2'',''FCP.2.NR.r6'') 
,(''ZVS5.2'',''FCP.2.NR.r10'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-03T16:46:53.387' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (195, N'ZVSTA_2022_H', N'S5227.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP (empfangen) = FCP.1 (empfangen) + FCP.2 (empfangen)', N'Die betrügerischen Kartenzahlungen an selbst abgerechneten Terminals insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten betrügerischen Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP'',''FROM'') 
,(''ZVS5.2'',''FCP.1'',''FROM'') 
,(''ZVS5.2'',''FCP.2'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:29:24.043' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (196, N'ZVSTA_2022_H', N'S5228.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.1 (empfangen) = FCP.1.R (empfangen) + FCP.1.NR (empfangen)', N'Die betrügerischen nicht elektronisch ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.1'',''FROM'') 
,(''ZVS5.2'',''FCP.1.R'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:29:32.237' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (197, N'ZVSTA_2022_H', N'S5229.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2 (empfangen) = FCP.2.R (empfangen) + FCP.2.NR (empfangen)', N'Die betrügerischen elektronisch ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:29:42.307' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (198, N'ZVSTA_2022_H', N'S5230.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R (empfangen) =
∑ FCP.2.R.PCS (empfangen)', N'Die elektronischen, über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den betrügerischen Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:29:50.650' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (199, N'ZVSTA_2022_H', N'S5231.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS (empfangen) = FCP.2.R.PCS.1 (empfangen) + FCP.2.R.PCS.2 (empfangen) + FCP.2.R.PCS.3 (empfangen)', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:29:59.080' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (200, N'ZVSTA_2022_H', N'S5232.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS (empfangen) = FCP.2.R.PCS.4 (empfangen) + FCP.2.R.PCS.5 (empfangen)', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:30:10.397' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (201, N'ZVSTA_2022_H', N'S5233.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4 (empfangen) = FCP.2.R.PCS.4.f1 (empfangen) + FCP.2.R.PCS.4.f2 (empfangen) + FCP.2.R.PCS.4.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:30:18.063' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (202, N'ZVSTA_2022_H', N'S5234.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4.f1 (empfangen) = FCP.2.R.PCS.4.f11 (empfangen) + FCP.2.R.PCS.4.f12 (empfangen) + FCP.2.R.PCS.4.f13 (empfangen) + FCP.2.R.PCS.4.f14 (empfangen) + FCP.2.R.PCS.4.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger an selbst abgerechneten Terminals ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs er', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f14'',''FROM'')
,(''ZVS5.2'',''FCP.2.R.PCS.4.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:30:25.167' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (203, N'ZVSTA_2022_H', N'S5235.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5 (empfangen) = FCP.2.R.PCS.5.f1 (empfangen) + FCP.2.R.PCS.5.f2 (empfangen) + FCP.2.R.PCS.5.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:30:33.750' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (204, N'ZVSTA_2022_H', N'S5236.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5.f1 (empfangen) = FCP.2.R.PCS.5.f11 (empfangen) + FCP.2.R.PCS.5.f12 (empfangen) + FCP.2.R.PCS.5.f13 (empfangen) + FCP.2.R.PCS.5.f14 (empfangen) + FCP.2.R.PCS.5.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger an selbst abgerechneten Terminals ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs er', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f14'',''FROM'')
,(''ZVS5.2'',''FCP.2.R.PCS.5.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:30:40.333' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (205, N'ZVSTA_2022_H', N'S5237.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 (empfangen) = ∑ FCP.2.R.PCS.5 (empfangen)', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der Transaktionen ohne starke Kundenauthentifizierung je Ausnahmegrund entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:30:51.020' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (206, N'ZVSTA_2022_H', N'S5238.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 (empfangen) = FCP.2.R.r1 (empfangen) + FCP.2.R.r5 (empfangen) + FCP.2.R.r8 (empfangen) + FCP.2.R.r9 (empfangen) + FCP.2.R.r10 (empfangen)', N'Die über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r8'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r9'',''FROM'')
,(''ZVS5.2'',''FCP.2.R.r10'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:30:58.690' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (207, N'ZVSTA_2022_H', N'S5239.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR (empfangen) =∑ FCP.2.NR.PCS (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:06.630' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (208, N'ZVSTA_2022_H', N'S5240.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR (empfangen) = FCP.2.NR.2 (empfangen) + FCP.2.NR.3 (empfangen) + FCP.2.NR.4 (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den betrügerischen Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen betrügerischen Kartenzahl', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.3'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.4'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:13.533' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (209, N'ZVSTA_2022_H', N'S5241.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS (empfangen) = FCP.2.NR.PCS.1 (empfangen) + FCP.2.NR.PCS.2 (empfangen) + FCP.2.NR.PCS.3 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:21.643' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (210, N'ZVSTA_2022_H', N'S5242.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS (empfangen) = FCP.2.NR.PCS.4 (empfangen) + FCP.2.NR.PCS.5 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:28.530' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (211, N'ZVSTA_2022_H', N'S5243.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4 (empfangen) = FCP.2.NR.PCS.4.f1 (empfangen) + FCP.2.NR.PCS.4.f2 (empfangen) + FCP.2.NR.PCS.4.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:35.340' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (212, N'ZVSTA_2022_H', N'S5244.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4.f1 (empfangen) = FCP.2.NR.PCS.4.f11 (empfangen) + FCP.2.NR.PCS.4.f12 (empfangen) + FCP.2.NR.PCS.4.f13 (empfangen) + FCP.2.NR.PCS.4.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value  
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:43.577' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (213, N'ZVSTA_2022_H', N'S5245.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5 (empfangen) = FCP.2.NR.PCS.5.f1 (empfangen) + FCP.2.NR.PCS.5.f2 (empfangen) + FCP.2.NR.PCS.5.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:49.357' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (214, N'ZVSTA_2022_H', N'S5246.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5.f1 (empfangen) = FCP.2.NR.PCS.5.f11 (empfangen) + FCP.2.NR.PCS.5.f12 (empfangen) + FCP.2.NR.PCS.5.f13 (empfangen) + FCP.2.NR.PCS.5.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value  
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:31:54.940' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (215, N'ZVSTA_2022_H', N'S5247.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 (empfangen) = ∑ FCP.2.NR.PCS.5 (empfangen)', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der betrügerischen Transaktionen ohne starke Kundenauthentifizierung je Ausnahme', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:32:03.587' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (216, N'ZVSTA_2022_H', N'S5248.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 (empfangen) = FCP.2.NR.r2 (empfangen) + FCP.2.NR.r5 (empfangen) + FCP.2.NR.r6 (empfangen) + FCP.2.NR.r10 (empfangen)', N'Die nicht über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r6'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r10'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value  
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:32:10.057' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (217, N'ZVSTA_2022_H', N'S601', N'SUM', N'ZVS6', N'ZVS6', N'1.PTT = 1.PCW + 1.PCD + 1.OTR + 1.POS + 1.LEM + 1.PEM', N'Die Transaktionen an den von inländischen Acquirern abgerechneten Terminals (Gesamt) mit inländischen Karten müssen sich aus den Positionen Bargeldabhebungen /-einzahlungen, sonstigen Transaktionen, POS-Transaktionen sowie Auf-/ Entladen von E-Geld-Karten', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''1.PTT'',''FROM'') 
,(''ZVS5.2'',''1.PCW'',''FROM'') 
,(''ZVS5.2'',''1.PCD'',''FROM'') 
,(''ZVS5.2'',''1.OTR'',''FROM'') 
,(''ZVS5.2'',''1.POS'',''FROM'')
,(''ZVS5.2'',''1.LEM'',''FROM'')
,(''ZVS5.2'',''1.PEM'',''FROM'')

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=7
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F  , @CHECK_TABLE G       WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6  AND G.ID = 7 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:32:16.203' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (218, N'ZVSTA_2022_H', N'S602', N'SUM', N'ZVS6', N'ZVS6', N'2.PTT = 2.PCW + 2.PCD + 2.OTR + 2.POS + 2.LEM + 2.PEM', N'Die Transaktionen an den von inländischen Acquirern abgerechneten Terminals (Gesamt) mit ausländischen Karten müssen sich aus den Positionen Bargeldabhebungen /-einzahlungen, sonstigen Transaktionen, POS-Transaktionen sowie Auf-/ Entladen von E-Geld-Karte', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''2.PTT'',''FROM'') 
,(''ZVS5.2'',''2.PCW'',''FROM'') 
,(''ZVS5.2'',''2.PCD'',''FROM'') 
,(''ZVS5.2'',''2.OTR'',''FROM'') 
,(''ZVS5.2'',''2.POS'',''FROM'')
,(''ZVS5.2'',''2.LEM'',''FROM'')
,(''ZVS5.2'',''2.PEM'',''FROM'')

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=7
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F  , @CHECK_TABLE G       WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6  AND G.ID = 7 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y', N'Modified', N'papasp', CAST(N'2022-03-04T15:32:21.963' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (219, N'ZVSTA_2022_H', N'S603', N'SUM', N'ZVS6', N'ZVS6', N'3.PTT = 3.PCW + 3.PCD + 3.OTR + 3.POS + 3.LEM + 3.PEM', N'Die Transaktionen an den von ausl. ZDL abgerechneten Terminals (Gesamt) mit ausgegebenen Karten müssen sich aus den Positionen Bargeldabhebungen /-einzahlungen, sonstigen Transaktionen, POS-Transaktionen sowie Auf-/ Entladen von E-Geld-Karten und E-Geld-Z', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''3.PTT'',''FROM'') 
,(''ZVS5.2'',''3.PCW'',''FROM'') 
,(''ZVS5.2'',''3.PCD'',''FROM'') 
,(''ZVS5.2'',''3.OTR'',''FROM'') 
,(''ZVS5.2'',''3.POS'',''FROM'')
,(''ZVS5.2'',''3.LEM'',''FROM'')
,(''ZVS5.2'',''3.PEM'',''FROM'')

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=7
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F  , @CHECK_TABLE G       WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6  AND G.ID = 7 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:48.983' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (220, N'ZVSTA_2022_Q', N'S901', N'SUM', N'ZVS9', N'ZVS9', N'PCP.2.NR >= ∑ PCP.2.NR.MCC', N'Die Kartenzahlungen, welche nicht über einen Fernzugang ausgelöst wurden, müssen mindestens so hoch sein wie die Summe der Kartenzahlungen (nicht über einen Fernzugang ausgelöst) je MCC.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCP.2.NR'') 
,(''ZVS9'',''PCP.2.NR.MCC'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value and A.Wert_Value>=B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:17:25.843' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (221, N'ZVSTA_2022_Q', N'S902', N'SUM', N'ZVS9', N'ZVS9', N'PCP.2.R >= ∑ PCP.2.R.MCC', N'Die Kartenzahlungen, welche über einen Fernzugang ausgelöst wurden, müssen mindestens so hoch sein wie die Summe der Kartenzahlungen (über einen Fernzugang ausgelöst) je MCC.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCP.2.R'') 
,(''ZVS9'',''PCP.2.R.MCC'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value and A.Wert_Value>=B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:17:33.307' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (222, N'ZVSTA_2022_Q', N'S903', N'SUM', N'ZVS9', N'ZVS9', N'PCT.2 = PCT.2.R + PCT.2.NR', N'Die elektronischen Überweisungen müssen sich aus der Summe der elektronischen Überweisungen, welche über einen Fernzugang und ohne Fernzugang ausgelöst wurden, ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCT.2'') 
,(''ZVS9'',''PCT.2.R'') 
,(''ZVS9'',''PCT.2.NR'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr



IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value and
                  ROUND(A.Wert_Value,2) = ROUND(B.Wert_Value,2) + ROUND(C.Wert_Value,2)
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:17:41.797' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (223, N'ZVSTA_2022_Q', N'S904', N'SUM', N'ZVS9', N'ZVS9', N'PCP.2 = PCP.2.NR + PCP.2.R', N'Die elektronischen Kartenzahlungen müssen sich aus der Summe der elektronischen Kartenzahlungen, welche über einen Fernzugang und ohne Fernzugang ausgelöst wurden, ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCP.2'') 
,(''ZVS9'',''PCP.2.NR'') 
,(''ZVS9'',''PCP.2.R'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value and
                  A.Wert_Value = B.Wert_Value + C.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END









', N'Y', N'Modified', N'papasp', CAST(N'2022-02-28T15:17:19.260' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (224, N'ZVSTA_2022_H', N'L121', N'LOGICAL', N'ZVS1', N'ZVS2', N'A1 = 0 → I1 + I2 = 0', N'Wenn keine Zahlungskonten gemeldet werden, dürfen auch keine Karten zur Bargeldabhebung oder Karten mit Zahlungsfunktion gemeldet werden', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.363' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (225, N'ZVSTA_2022_H', N'L122', N'LOGICAL', N'ZVS1', N'ZVS2', N'A2 = 0 → I32 = 0', N'Wenn keine E-Geldkonten gemeldet werden, dann können auch keine Karten mit Zugang zu einem E-Geldkonto im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.437' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (226, N'ZVSTA_2022_H', N'L123', N'LOGICAL', N'ZVS1', N'ZVS2', N'VE1 > 0 → A2 + I311 > 0', N'Wenn ein Aufladungsgegenwert von E-Geld auf E-Gelddatenträgern gemeldet wird, dann müssen auch Karten mit direkter E-Geld Speicherung, die mindestens einmal aufgeladen wurden, im ZVS 2 oder E-Geld-Konten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.513' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (227, N'ZVSTA_2022_H', N'L1411', N'LOGICAL', N'ZVS1', N'ZVS4.1', N'D11 = 0 → PCT.221 = 0', N'Wenn keine Onlinekonten mit täglich fälligen Einlagen gemeldet werden dürfen keine Onlineüberweisungen im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.587' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (228, N'ZVSTA_2022_H', N'L1412', N'LOGICAL', N'ZVS1', N'ZVS4.1', N'A1 = 0 → PCT (gesendet) +
PCT (empfangen) = 0', N'Wenn keine Zahlungskonten gemeldet werden, dann dürfen auch keine Überweisungen gesendet oder empfangen werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.670' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (229, N'ZVSTA_2022_H', N'L1413', N'LOGICAL', N'ZVS1', N'ZVS4.1', N'A1 = 0 → PDD (gesendet) +
PDD (empfangen) = 0', N'Wenn keine Zahlungskonten gemeldet werden, dann dürfen auch keine Lastschriften gesendet oder empfangen werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.757' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (230, N'ZVSTA_2022_H', N'L1414', N'LOGICAL', N'ZVS1', N'ZVS4.1', N'A1 = 0 → NDS.1 + NDS.2 = 0', N'Wenn keine Zahlungskonten gemeldet werden, dann dürfen auch keine einfachen Buchungen gemeldet werden', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.860' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (231, N'ZVSTA_2022_H', N'L1415', N'LOGICAL', N'ZVS1', N'ZVS4.1', N'A2 = 0 → PEM.2 = 0', N'Wenn keine E-Geldkonten gemeldet werden, dann können auch keine E-Geldzahlungen mit E-Geldkonten im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:49.947' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (232, N'ZVSTA_2022_H', N'L1416', N'LOGICAL', N'ZVS1', N'ZVS4.1', N'A2 + S32 = 0 →
PEM (empfangen) = 0 ', N'Wenn keine E-Geld-Konten oder selbst abgerechnete Terminals, die E-Geld-Karten akzeptieren im ZVS 3 gemeldet werden, dann dürfen auch keine empfangenen E-Geldzahlungen im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.030' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (233, N'ZVSTA_2022_H', N'L161', N'LOGICAL', N'ZVS1', N'ZVS6', N'A1 = 0 → 4.OTCW + 4.OTCD = 0', N'Wenn keine Zahlungskonten gemeldet werden, dann dürfen auch keine Bargeldein- oder -auszahlungen am Schalter im ZVS 6 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.110' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (234, N'ZVSTA_2022_H', N'L211', N'LOGICAL', N'ZVS2', N'ZVS1', N'I1 + I2 > 0 → A1 > 0', N'Wenn Karten mit Bargeld- oder Zahlungsfunktion gemeldet werden, müssen auch Zahlungskonten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.193' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (235, N'ZVSTA_2022_H', N'L212', N'LOGICAL', N'ZVS2', N'ZVS1', N'I32 > 0 → A2 > 0', N'Wenn Karten mit Zugang zu einem E-Geld-Konto gemeldet werden, dann müssen auch E-Geld-Konten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.270' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (236, N'ZVSTA_2022_H', N'L213', N'LOGICAL', N'ZVS2', N'ZVS1', N'I311 = 0 → VE1 = 0', N'Wenn keine Karten mit direkter E-Geldspeicherung, die mindestens einmal aufgeladen wurden, gemeldet werden, kann auch kein Aufladungsgegenwert von E-Geld auf E-Gelddatenträgern im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.350' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (237, N'ZVSTA_2022_H', N'L2411', N'LOGICAL', N'ZVS2', N'ZVS4.1', N'I1 = 0 → PCW = 0', N'Wenn keine Karten mit Bargeldfunktion gemeldet wurden, können auch keine Bargeldabhebungen im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.427' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (238, N'ZVSTA_2022_H', N'L2412', N'LOGICAL', N'ZVS2', N'ZVS4.1', N'I311 = 0 → PEM.1 = 0', N'Wenn keine E-Geld-Karten, auf denen E-Geld direkt gespeichert werden kann, gemeldet werde, dann können auch keine Zahlungen mit diesen Karten im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.510' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (239, N'ZVSTA_2022_H', N'L2413', N'LOGICAL', N'ZVS2', N'ZVS4.1', N'I32 = 0 → PEM.21 = 0', N'Wenn keine E-Geld Karten mit Zugriff auf ein E-Geld-Konto gemeldet werden, dann dürfen auch keine Zahlungen mit E-Geld Karten mit Zugang zu einem E-Geld-Konto im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.587' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (240, N'ZVSTA_2022_H', N'L2421', N'LOGICAL', N'ZVS2', N'ZVS4.2', N'I21.PCS = 0 → PCP.2.R.PCS.1 + PCP.2.NR.PCS.1 = 0', N'Wenn keine Debitkarten in einem Kartenzahlverfahren (Kartenscheme)* gemeldet werden, dann dürfen auch keine Zahlungen mit Debitkarten in diesem Kartenzahlverfahren (Kartenscheme) im ZVS 4.2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.670' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (241, N'ZVSTA_2022_H', N'L2422', N'LOGICAL', N'ZVS2', N'ZVS4.2', N'I22.PCS = 0 → PCP.2.R.PCS.2 + PCP.2.NR.PCS.2 = 0', N'Wenn keine Kreditkarten ohne Kreditfunktion in einem Kartenzahlverfahren (Kartenscheme)* gemeldet werden, dann dürfen auch keine Zahlungen mit Kreditkarten ohne Kreditfunktion in diesem Kartenzahlverfahren (Kartenscheme) im ZVS 4.2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.753' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (242, N'ZVSTA_2022_H', N'L2423', N'LOGICAL', N'ZVS2', N'ZVS4.2', N'I23.PCS = 0 → PCP.2.R.PCS.3 + PCP.2.NR.PCS.3 = 0', N'Wenn keine Kreditkarten mit Kreditfunktion in einem Kartenzahlverfahren (Kartenscheme)* gemeldet werden, dann dürfen auch keine Zahlungen mit Kreditkarten mit Kreditfunktion in diesem Kartenzahlverfahren (Kartenscheme) im ZVS 4.2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.830' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (243, N'ZVSTA_2022_H', N'L2424', N'LOGICAL', N'ZVS2', N'ZVS4.2', N'I02 = 0 → PCP.2.NR.21 = 0', N'Wenn keine Karten mit kontaktloser Zahlungsfunktion gemeldet werden, dann können auch keine kontaktlosen Zahlungen mit Karten im ZVS 4.2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.907' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (244, N'ZVSTA_2022_H', N'L2425', N'LOGICAL', N'ZVS2', N'ZVS4.2', N'I02 = 0 → PCP.2.NR.r2 = 0', N'Wenn keine Karten mit kontaktloser Zahlungsfunktion gemeldet werden, dann können auch keine Transaktionen mit dem Ausnahmetatbestand "kontaktlose Kleinbetragszahlung" im ZVS 4 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:50.987' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (245, N'ZVSTA_2022_H', N'L261', N'LOGICAL', N'ZVS2', N'ZVS6', N'I1 = 0 → 3.PCW + 3.PCD = 0', N'Wenn keine Karten mit Bargeldfunktion gemeldet werden, können auch keine Bargeldabhebungen oder -einzahlungen im ZVS 6 Teil 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.060' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (246, N'ZVSTA_2022_H', N'L262', N'LOGICAL', N'ZVS2', N'ZVS6', N'I2 = 0 → 3.OTR + 3.POS = 0', N'Wenn keine Karten mit Zahlungsfunktion gemeldet werden, können auch keine Zahlungen im ZVS 6 Teil 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.147' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (247, N'ZVSTA_2022_H', N'L263', N'LOGICAL', N'ZVS2', N'ZVS6', N'I2 + S2 = 0 → 4.CADV = 0', N'Wenn keine Karten mit Zahlungsfunktion oder POS-Terminals im ZVS 3 gemeldet werden, können auch keine Bargeldabhebungen am POS im ZVS 6 gemeldet werden.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.230' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (248, N'ZVSTA_2022_H', N'L263', N'LOGICAL', N'ZVS2', N'ZVS6', N'I3 = 0 → 3.LEM + 3.PEM = 0', N'Wenn keine Karten mit E-Geldfunktion gemeldet werden, können auch keine E-Geldtransaktionen im ZVS 6 Teil 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.320' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (249, N'ZVSTA_2022_H', N'L3411', N'LOGICAL', N'ZVS3', N'ZVS4.1', N'S12 = 0  → PCT.222 = 0', N'Wenn keine selbst abgerechneten Überweisungsterminals gemeldet werden, dürfen auch keine Überweisungen am Bankautomat (oder an sonstigem durch einen Zahlungsdienstleister bereitgestellten Terminal) im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.397' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (250, N'ZVSTA_2022_H', N'L3412', N'LOGICAL', N'ZVS3', N'ZVS4.1', N'S32 + A2 = 0 →
PEM (empfangen) = 0 ', N'Wenn keine selbst abgerechneten Terminals, die E-Geld-Karten akzeptieren oder E-Geld-Konten im ZVS 1 gemeldet werden, dann dürfen auch keine empfangenen E-Geldzahlungen im ZVS 4.1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.473' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (251, N'ZVSTA_2022_H', N'L3421', N'LOGICAL', N'ZVS3', N'ZVS4.2', N'S1 = 0 →
PCP.2.NR.3 (empfangen) = 0', N'Wenn keine selbst abgrechneten Bankautomaten gemeldet werden, dürfen auch keine empfangenen Kartenzahlungen am Bankautoamten im ZVS 4.2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.550' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (252, N'ZVSTA_2022_H', N'L3422', N'LOGICAL', N'ZVS3', N'ZVS4.2', N'S21 = 0 →
PCP.2.NR.2 (empfangen) = 0', N'Wenn keine selbst abgerechneten EFTPOS-Terminals gemeldet werden, dürfen auch keine empfangenen Kartenzahlungen am EFTPOS-Terminal im ZVS 4.2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.627' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (253, N'ZVSTA_2022_H', N'L3423', N'LOGICAL', N'ZVS3', N'ZVS4.2', N'S211 = 0 →
PCP.2.NR.21 (empfangen) = 0', N'Wenn keine selbst abgerechneten EFTPOS-Terminals mit Kontaktlosfunktion gemeldet werden, dürfen auch keine empfangenen kontaktlosen Kartenzahlungen am EFTPOS-Terminal im ZVS 4.2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.700' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (254, N'ZVSTA_2022_H', N'L361', N'LOGICAL', N'ZVS3', N'ZVS6', N'S1 = 0 → 1.PCD + 1.OTR +
2.PCD + 2.OTR = 0', N'Wenn keine Bankautomaten gemeldet werden, dürfen auch keine Transaktionen an Bankautomaten im ZVS 6 Teil 1 und 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.783' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (255, N'ZVSTA_2022_H', N'L362', N'LOGICAL', N'ZVS3', N'ZVS6', N'S11 = 0 → 1.PCW + 2.PCW = 0', N'Wenn keine Geldautomaten gemeldet werden, dürfen auch keine Bargeldabhebungen an Geldautomaten im ZVS 6 Teil 1 und 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.860' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (256, N'ZVSTA_2022_H', N'L363', N'LOGICAL', N'ZVS3', N'ZVS6', N'S2 = 0 → 1.POS + 2.POS = 0', N'Wenn keine POS-Terminals gemeldet werden, dürfen auch keine Transaktionen an POS-Termials im ZVS 6 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:51.947' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (257, N'ZVSTA_2022_H', N'L364', N'LOGICAL', N'ZVS3', N'ZVS6', N'S2 = 0 → 4.CADV = 0', N'Wenn keine POS-Terminals im ZVS 3 gemeldet werden, können auch keine Bargeldabhebungen am POS im ZVS 6 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.027' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (258, N'ZVSTA_2022_H', N'L365', N'LOGICAL', N'ZVS3', N'ZVS6', N'S31 = 0 → 1.LEM + 2.LEM = 0', N'Wenn keine Terminals zum Auf- und Entladen von E-Geld-Karten gemeldet werden, dann dürfen auch keine Auf- und Entladungen im ZVS 6 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.110' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (259, N'ZVSTA_2022_H', N'L366', N'LOGICAL', N'ZVS3', N'ZVS6', N'S32 = 0 → 1.PEM + 2.PEM = 0', N'Wenn keine Terminals, die E-Geld akzeptieren, gemeldet werden, dürfen auch keine E-Geld-Zahlungen im ZVS 6 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.193' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (260, N'ZVSTA_2022_H', N'L4111', N'LOGICAL', N'ZVS4.1', N'ZVS1', N'PCT.221 > 0 → D11 > 0', N'Wenn Onlineüberweisungen gemeldet werden, müssen auch Onlinekonten mit täglich fälligen Einlagen im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.277' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (261, N'ZVSTA_2022_H', N'L4112', N'LOGICAL', N'ZVS4.1', N'ZVS1', N'PCT (gesendet) + PCT (empfangen) > 0 → A1 > 0', N'Wenn Überweisungen gesendet oder empfangen werden, müssen auch Zahlungskonten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.353' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (262, N'ZVSTA_2022_H', N'L4113', N'LOGICAL', N'ZVS4.1', N'ZVS1', N'PDD (gesendet) + PDD (empfangen) > 0 → A1 > 0', N'Wenn Lastschriften gesendet oder empfangen werden, müssen auch Zahlungskonten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.430' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (263, N'ZVSTA_2022_H', N'L4114', N'LOGICAL', N'ZVS4.1', N'ZVS1', N'PEM.2 > 0 → A2 > 0', N'Wenn E-Geld Zahlungen mit E-Geld auf E-Geld-Konten gemeldet werden, dann müssen auch E-Geld-Konten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.507' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (264, N'ZVSTA_2022_H', N'L4115', N'LOGICAL', N'ZVS4.1', N'ZVS1', N'PEM (empfangen) > 0 →
A2 + S32 > 0', N'Wenn empfangene E-Geld-Zahlungen gemeldet werden, dann müssen auch E-Geld-Konten im ZVS 1 oder Terminals, die E-Geld-Karten akzeptieren im ZVS 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.590' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (265, N'ZVSTA_2022_H', N'L4116', N'LOGICAL', N'ZVS4.1', N'ZVS1', N'NDS.1 + NDS.2 > 0 → A1 > 0', N'Wenn einfache Buchungen gemeldet werden, müssen auch Zahlungskonten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.667' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (266, N'ZVSTA_2022_H', N'L4121', N'LOGICAL', N'ZVS4.1', N'ZVS2', N'PCW > 0 → I1 > 0', N'Wenn Bargeldabhebungen mit Karten gemeldet werden, müssen auch Karten mit Bargeldfunktion im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.753' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (267, N'ZVSTA_2022_H', N'L4122', N'LOGICAL', N'ZVS4.1', N'ZVS2', N'PEM.1 > 0 → I311 > 0', N'Wenn E-Geld Zahlungen mit Karten, auf denen E-Geld direkt gespeichert werden kann, gemeldet werden, dann müssen auch solche Karten im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.843' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (268, N'ZVSTA_2022_H', N'L4123', N'LOGICAL', N'ZVS4.1', N'ZVS2', N'PEM.21 > 0 → I32 > 0', N'Wenn E-Geld Zahlungen mit Karten mit Zugang zu einem E-Geld-Konto gemeldet werden, dann müssen auch Karten mit Zugang zu einem E-Geld-Konto im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:52.920' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (269, N'ZVSTA_2022_H', N'L4191', N'LOGICAL', N'ZVS4.1', N'ZVS9', N'Hj1: PCT = PCT Q1 + PCT Q2
Hj2: PCT = PCT Q3 + PCT', N'Die Überweisungen müssen den Überweisungen der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.003' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (270, N'ZVSTA_2022_H', N'L4192', N'LOGICAL', N'ZVS4.1', N'ZVS9', N'Hj1: PCT.2.R = PCT.2.R Q1 + PCT.2.R Q2
Hj2: PCT.2.', N'Die über einen Fernzugang ausgelösten Überweisungen müssen den über einen Fernzugang ausgelösten Überweisungen der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.083' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (271, N'ZVSTA_2022_H', N'L4193', N'LOGICAL', N'ZVS4.1', N'ZVS9', N'Hj1: PCT.2.NR = PCT.2.NR Q1 + PCT.2.NR Q2
Hj2: PCT', N'Die nicht über einen Fernzugang ausgelösten Überweisungen müssen den nicht über einen Fernzugang ausgelösten Überweisungen der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.167' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (272, N'ZVSTA_2022_H', N'L4194', N'LOGICAL', N'ZVS4.1', N'ZVS9', N'Hj1: PDD = PDD Q1 + PDD Q2
Hj2: PDD = PDD Q3 + PDD', N'Die Lastschriften insgesamt müssen den Lastschriften der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.247' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (273, N'ZVSTA_2022_H', N'L4195', N'LOGICAL', N'ZVS4.1', N'ZVS9', N'Hj1: PEM = PEM Q1 + PEM Q2
Hj2: PEM = PEM Q3 + PEM', N'Die E-Geld Zahlungen insgesamt müssen den E-Geld Zahlungen der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.333' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (274, N'ZVSTA_2022_H', N'L4196', N'LOGICAL', N'ZVS4.1', N'ZVS9', N'Hj1: PCH = PCH Q1 + PCH Q2
Hj2: PCH = PCH Q3 + PCH', N'Die eingelösten Schecks insgesamt müssen den eingelösten Schecks der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.413' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (275, N'ZVSTA_2022_H', N'L4221', N'LOGICAL', N'ZVS4.2', N'ZVS2', N'PCP.2.R.PCS.1 + PCP.2.NR.PCS.1
> 0 → I21.PCS > 0', N'Wenn Zahlungen mit Debitkarten in einem Kartenzahlverfahren (Kartenscheme)* gemeldet werden, dann müssen auch Debitkarten in diesem Kartenzahlverfahren (Kartenscheme) im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.497' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (276, N'ZVSTA_2022_H', N'L4222', N'LOGICAL', N'ZVS4.2', N'ZVS2', N'PCP.2.R.PCS.2 + PCP.2.NR.PCS.2
> 0 → I22.PCS > 0', N'Wenn Zahlungen mit Kreditkarten ohne Kreditfunktion in einem Kartenzahlverfahren (Kartenscheme)* gemeldet werden, dann müssen auch Kreditkarten ohne Kreditfunktion in diesem Kartenzahlverfahren (Kartenscheme) im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.580' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (277, N'ZVSTA_2022_H', N'L4223', N'LOGICAL', N'ZVS4.2', N'ZVS2', N'PCP.2.R.PCS.3 + PCP.2.NR.PCS.3
> 0 → I23.PCS > 0', N'Wenn Zahlungen mit Kreditkarten mit Kreditfunktion in einem Kartenzahlverfahren (Kartenscheme)* gemeldet werden, dann müssen auch Kreditkarten mit Kreditfunktion in diesem Kartenzahlverfahren (Kartenscheme) im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.660' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (278, N'ZVSTA_2022_H', N'L4224', N'LOGICAL', N'ZVS4.2', N'ZVS2', N'PCP.2.NR.21 > 0 → I02 > 0', N'Wenn kontaktlose Zahlungen mit Karten gemeldet werden, dann müssen auch Karten mit kontaktloser Zahlungsfunktion im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.740' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (279, N'ZVSTA_2022_H', N'L4231', N'LOGICAL', N'ZVS4.2', N'ZVS3', N'PCP.2.NR.21 (empfangen) > 0 → S211 > 0', N'Wenn kontaktlose Kartenzahlungen an selbst abgerechneten EFTPOS gemeldet werden, dann müssen auch EFTPOS mit Kontaklosfunktion im ZVS 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.823' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (280, N'ZVSTA_2022_H', N'L4232', N'LOGICAL', N'ZVS4.2', N'ZVS3', N'PCP.2.NR.3 (empfangen) > 0 →
S1 > 0', N'Wenn Kartenzahlungen an selbst abgerechneten Bankautomaten gemeldet werden, dann müssen auch Bankautomaten im ZVS 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.917' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (281, N'ZVSTA_2022_H', N'L4291', N'LOGICAL', N'ZVS4.2', N'ZVS9', N'Hj 1: PCP = PCP Q1 + PCP Q2
Hj 2: PCP = PCP Q3 + P', N'Die Kartenzahlungen müssen den Kartenzahlungen der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:53.997' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (282, N'ZVSTA_2022_H', N'L4292', N'LOGICAL', N'ZVS4.2', N'ZVS9', N'Hj 1: PCP.2.R = PCP.2.R Q1 + PCP.2.R Q2
Hj 2: PCP.', N'Die über einen Fernzugang ausgelösten Kartenzahlungen müssen den über einen Fernzugang ausgelösten Kartenzahlungen der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.083' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (283, N'ZVSTA_2022_H', N'L4293', N'LOGICAL', N'ZVS4.2', N'ZVS9', N'Hj 1: PCP.2.NR = PCP.2.NR Q1 + PCP.2.NR Q2
Hj 2: P', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen müssen den nicht über einen Fernzugang ausgelösten Kartenzahlungen der beiden zugehörigen Quartale entsprechen.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.160' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (284, N'ZVSTA_2022_H', N'L611', N'LOGICAL', N'ZVS6', N'ZVS1', N'4.OTCW + 4.OTCD > 0 → A1 > 0', N'Wenn Bargeldein- oder auszahlungen am Schalter gemeldet werden, dann müssen auch Zahlungskonten im ZVS 1 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.243' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (285, N'ZVSTA_2022_H', N'L621', N'LOGICAL', N'ZVS6', N'ZVS2', N'3.OTR + 3.POS > 0 → I2 > 0', N'Wenn Zahlungen mit Karten mit Zahlungsfunktion gemeldet werden, dann müssen auch Karten mit Zahlungsfunktion im Meldeschema ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.317' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (286, N'ZVSTA_2022_H', N'L622', N'LOGICAL', N'ZVS6', N'ZVS2', N'3.PCW + 3.PCD > 0 → I1 > 0', N'Wenn Bargeldein- oder auszahlungen mit ausgegebenen Karten gemeldet werden, dann müssen auch Karten mit Bargeldfunktion im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.400' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (287, N'ZVSTA_2022_H', N'L623', N'LOGICAL', N'ZVS6', N'ZVS2', N'3.LEM + 3.PEM > 0 → I3 > 0 ', N'Wenn Transaktionen mit ausgegebenen E-Geld-Karten gemeldet werden, dann müssen auch E-Geld-Karten im ZVS 2 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.480' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (288, N'ZVSTA_2022_H', N'L624', N'LOGICAL', N'ZVS6', N'ZVS2', N'4.CADV > 0 → I2 + S2 > 0', N'Wenn Bargeldabhebungen am POS gemeldet werden, dann müssen auch Karten mit Zahlungsfunktion im ZVS 2 oder POS-Terminals im ZVS 3 gemeldet werden.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.563' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (289, N'ZVSTA_2022_H', N'L631', N'LOGICAL', N'ZVS6', N'ZVS3', N'1.PCW + 2.PCW > 0 → S11 > 0', N'Wenn Bargeldabhebungen an selbst abgerechneten Geldautomaten gemeldet werden, dann müssen auch Geldautomaten im ZVS 3 gemeldet werden. ', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.647' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (290, N'ZVSTA_2022_H', N'L632', N'LOGICAL', N'ZVS6', N'ZVS3', N'1.PCD + 1.OTR + 2.PCD + 2.OTR > 0 → S1 > 0', N'Wenn Bargeldeinzahlungen oder sonstige Transaktionen an selbst abgerechneten Automaten gemeldet werden, dann müssen auch Bankautomaten im ZVS 3 gemeldet werden. ', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.730' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (291, N'ZVSTA_2022_H', N'L633', N'LOGICAL', N'ZVS6', N'ZVS3', N'1.POS + 2.POS > 0 → S2 > 0 ', N'Wenn Zahlungen an selbst abgerechneten POS Terminals gemeldet werden, müssen auch POS Terminals im Meldeschema ZVS 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.810' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (292, N'ZVSTA_2022_H', N'L634', N'LOGICAL', N'ZVS6', N'ZVS3', N'1.PEM + 2.PEM > 0 → S32 > 0', N'Wenn E-Geld-Zahlungen an selbst abgerechneten E-Geld-Terminals gemeldet werden müssen auch Terminals, die E-Geld akzeptieren, im ZVS 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.897' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (293, N'ZVSTA_2022_H', N'L635', N'LOGICAL', N'ZVS6', N'ZVS3', N'1.LEM + 2.LEM > 0 → S31 > 0', N'Wenn Auf- und Entladungen von E-Geld-Karten an selbst abgerechneten E-Geld-Terminals gemeldet werden, dann müssen auch Terminals zum Auf- und Entladen von E-Geld im ZVS 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:35:54.977' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (294, N'ZVSTA_2022_H', N'L636', N'LOGICAL', N'ZVS6', N'ZVS3', N'4.CADV > 0 → S2 > 0', N'Wenn Bargeldabhebungen am POS gemeldet werden, dann müssen auch POS-Terminals im ZVS 3 gemeldet werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-01-21T17:33:29.907' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (295, N'ZVSTA_2022_H', N'L54XX', N'LOGICAL', N'ZVS5', N'ZVS4', N'FXXXXX > 0 → PXXXX > 0', N'Wenn eine Position in ZVS 5.1 oder ZVS 5.2 gemeldet wird, muss auch die korrespondierende Position in ZVS 4.1 oder ZVS 4.2 gemeldet werden. Dies gilt für alle Positionen, für die es dazugehörige Transaktionen im ZVS 4 gibt. Ausnahmen sind die Unterglieder', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (296, N'ZVSTA_2014', N'100', N'SUM', N'ZVS1', N'ZVS1', N'1.A1.IN.DE.N - 1.A11.IN.DE.N >= 0', N'Die Oberposition A1 des Meldeschemas ZVS1 muss mindestens so groß sein wie die dazugehörige Unterposition A11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A11'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:27:48.750' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (297, N'ZVSTA_2014', N'110', N'SUM', N'ZVS1', N'ZVS1', N'1.A1.IN.DE.N - 1.A12.IN.DE.N >= 0', N'Die Oberposition A1 des Meldeschemas ZVS1 muss mindestens so groß sein wie die tion A12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:28:06.950' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (298, N'ZVSTA_2014', N'120', N'SUM', N'ZVS1', N'ZVS1', N'1.A11.IN.DE.N - 1.A121.IN.DE.N >= 0', N'Die Position A11 des Meldeschemas ZVS1
muss mindestens so groß sein wie die PositionA121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A11'') 
,(''ZVS1'',''A121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:28:27.567' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (299, N'ZVSTA_2014', N'130', N'SUM', N'ZVS1', N'ZVS1', N'1.A12.IN.DE.N - 1.A121.IN.DE.N >= 0', N'Die Position A12 des Meldeschemas ZVS1
muss mindestens so groß sein wie die PositionA121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A12'') 
,(''ZVS1'',''A121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (300, N'ZVSTA_2014', N'140', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I121.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss
mindestens so groß sein wie die dazugehörige Unterposition I121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (301, N'ZVSTA_2014', N'150', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I122.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
dazugehörige Unterposition I122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:52.910' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (302, N'ZVSTA_2014', N'160', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I123.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss
mindestens so groß sein wie die dazugehörige Unterposition I123.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I123'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:52.997' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (303, N'ZVSTA_2014', N'170', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I121.IN.DE.N -
2.I122.IN.DE.N -2.I123.IN.DE.N <= 0', N'Die Summe der Positionen I121, I122 und I123 des Meldeschemas ZVS2 muss
mindestens sogroß sein wie die Position I12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I121'') 
,(''ZVS2'',''I122'') 
,(''ZVS2'',''I123'')

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value+C.Anzahl_Value+D.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.087' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (304, N'ZVSTA_2014', N'180', N'SUM', N'ZVS2', N'ZVS2', N'2.I124.IN.DE.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Position I124 des Meldeschemas ZVS2 daher
leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I124'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value=0 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.177' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (305, N'ZVSTA_2014', N'190', N'SUM', N'ZVS2', N'ZVS2', N'2.I125.IN.DE.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Position I125 des Meldeschemas ZVS2 daher
leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I125'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value=0 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.267' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (306, N'ZVSTA_2014', N'200', N'SUM', N'ZVS2', N'ZVS2', N'2.I13.IN.DE.N - 2.I131.IN.DE.N -
2.I132.IN.DE.N = 0', N'Die Oberposition I13 muss sich aus der Summe der dazugehörigen
Unterpositionen I131 desMeldeschemas ZVS2 und I132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I131'') 
,(''ZVS2'',''I132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value = B.Anzahl_Value+C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.353' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (307, N'ZVSTA_2014', N'210', N'SUM', N'ZVS2', N'ZVS2', N'2.I13.IN.DE.N - 2.I1301.IN.DE.N >= 0', N'Die Oberposition I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
dazugehörige Unterposition I1301.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I1301'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.443' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (308, N'ZVSTA_2014', N'220', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I11.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I11'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', N'Modified', N'papasp', CAST(N'2022-01-24T12:24:38.383' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (309, N'ZVSTA_2014', N'230', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I12.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
Position I12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y', N'Modified', N'papasp', CAST(N'2022-01-24T12:24:41.350' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (310, N'ZVSTA_2014', N'240', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I13.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I13.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I13'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.713' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (311, N'ZVSTA_2014', N'250', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I11.IN.DE.N - 2.I12.IN.DE.N -2.I13.IN.DE.N
<= 0', N'Die Summe der Positionen I11, I12 und I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I11'') 
,(''ZVS2'',''I12'') 
,(''ZVS2'',''I13'')

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value+C.Anzahl_Value+D.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.803' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (312, N'ZVSTA_2014', N'260', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I11.IN.DE.N <= 0', N'Die Position I11 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I11'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.893' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (313, N'ZVSTA_2014', N'270', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I12.IN.DE.N <= 0', N'Die Position I12 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y', N'Modified', N'Paskalis', CAST(N'2022-01-23T00:21:53.980' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (314, N'ZVSTA_2014', N'280', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I13.IN.DE.N <= 0', N'Die Position I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (315, N'ZVSTA_2014', N'300', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S111.IN.A1.N >= 0', N'Die Oberposition S11 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S111.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S111'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T10:54:09.677' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (316, N'ZVSTA_2014', N'310', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S112.IN.A1.N >= 0', N'Die Oberposition S11 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S112.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S112'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T10:58:59.543' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (317, N'ZVSTA_2014', N'320', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S111.IN.A1.N - 3.S112.IN.A1.N <= 0', N'Die Summe der Positionen S111 und S112 des Meldeschemas ZVS3 muss mindestens so groß sein wie die Position S11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S111'') 
,(''ZVS3'',''S112'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:13:11.073' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (318, N'ZVSTA_2014', N'330', N'SUM', N'ZVS3', N'ZVS3', N'3.S12.IN.A1.N - 3.S121.IN.A1.N >= 0', N'Die Oberposition S12 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S12'') 
,(''ZVS3'',''S121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T10:59:35.810' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (319, N'ZVSTA_2014', N'340', N'SUM', N'ZVS3', N'ZVS3', N'3.S12.IN.A1.N - 3.S122.IN.A1.N >= 0', N'Die Oberposition S12 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S12'') 
,(''ZVS3'',''S122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T10:59:49.027' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (320, N'ZVSTA_2014', N'350', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S131.IN.A1.N >= 0', N'Die Oberposition S13 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S131.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S131'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:00:16.920' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (321, N'ZVSTA_2014', N'360', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S132.IN.A1.N >= 0', N'Die Oberposition S13 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:01:54.207' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (322, N'ZVSTA_2014', N'370', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S131.IN.A1.N - 3.S132.IN.A1.N <= 0', N'Die Summe der Positionen S131 und S132 des Meldeschemas ZVS3 muss mindestens so groß sein wie die Position S13.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S131'') 
,(''ZVS3'',''S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:13:19.527' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (323, N'ZVSTA_2014', N'380', N'SUM', N'ZVS3', N'ZVS3', N'3.S132.IN.A1.N - 3.S122.IN.A1.N >= 0', N'Die Position S132 des Meldeschemas ZVS3 muss mindestens so groß sein wie die PositionS122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S132'') 
,(''ZVS3'',''S122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:13:25.340' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (324, N'ZVSTA_2014', N'400', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21.TO.A1.N - 4.T2.I211.TO.A1.N -
4.T2.I212.TO.A1.N ~ 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I211 und T2.I212 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I211'') 
,(''ZVS4'',''T2.I212'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:30:32.780' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (325, N'ZVSTA_2014', N'401', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21.TO.A1.V - 4.T2.I211.TO.A1.V - 4.T2.I212.TO.A1.V ~
0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I211 und T2.I212 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I211'') 
,(''ZVS4'',''T2.I212'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:22:05.133' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (326, N'ZVSTA_2014', N'410', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I212.TO.A1.N - 4.T2.I2121.TO.A1.N -
4.T2.I2122.TO.A1.N ~ 0', N'Die Oberposition T2.I212 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I2121 und T2.I2122 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I212'') 
,(''ZVS4'',''T2.I2121'') 
,(''ZVS4'',''T2.I2122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:22:02.773' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (327, N'ZVSTA_2014', N'411', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I212.TO.A1.V - 4.T2.I2121.TO.A1.V -
4.T2.I2122.TO.A1.V ~ 0', N'Die Oberposition T2.I212 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I2121 und T2.I2122 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I212'') 
,(''ZVS4'',''T2.I2121'') 
,(''ZVS4'',''T2.I2122'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:22:01.023' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (328, N'ZVSTA_2014', N'420', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21001.TO.A1.N - 4.T2.I21.TO.A1.N <= 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I21001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I21001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:21:58.493' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (329, N'ZVSTA_2014', N'421', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21001.TO.A1.V - 4.T2.I21.TO.A1.V <= 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I21001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I21001'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:24:05.060' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (330, N'ZVSTA_2014', N'430', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I22.TO.A1.N - 4.T2.I221.TO.A1.N - 4.T2.I222.TO.A1.N ~
0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I221 und T2.I222 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I221'') 
,(''ZVS4'',''T2.I222'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END






', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:44:16.703' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (331, N'ZVSTA_2014', N'431', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I22.TO.A1.V - 4.T2.I221.TO.A1.V - 4.T2.I222.TO.A1.V ~
0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I221 und T2.I222 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I221'') 
,(''ZVS4'',''T2.I222'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:26:43.750' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (332, N'ZVSTA_2014', N'435', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T2.I22.TO.A1.V / 4.T2.I22.TO.A1.N <= 1000', N'Der durchschnittliche Wert einer Lastschrift T2.I22 des Meldeschemas ZVS4 ist ungewöhnlich hoch.', NULL, N'N', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (333, N'ZVSTA_2014', N'440', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2201.TO.A1.N - 4.T2.I22.TO.A1.N <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2201.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2201'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:47:54.467' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (334, N'ZVSTA_2014', N'441', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2201.TO.A1.V - 4.T2.I22.TO.A1.V <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die
T2.I2201.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2201'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:04:51.977' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (335, N'ZVSTA_2014', N'450', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2202.TO.A1.N - 4.T2.I22.TO.A1.N <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2202.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2202'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:43:25.790' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (336, N'ZVSTA_2014', N'451', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2202.TO.A1.V - 4.T2.I22.TO.A1.V <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2202.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2202'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:54:49.727' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (337, N'ZVSTA_2014', N'460', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I121.TO.A1.N - 4.T1.I122.TO.A1.N -
4.T1.I123.TO.A1.N ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I121, T1.I122 und T1.I123 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I121'') 
,(''ZVS4'',''T1.I122'') 
,(''ZVS4'',''T1.I123'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:54:39.087' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (338, N'ZVSTA_2014', N'461', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I121.TO.A1.V - 4.T1.I122.TO.A1.V -
4.T1.I123.TO.A1.V ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I121, T1.I122 und T1.I123 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I121'') 
,(''ZVS4'',''T1.I122'') 
,(''ZVS4'',''T1.I123'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T11:54:20.477' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (339, N'ZVSTA_2014', N'465', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V / 4.T1.I12.TO.A1.N <= 100', N'Der durchschnittliche Wert einer Kartentransaktion T1.I12 des Meldeschemas ZVS4 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T11:47:44.920' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (340, N'ZVSTA_2014', N'470', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I124.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I124 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I124'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:12:25.280' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (341, N'ZVSTA_2014', N'471', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I124.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I124 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I124'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:12:34.233' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (342, N'ZVSTA_2014', N'480', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I125.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I125 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I125'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:12:40.610' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (343, N'ZVSTA_2014', N'481', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I125.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I125 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I125'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:12:45.797' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (344, N'ZVSTA_2014', N'490', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I12.S1.TO.A1.N -
4.T1.I12.S3.TO.A1.N ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:12:54.407' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (345, N'ZVSTA_2014', N'491', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I12.S1.TO.A1.V -
4.T1.I12.S3.TO.A1.V ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:12:55.937' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (346, N'ZVSTA_2014', N'500', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I12.S1.TO.A1.N -
4.T1.I12.S3.TO.A1.N >= 0', N'Die Position T1.I12 des Meldeschemas ZVS4 muss mindestens so groß sein wie die Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:12:57.577' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (347, N'ZVSTA_2014', N'501', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I12.S1.TO.A1.V -
4.T1.I12.S3.TO.A1.V >= 0', N'Die Position T1.I12 des Meldeschemas ZVS4 muss mindestens so groß sein wie die Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END









', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:22:27.737' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (348, N'ZVSTA_2014', N'510', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.TO.A1.N - 4.T3.I131.TO.A1.N - 4.T3.A3.TO.A1.N ~ 0', N'Die Oberposition T3 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T3.I131 und T3.A3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3'') 
,(''ZVS4'',''T3.I31'') 
,(''ZVS4'',''T3.A3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:22:30.237' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (349, N'ZVSTA_2014', N'511', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.TO.A1.V - 4.T3.I131.TO.A1.V - 4.T3.A3.TO.A1.V ~ 0', N'Die Oberposition T3 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T3.I131 und T3.A3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3'') 
,(''ZVS4'',''T3.I31'') 
,(''ZVS4'',''T3.A3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:22:32.347' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (350, N'ZVSTA_2014', N'515', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T3.TO.A1.V / 4.T3.TO.A1.N <= 15', N'Der durchschnittliche Wert einer E-Geld-Zahlungstransaktion T3 des Meldeschemas ZVS4 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T12:04:37.477' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (351, N'ZVSTA_2014', N'520', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.A3.TO.A1.N - 4.T3.I132.TO.A1.N >= 0', N'Die Oberposition T3.A3 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T3.I132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.A3'') 
,(''ZVS4'',''T3.I132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:32:03.527' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (352, N'ZVSTA_2014', N'521', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.A3.TO.A1.V - 4.T3.I132.TO.A1.V >= 0', N'Die Oberposition T3.A3 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T3.I132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.A3'') 
,(''ZVS4'',''T3.I132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:32:08.263' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (353, N'ZVSTA_2014', N'530', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T0.I24.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Zahlungsinstrumente vorgenommen werden kann und die Sammelposition T0.I24 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0.I24'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:32:11.700' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (354, N'ZVSTA_2014', N'531', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T0.I24.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Zahlungsinstrumente vorgenommen werden kann und die Sammelposition T0.I24 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0.I24'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END






', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:08:06.520' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (355, N'ZVSTA_2014', N'535', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T0.I23.TO.A1.V / 4.T0.I23.TO.A1.N <= 10000', N'Der durchschnittliche Wert einer Schecktransaktion T0.I23 des Meldeschemas ZVS4 ist ungewöhnlich hoch.', NULL, N'N', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (356, N'ZVSTA_2014', N'540', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.TO.A1.N - 4.T2.I21.TO.A1.N - 4.T2.I22.TO.A1.N -
4.T1.I12.TO.A1.N - 4.T3.TO.A1.N - 4.T0.I23.TO.A1.N ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte A1).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END










', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T16:16:46.483' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (357, N'ZVSTA_2014', N'541', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.TO.A1.V - 4.T2.I21.TO.A1.V - 4.T2.I22.TO.A1.V -
4.T1.I12.TO.A1.V - 4.T3.TO.A1.V - 4.T0.I23.TO.A1.V ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte A1).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END











', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:55:08.167' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (358, N'ZVSTA_2014', N'550', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.FROM.Z9.N - 4.T2.I21.FROM.Z9.N -
4.T2.I22.FROM.Z9.N - 4.T3.FROM.Z9.N -
4.T0.I23.FROM.Z9.N ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte Z9).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''Z9'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END











', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T12:55:28.197' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (359, N'ZVSTA_2014', N'551', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.FROM.Z9.V - 4.T2.I21.FROM.Z9.V -
4.T2.I22.FROM.Z9.V - 4.T3.FROM.Z9.V -
4.T0.I23.FROM.Z9.V ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte Z9).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''Z9'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T13:00:21.873' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (360, N'ZVSTA_2014', N'560', N'LOGICAL', N'ZVS4', N'ZVS1', N'4.T0.TO.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N +
1.A3.IN.DE.N > 0', N'Wenn in Position T0 des ZVS4 Transaktionen gemeldet werden, dann müssen auch Konten inden Positionen A1, A2 oder A3 im Meldeschema ZVS1 gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS1'',''A1'') 
,(''ZVS1'',''A2'')
,(''ZVS1'',''A3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >0 and B.Anzahl_Value + C.Anzahl_Value +
                           D.Anzahl_Value>0 THEN ''Y'' 
WHEN A.Anzahl_Value=0 and B.Anzahl_Value + C.Anzahl_Value +
                           D.Anzahl_Value=0 THEN ''Y'' 

ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
        WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T15:01:52.770' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (361, N'ZVSTA_2014', N'570', N'LOGICAL', N'ZVS4', N'ZVS1', N'4.T3.I131.TO.A1.V > 0 => 1.I31.IN.DE.V > 0', N'Wenn in Position T3.I131 des ZVS4 Transaktionen gemeldet werden, dann muss der
Aufladungsgegenwert auf E-Geld-Datenträgern in Position I31 des ZVS1 ebenfalls größer 0 sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.I31'') 
,(''ZVS1'',''I31'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value=B.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T13:23:16.983' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (362, N'ZVSTA_2014', N'580', N'LOGICAL', N'ZVS4', N'ZVS2', N'4.T1.I12.TO.A1.N > 0 => 2.I12.IN.DE.N > 0', N'Wenn Kartenzahlungen in Position T1.I12 des ZVS4 gemeldet wurden, dann müssen in Position I12 des ZVS2 Karten gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS2'',''I12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T16:15:26.547' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (363, N'ZVSTA_2014', N'590', N'SUM', N'ZVS4', N'ZVS8', N'4.T2.I2122.TO.A1.N - 8.T2.I2122.S31.TO.A1.N >= 0', N'Die Position T2.I2122 des ZVS4 muss mindestens so groß sein wie die Position T2.I2122.S31des ZVS8.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I2122'') 
,(''ZVS8'',''T2.I2122.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>=B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T16:16:31.277' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (364, N'ZVSTA_2014', N'591', N'SUM', N'ZVS4', N'ZVS8', N'4.T2.I2122.TO.A1.V - 8.T2.I2122.S31.TO.A1.V >= 0', N'Die Position T2.I2122 des ZVS4 muss mindestens so groß sein wie die Position T2.I2122.S31des ZVS8.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I2122'') 
,(''ZVS8'',''T2.I2122.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value>=B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (365, N'ZVSTA_2014', N'600', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T0.S1.IN.A1.N - 5.A.T41.S111.IN.A1.N -
5.A.T42.S111.IN.A1.N - 5.A.T1.S12.IN.A1.N -
5.A.T3.S131.IN.A1.N - 5.A.T3.S132.IN.A1.N ~ 0', N'Die Oberposition A.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen A.T41.S111, A.T42.S111, A.T1.S12, A.T3.S131 und
A.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T0.S1'') 
,(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'')
,(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T13:31:32.923' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (366, N'ZVSTA_2014', N'601', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T0.S1.IN.A1.V - 5.A.T41.S111.IN.A1.V -
5.A.T42.S111.IN.A1.V - 5.A.T1.S12.IN.A1.V -
5.A.T3.S131.IN.A1.V - 5.A.T3.S132.IN.A1.V ~ 0', N'Die Oberposition A.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen A.T41.S111, A.T42.S111, A.T1.S12, A.T3.S131 und
A.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T0.S1'') 
,(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'')
,(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T13:35:08.170' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (367, N'ZVSTA_2014', N'605', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T41.S111.IN.A1.V / 5.A.T41.S111.IN.A1.N <= 175', N'Der durchschnittliche Wert einer Bargeldabhebung A.T41.S111 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:32:25.287' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (368, N'ZVSTA_2014', N'615', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T42.S111.IN.A1.V / 5.A.T42.S111.IN.A1.N <= 1000', N'Der durchschnittliche Wert einer Bargeldeinzahlung A.T42.S111 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:32:30.037' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (369, N'ZVSTA_2014', N'625', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T1.S12.IN.A1.V / 5.A.T1.S12.IN.A1.N <= 75', N'Der durchschnittliche Wert einer Transaktion an Zahlungsterminals (POS) A.T1.S12 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:32:33.850' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (370, N'ZVSTA_2014', N'635', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T3.S131.IN.A1.V / 5.A.T3.S131.IN.A1.N <= 100', N'Der durchschnittliche Auf-/ Entladungsgegenwert von E-Geldkarten mit E-Geldfunktion A.T3.S131 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:32:41.757' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (371, N'ZVSTA_2014', N'645', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T3.S132.IN.A1.V / 5.A.T3.S132.IN.A1.N <= 5', N'Der durchschnittliche Wert von E-Geld-Zahlungen mit Karten mit E-Geldfunktion A.T3.S132 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (372, N'ZVSTA_2014', N'650', N'SUM', N'ZVS5', N'ZVS5', N'5.B.T0.S1.IN.A1.N - 5.B.T41.S111.IN.A1.N -
5.B.T42.S111.IN.A1.N - 5.B.T1.S12.IN.A1.N -
5.B.T3.S131.IN.A1.N - 5.B.T3.S132.IN.A1.N ~ 0', N'Die Oberposition B.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen B.T41.S111, B.T42.S111, B.T1.S12, B.T3.S131 und
B.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''B.T0.S1'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'')
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T13:35:21.190' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (373, N'ZVSTA_2014', N'651', N'SUM', N'ZVS5', N'ZVS5', N'5.B.T0.S1.IN.A1.V - 5.B.T41.S111.IN.A1.V -
5.B.T42.S111.IN.A1.V - 5.B.T1.S12.IN.A1.V -
5.B.T3.S131.IN.A1.V - 5.B.T3.S132.IN.A1.V ~ 0', N'Die Oberposition B.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der
dazugehörigen Unterpositionen B.T41.S111, B.T42.S111, B.T1.S12, B.T3.S131 und B.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''B.T0.S1'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'')
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T15:04:14.940' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (374, N'ZVSTA_2014', N'655', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.B.T41.S111.IN.A1.V / 5.B.T41.S111.IN.A1.N <= 200', N'Der durchschnittliche Wert einer Bargeldabhebung B.T41.S111 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:35:48.410' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (375, N'ZVSTA_2014', N'665', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.B.T42.S111.IN.A1.V / 5.B.T42.S111.IN.A1.N <= 125', N'Der durchschnittliche Wert einer Bargeldeinzahlung B.T42.S111 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:35:51.003' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (376, N'ZVSTA_2014', N'675', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.B.T1.S12.IN.A1.V / 5.B.T1.S12.IN.A1.N <= 100', N'Der durchschnittliche Wert einer Transaktion an Zahlungsterminals (POS) B.T1.S12 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:35:53.347' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (377, N'ZVSTA_2014', N'685', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.B.T3.S131.IN.A1.V / 5.B.T3.S131.IN.A1.N <= 30', N'Der durchschnittliche Auf-/ Entladungsgegenwert von E-Geldkarten mit E-Geldfunktion B.T3.S131 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:35:55.597' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (378, N'ZVSTA_2014', N'695', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.B.T3.S132.IN.A1.V / 5.B.T3.S132.IN.A1.N <= 10', N'Der durchschnittliche Wert von E-Geld-Zahlungen mit Karten mit E-Geldfunktion B.T3.S132 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (379, N'ZVSTA_2014', N'700', N'SUM', N'ZVS5', N'ZVS5', N'5.C.T0.S1.IN.A1.N - 5.C.T41.S111.IN.A1.N -
5.C.T42.S111.IN.A1.N - 5.C.T1.S12.IN.A1.N -
5.C.T3.S131.IN.A1.N - 5.C.T3.S132.IN.A1.N ~ 0', N'Die Oberposition C.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der
dazugehörigen Unterpositionen C.T41.S111, C.T42.S111, C.T1.S12, C.T3.S131 und C.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS5'',''C.T41.S111'') 
,(''ZVS5'',''C.T42.S111'')
,(''ZVS5'',''C.T1.S12'') 
,(''ZVS5'',''C.T3.S131'') 
,(''ZVS5'',''C.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T16:16:49.060' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (380, N'ZVSTA_2014', N'701', N'SUM', N'ZVS5', N'ZVS5', N'5.C.T0.S1.IN.A1.V - 5.C.T41.S111.IN.A1.V -
5.C.T42.S111.IN.A1.V - 5.C.T1.S12.IN.A1.V -
5.C.T3.S131.IN.A1.V - 5.C.T3.S132.IN.A1.V ~ 0', N'Die Oberposition C.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen C.T41.S111, C.T42.S111, C.T1.S12, C.T3.S131 und C.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS5'',''C.T41.S111'') 
,(''ZVS5'',''C.T42.S111'')
,(''ZVS5'',''C.T1.S12'') 
,(''ZVS5'',''C.T3.S131'') 
,(''ZVS5'',''C.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T13:38:21.277' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (381, N'ZVSTA_2014', N'705', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.C.T41.S111.IN.A1.V / 5.C.T41.S111.IN.A1.N <= 200', N'Der durchschnittliche Wert einer Bargeldabhebung C.T41.S111 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:38:43.777' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (382, N'ZVSTA_2014', N'715', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.C.T42.S111.IN.A1.V / 5.C.T42.S111.IN.A1.N <= 75', N'Der durchschnittliche Wert einer Bargeldeinzahlung C.T42.S111 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:38:51.340' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (383, N'ZVSTA_2014', N'725', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.C.T1.S12.IN.A1.V / 5.C.T1.S12.IN.A1.N <= 100', N'Der durchschnittliche Wert einer Transaktion an Zahlungsterminals (POS) C.T1.S12 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:38:53.557' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (384, N'ZVSTA_2014', N'735', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.C.T3.S131.IN.A1.V / 5.C.T3.S131.IN.A1.N <= 40', N'Der durchschnittliche Auf-/ Entladungsgegenwert von E-Geldkarten mit E-Geldfunktion C.T3.S131 des Meldeschemas ZVS5 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T13:38:57.510' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (385, N'ZVSTA_2014', N'745', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.C.T3.S132.IN.A1.V / 5.C.T3.S132.IN.A1.N <= 20', N'Der durchschnittliche Wert von E-Geld-Zahlungen mit Karten mit E-Geldfunktion C.T3.S132
ungewöhnlich hoch.', NULL, N'N', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (386, N'ZVSTA_2014', N'750', N'LOGICAL', N'ZVS5', N'ZVS1', N'5.C.T0.S1.IN.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N >
0', N'Wenn in Position C.T0.S1 des Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen auch Konten in den Positionen A1 oder A2 im Meldeschema ZVS1 gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS1'',''A1'') 
,(''ZVS1'',''A2'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value + C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value + C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T18:58:31.093' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (387, N'ZVSTA_2014', N'760', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T41.S111.IN.A1.N + 5.A.T42.S111.IN.A1.N +
5.B.T41.S111.IN.A1.N + 5.B.T42.S111.IN.A1.N > 0 <=>
3.S111.IN.A1.N > 0', N'Wenn in den Positionen A.T41.S111, A.T42.S111, B.T41.S111 oder B.T42.S111 des Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen auch unter S111 des
ZVS3 Geldautomaten gemeldet werden und umgekehrt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'') 
,(''ZVS3'',''S111'')


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value>0 and E.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value=0 and E.Anzahl_Value=0  THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
           , @CHECK_TABLE E
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T19:02:55.550' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (388, N'ZVSTA_2014', N'770', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T1.S12.IN.A1.N + 5.B.T1.S12.IN.A1.N > 0 <=>
3.S12.IN.A1.N > 0', N'Wenn in den Positionen A.T1.S12 oder B.T1.S12 des Meldeschemas ZVS5 Transaktionen
gemeldet werden, dann müssen auch unter S12 des ZVS3 POS-Terminals gemeldet werden und umgekehrt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS3'',''S12'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value + B.Anzahl_Value>0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (389, N'ZVSTA_2014', N'780', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T3.S131.IN.A1.N + 5.B.T3.S131.IN.A1.N +
5.A.T3.S132.IN.A1.N + 5.B.T3.S132.IN.A1.N > 0 =>
3.S13.IN.A1.N > 0', N'Wenn in den Positionen A.T3.S131, A.T3.S132, B.T3.S131 oder B.T3.S132 des
Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen unter Position S13 des ZVS3 E-Geld-Terminals gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 
,(''ZVS3'',''S13'')


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value>0 and E.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value=0 and E.Anzahl_Value=0  THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
           , @CHECK_TABLE E
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

















', N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (390, N'ZVSTA_2014', N'805', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T2.I2122.S31.TO.A1.V / 8.T2.I2122.S31.TO.A1.N <= 1000', N'Der durchschnittliche Wert einer Einzelüberweisung im Onlinebanking T2.I2122.S31 des Meldeschemas ZVS8 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T19:08:08.960' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (391, N'ZVSTA_2014', N'815', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T2.I241.TO.A1.V / 8.T2.I241.TO.A1.N <= 10000', N'Der durchschnittliche Wert einer Kontogutschrift durch einfache Buchung T2.I241 des Meldeschemas ZVS8 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T19:08:11.367' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (392, N'ZVSTA_2014', N'825', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T2.I242.TO.A1.V / 8.T2.I242.TO.A1.N <= 10000', N'Der durchschnittliche Wert einer Kontobelastung durch einfache Buchung T2.I242 des Meldeschemas ZVS8 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T19:08:14.117' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (393, N'ZVSTA_2014', N'835', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T4.I21.TO.A1.V / 8.T4.I21.TO.A1.N <= 1000', N'Der durchschnittliche Wert einer Überweisung von Bareinzahlungen bzw. Barauszahlungen an Nichtkontoinhaber T4.I21 des Meldeschemas ZVS8 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T19:08:16.070' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (394, N'ZVSTA_2014', N'845', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T2.S32.TO.A1.V / 8.T2.S32.TO.A1.N <= 1500', N'Der durchschnittliche Wert einer Transaktion über ein Telekommunikations-, Digital- oder IT- Gerät T2.S32 des Meldeschemas ZVS8 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T19:08:18.133' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (395, N'ZVSTA_2014', N'855', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T41.S12.TO.A1.V / 8.T41.S12.TO.A1.N <= 150', N'Der durchschnittliche Wert einer Barauszahlung an Zahlungsterminals T41.S12 des Meldeschemas ZVS8 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T19:08:20.040' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (396, N'ZVSTA_2014', N'865', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T41.S2.TO.A1.V / 8.T41.S2.TO.A1.N <= 1500', N'Der durchschnittliche Wert einer Bargeldabhebung am Schalter T41.S2 des Meldeschemas ZVS8 ist ungewöhnlich hoch.', NULL, N'N', N'Modified', N'papasp', CAST(N'2022-01-27T19:08:21.977' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (397, N'ZVSTA_2014', N'875', N'LOGICAL', N'ZVS8', N'ZVS8', N'8.T42.S2.TO.A1.V / 8.T42.S2.TO.A1.N <= 2000', N'Der durchschnittliche Wert einer Bargeldeinzahlung am Schalter T42.S2 des MeldeschemasZVS8 hoch.', NULL, N'N', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (398, N'ZVSTA_2014', N'880', N'LOGICAL', N'ZVS8', N'ZVS1', N'8.T42.S2.TO.A1.N + 8.T41.S2.TO.A1.N > 0 =>1.A1.IN.DE.N
> 0', N'Wenn in den Positionen T41.S2 oder T42.S2 des ZVS8 Transaktionen gemeldet werden, dann müssen auch unter A1 des ZVS1 Konten gemeldet worden sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS8'',''T41.S2'') 
,(''ZVS8'',''T42.S2'') 
,(''ZVS1'',''A1'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value + B.Anzahl_Value>0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

















', N'Y', N'Modified', N'papasp', CAST(N'2022-01-27T19:10:12.610' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (399, N'ZVSTA_2014', N'890', N'LOGICAL', N'ZVS8', N'ZVS1', N'8.T2.I2122.S31.TO.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N
> 0', N'Wenn in Position T2.I2122.S31 des ZVS8 Transaktionen gemeldet werden, dann müssen auch unter A1 oder A2 des ZVS1 Konten gemeldet worden sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS8'',''T2.I2122.S31'') 
,(''ZVS1'',''A2'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


















', N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (400, N'ZVSTA_2022_TECHNICAL', N'AC02-[Cube_id]', N'TECHNICAL', N'N', N'N', N'N', N'Action value on dataset should be “Append”, “Infor-mation”, “Replace” or “Delete”. - Der Wert des Datenfeldes "action" muss "Append", "Replace", "Information" oder "Delete" sein', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (401, N'ZVSTA_2022_TECHNICAL', N'AK0001', N'TECHNICAL', N'N', N'N', N'N', N'OK acknowledgment (file) - OK-Quittung (Datei) - Ihre Einreichung ist formal korrekt und wird in die fachlich-inhaltliche Prüfung weitergeleitet.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (402, N'ZVSTA_2022_TECHNICAL', N'AK0002', N'TECHNICAL', N'N', N'N', N'N', N'OK acknowledgment (validation) - OK-Quittung (Meldung) - Ihre Einreichung ist fachlich-inhaltlich korrekt und ist vorläufig angenommen.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (403, N'ZVSTA_2022_TECHNICAL', N'AK0003', N'TECHNICAL', N'N', N'N', N'N', N'OK acknowledgment (plausibility) - OK-Quittung (Meldung Plausi) - Ihre Einreichungen haben alle Plausibilisierungen bestanden', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:28:33.843' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (404, N'ZVSTA_2022_TECHNICAL', N'DN0060', N'TECHNICAL', N'N', N'N', N'N', N'ID of ReportingAgent is unknown for the reported reference period - Die Instituts-ID des meldepflichtigen Instituts ist für den angegebenen Meldezeitraum unbekannt. Ablehnung der Datei.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (405, N'ZVSTA_2022_TECHNICAL', N'DN0061_DE', N'TECHNICAL', N'N', N'N', N'N', N'Entities (RA-Submitter) reported in ZVS not existing in expected reporting population - Die Meldung erfolgt nicht durch den vorgesehenen Einreicher. Bei Abweichung von Berichtspflichtigem und Einreicher ist der Bundesbank vorab eine Zurechnungserklärung zum berechtigten Einreicher zu übermitteln. Ablehnung der Datei.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (406, N'ZVSTA_2022_TECHNICAL', N'DN0070_DE2', N'TECHNICAL', N'N', N'N', N'N', N'current date ist not valid or it should be Month([Reference date]) <= Month([current date]) - Der Meldetermin ist ungültig bzw. Dateien für eine Meldeperiode werden ab dem 1. Tag des Monats des Stichtags akzeptiert. Dies gilt auch für Fehlanzeigen. Ablehnung der Datei.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (407, N'ZVSTA_2022_TECHNICAL', N'FL0001', N'TECHNICAL', N'N', N'N', N'N', N'File passes Decompression process - Die ZIP-Datei konnte nicht entpackt und ausgelesen werden. Bei Fehlschlag, Ablehnung der Datei.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (408, N'ZVSTA_2022_TECHNICAL', N'FL1000', N'TECHNICAL', N'N', N'N', N'N', N'File failed schema validation - Fehler im eingereichten Format, invalides XML. Datei wird abgewiesen.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (409, N'ZVSTA_2022_TECHNICAL', N'FL0020', N'TECHNICAL', N'N', N'N', N'N', N'The field Header/ID must be varchar(255) - Die Message-ID darf nicht länger als 255 Zeichen sein. Ablehnung der Datei.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (410, N'ZVSTA_2022_TECHNICAL', N'FL0041_DE', N'TECHNICAL', N'N', N'N', N'N', N'The File Header/ID is equal to the File Header/ID of another already received and processed in the system - Falls bereits eine Datei mit identischem File Header (Message ID) eingereicht wurde, wird die Datei abgelehnt und muss erneut eingereicht werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:29:50.847' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (411, N'ZVSTA_2022_TECHNICAL', N'FL0046_DE', N'TECHNICAL', N'N', N'N', N'N', N'The filename must follow the format given in the technical reporting instructions - Der Dateiname muss dem in der Technischen Spezifikation vorgeschriebenem Format entsprechen. Die Datei wird abgelehnt und muss erneut eingereicht werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:29:53.107' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (412, N'ZVSTA_2022_TECHNICAL', N'FL0048_DE', N'TECHNICAL', N'N', N'N', N'N', N'Too many remarks or errors in the report. Please correct and report again. - Bei einer zu großen Anzahl von Validierungs- oder Plausibilisierungsfehlern wird das Schreiben der Rückmeldung abgebrochen. In der Rückmeldung sind nur die bis zum Abbruch geschriebenen Validierungs- bzw. Plausibilisierungsfehler enthalten. Datensätze werden dadurch abgelehnt.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:29:54.267' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (413, N'ZVSTA_2022_TECHNICAL', N'FL0050_DE', N'TECHNICAL', N'N', N'N', N'N', N'File received for certain (Reference period, RA) when the last file processed for the same (Reference period, RA) was not a / was a full submission and with older timestamp. - Überprüft, dass eine vom gleichen Berichtspflichtigen zum gleichen Meldestichtag eingereichte Datei nicht einen älteren Erstellungszeitpunkt aufweisen darf, als eine bereits im System angekommene Einreichungsdatei. Die Datei wird abgelehnt und muss erneut eingereicht werden.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:29:58.540' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (414, N'ZVSTA_2022_TECHNICAL', N'FL0051_DE', N'TECHNICAL', N'N', N'N', N'N', N'File received with SBMSSN_TYP=CHANGE is not allowed until there is a processed file with SBMSSN_TYP=FULL_REPLACEMENT - Der Fehler überprüft, dass ein Template der Einreichungsart CHANGE für einen Meldetermin erst eingereicht werden kann, wenn bereits ein Template desselben Typs mit den Einreichungsarten FULL_REPLACEMENT (Vollmeldung) eingereicht wurde. Andernfalls wird die Datei abgelehnt.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:30:05.600' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (415, N'ZVSTA_2022_TECHNICAL', N'FL1051_DE', N'TECHNICAL', N'N', N'N', N'N', N'File received with SRVY_ID=CNFRMTN is not allowed until there is a processed file with SBMSSN_TYP=FULL_REPLACEMENT - Der Fehler überprüft, dass ein Template der Einreichungsart CNFRMTN für einen Meldetermin erst eingereicht werden kann, wenn bereits ein Template desselben Typs mit den Einreichungsarten FULL_REPLACEMENT (Vollmeldung) eingereicht wurde. Andernfalls wird die Datei abgelehnt.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:30:12.537' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (416, N'ZVSTA_2022_TECHNICAL', N'FL0998_DE', N'TECHNICAL', N'N', N'N', N'N', N'File received with Test=true in live environment or Test=false in test environment - Testdateien können lediglich in der Testumgebung eingereicht werden. Testmeldungen in der Produktionsumgebung und Produktionsmeldungen in der Testumgebung werden abgelehnt.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:30:14.900' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (417, N'ZVSTA_2022_TECHNICAL', N'MM-[Cube_id]-[Variable_ID]', N'TECHNICAL', N'N', N'N', N'N', N'Missing Mandatory variables - Alle Schlüsselattribute (Key) eines jeden Datensatzes in der [Cube-ID] müssen gemeldet werden. Ein nicht wohldefinierter Datensatz wird abgelehnt. Abgelehnte Datensätze müssen korrigiert und neu eingereicht werden', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:30:31.460' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (418, N'ZVSTA_2022_TECHNICAL', N'DN1000', N'TECHNICAL', N'N', N'N', N'N', N'File received with wrong SBMSSN_TYP - Falscher Submission Type wurde gemeldet. Ablehnung der Datei.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:30:35.283' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (419, N'ZVSTA_2022_TECHNICAL', N'DN1010', N'TECHNICAL', N'N', N'N', N'N', N'File received with SBMSSN_TYP=NO_REPORT is unexpected - Es wird für dieses meldepflichtige Institut keine Fehlanzeige erwartet. Ablehnung der Datei.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:30:38.257' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (420, N'ZVSTA_2022_TECHNICAL', N'DN1011', N'TECHNICAL', N'N', N'N', N'N', N'Dataset records are unexpected in a file received with SBMSSN_TYP=NO_REPORT - Bei Fehlanzeige dürfen keine Meldepositionen gemeldet werden. Ablehnung der Datei.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:30:44.600' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (421, N'ZVSTA_2022_TECHNICAL', N'DN1020-[Cube_id]', N'TECHNICAL', N'N', N'N', N'N', N'File received with [Cube_ID] which don''t match to the reported SRVY_ID - Die Periodizität der Meldung passt nicht zu den enthaltenen ZVS-Meldeschemata. Ablehnung der Datei.', NULL, N'Y', N'Modified', N'papasp', CAST(N'2022-03-09T10:31:12.967' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (422, N'ZVSTA_2022_TECHNICAL', N'DI-[Cube_id]', N'TECHNICAL', N'N', N'N', N'N', N'Combination of key records in [Cube_ID] are not allowed - Ungültige Kombination von Schlüsselattributen eines Datensatzes. Ablehnung der Datei.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (423, N'ZVSTA_2022_TECHNICAL', N'UQ-[Cube_id]', N'TECHNICAL', N'N', N'N', N'N', N'Key of the record reported in [Cube_ID] is unique - Überprüft, ob das Schlüsselattribut oder die Schlüsselattribute in der [Cube_ID], z.B. PSTN + AREA in BBK_ACCNTS_C eindeutig sind. 
Nicht eindeutige Datensätze führen zu einer Ablehnung der Datei. Abgelehnte Dateien müssen korrigiert und neu eingereicht werden.', NULL, N'Y', NULL, NULL, NULL)
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (424, N'ZVSTA_2022_H', N'INTERNAL_1', N'SUM', N'ZVS5.2', N'ZVS5.2', N'ZVS5.2 POSITIONS=4 Items', N'All Positions in ZVS5.2 should be have 4 Datarows (W0->Country,Country <->W0,Country<-->Country)', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''<CurrentZVSTA_Report>''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

DECLARE @TOTALS_CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
PositionNr Nvarchar(50) NULL)

INSERT @TOTALS_CHECK_TABLE
(PositionNr)
SELECT PositionNr from @CHECK_TABLE
GROUP BY PositionNr  HAVING COUNT(*)<>4

 IF
 (Select COUNT(ID) from @TOTALS_CHECK_TABLE)<>0
 BEGIN 
 SELECT ''N'' As CheckResult
 END
 ELSE
 BEGIN 
 SELECT ''Y'' As CheckResult
 END', N'Y', N'Added', N'papasp', CAST(N'2022-03-04T14:06:51.283' AS DateTime))
GO
INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] ([ID], [ZVSTA_Schema], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityTermStatus], [LastAction], [LastUpdateUser], [LastUpdateDate]) VALUES (425, N'ZVSTA_2022_TECHNICAL', N'DN1012', N'TECHNICAL', N'N', N'N', N'File received without any Dataset records are unexpected.', N'Ihre Meldung wurde technisch abgewiesen, da keine Meldepositionen enthalten sind.', NULL, N'Y', N'Added', N'papasp', CAST(N'2022-03-09T10:31:18.927' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_ProofingRules_Parameter] OFF
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_Reporting] ON 
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4746, N'ZVSTA_2014', N'2021', 1, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'A1', N'Anzahl der Konten für täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''KONTONR TÄGLICH FÄLLIG'',
LTRIM(RTRIM(Str(B.[Client Account],18))),
 <MeldeJahr>,
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 B.[Deal Currency],
 0,
 ''INHOUSE'',
''DE'',
''DE'',
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_ACCOUNTS] B
where 
[Account Status]=''A - ACTIVE'' and [ProductCode] in (''DDPCUR01'',''DDPCUR02'')
and Datepart(yyyy,[OPEN_DATE])<=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4747, N'ZVSTA_2014', N'2021', 2, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'A11', N'   darunter:Anzahl der Online-Konten für täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ONLINE KONTONR TÄGLICH FÄLLIGE EINLAGEN'',
LTRIM(RTRIM(Str(B.[Client Account],18))),
 <MeldeJahr>,
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 B.[Deal Currency],
 0,
 ''INHOUSE'',
''DE'',
''DE'',
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''A11'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_ACCOUNTS] B
where 
[Account Status]=''A - ACTIVE'' and [ProductCode] in (''DDPCUR01'',''DDPCUR02'') and [Online]=''Y''
and Datepart(yyyy,[OPEN_DATE])<=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4748, N'ZVSTA_2014', N'2021', 3, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'A12', N'   darunter:Anzahl der Konten für übertragbare, täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
          ,[MsgSenderCountry]
          ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''KONTONR TÄGLICH FÄLLIG ÜBERTRAGBAR'',
LTRIM(RTRIM(Str(B.[Client Account],18))),
 <MeldeJahr>,
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 B.[Deal Currency],
 0,
 ''INHOUSE'',
''DE'',
''DE'',
(Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''A12'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_ACCOUNTS] B
where 
[Account Status]=''A - ACTIVE'' and [ProductCode] in (''DDPCUR01'',''DDPCUR02'')
and Datepart(yyyy,[OPEN_DATE])<=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4749, N'ZVSTA_2014', N'2021', 4, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'A121', N'       darunter:Anzahl der Online-Konten für übertragbare, täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ONLINE KONTONR TÄGLICH FÄLLIG ÜBERTRAGBAR'',
LTRIM(RTRIM(Str(B.[Client Account],18))),
 <MeldeJahr>,
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 (Select Max([GL_Rep_Date]) from [CUSTOMER_VOLUMES] where Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>),
 B.[Deal Currency],
 0,
 ''INHOUSE'',
''DE'',
''DE'',
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''A121'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_ACCOUNTS] B
where 
[Account Status]=''A - ACTIVE'' and [ProductCode] in (''DDPCUR01'',''DDPCUR02'') and [Online]=''Y''
and Datepart(yyyy,[OPEN_DATE])<=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4750, N'ZVSTA_2014', N'2021', 5, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet -  Gesamt)', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET GESAMT'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'') and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and [PaymentYear]=<MeldeJahr>
--Plus:Payments from Banks (not EU Country) forwarded to Domestic Banks
Union All
SELECT
 ''ÜBERWEISUNG GESENDET INLAND'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MsgSenderCountry] not in (Select [COUNTRY CODE] from [COUNTRIES] where [EU EEA]=''EU'')
and [MTTYPE] in (''103'')  and [TransactionType] in (''From Vostro Outward Remittance'') and [Status]=''Complete'' and [ReceivingBankCountryCode]=''DE'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4751, N'ZVSTA_2014', N'2021', 6, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - Inland)', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET INLAND'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''DE'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and [ReceivingBankCountryCode]=''DE'' and [PaymentYear]=<MeldeJahr>
--Plus:Payments from Banks (not EU Country) forwarded to Domestic Banks
Union All
SELECT
 ''ÜBERWEISUNG GESENDET INLAND'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''DE'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MsgSenderCountry] not in (Select [COUNTRY CODE] from [COUNTRIES] where [EU EEA]=''EU'')
and [MTTYPE] in (''103'')  and [TransactionType] in (''From Vostro Outward Remittance'') and [Status]=''Complete'' and [ReceivingBankCountryCode]=''DE'' and [PaymentYear]=<MeldeJahr>
', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4752, N'ZVSTA_2014', N'2021', 7, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - außerhalb EU)', N'TO', N'U9', N'Rest der Welt (außerhalb des EWR)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET AUSSERHALB EU'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''U9'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'') and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and 
[ReceivingBankCountryCode] not in (Select [COUNTRY CODE] from [COUNTRIES] where [EU EEA]=''EU'') and [Status]=''Complete'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4753, N'ZVSTA_2014', N'2021', 8, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4754, N'ZVSTA_2014', N'2021', 9, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'AX', N'ALAND ISLANDS', N'FI', N'FINLAND', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4755, N'ZVSTA_2014', N'2021', 10, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4756, N'ZVSTA_2014', N'2021', 11, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'BG', N'BULGARIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4757, N'ZVSTA_2014', N'2021', 12, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'BL', N'SAINT BARTHÉLEMY', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4758, N'ZVSTA_2014', N'2021', 13, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'CY', N'CYPRUS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4759, N'ZVSTA_2014', N'2021', 14, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'CZ', N'CZECH REPUBLIC', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4760, N'ZVSTA_2014', N'2021', 15, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'DK', N'DENMARK', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4761, N'ZVSTA_2014', N'2021', 16, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'EE', N'ESTONIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4762, N'ZVSTA_2014', N'2021', 17, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'ES', N'SPAIN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4763, N'ZVSTA_2014', N'2021', 18, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'FI', N'FINLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4764, N'ZVSTA_2014', N'2021', 19, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4765, N'ZVSTA_2014', N'2021', 20, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'GF', N'FRENCH GUIANA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4766, N'ZVSTA_2014', N'2021', 21, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'GP', N'GUADELOUPE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4767, N'ZVSTA_2014', N'2021', 22, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4768, N'ZVSTA_2014', N'2021', 23, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'HR', N'CROATIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4769, N'ZVSTA_2014', N'2021', 24, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'HU', N'HUNGARY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4770, N'ZVSTA_2014', N'2021', 25, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'IE', N'IRELAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4771, N'ZVSTA_2014', N'2021', 26, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'IS', N'ICELAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4772, N'ZVSTA_2014', N'2021', 27, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4773, N'ZVSTA_2014', N'2021', 28, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'LI', N'LIECHTENSTEIN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4774, N'ZVSTA_2014', N'2021', 29, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4775, N'ZVSTA_2014', N'2021', 30, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'LU', N'LUXEMBOURG', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4776, N'ZVSTA_2014', N'2021', 31, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4777, N'ZVSTA_2014', N'2021', 32, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'MC', N'MONACO', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4778, N'ZVSTA_2014', N'2021', 33, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'MF', N'SAINT MARTIN (FRENCH PART)', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4779, N'ZVSTA_2014', N'2021', 34, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'MQ', N'MARTINIQUE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4780, N'ZVSTA_2014', N'2021', 35, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'MT', N'MALTA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4781, N'ZVSTA_2014', N'2021', 36, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4782, N'ZVSTA_2014', N'2021', 37, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'NO', N'NORWAY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4783, N'ZVSTA_2014', N'2021', 38, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4784, N'ZVSTA_2014', N'2021', 39, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'PM', N'SAINT PIERRE AND MIQUELON', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4785, N'ZVSTA_2014', N'2021', 40, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4786, N'ZVSTA_2014', N'2021', 41, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'RE', N'REUNION', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4787, N'ZVSTA_2014', N'2021', 42, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4788, N'ZVSTA_2014', N'2021', 43, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'SE', N'SWEDEN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4789, N'ZVSTA_2014', N'2021', 44, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'SI', N'SLOVENIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4790, N'ZVSTA_2014', N'2021', 45, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'SK', N'SLOVAKIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4791, N'ZVSTA_2014', N'2021', 46, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Gesendet - ins EU-Ausland)', N'TO', N'YT', N'MAYOTTE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET EU LAND: <EU_LAND>'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'')  and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and 
[ReceivingBankCountryCode]=''<EU_LAND>'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4792, N'ZVSTA_2014', N'2021', 47, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21', N'Überweisungen (Empfangen - Ausland)', N'FROM', N'Z9', N'Ausland', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG EMPFANGEN AUSLAND'',
 B.[OurReference],
 <MeldeJahr>,
 B.[ValueDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''INCOMING'',
B.[MsgSenderCountry],
B.[MsgBenefCountry],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode]=''Z9'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS IN] B
where 
[MTTYPE] in (''103'',''103-CT-SEPA'') and 
[MsgSenderCountry] not in (''DE'') and [AccountOfInstitution] in (''PCBCDEFFXXX'',''PCBCDEFF'') and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4793, N'ZVSTA_2014', N'2021', 48, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I211', N'    Überweisungen (Gesendet) davon:beleghaft initiert', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET BELEGHAFT'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I211''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'') and [TransactionType] in (''From Manual input'') and [Status]=''Complete'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4794, N'ZVSTA_2014', N'2021', 49, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I212', N'    Überweisungen (Gesendet) davon:beleglos initiert', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET BELEGLOS'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I212''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'') and [TransactionType] in (''From Electronic Banking'') and [Status]=''Complete'' and [PaymentYear]=<MeldeJahr>
-----SWIFTS FROM NOT EU COUNTRIES FOR DOMESTIC CUSTOMERS
Union All
SELECT
 ''ÜBERWEISUNG GESENDET BELEGLOS'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I212'' and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MsgSenderCountry] not in (Select [COUNTRY CODE] from [COUNTRIES] where [EU EEA]=''EU'')
and [MTTYPE] in (''103'')  and [TransactionType] in (''From Vostro Outward Remittance'') and [Status]=''Complete'' and [ReceivingBankCountryCode]=''DE'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4795, N'ZVSTA_2014', N'2021', 50, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I2122', N'        Überweisungen (Gesendet) - beleglos initiert - davon: initiert als Einzelüberweisung', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET BELEGLOS EINZELN'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I2122''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'') and [TransactionType] in (''From Electronic Banking'') and [Status]=''Complete'' and [PaymentYear]=<MeldeJahr>
---SWIFT FROM NON EU COUNTRIES FOR DOMESTIC CUSTOMERS
Union All
SELECT
 ''ÜBERWEISUNG GESENDET BELEGLOS EINZELN'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I2122''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MsgSenderCountry] not in (Select [COUNTRY CODE] from [COUNTRIES] where [EU EEA]=''EU'')
and [MTTYPE] in (''103'')  and [TransactionType] in (''From Vostro Outward Remittance'') and [Status]=''Complete'' and [ReceivingBankCountryCode]=''DE'' and [PaymentYear]=<MeldeJahr>
', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4796, N'ZVSTA_2014', N'2021', 51, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I21001', N'    Überweisungen (Gesendet) darunter: nicht - SEPA', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''ÜBERWEISUNG GESENDET NICHT-SEPA'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21001''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MTTYPE] in (''103'') and [TransactionType] in (''From Manual input'',''From Electronic Banking'') and [Status]=''Complete'' and [PaymentYear]=<MeldeJahr>
----SWIFT FROM NON-EU COUNTRIES FOR DOMESTIC CUSTOMERS
Union All
SELECT
  ''ÜBERWEISUNG GESENDET NICHT-SEPA'',
 B.[OurReference],
 <MeldeJahr>,
 B.[RegisterDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''OUTGOING'',
B.[MsgSenderCountry],
B.[ReceivingBankCountryCode],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21001''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS OUT] B
where 
[MsgSenderCountry] not in (Select [COUNTRY CODE] from [COUNTRIES] where [EU EEA]=''EU'')
and [MTTYPE] in (''103'')  and [TransactionType] in (''From Vostro Outward Remittance'') and [Status]=''Complete'' and [ReceivingBankCountryCode]=''DE'' and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4797, N'ZVSTA_2014', N'2021', 52, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T2.I22', N'Lastschriften (Empfangen - Ausland)', N'FROM', N'Z9', N'Ausland', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''LASTSCHRIFT EMPFANGEN AUSLAND'',
 B.[OurReference],
 <MeldeJahr>,
 B.[ValueDate],
 B.[ValueDate],
 B.[Currency],
 B.[Amount],
 ''INCOMING'',
B.[MsgSenderCountry],
B.[MsgBenefCountry],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I22'' and [LandCode]=''Z9'' and [MeldeJahr]=<MeldeJahr>)
from [GMPS PAYMENTS IN] B
where 
[MTTYPE] in (''103-DD-SEPA'') and 
[MsgSenderCountry] not in (''DE'') and [AccountOfInstitution] in (''PCBCDEFFXXX'',''PCBCDEFF'') and [PaymentYear]=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4798, N'ZVSTA_2014', N'2021', 53, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - Gesamt)', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET GESAMT'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''A1'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4799, N'ZVSTA_2014', N'2021', 54, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - Inland)', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET INLAND'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''DE'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank] in (''DE'') and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4800, N'ZVSTA_2014', N'2021', 55, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - außerhalb EU)', N'TO', N'U9', N'Rest der Welt (außerhalb des EWR)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET AUSSERHALB EU'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''U9'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]  not in (Select [COUNTRY CODE] from [COUNTRIES] where [EU EEA]=''EU'') and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4801, N'ZVSTA_2014', N'2021', 56, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4802, N'ZVSTA_2014', N'2021', 57, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'AX', N'ALAND ISLANDS', N'FI', N'FINLAND', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4803, N'ZVSTA_2014', N'2021', 58, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4804, N'ZVSTA_2014', N'2021', 59, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'BG', N'BULGARIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4805, N'ZVSTA_2014', N'2021', 60, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'BL', N'SAINT BARTHÉLEMY', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4806, N'ZVSTA_2014', N'2021', 61, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'CY', N'CYPRUS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4807, N'ZVSTA_2014', N'2021', 62, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'CZ', N'CZECH REPUBLIC', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4808, N'ZVSTA_2014', N'2021', 63, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'DK', N'DENMARK', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4809, N'ZVSTA_2014', N'2021', 64, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'EE', N'ESTONIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4810, N'ZVSTA_2014', N'2021', 65, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'ES', N'SPAIN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4811, N'ZVSTA_2014', N'2021', 66, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'FI', N'FINLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4812, N'ZVSTA_2014', N'2021', 67, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4813, N'ZVSTA_2014', N'2021', 68, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'GF', N'FRENCH GUIANA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4814, N'ZVSTA_2014', N'2021', 69, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'GP', N'GUADELOUPE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4815, N'ZVSTA_2014', N'2021', 70, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4816, N'ZVSTA_2014', N'2021', 71, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'HR', N'CROATIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4817, N'ZVSTA_2014', N'2021', 72, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'HU', N'HUNGARY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4818, N'ZVSTA_2014', N'2021', 73, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'IE', N'IRELAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4819, N'ZVSTA_2014', N'2021', 74, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'IS', N'ICELAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4820, N'ZVSTA_2014', N'2021', 75, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4821, N'ZVSTA_2014', N'2021', 76, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'LI', N'LIECHTENSTEIN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4822, N'ZVSTA_2014', N'2021', 77, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4823, N'ZVSTA_2014', N'2021', 78, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'LU', N'LUXEMBOURG', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4824, N'ZVSTA_2014', N'2021', 79, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4825, N'ZVSTA_2014', N'2021', 80, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'MC', N'MONACO', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4826, N'ZVSTA_2014', N'2021', 81, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'MF', N'SAINT MARTIN (FRENCH PART)', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4827, N'ZVSTA_2014', N'2021', 82, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'MQ', N'MARTINIQUE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4828, N'ZVSTA_2014', N'2021', 83, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'MT', N'MALTA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4829, N'ZVSTA_2014', N'2021', 84, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4830, N'ZVSTA_2014', N'2021', 85, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'NO', N'NORWAY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4831, N'ZVSTA_2014', N'2021', 86, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4832, N'ZVSTA_2014', N'2021', 87, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'PM', N'SAINT PIERRE AND MIQUELON', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4833, N'ZVSTA_2014', N'2021', 88, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4834, N'ZVSTA_2014', N'2021', 89, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'RE', N'REUNION', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4835, N'ZVSTA_2014', N'2021', 90, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4836, N'ZVSTA_2014', N'2021', 91, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'SE', N'SWEDEN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4837, N'ZVSTA_2014', N'2021', 92, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'SI', N'SLOVENIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4838, N'ZVSTA_2014', N'2021', 93, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'SK', N'SLOVAKIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4839, N'ZVSTA_2014', N'2021', 94, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Gesendet - ins EU- Ausland)', N'TO', N'YT', N'MAYOTTE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS GESENDET EU LAND:<EU_LAND>'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''OUTGOING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''<EU_LAND>'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''EXPORT'' and
[CountryDrawerBank] in (''DE'') and [CountryDraweeBank]=''<EU_LAND>'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4840, N'ZVSTA_2014', N'2021', 95, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0.I24', N'Schecks (Empfangen - Ausland)', N'FROM', N'Z9', N'Ausland', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''SCHECKS EMPFANGEN AUSLAND'',
 B.[ChequeNo],
 <MeldeJahr>,
 B.[IncomingDate],
 B.[IncomingDate],
 B.[ChequeCurrency],
 B.[ChequeAmount],
 ''INCOMING'',
B.[CountryDrawerBank],
B.[CountryDraweeBank],
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I24''  and [LandCode]=''Z9'' and [MeldeJahr]=<MeldeJahr>)
from [CHEQUE_COLLECTIONS] B
where [Import_Export_Cheque]=''IMPORT'' and
[CountryDrawerBank] not in (''DE'') and [CountryDraweeBank] in (''DE'') and [ChequeSettlement]=''INHOUSE'' and  Datepart(yyyy,[IncomingDate])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4841, N'ZVSTA_2014', N'2021', 96, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSAKTIONEN (Gesendet - Gesamt)', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''A1'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''A1'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''A1'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''A1'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''A1'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''A1'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4842, N'ZVSTA_2014', N'2021', 97, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - Inland)', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''DE'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''DE'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''DE'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''DE'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''DE'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''DE'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4843, N'ZVSTA_2014', N'2021', 98, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - außerhalb EU)', N'TO', N'U9', N'Rest der Welt (außerhalb des EWR)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''U9'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''U9'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''U9'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''U9'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''U9'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''U9'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4844, N'ZVSTA_2014', N'2021', 99, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4845, N'ZVSTA_2014', N'2021', 100, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'AX', N'ALAND ISLANDS', N'FI', N'FINLAND', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4846, N'ZVSTA_2014', N'2021', 101, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4847, N'ZVSTA_2014', N'2021', 102, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'BG', N'BULGARIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4848, N'ZVSTA_2014', N'2021', 103, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'BL', N'SAINT BARTHÉLEMY', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4849, N'ZVSTA_2014', N'2021', 104, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'CY', N'CYPRUS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4850, N'ZVSTA_2014', N'2021', 105, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'CZ', N'CZECH REPUBLIC', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4851, N'ZVSTA_2014', N'2021', 106, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'DK', N'DENMARK', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4852, N'ZVSTA_2014', N'2021', 107, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'EE', N'ESTONIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4853, N'ZVSTA_2014', N'2021', 108, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'ES', N'SPAIN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4854, N'ZVSTA_2014', N'2021', 109, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'FI', N'FINLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4855, N'ZVSTA_2014', N'2021', 110, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4856, N'ZVSTA_2014', N'2021', 111, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'GF', N'FRENCH GUIANA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4857, N'ZVSTA_2014', N'2021', 112, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'GP', N'GUADELOUPE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4858, N'ZVSTA_2014', N'2021', 113, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4859, N'ZVSTA_2014', N'2021', 114, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'HR', N'CROATIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4860, N'ZVSTA_2014', N'2021', 115, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'HU', N'HUNGARY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4861, N'ZVSTA_2014', N'2021', 116, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'IE', N'IRELAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4862, N'ZVSTA_2014', N'2021', 117, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'IS', N'ICELAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4863, N'ZVSTA_2014', N'2021', 118, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4864, N'ZVSTA_2014', N'2021', 119, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'LI', N'LIECHTENSTEIN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4865, N'ZVSTA_2014', N'2021', 120, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4866, N'ZVSTA_2014', N'2021', 121, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'LU', N'LUXEMBOURG', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4867, N'ZVSTA_2014', N'2021', 122, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4868, N'ZVSTA_2014', N'2021', 123, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'MC', N'MONACO', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4869, N'ZVSTA_2014', N'2021', 124, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'MF', N'SAINT MARTIN (FRENCH PART)', N'FR', N'FRANCE', NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4870, N'ZVSTA_2014', N'2021', 125, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'MQ', N'MARTINIQUE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4871, N'ZVSTA_2014', N'2021', 126, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'MT', N'MALTA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4872, N'ZVSTA_2014', N'2021', 127, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4873, N'ZVSTA_2014', N'2021', 128, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'NO', N'NORWAY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4874, N'ZVSTA_2014', N'2021', 129, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4875, N'ZVSTA_2014', N'2021', 130, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'PM', N'SAINT PIERRE AND MIQUELON', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4876, N'ZVSTA_2014', N'2021', 131, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4877, N'ZVSTA_2014', N'2021', 132, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'RE', N'REUNION', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4878, N'ZVSTA_2014', N'2021', 133, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4879, N'ZVSTA_2014', N'2021', 134, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'SE', N'SWEDEN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4880, N'ZVSTA_2014', N'2021', 135, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'SI', N'SLOVENIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4881, N'ZVSTA_2014', N'2021', 136, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'SK', N'SLOVAKIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4882, N'ZVSTA_2014', N'2021', 137, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSATIONEN (Gesendet - ins EU-Ausland)', N'TO', N'YT', N'MAYOTTE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''<EU_LAND>'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4883, N'ZVSTA_2014', N'2021', 138, N'ZVS4', N'NUTZUNG BARGELDLOSER ZAHLUNGSINSTRUMENETE DURCH NICHT-ZAHLUNGSDIENSTLEISTER', N'T0', N'GESAMTZAHL ALLER ZAHLUNGSTRANSAKTIONEN (Empfangen - Ausland)', N'FROM', N'Z9', N'Ausland', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'Select * from [ZVSTAT_Meldepositionen_from2014] where [MeldeJahr]=<MeldeJahr>
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Anzahl]=(Select sum (s) from
(Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I22'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Anzahl] as s from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr> end
BEGIN UPDATE [ZVSTAT_Meldepositionen_from2014] SET [Wert]=(Select sum (w) from
(Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I21'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I22'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr>
Union all
Select [Wert] as w from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T0.I24'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr>)q)
where [PositionNr]=''T0'' and [LandCode] in (''Z9'') and [MeldeJahr]=<MeldeJahr> end', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4884, N'ZVSTA_2014', N'2021', 139, N'ZVS8', N'WEITERE ZAHLUNGSTRANSAKTIONEN MIT NICHT-ZAHLUNGSDIENSTLEISTERN', N'T2.I241', N'Kontogutschriften durch einfache Buchungen', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''EINFACHE KONTO GUTSCHRIFT'',
''Description''=CASE when B.[Description] is not NULL or B.[Description]<>'''' then LTRIM(RTRIM(Str(B.[AccountNo],18)))+ ''  '' + B.[Description] else LTRIM(RTRIM(Str(B.[AccountNo],18))) end,
 <MeldeJahr>,
 B.[GL_Rep_Date],
 B.[Value Date],
 B.[CCY],
 B.[Amount],
 ''INHOUSE'',
''DE'',
''DE'',
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I241'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_VOLUMES] B
where [AmountInEuro]>0 and 
([Description] like''CL DRAWDOWN%'' or [Description] like ''INTEREST ON A/C%''  or [Description] like ''FX%'' or [Description] like ''%TRANSFER DEPOSIT%'')  and Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>
UNION ALL
SELECT
 ''EINFACHE KONTO GUTSCHRIFT'',
LTRIM(RTRIM(Str(B.[AccountNo],18))),
 <MeldeJahr>,
 B.[GL_Rep_Date],
 B.[Value Date],
 B.[CCY],
 B.[Amount],
 ''INHOUSE'',
''DE'',
''DE'',
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I241'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_VOLUMES] B
where [AmountInEuro]>0 and 
[Description] is NULL and BatchNo not like ''%BALANCE%''  and Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (4885, N'ZVSTA_2014', N'2021', 140, N'ZVS8', N'WEITERE ZAHLUNGSTRANSAKTIONEN MIT NICHT-ZAHLUNGSDIENSTLEISTERN', N'T2.I242', N'Kontobelastungen durch einfache Buchungen', N'TO', N'A1', N'Gesendet GESAMT', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 0, 0, N'INSERT INTO [ZVSTAT_Details_from2014]
           ([Description]
           ,[Reference]
           ,[ReportYear]
           ,[RegisterDate]
           ,[ValueDate]
           ,[Orig_Cur]
           ,[Orig_Amt]
           ,[Paym_Art]
           ,[MsgSenderCountry]
           ,[MsgReceiverCountry]
           ,[IdMeldepositionen])
SELECT
 ''EINFACHE KONTO BELASTUNG'',
''Description''=CASE when B.[Description] is not NULL or B.[Description]<>'''' then LTRIM(RTRIM(Str(B.[AccountNo],18)))+ ''  '' + B.[Description] else LTRIM(RTRIM(Str(B.[AccountNo],18))) end,
 <MeldeJahr>,
 B.[GL_Rep_Date],
 B.[Value Date],
 B.[CCY],
 ABS(B.[Amount]),
 ''INHOUSE'',
''DE'',
''DE'',
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I242'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_VOLUMES] B
where 
([Description] like''GEB%'' or [Description] like''%GEB%'' or [Description] like''ACF%'' or [Description] like''%Zins%'' or [Description] like''%FX%'' or [Description] like''%CL DRAWDOWN%'') and   [AmountInEuro]<0 and Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>
UNION ALL
SELECT
 ''EINFACHE KONTO BELASTUNG'',
''Description''=CASE when B.[Description] is not NULL or B.[Description]<>'''' then LTRIM(RTRIM(Str(B.[AccountNo],18)))+ ''  '' + B.[Description] else LTRIM(RTRIM(Str(B.[AccountNo],18))) end,
 <MeldeJahr>,
 B.[GL_Rep_Date],
 B.[Value Date],
 B.[CCY],
 ABS(B.[Amount]),
 ''INHOUSE'',
''DE'',
''DE'',
 (Select [ID] from [ZVSTAT_Meldepositionen_from2014] where [PositionNr]=''T2.I242'' and [MeldeJahr]=<MeldeJahr>)
from [CUSTOMER_VOLUMES] B
where 
[Description] is NULL and BatchNo not like ''%BALANCE%''  and   [AmountInEuro]<0 and Datepart(yyyy,[GL_Rep_Date])=<MeldeJahr>', NULL, NULL, N'AUTO', NULL, N'A')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163458, N'ZVSTA_2022_H', N'202206', 1, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'D1', N'Anzahl der Konten für täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 93, 0, N'DECLARE @ZVSTA_REP_ID int=''163458''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''N''
DECLARE @PAYMENT_FLOW nvarchar(50)=''N''
DECLARE @ZVSTA_POSITION nvarchar(50)=''D1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
      WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
	  WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31)) END)
DECLARE @MAX_GL_REPDATE Datetime =(Select Max([BalanceDate]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]<=@ZVSTA_REPORTDATE and [AccountType] in (''Current account''))

DECLARE @ZVSTA_Accounts as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ClientNo] [nvarchar](50) NULL,
	[ClientType] [nvarchar](50) NULL,
	[Client Account] [nvarchar](50) NULL,
	[ClientAccountDomestic] [nvarchar](10) NULL,
	[IBAN] [nvarchar](50) NULL,
	[Deal Currency] [nvarchar](3) NULL,
	[Account Status] [nvarchar](10) NULL,
	[Online] [nvarchar](1) NULL,
	[English Name] [nvarchar](255) NULL,
	[ProductCode] [nvarchar](15) NULL,
	[Currency Status] [nvarchar](10) NULL,
	[Country] [nvarchar](2) NULL,
	[PRD_TYPE] [nvarchar](1) NULL,
	[OPEN_DATE] [datetime] NULL,
	[CLOSE_DATE] [datetime] NULL,
	[Client AccountM] [nvarchar](50) NULL,
	[ClientNoM] [nvarchar](50) NULL) 

INSERT INTO @ZVSTA_Accounts
           ([ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM])
SELECT 
     [ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM]
FROM [CUSTOMER_ACCOUNTS]
where [CLOSE_DATE] is NULL 
and [ClientAccountDomestic] in (Select dbo.RemoveLeadingZeros([AccountNo]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]=@MAX_GL_REPDATE and [AccountType] in (''Current account'') and [LedgerBalance]>0)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Accounts) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Es ist die Anzahl sämtlicher Konten von Nicht-Zahlungsdienstleistern mit täglich fälligen Einlagen 
zu erfassen. Demnach werden Konten, die am letzten Tag der Berichtsperiode einen Sollsaldo 
aufweisen, in dieser Position nicht erfasst. Es handelt sich um die Anzahl der Konten mit Einlagen, 
deren sofortige Umwandlung in Bargeld verlangt werden kann und/oder die jederzeit durch Scheck, 
Überweisung, Last- schrift oder ähnliche Verfügungen übertragbar sind, und zwar ohne nennenswerte 
Verzögerung, Be- schränkung oder Vertragsstrafe.

Beispiele: In diese Position fallen: Girokonten im Guthaben, Konten mit Tagesgeldern und Gelder mit 
täglicher Kündigung im Guthaben (einschließlich der über geschäftsfreie Tage angelegten Gelder mit 
Fälligkeit  oder  Kündigungsmöglichkeit  am  nächsten  Geschäftstag),  Prepaidkarten  mit  
Guthaben,  E- Geldkonten mit Guthaben, Kreditkartenkonten mit Guthaben.

Gegenbeispiele: Es dürfen hier nicht gemeldet werden: Konten, die zum Meldestichtag einen Sollsaldo 
aufweisen (z. B. durch Inanspruchnahme eines Dispositionskredits), Konten mit Kontostand "null", 
Spar- konten mit vereinbarter Kündigungsfrist oder Laufzeit, Kreditkartenkonten im Soll geführt.

Meldepflicht: Diese Position ist von der kontoführenden Stelle zu melden.
Kennung ZVS bis 2021: A1; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163459, N'ZVSTA_2022_H', N'202206', 2, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'D11', N'   darunter:Anzahl der Online-Konten für täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 80, 0, N'DECLARE @ZVSTA_REP_ID int=''163459''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''N''
DECLARE @PAYMENT_FLOW nvarchar(50)=''N''
DECLARE @ZVSTA_POSITION nvarchar(50)=''D11''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
      WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
	  WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31)) END)
DECLARE @MAX_GL_REPDATE Datetime =(Select Max([BalanceDate]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]<=@ZVSTA_REPORTDATE and [AccountType] in (''Current account''))


DECLARE @ZVSTA_Accounts as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ClientNo] [nvarchar](50) NULL,
	[ClientType] [nvarchar](50) NULL,
	[Client Account] [nvarchar](50) NULL,
	[ClientAccountDomestic] [nvarchar](10) NULL,
	[IBAN] [nvarchar](50) NULL,
	[Deal Currency] [nvarchar](3) NULL,
	[Account Status] [nvarchar](10) NULL,
	[Online] [nvarchar](1) NULL,
	[English Name] [nvarchar](255) NULL,
	[ProductCode] [nvarchar](15) NULL,
	[Currency Status] [nvarchar](10) NULL,
	[Country] [nvarchar](2) NULL,
	[PRD_TYPE] [nvarchar](1) NULL,
	[OPEN_DATE] [datetime] NULL,
	[CLOSE_DATE] [datetime] NULL,
	[Client AccountM] [nvarchar](50) NULL,
	[ClientNoM] [nvarchar](50) NULL) 

INSERT INTO @ZVSTA_Accounts
           ([ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM])
SELECT 
     [ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM]
FROM [CUSTOMER_ACCOUNTS]
where  [CLOSE_DATE] is NULL 
and [Online] in (''Y'')
and [ClientAccountDomestic] in (Select dbo.RemoveLeadingZeros([AccountNo]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]=@MAX_GL_REPDATE and [AccountType] in (''Current account'') and [LedgerBalance]>0)


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Accounts) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Position ist die Anzahl der Konten mit täglich fälligen Einlagen von 
Nicht-Zahlungsdienstleis- tern am letzten Tag der Berichtsperiode anzugeben, über die elektronisch 
per Internet, über Online- Banking-Anwendungen oder über Telekommunikationskanäle (z. B. mobile 
Geräte) oder auf vergleich- bare Weise verfügt werden kann, zum Beispiel mittels spezieller 
Softwareprogramme. Unter Online- Konten sind solche zu verstehen, über die auf elektronischem Wege 
direkt, das heißt ohne manuelle Intervention seitens des Instituts, verfügt werden kann.

Beispiele: In diese Position fallen beispielsweise: Konten aus D1, über die mit Online-Banking oder 
über ähnliche Telekommunikationskanäle verfügt werden kann, z.B. Banking-App auf einem Mobilgerät.

Gegenbeispiele: Es sollte nicht die Anzahl der Apps oder zugriffsberechtigten Geräte, sondern die 
An- zahl der Konten gezählt  werden (mehrere Apps könnten auf ein Konto zugreifen oder eine App auf 
mehrere Konten).
Meldepflicht: Diese Position ist von der kontoführenden Stelle zu melden.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163460, N'ZVSTA_2022_H', N'202206', 3, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'D12', N'   darunter:Anzahl der Konten für übertragbare, täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 93, 0, N'DECLARE @ZVSTA_REP_ID int=''163460''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''N''
DECLARE @PAYMENT_FLOW nvarchar(50)=''N''
DECLARE @ZVSTA_POSITION nvarchar(50)=''D12''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
      WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
	  WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31)) END)
DECLARE @MAX_GL_REPDATE Datetime =(Select Max([BalanceDate]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]<=@ZVSTA_REPORTDATE and [AccountType] in (''Current account''))


DECLARE @ZVSTA_Accounts as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ClientNo] [nvarchar](50) NULL,
	[ClientType] [nvarchar](50) NULL,
	[Client Account] [nvarchar](50) NULL,
	[ClientAccountDomestic] [nvarchar](10) NULL,
	[IBAN] [nvarchar](50) NULL,
	[Deal Currency] [nvarchar](3) NULL,
	[Account Status] [nvarchar](10) NULL,
	[Online] [nvarchar](1) NULL,
	[English Name] [nvarchar](255) NULL,
	[ProductCode] [nvarchar](15) NULL,
	[Currency Status] [nvarchar](10) NULL,
	[Country] [nvarchar](2) NULL,
	[PRD_TYPE] [nvarchar](1) NULL,
	[OPEN_DATE] [datetime] NULL,
	[CLOSE_DATE] [datetime] NULL,
	[Client AccountM] [nvarchar](50) NULL,
	[ClientNoM] [nvarchar](50) NULL) 

INSERT INTO @ZVSTA_Accounts
           ([ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM])
SELECT 
     [ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM]
FROM [CUSTOMER_ACCOUNTS]
where  [CLOSE_DATE] is NULL 
and [ClientAccountDomestic] in (Select dbo.RemoveLeadingZeros([AccountNo]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]=@MAX_GL_REPDATE and [AccountType] in (''Current account'') and [LedgerBalance]>0)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Accounts) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'Der Begriff „Konten mit übertragbaren, täglich fälligen Einlagen“ umfasst lediglich Konten mit 
täglich fälligen Einlagen, die jederzeit – das heißt unmittelbar auf Verlangen und ohne 
nennenswerte Verzöge- rung, Beschränkung oder Vertragsstrafe – durch Scheck, Überweisung, 
Lastschrift oder ähnliche Ver- fügungen übertragbar sind.

Beispiele: In diese Position fallen beispielsweise: Konten aus D1, die jederzeit übertragbar sind 
durch Scheck, Überweisung, Lastschrift o.ä., Kreditkartenkonten mit Guthaben.

Gegenbeispiele: Es dürfen hier nicht gemeldet werden: Kreditkonten, Kreditkartenkonten im Soll ge- 
führt, Konten für täglich fällige Einlagen, die Verfügungsbeschränkungen unterliegen 
(beispielsweise Konten mit Guthaben, die nur zur Barabhebung genutzt werden können, bzw. Konten mit 
Guthaben, die nur auf ein bestimmtes Referenzkonto übertragen werden können (z.B. 
Tagesgeldkonten)).

Meldepflicht: Diese Position ist von der kontoführenden Stelle zu melden.
Kennung ZVS bis 2021: A12; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163461, N'ZVSTA_2022_H', N'202206', 4, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'D121', N'       darunter:Anzahl der Online-Konten für übertragbare, täglich fällige Einlagen', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 80, 0, N'DECLARE @ZVSTA_REP_ID int=''163461''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''N''
DECLARE @PAYMENT_FLOW nvarchar(50)=''N''
DECLARE @ZVSTA_POSITION nvarchar(50)=''D121''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
      WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
	  WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31)) END)
DECLARE @MAX_GL_REPDATE Datetime =(Select Max([BalanceDate]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]<=@ZVSTA_REPORTDATE and [AccountType] in (''Current account''))


DECLARE @ZVSTA_Accounts as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ClientNo] [nvarchar](50) NULL,
	[ClientType] [nvarchar](50) NULL,
	[Client Account] [nvarchar](50) NULL,
	[ClientAccountDomestic] [nvarchar](10) NULL,
	[IBAN] [nvarchar](50) NULL,
	[Deal Currency] [nvarchar](3) NULL,
	[Account Status] [nvarchar](10) NULL,
	[Online] [nvarchar](1) NULL,
	[English Name] [nvarchar](255) NULL,
	[ProductCode] [nvarchar](15) NULL,
	[Currency Status] [nvarchar](10) NULL,
	[Country] [nvarchar](2) NULL,
	[PRD_TYPE] [nvarchar](1) NULL,
	[OPEN_DATE] [datetime] NULL,
	[CLOSE_DATE] [datetime] NULL,
	[Client AccountM] [nvarchar](50) NULL,
	[ClientNoM] [nvarchar](50) NULL) 

INSERT INTO @ZVSTA_Accounts
           ([ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM])
SELECT 
     [ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM]
FROM [CUSTOMER_ACCOUNTS]
where [CLOSE_DATE] is NULL 
and [Online] in (''Y'')
and [ClientAccountDomestic] in (Select dbo.RemoveLeadingZeros([AccountNo]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]=@MAX_GL_REPDATE and [AccountType] in (''Current account'') and [LedgerBalance]>0)


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Accounts) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Hier ist die Anzahl der Konten mit übertragbaren, täglich fälligen Einlagen aufzuführen, die für 
Nicht- Zahlungsdienstleister geführt  werden und die  der Kontoinhaber elektronisch über das 
Internet,  über Online-Banking-Anwendungen, über spezielle Software oder über spezielle 
Telekommunikationskanäle abrufen und nutzen kann (siehe Ausführungen Position D11).

Beispiele: In diese Position fallen beispielsweise: Konten aus D12, über die per Online-Banking, 
Ban- king-App oder ähnliche Telekommunikationskanäle verfügt werden kann.

Meldepflicht: Diese Position ist von der kontoführenden Stelle zu melden.
Kennung ZVS bis 2021: A121; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163462, N'ZVSTA_2022_H', N'202206', 5, N'ZVS1', N'INSTITUTE , DIE NICHT-ZAHLUNGSDIENSTLEISTERN ZAHLUNGSDIENSTE ANBIETEN', N'A1', N'Anzahl der Zahlungskonten', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'N', N'N', 138, 0, N'DECLARE @ZVSTA_REP_ID int=''163462''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''N''
DECLARE @PAYMENT_FLOW nvarchar(50)=''N''
DECLARE @ZVSTA_POSITION nvarchar(50)=''A1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
      WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
	  WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31)) END)
DECLARE @MAX_GL_REPDATE Datetime =(Select Max([BalanceDate]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]<=@ZVSTA_REPORTDATE and [AccountType] in (''Current account''))


DECLARE @ZVSTA_Accounts as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ClientNo] [nvarchar](50) NULL,
	[ClientType] [nvarchar](50) NULL,
	[Client Account] [nvarchar](50) NULL,
	[ClientAccountDomestic] [nvarchar](10) NULL,
	[IBAN] [nvarchar](50) NULL,
	[Deal Currency] [nvarchar](3) NULL,
	[Account Status] [nvarchar](10) NULL,
	[Online] [nvarchar](1) NULL,
	[English Name] [nvarchar](255) NULL,
	[ProductCode] [nvarchar](15) NULL,
	[Currency Status] [nvarchar](10) NULL,
	[Country] [nvarchar](2) NULL,
	[PRD_TYPE] [nvarchar](1) NULL,
	[OPEN_DATE] [datetime] NULL,
	[CLOSE_DATE] [datetime] NULL,
	[Client AccountM] [nvarchar](50) NULL,
	[ClientNoM] [nvarchar](50) NULL) 

INSERT INTO @ZVSTA_Accounts
           ([ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM])
SELECT 
     [ClientNo]
           ,[ClientType]
           ,[Client Account]
           ,[ClientAccountDomestic]
           ,[IBAN]
           ,[Deal Currency]
           ,[Account Status]
           ,[Online]
           ,[English Name]
           ,[ProductCode]
           ,[Currency Status]
           ,[Country]
           ,[PRD_TYPE]
           ,[OPEN_DATE]
           ,[CLOSE_DATE]
           ,[Client AccountM]
           ,[ClientNoM]
FROM [CUSTOMER_ACCOUNTS]
where [CLOSE_DATE] is NULL 
and [ClientAccountDomestic] in (Select dbo.RemoveLeadingZeros([AccountNo]) from [CUSTOMER_ACC_BALANCES] where [BalanceDate]=@MAX_GL_REPDATE and [AccountType] in (''Current account''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Accounts) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'„Zahlungskonto“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 12  der  Richtlinie (EU)  
2015/2366: "Ein auf den Namen eines oder mehrerer Zahlungsdienstnutzer(s) lautendes Konto, das für 
die Ausfüh- rung von Zahlungsvorgängen genutzt wird".

Beispiele: In diese Position fallen beispielsweise: Konten mit übertragbaren, täglich fälligen 
Einlagen (D12), Konten für übertragbare, täglich fällige Einlagen ohne Guthaben oder im Soll, 
Kreditkartenkonten, E-Geldkonten (A2).

Gegenbeispiele: Es dürfen hier nicht gemeldet werden: Sparkonten, Konten, die für täglich fällige 
(aber nicht  übertragbare)  Einlagen  geführt  werden  ohne  Zahlungsfunktion  (z.B.  Tagesgeld),  
Kreditkonten, Kreditkartenkonten, auf die lediglich zur Tilgung überwiesen wird.

Meldepflicht: Diese Position ist von der kontoführenden Stelle zu melden.
Kennung ZVS bis 2021: A2; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163463, N'ZVSTA_2022_H', N'202206', 6, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet -  Gesamt)', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 1173, 22328765.969999991, N'DECLARE @ZVSTA_REP_ID int=''163463''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163464, N'ZVSTA_2022_H', N'202206', 7, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''163464''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163466, N'ZVSTA_2022_H', N'202206', 9, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''163466''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163471, N'ZVSTA_2022_H', N'202206', 14, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 1092, 21351143.329999991, N'DECLARE @ZVSTA_REP_ID int=''163471''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163479, N'ZVSTA_2022_H', N'202206', 22, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''163479''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163484, N'ZVSTA_2022_H', N'202206', 27, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''163484''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163486, N'ZVSTA_2022_H', N'202206', 29, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''163486''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163488, N'ZVSTA_2022_H', N'202206', 31, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''163488''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163493, N'ZVSTA_2022_H', N'202206', 36, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''163493''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163495, N'ZVSTA_2022_H', N'202206', 38, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''163495''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163497, N'ZVSTA_2022_H', N'202206', 40, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''163497''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163499, N'ZVSTA_2022_H', N'202206', 42, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (Gesendet - EU und EWG)', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''163499''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'',''From Inward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163505, N'ZVSTA_2022_H', N'202206', 48, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.1', N'    Überweisungen (Gesendet) davon:beleghaft ausgelöst', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 58, 12126449.409999995, N'DECLARE @ZVSTA_REP_ID int=''163505''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Eine Überweisung, die vom Zahler in Papierform oder durch Anweisung am Schalter einer Bank zur 
Durchführung einer Überweisung ausgelöst wird, sowie alle sonstigen Überweisungen, die manuell be- 
arbeitet werden.

Beispiele: Überweisung in Papierform /mit Durchdruck (z.B. Überweisungsträger), am Bankschalter ab- 
gegeben oder postalisch versandt, von Mitarbeitern eines Zahlungsdienstleisters mit manuellem 
Eingriff in elektronische Überweisungen umgewandelt

Gegenbeispiele:  eingereichte  Datenträger  mit  unterschriebenem  Auftrag  (PCT.3),  
Telefonbanking (PCT.3), online oder per App ausgelöste Überweisungen

Meldepflicht: Überweisung auslösendes Institut

Kennung ZVS bis 2021: T2.I211; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163513, N'ZVSTA_2022_H', N'202206', 56, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.1', N'    Überweisungen (Gesendet) davon:beleghaft ausgelöst', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 58, 12126449.409999995, N'DECLARE @ZVSTA_REP_ID int=''163513''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Manual input'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'Eine Überweisung, die vom Zahler in Papierform oder durch Anweisung am Schalter einer Bank zur 
Durchführung einer Überweisung ausgelöst wird, sowie alle sonstigen Überweisungen, die manuell be- 
arbeitet werden.

Beispiele: Überweisung in Papierform /mit Durchdruck (z.B. Überweisungsträger), am Bankschalter ab- 
gegeben oder postalisch versandt, von Mitarbeitern eines Zahlungsdienstleisters mit manuellem 
Eingriff in elektronische Überweisungen umgewandelt

Gegenbeispiele:  eingereichte  Datenträger  mit  unterschriebenem  Auftrag  (PCT.3),  
Telefonbanking (PCT.3), online oder per App ausgelöste Überweisungen

Meldepflicht: Überweisung auslösendes Institut

Kennung ZVS bis 2021: T2.I211; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163547, N'ZVSTA_2022_H', N'202206', 90, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 1115, 10202316.560000017, N'DECLARE @ZVSTA_REP_ID int=''163547''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163548, N'ZVSTA_2022_H', N'202206', 91, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''163548''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163550, N'ZVSTA_2022_H', N'202206', 93, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''163550''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163555, N'ZVSTA_2022_H', N'202206', 98, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 1034, 9224693.9200000186, N'DECLARE @ZVSTA_REP_ID int=''163555''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163563, N'ZVSTA_2022_H', N'202206', 106, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''163563''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163568, N'ZVSTA_2022_H', N'202206', 111, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''163568''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163570, N'ZVSTA_2022_H', N'202206', 113, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''163570''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163572, N'ZVSTA_2022_H', N'202206', 115, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''163572''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163577, N'ZVSTA_2022_H', N'202206', 120, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''163577''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163579, N'ZVSTA_2022_H', N'202206', 122, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''163579''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163581, N'ZVSTA_2022_H', N'202206', 124, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''163581''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163583, N'ZVSTA_2022_H', N'202206', 126, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2', N'    Überweisungen (Gesendet) davon:elektronisch ausgelöst', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''163583''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind nach „als Datei/Sammelüberweisung ausgelöst“ oder „als 
Einzelüberweisung ausgelöst“  weiter  aufzuschlüsseln. Da  sich  die Unterkategorien  gegenseitig  
aus- schließen, entspricht die Summe der Unterkategorien den elektronisch ausgelösten 
Überweisungen.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Innerhalb dieser 
Aufschlüsselungen     sind     Transaktionen     nach     Überweisungsverfahren     (PCT.2.R.CTS    
 und PCT.2.NR.CTS) und innerhalb der Verfahren nach Authentifizierungsmethode weiter 
aufzuschlüsseln,
d. h. „mit starker Kundenauthentifizierung“ (PCT.2.R.CTS.1/PCT.2.NR.CTS.1) oder „ohne starke Kun- 
denauthentifizierung“ (PCT.2.R.CTS.2/PCT.2.NR.CTS.2). Da sich die Unterkategorien gegenseitig aus- 
schließen, entspricht die Summe der Unterkategorien den elektronischen Überweisungen je Überwei- 
sungsverfahren insgesamt.

Beispiele: online ausgeführte Überweisungen, per App auf Mobilgeräten ausgeführte Überweisungen, an 
Überweisungsterminals ausgeführte Überweisungen

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception (alle PCT.3)

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut

Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert: Teile der bisherigen Position finden 
sich
auch in PCT.3.

', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163631, N'ZVSTA_2022_H', N'202206', 174, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 1115, 10202316.560000017, N'DECLARE @ZVSTA_REP_ID int=''163631''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163632, N'ZVSTA_2022_H', N'202206', 175, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''163632''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163634, N'ZVSTA_2022_H', N'202206', 177, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''163634''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163639, N'ZVSTA_2022_H', N'202206', 182, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 1034, 9224693.9200000186, N'DECLARE @ZVSTA_REP_ID int=''163639''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163647, N'ZVSTA_2022_H', N'202206', 190, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''163647''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163652, N'ZVSTA_2022_H', N'202206', 195, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''163652''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163654, N'ZVSTA_2022_H', N'202206', 197, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''163654''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163656, N'ZVSTA_2022_H', N'202206', 199, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''163656''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163661, N'ZVSTA_2022_H', N'202206', 204, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''163661''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163663, N'ZVSTA_2022_H', N'202206', 206, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''163663''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163665, N'ZVSTA_2022_H', N'202206', 208, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''163665''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163667, N'ZVSTA_2022_H', N'202206', 210, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.22', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:als Einzelüberweisung ausgelöst', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''163667''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.22''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID





', N'In dieser Kategorie sind elektronisch ausgelöste Überweisungen, die eigenständig ausgelöst werden,
d. h. die nicht Teil einer Gruppe von zusammen ausgelösten Überweisungen sind, zu melden. 
Einzelüberweisungen sind nach „Onlineüberweisungen" (PCT.221), „am Bankautomat oder sonstiges durch 
einen Zahlungsdienstleister bereitgestelltes Terminal“ (PCT.222) oder „mobiler Zahlungsvorgang“ 
(PCT.223) weiter aufzuschlüsseln. Da sich die Unterkategorien gegenseitig ausschließen, entspricht 
die Summe der Unterkategorien den Einzelüberweisungen insgesamt.

Beispiele: Daueraufträge; Summe der Positionen PCT.221, PCT.222, PCT.223

Gegenbeispiele: Initiierung eines Dauerauftrags, Einreichung einer Datei mit Sammelauftrag

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I2122; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163673, N'ZVSTA_2022_H', N'202206', 216, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 1115, 10202316.560000017, N'DECLARE @ZVSTA_REP_ID int=''163673''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163674, N'ZVSTA_2022_H', N'202206', 217, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''163674''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163676, N'ZVSTA_2022_H', N'202206', 219, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''163676''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163681, N'ZVSTA_2022_H', N'202206', 224, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 1034, 9224693.9200000186, N'DECLARE @ZVSTA_REP_ID int=''163681''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163689, N'ZVSTA_2022_H', N'202206', 232, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''163689''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163694, N'ZVSTA_2022_H', N'202206', 237, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''163694''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163696, N'ZVSTA_2022_H', N'202206', 239, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''163696''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163698, N'ZVSTA_2022_H', N'202206', 241, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''163698''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163703, N'ZVSTA_2022_H', N'202206', 246, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''163703''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163705, N'ZVSTA_2022_H', N'202206', 248, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''163705''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163707, N'ZVSTA_2022_H', N'202206', 250, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''163707''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163709, N'ZVSTA_2022_H', N'202206', 252, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.221', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - als Einzelüberweisung ausgelöst davon:Onlineüberweisungen', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''163709''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.221''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'Eine Onlineüberweisung ist eine Überweisung, die mittels Online-Banking oder Zahlungsauslösediens- 
ten ausgelöst wird. Auch intern ausgelöste Überweisungen werden hier gemeldet. Onlineüberweisun- 
gen sind immer über einen Fernzugang ausgelöst.

Beispiele: initiiert über das Onlinebanking im Webbrowser, initiiert per Banking App des 
Zahlungsdienst- leisters auf einem Mobilgerät, von Zahlungsauslösediensten über das Onlinebanking 
des Kunden aus- gelöst; Überweisungen eines Zahlungsdienstleisters im eigenen Namen

Gegenbeispiele:  Überweisungen  über  mobile  Zahlungslösungen  (z.B.  P2P-Zahlungen  über  
giropay/ Paydirekt P2P)
Meldepflicht: Kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163883, N'ZVSTA_2022_H', N'202206', 426, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 1115, 10202316.560000017, N'DECLARE @ZVSTA_REP_ID int=''163883''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID






', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163884, N'ZVSTA_2022_H', N'202206', 427, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''163884''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163886, N'ZVSTA_2022_H', N'202206', 429, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''163886''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163891, N'ZVSTA_2022_H', N'202206', 434, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 1034, 9224693.9200000186, N'DECLARE @ZVSTA_REP_ID int=''163891''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163899, N'ZVSTA_2022_H', N'202206', 442, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''163899''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163904, N'ZVSTA_2022_H', N'202206', 447, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''163904''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163906, N'ZVSTA_2022_H', N'202206', 449, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''163906''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163908, N'ZVSTA_2022_H', N'202206', 451, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''163908''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163913, N'ZVSTA_2022_H', N'202206', 456, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''163913''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163915, N'ZVSTA_2022_H', N'202206', 458, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''163915''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163917, N'ZVSTA_2022_H', N'202206', 460, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''163917''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163919, N'ZVSTA_2022_H', N'202206', 462, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R', N'    Überweisungen (Gesendet) -elektronisch ausgelöst davon:über einen Fernzugang', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''163919''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In dieser Kategorie enthalten sind alle als Fernzahlungsvorgang ausgelösten elektronischen Überwei- 
sungen. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 26)  zu 
finden. Als Fernzahlungsvorgang ausgelöste elektronische Überweisungen sind weiter aufzuschlüsseln 
nach Überweisungsverfahren.  Da  sich  die  Überweisungsverfahren  gegenseitig  ausschließen,  muss 
 die Summe der Unterkategorien die als Fernzahlungsvorgang ausgelösten elektronischen Überweisungen 
insgesamt ergeben.

Beispiele: enthält PCT.221 und PCT.223; über einen Fernzugang ausgelöste Datei-/Sammelüberwei- 
sungen, z.B. EBICS-Einreichungen

Gegenbeispiele: PCT.222

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163925, N'ZVSTA_2022_H', N'202206', 468, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'3', 1115, 10202316.560000017, N'DECLARE @ZVSTA_REP_ID int=''163925''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)
and [PayCardSystem] in (@ZVSTA_PAYMENT_CARD_SYSTEM)


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163929, N'ZVSTA_2022_H', N'202206', 472, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''163929''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163931, N'ZVSTA_2022_H', N'202206', 474, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''163931''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163936, N'ZVSTA_2022_H', N'202206', 479, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 1034, 9224693.9200000186, N'DECLARE @ZVSTA_REP_ID int=''163936''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163944, N'ZVSTA_2022_H', N'202206', 487, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''163944''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163949, N'ZVSTA_2022_H', N'202206', 492, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''163949''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163951, N'ZVSTA_2022_H', N'202206', 494, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''163951''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163953, N'ZVSTA_2022_H', N'202206', 496, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''163953''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163958, N'ZVSTA_2022_H', N'202206', 501, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''163958''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163960, N'ZVSTA_2022_H', N'202206', 503, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''163960''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163962, N'ZVSTA_2022_H', N'202206', 505, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''163962''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (163964, N'ZVSTA_2022_H', N'202206', 507, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang davon: Abwicklung mittels Überweisungsverfahren', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'_Z', N'Ohne Zuordnung, verwendetes System unbekannt, nicht-SEPA Transaktionen (Überweisungen oder Lastschriften, inkl. Target2)', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''163964''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''_Z''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL,
       [PaymentType] [nvarchar](50) NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till]
,[PaymentType])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
,[PaymentType]
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))
and [PaymentType]=@ZVSTA_PAYMENT_CARD_SYSTEM


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'Elektronische, über einen Fernzugang ausgelöste Überweisungen sind für jedes Überweisungsverfah- 
ren gesondert auszuweisen. Zur Liste der einzelnen Verfahren, der auch der Code zu entnehmen ist, 
siehe Anhang 2.
SEPA-Überweisungen sind definiert im SEPA Credit Transfer Scheme Rulebook.
SEPA-Echtzeitüberweisungen sind definiert im SEPA Instant Credit Transfer Scheme Rulebook.
Unter den Codes "ONUS" (On-Us Transactions=hausinterne Überweisungen) und "_Z" (Nicht anwend- bar) 
dürfen nur Nicht-SEPA-Überweisungen gemeldet werden. Nicht-SEPA-Überweisungen sind Über- weisungen, 
die nicht in einem SEPA-Überweisungsverfahren abgewickelt werden.

Beispiele:  CTS_SEPA:  SEPA-Überweisung;  CTS_SEPAI:  SEPA-Echtzeitüberweisung;  _Z:  Target- 
Überweisungen im Auftrag von Nicht-Zahlungsdienstleistern, Überweisungen in ein Land, das nicht dem 
SEPA-Raum angehört, Swift-Überweisungen, die nicht über ein SEPA-Verfahren abgewickelt werden; 
ONUS: hausinterne Überweisung, die nicht über ein SEPA-Verfahren abgewickelt werden

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164093, N'ZVSTA_2022_H', N'202206', 636, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 1115, 10202316.560000017, N'DECLARE @ZVSTA_REP_ID int=''164093''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID







', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164094, N'ZVSTA_2022_H', N'202206', 637, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''164094''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164096, N'ZVSTA_2022_H', N'202206', 639, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''164096''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164101, N'ZVSTA_2022_H', N'202206', 644, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 1034, 9224693.9200000186, N'DECLARE @ZVSTA_REP_ID int=''164101''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164109, N'ZVSTA_2022_H', N'202206', 652, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''164109''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164114, N'ZVSTA_2022_H', N'202206', 657, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''164114''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164116, N'ZVSTA_2022_H', N'202206', 659, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''164116''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164118, N'ZVSTA_2022_H', N'202206', 661, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''164118''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164123, N'ZVSTA_2022_H', N'202206', 666, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''164123''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164125, N'ZVSTA_2022_H', N'202206', 668, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''164125''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164127, N'ZVSTA_2022_H', N'202206', 670, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''164127''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (164129, N'ZVSTA_2022_H', N'202206', 672, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT.2.R.CTS.1', N'    Überweisungen (Gesendet) -elektronisch ausgelöst - über einen Fernzugang - Abwicklung mittels Überweisungsverfahren davon: mit starker Kundenauthentifizierung', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''164129''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.R.CTS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] in (''From Electronic Banking'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID








', N'In diesen Positionen sind elektronische Überweisungen, die über einen Fernzugang ausgelöst wurden 
und für die die starke Kundenauthentifizierung angewendet wurde, für jedes Überweisungsverfahren 
einzeln zu melden. Erläuterungen zu starker Kundenauthentifizierung sind im allgemeinen Teil zu ZVS 
4 (S. 26)  zu finden.

Beispiele: Einzelüberweisung im Onlinebanking an eine andere Person

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165774, N'ZVSTA_2022_H', N'202206', 2317, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 1173, 22328765.969999991, N'DECLARE @ZVSTA_REP_ID int=''165774''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'' ,''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID
', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165775, N'ZVSTA_2022_H', N'202206', 2318, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''165775''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165777, N'ZVSTA_2022_H', N'202206', 2320, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''165777''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165782, N'ZVSTA_2022_H', N'202206', 2325, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 1092, 21351143.329999991, N'DECLARE @ZVSTA_REP_ID int=''165782''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165790, N'ZVSTA_2022_H', N'202206', 2333, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''165790''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165795, N'ZVSTA_2022_H', N'202206', 2338, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''165795''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165797, N'ZVSTA_2022_H', N'202206', 2340, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''165797''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165799, N'ZVSTA_2022_H', N'202206', 2342, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''165799''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165804, N'ZVSTA_2022_H', N'202206', 2347, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''165804''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165806, N'ZVSTA_2022_H', N'202206', 2349, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''165806''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165808, N'ZVSTA_2022_H', N'202206', 2351, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''165808''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (165810, N'ZVSTA_2022_H', N'202206', 2353, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''165810''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese  Position  entspricht  der  Summe  der  acht  sich  gegenseitig  ausschließenden  
Unterkategorien:
„Überweisungen (gesendet)“, „Lastschriften (gesendet)“, „kartengebundene Zahlungsvorgänge mit von 
inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (gesen- 
det)“ (ZVS4.2), „Bargeldabhebungen mit kartengebundenen Zahlungsinstrumenten“, „E-Geld-Zahlungs- 
vorgänge (gesendet)“, „Schecks (gesendet)“, „Finanztransfers (Remittances) (gesendet)“ und 
„sonstige Zahlungsdienste (gesendet)“. Für die Ländergliederung der Kartenzahlungen (PCP) gilt 
dabei das Land des Acquirers, sofern es nicht Deutschland ist. Wenn der Acquirer seinen Sitz in 
Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PCW, PEM, PCH, PMR, POT
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166194, N'ZVSTA_2022_H', N'202206', 2737, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'NDS.1', N'Sonstige (nicht in der Richtlinie (EU) 2015/2366 aufgeführte) Dienstleistungen darunter:Kontogutschriften durch einfache Buchung', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 126, 52289719.75, N'DECLARE @ZVSTA_REP_ID int=''166194''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''N''
DECLARE @ZVSTA_POSITION nvarchar(50)=''NDS.1''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](255) NULL,
       [Description] [nvarchar](255) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[Description]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
[GL_Rep_Date]
,''IN_HOUSE''
,''N''
,''TransactionType''=CASE when [Description] is not NULL or [Description]<>'''' then LTRIM(RTRIM(Str([AccountNo],18)))+ ''  '' + [Description] else LTRIM(RTRIM(Str([AccountNo],18))) end
,[Description]
,''DE''
,''DE''
,ABS([AmountInEuro])
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  [CUSTOMER_VOLUMES]
where GL_Rep_Date between @ZVSTA_REPORTDATE_FROM and @ZVSTA_REPORTDATE_TILL
and [AmountInEuro]>0 
and ([Description] like''CL DRAWDOWN%'' or [Description] like ''INTEREST ON A/C%''  or [Description] like ''FX%'' or [Description] like ''%TRANSFER DEPOSIT%'')  
UNION ALL
SELECT 
[GL_Rep_Date]
,''IN_HOUSE''
,''N''
,LTRIM(RTRIM(Str([AccountNo],18)))
,[Description]
,''DE''
,''DE''
,ABS([AmountInEuro])
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  [CUSTOMER_VOLUMES]
where GL_Rep_Date between @ZVSTA_REPORTDATE_FROM and @ZVSTA_REPORTDATE_TILL
and [AmountInEuro]>0 
and ([Description] is NULL or [Description] not like ''DE[I-O]%'') and BatchNo not like ''%BALANCE%''  

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID
', N'Eine Gutschrift, die von einem Zahlungsdienstleister (einschließlich E-Geld-Emittenten) ohne einen 
spe- zifischen Auftrag durch einfache Buchung ausgelöst wird. (Eine „einfache Buchung“ ist die 
Gutschrift auf ein Kundenkonto innerhalb des gleichen Instituts, bei der kein herkömmliches 
Zahlungsinstrument
zum Einsatz kommt).

Beispiele: Darlehensauszahlungen, Auszahlung Festgeldzinsen, Zins- und Dividendenzahlungen aus Wertpapiergeschäften, Zinszahlungen, Ankauf von Wertpapieren,

Gegenbeispiele: Transaktionen, bei denen die Gutschrift in einem anderen Institut erfolgt, Devisenge-schäft mit Belastung eines Devisenkontos, Cash Pooling / Cash Concentration

Meldepflicht: Kontoführende Stelle
Kennung ZVS bis 2021: T2.I241; der Inhalt ist gleich.', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166195, N'ZVSTA_2022_H', N'202206', 2738, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'NDS.2', N'Sonstige (nicht in der Richtlinie (EU) 2015/2366 aufgeführte) Dienstleistungen darunter:Kontobelastungen durch einfache Buchung', N'N', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 762, 9940398.6799999978, N'DECLARE @ZVSTA_REP_ID int=''166195''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''N''
DECLARE @ZVSTA_POSITION nvarchar(50)=''NDS.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](255) NULL,
       [Description] [nvarchar](255) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[Description]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
[GL_Rep_Date]
,''IN_HOUSE''
,''N''
,''TransactionType''=CASE when [Description] is not NULL or [Description]<>'''' then LTRIM(RTRIM(Str([AccountNo],18)))+ ''  '' + [Description] else LTRIM(RTRIM(Str([AccountNo],18))) end
,[Description]
,''DE''
,''DE''
,ABS([AmountInEuro])
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  [CUSTOMER_VOLUMES]
where GL_Rep_Date between @ZVSTA_REPORTDATE_FROM and @ZVSTA_REPORTDATE_TILL
and [AmountInEuro]<0
and ([Description] like''GEB%'' or [Description] like''%GEB%'' or [Description] like''ACF%'' or [Description] like''%Zins%'' or [Description] like''%FX%'' or [Description] like''%CL DRAWDOWN%'')
UNION ALL
SELECT 
[GL_Rep_Date]
,''IN_HOUSE''
,''N''
,''TransactionType''=CASE when [Description] is not NULL or [Description]<>'''' then LTRIM(RTRIM(Str([AccountNo],18)))+ ''  '' + [Description] else LTRIM(RTRIM(Str([AccountNo],18))) end
,[Description]
,''DE''
,''DE''
,ABS([AmountInEuro])
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  [CUSTOMER_VOLUMES]
where GL_Rep_Date between @ZVSTA_REPORTDATE_FROM and @ZVSTA_REPORTDATE_TILL
and [AmountInEuro]<0 
and ([Description] is NULL or [Description] not like ''DE[I-O]%'') and BatchNo not like ''%BALANCE%''

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID', N'Eine Abbuchungstransaktion, die von einem Zahlungsdienstleister (einschließlich E-Geld-Emittenten) ohne einen spezifischen Transaktionsauftrag ausgelöst wird und durch einfache Buchung (Kontobelas-tung) auf ein Kundenkonto innerhalb des gleichen Instituts ausgeführt wird, d. h. ohne Einsatz eines herkömmlichen Zahlungsinstruments.

Beispiele: Einzug von Kreditraten, Einzug von Zinsen, Einzug von Gebühren, Einzug von Steuern auf Finanzanlagen (wenn separate Transaktion mit Kundenkonto), Zahlungen aus Wertpapiertransaktio-nen, Verkauf von Wertpapieren, Belastung aus Kreditkartenabrechnungen

Gegenbeispiele: Lastschriften, alle Einzüge, die von einem anderen Institut eingeholt werden, Begrün-dung eines Festgelds, Devisengeschäft mit Gutschrift auf Devisenkonto, Konfiszierung durch den Staat, Cash Pooling / Cash Concentration

Meldepflicht: Kontoführende Stelle
Kennung ZVS bis 2021: T2.I242; der Inhalt ist gleich.', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166197, N'ZVSTA_2022_H', N'202206', 2740, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (empfangen)', N'FROM', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'3', 813, 194830799.45999995, N'DECLARE @ZVSTA_REP_ID int=''166197''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''FROM''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID




', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge
Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166205, N'ZVSTA_2022_H', N'202206', 2748, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PCT', N'Überweisungen (empfangen)', N'FROM', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'CTS_ALL', N'Überweisungen', N'Y', N'Y', N'N', 813, 194830799.45999995, N'DECLARE @ZVSTA_REP_ID int=''166205''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''FROM''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''CTS_ALL''
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
END)
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''HALFYEARLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'',''103-CT-SEPA'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [TransactionType] not in (''From Vostro Outward Remittance'')
and [CreditorsCountry] = @ZVSTA_COUNTRY_CODE
and [CreditorsCountry] in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))


IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt".
Jede Transaktion wird nur einer der Unterkategorien „beleghaft ausgelöst“ (PCT.1), „elektronisch 
aus- gelöst“  (PCT.2)  oder  „Sonstige“  (PCT.,3)  zugeordnet.  Da  sich  die  Unterkategorien  
gegenseitig  aus- schließen, entspricht die Summe der Unterkategorien den Überweisungen insgesamt. 
Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments Area)-Überweisungen als auch alle 
Nicht-SEPA- Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl-
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge
Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines Nicht-ZDL  getätigt  werden,  Bareinzahlungen  auf  ein  Konto  unter  Verwendung  eines  
Bankformulars, Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut,  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166407, N'ZVSTA_2022_H', N'202206', 2950, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-Wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind (empfangen)', N'FROM', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 813, 194830799.45999995, N'DECLARE @ZVSTA_REP_ID int=''166407''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''FROM''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'' ,''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Diese Position entspricht der Summe der sieben sich gegenseitig ausschließenden Unterkategorien: „Überweisungen (empfangen)“, „Lastschriften (empfangen)“, „kartengebundene Zahlungsvorgänge mit von inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (empfangen)“ (ZVS4.2), „E-Geld-Zahlungsvorgänge (empfangen)“, „Schecks (empfangen)“, „Finanz-transfers (Remittances) (empfangen)“ und „sonstige Zahlungsdienste (empfangen)“. Für die Länderglie-derung der Kartenzahlungen (PCP) gilt dabei das Land des Kartenemittenten, sofern es nicht Deutsch-land ist. Wenn der Emittent seinen Sitz in Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PEM, PCH, PMR, POT (alle empfangen)
Meldepflicht: Jeder ZDL, der mindestens eines der zugrundeliegenden Instrumente meldet', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166415, N'ZVSTA_2022_H', N'202206', 2958, N'ZVS4.1', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND - OHNE KARTENZAHLUNGEN', N'PTT', N'Gesamtzahl /-Wert der Zahlungsvorgänge, an denen Nicht-Zahlungsdienstleister beteiligt sind (empfangen)', N'FROM', N'DE', N'Inländisch', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 813, 194830799.45999995, N'DECLARE @ZVSTA_REP_ID int=''166415''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_H''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''HALFYEARLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202206''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''FROM''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PTT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr in (''PCT'',''PDD'',''PCP'',''PCW'',''PEM'',''PCH'',''PMR'',''PO'') 
and Landkontext in (@PAYMENT_FLOW)
and LandCode in (@ZVSTA_COUNTRY_CODE)
and LandCode in 
(Select [COUNTRY CODE] from Countries where [EU EEA] not in (''N'') and [ZVSTA_Relevant] in (''Y''))

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Diese Position entspricht der Summe der sieben sich gegenseitig ausschließenden Unterkategorien: „Überweisungen (empfangen)“, „Lastschriften (empfangen)“, „kartengebundene Zahlungsvorgänge mit von inländischen Zahlungsdienstleistern ausgegebenen kartengebundenen Zahlungsinstrumenten (empfangen)“ (ZVS4.2), „E-Geld-Zahlungsvorgänge (empfangen)“, „Schecks (empfangen)“, „Finanz-transfers (Remittances) (empfangen)“ und „sonstige Zahlungsdienste (empfangen)“. Für die Länderglie-derung der Kartenzahlungen (PCP) gilt dabei das Land des Kartenemittenten, sofern es nicht Deutsch-land ist. Wenn der Emittent seinen Sitz in Deutschland hat, gilt das Land der Verkaufsstelle.
Summe der Positionen: PCT, PDD, PCP, PEM, PCH, PMR, POT (alle empfangen)
Meldepflicht: Jeder ZDL, der mindestens eines der zugrundeliegenden Instrumente meldet', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166449, N'ZVSTA_2022_Q', N'202203', 1, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 1257, 822987483.52999949, N'DECLARE @ZVSTA_REP_ID int=''166449''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID
', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166461, N'ZVSTA_2022_Q', N'202203', 13, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''166461''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166469, N'ZVSTA_2022_Q', N'202203', 21, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''166469''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166492, N'ZVSTA_2022_Q', N'202203', 44, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'CH', N'SWITZERLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 3, 5298, N'DECLARE @ZVSTA_REP_ID int=''166492''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''CH''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166497, N'ZVSTA_2022_Q', N'202203', 49, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'CN', N'CHINA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 54, 797526583.10999978, N'DECLARE @ZVSTA_REP_ID int=''166497''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''CN''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166506, N'ZVSTA_2022_Q', N'202203', 58, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'DE', N'GERMANY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 1092, 21351143.329999957, N'DECLARE @ZVSTA_REP_ID int=''166506''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166526, N'ZVSTA_2022_Q', N'202203', 78, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'GB', N'UNITED KINGDOM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 5, 31905.5, N'DECLARE @ZVSTA_REP_ID int=''166526''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GB''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166538, N'ZVSTA_2022_Q', N'202203', 90, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''166538''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166544, N'ZVSTA_2022_Q', N'202203', 96, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'HK', N'HONG KONG', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 18, 2594693.6599999997, N'DECLARE @ZVSTA_REP_ID int=''166544''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''HK''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166559, N'ZVSTA_2022_Q', N'202203', 111, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''166559''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166563, N'ZVSTA_2022_Q', N'202203', 115, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'JP', N'JAPAN', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 1, 497600, N'DECLARE @ZVSTA_REP_ID int=''166563''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''JP''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166582, N'ZVSTA_2022_Q', N'202203', 134, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''166582''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166584, N'ZVSTA_2022_Q', N'202203', 136, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''166584''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166615, N'ZVSTA_2022_Q', N'202203', 167, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''166615''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166628, N'ZVSTA_2022_Q', N'202203', 180, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''166628''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166633, N'ZVSTA_2022_Q', N'202203', 185, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''166633''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166638, N'ZVSTA_2022_Q', N'202203', 190, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''166638''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166647, N'ZVSTA_2022_Q', N'202203', 199, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'SG', N'SINGAPORE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 1373.4, N'DECLARE @ZVSTA_REP_ID int=''166647''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''SG''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166682, N'ZVSTA_2022_Q', N'202203', 234, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT', N'Überweisungen', N'TO', N'US', N'UNITED STATES', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 1, 1263.89, N'DECLARE @ZVSTA_REP_ID int=''166682''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''US''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'„Überweisung“  hat  dieselbe  Bedeutung  wie  in  Artikel 4  Nummer 24  der  Richtlinie (EU)  
2015/2366 (PSD2): ein "auf Aufforderung des Zahlers ausgelöster Zahlungsdienst zur Erteilung einer 
Gutschrift auf das Zahlungskonto des Zahlungsempfängers zulasten des Zahlungskontos des Zahlers in 
Ausführung eines oder mehrerer Zahlungsvorgänge durch den Zahlungsdienstleister, der das 
Zahlungskonto des Zahlers führt". Überweisungen beinhalten sowohl alle SEPA (Single Euro Payments 
Area)-Überweisun- gen als auch alle Nicht-SEPA-Überweisungen.

Beispiele: Überweisung am Schalter, Überweisung im Online-Banking, Überweisung an Überweisungs- 
terminals, Kauf von Fremdwährung mit Gutschrift auf einem Devisenkonto, Überweisungen von E-Geld- 
konten auf Konten mit IBAN, Überweisungen zur Verrechnung ausstehender Forderungen aus Trans- 
aktionen mit Kreditkarten (mit oder ohne Kreditfunktion), Überweisungen auf eigene Rechnung (Gehäl- 
ter, Handwerkerrechnungen, Mieten), Cash Pooling / Cash Concentration, Kontoüberträge

Gegenbeispiele: Kontogutschriften durch einfache Buchungen, An- / Verkauf von Fremdwährung in bar 
(Sorten) mit Belastung / Gutschrift auf Konto, Target2-Transaktionen, wenn sie nicht im Auftrag 
eines
nzahlungen  auf  ein  Konto  unter  Verwendung  eines  Bankformulars,
Überweisungen eines ZDLs auf das eigene Bundesbankkonto

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge-
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I21; der Inhalt ist gleich.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166700, N'ZVSTA_2022_Q', N'202203', 252, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 1183, 16104991.490000002, N'DECLARE @ZVSTA_REP_ID int=''166700''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID

', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166712, N'ZVSTA_2022_Q', N'202203', 264, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''166712''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166720, N'ZVSTA_2022_Q', N'202203', 272, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''166720''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166743, N'ZVSTA_2022_Q', N'202203', 295, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'CH', N'SWITZERLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 3, 5298, N'DECLARE @ZVSTA_REP_ID int=''166743''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''CH''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166748, N'ZVSTA_2022_Q', N'202203', 300, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'CN', N'CHINA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 43, 3449445.9099999997, N'DECLARE @ZVSTA_REP_ID int=''166748''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''CN''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166757, N'ZVSTA_2022_Q', N'202203', 309, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'DE', N'GERMANY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 1034, 9224693.9200000037, N'DECLARE @ZVSTA_REP_ID int=''166757''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166777, N'ZVSTA_2022_Q', N'202203', 329, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'GB', N'UNITED KINGDOM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 5, 31905.5, N'DECLARE @ZVSTA_REP_ID int=''166777''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GB''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166789, N'ZVSTA_2022_Q', N'202203', 341, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''166789''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166795, N'ZVSTA_2022_Q', N'202203', 347, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'HK', N'HONG KONG', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 15, 2414652.12, N'DECLARE @ZVSTA_REP_ID int=''166795''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''HK''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166810, N'ZVSTA_2022_Q', N'202203', 362, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''166810''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166833, N'ZVSTA_2022_Q', N'202203', 385, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''166833''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166835, N'ZVSTA_2022_Q', N'202203', 387, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''166835''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166866, N'ZVSTA_2022_Q', N'202203', 418, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''166866''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166879, N'ZVSTA_2022_Q', N'202203', 431, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''166879''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166884, N'ZVSTA_2022_Q', N'202203', 436, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''166884''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166889, N'ZVSTA_2022_Q', N'202203', 441, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''166889''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (166898, N'ZVSTA_2022_Q', N'202203', 450, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2', N'Überweisungen darunter:elektronisch ausgelöst', N'TO', N'SG', N'SINGAPORE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 1373.4, N'DECLARE @ZVSTA_REP_ID int=''166898''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''SG''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'Jede Überweisung, die der Zahler elektronisch in Auftrag gibt und die damit den Bestimmungen der 
Richtlinie (EU) 2015/2366 (PSD2) zu elektronischen Zahlungsvorgängen unterliegen, z.B. grundsätzli- 
che Pflicht zur starken Kundenauthentifizierung.
Elektronisch ausgelöste Überweisungen sind weiter danach aufzuschlüsseln, ob sie über einen Fern- 
zugang (PCT.2.R) oder nicht über einen Fernzugang (PCT.2.NR) ausgelöst wurden. Da sich die Unter- 
kategorien gegenseitig ausschließen, entspricht die Summe der Unterkategorien den elektronischen 
Überweisungen insgesamt.

Summe der Positionen: PCT.2.R, PCT.2.NR

Gegenbeispiele: eingereichte Datenträger mit unterschriebenem Auftrag, Überweisung per Telefon oder 
Brief (MOTO), Überweisung per Telefon mit Interactive Voice Reception

Meldepflicht: Überweisung  auslösendes Institut;  Ausnahme für über Zahlungsauslösedienste  ausge- 
löste Überweisungen: kontoführendes Institut
Kennung ZVS bis 2021: T2.I212; der Inhalt hat sich geändert.
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167202, N'ZVSTA_2022_Q', N'202203', 754, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'W0', N'Inländisch und grenzüberschreitent kombiniert (Total)', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'3', 1183, 16104991.490000002, N'DECLARE @ZVSTA_REP_ID int=''167202''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''3''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''W0''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''

DECLARE @ZVSTA_Reporting as Table
(ID int IDENTITY(1,1) NOT NULL,
FormNr nvarchar(50) NULL,
PositionNr nvarchar(50) NULL,
Anzahl_Value float default(0),
Wert_Value float default(0))

INSERT INTO @ZVSTA_Reporting
(FormNr,
PositionNr,
Anzahl_Value,
Wert_Value)
Select 
FormNr,
PositionNr,
Anzahl_Value,
Wert_Value 
from ZVSTAT_Reporting
where ZVSTA_Schema=@ZVSTA_SCHEMA and ReportingPeriod=@ZVSTA_REPORTING_PERIOD
and PositionNr=@ZVSTA_POSITION
and Landkontext in (@PAYMENT_FLOW)
and LandCode not in (@ZVSTA_COUNTRY_CODE)

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select Sum(Anzahl_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID 
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(Wert_Value) from @ZVSTA_Reporting) where ID=@ZVSTA_REP_ID
END

UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID


', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167214, N'ZVSTA_2022_Q', N'202203', 766, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'AT', N'AUSTRIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 19, 340217.85, N'DECLARE @ZVSTA_REP_ID int=''167214''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''AT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167222, N'ZVSTA_2022_Q', N'202203', 774, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'BE', N'BELGIUM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 10, 77439.579999999987, N'DECLARE @ZVSTA_REP_ID int=''167222''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''BE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167245, N'ZVSTA_2022_Q', N'202203', 797, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'CH', N'SWITZERLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 3, 5298, N'DECLARE @ZVSTA_REP_ID int=''167245''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''CH''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167250, N'ZVSTA_2022_Q', N'202203', 802, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'CN', N'CHINA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 43, 3449445.9099999997, N'DECLARE @ZVSTA_REP_ID int=''167250''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''CN''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167259, N'ZVSTA_2022_Q', N'202203', 811, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'DE', N'GERMANY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 1034, 9224693.9200000037, N'DECLARE @ZVSTA_REP_ID int=''167259''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''DE''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167279, N'ZVSTA_2022_Q', N'202203', 831, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'GB', N'UNITED KINGDOM', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 5, 31905.5, N'DECLARE @ZVSTA_REP_ID int=''167279''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GB''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167291, N'ZVSTA_2022_Q', N'202203', 843, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'GR', N'GREECE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 150000, N'DECLARE @ZVSTA_REP_ID int=''167291''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''GR''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167297, N'ZVSTA_2022_Q', N'202203', 849, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'HK', N'HONG KONG', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 15, 2414652.12, N'DECLARE @ZVSTA_REP_ID int=''167297''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''HK''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167312, N'ZVSTA_2022_Q', N'202203', 864, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'IT', N'ITALY', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 2212, N'DECLARE @ZVSTA_REP_ID int=''167312''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''IT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167335, N'ZVSTA_2022_Q', N'202203', 887, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'LT', N'LITHUANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 5000, N'DECLARE @ZVSTA_REP_ID int=''167335''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167337, N'ZVSTA_2022_Q', N'202203', 889, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'LV', N'LATVIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 102830, N'DECLARE @ZVSTA_REP_ID int=''167337''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''LV''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167368, N'ZVSTA_2022_Q', N'202203', 920, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'NL', N'NETHERLANDS', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 11, 39791.039999999994, N'DECLARE @ZVSTA_REP_ID int=''167368''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''NL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167381, N'ZVSTA_2022_Q', N'202203', 933, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'PL', N'POLAND', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 5, 69298, N'DECLARE @ZVSTA_REP_ID int=''167381''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PL''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167386, N'ZVSTA_2022_Q', N'202203', 938, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'PT', N'PORTUGAL', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 3, 23620, N'DECLARE @ZVSTA_REP_ID int=''167386''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''PT''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167391, N'ZVSTA_2022_Q', N'202203', 943, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'RO', N'ROMANIA', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 25, 167214.17, N'DECLARE @ZVSTA_REP_ID int=''167391''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''RO''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
INSERT [dbo].[ZVSTAT_Reporting] ([ID], [ZVSTA_Schema], [ReportingPeriod], [LfdNr], [FormNr], [FormName], [PositionNr], [PositionName], [Landkontext], [LandCode], [LandCode_Description], [SubdivisionOfCountryCode], [SubdivisionOfCountryName], [LandCode_T], [LandCode_T_Description], [SubdivisionOfCountryCode_T], [SubdivisionOfCountryName_T], [PayCardSystem], [PayCardSystem_Description], [Anzahl], [Wert], [SumPosition], [Anzahl_Value], [Wert_Value], [PositionSQLcommand], [PositionInfo], [LastAction], [LastUpdateUser], [LastUpdateDate], [ReportStatus]) VALUES (167400, N'ZVSTA_2022_Q', N'202203', 952, N'ZVS9', N'ZAHLUNGSVORGÄNGE, AN DENEN NICHT-ZAHLUNGSDIENSTLEISTER BETEILIGT SIND', N'PCT.2.NR', N'Überweisungen darunter:elektronisch ausgelöst davon:nicht über einen Fernzugang', N'TO', N'SG', N'SINGAPORE', NULL, NULL, NULL, NULL, NULL, NULL, N'N', N'N', N'Y', N'Y', N'N', 2, 1373.4, N'DECLARE @ZVSTA_REP_ID int=''167400''
DECLARE @ZVSTA_SCHEMA nvarchar(50)=''ZVSTA_2022_Q''
DECLARE @ZVSTA_SCHEMA_PERIOD nvarchar(50)=''QUARTERLY''
DECLARE @ZVSTA_REPORTING_PERIOD nvarchar(50)=''202203''
DECLARE @SUM_POSITION nvarchar(1)=''N''
DECLARE @COUNT_POSITION nvarchar(1)=''Y''
DECLARE @VALUE_POSITION nvarchar(1)=''Y''
DECLARE @PAYMENT_FLOW nvarchar(50)=''TO''
DECLARE @ZVSTA_POSITION nvarchar(50)=''PCT.2.NR''
DECLARE @ZVSTA_COUNTRY_CODE nvarchar(2)=''SG''
DECLARE @ZVSTA_PAYMENT_CARD_SYSTEM nvarchar(50)=''N''
DECLARE @ZVSTA_REPORTDATE_TILL Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),03,31))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),06,30)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),09,30))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),12,31))
END)
DECLARE @ZVSTA_REPORTDATE_FROM Datetime=
(SELECT ''ZVSTA_REPORTDATE''=CASE 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''03'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),01,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''06'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),04,01)) 
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''09'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),07,01))
WHEN @ZVSTA_SCHEMA_PERIOD in (''QUARTERLY'') and RIGHT(@ZVSTA_REPORTING_PERIOD,2)=''12'' then (SELECT DATEFROMPARTS(Convert(int,LEFT(@ZVSTA_REPORTING_PERIOD,4)),110,01))
END)

DECLARE @ZVSTA_Payments as Table(
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[RegisterDate] datetime NULL,
	[MessageType] [nvarchar](50) NULL,
	[InOutMessage] [nvarchar](50) NULL,
	[TransactionType] [nvarchar](50) NULL,
	[TransactionID] [nvarchar](50) NULL,
	[DebitorsCountry] [nvarchar](2) NULL,
	[CreditorsCountry] [nvarchar](2) NULL,
	[TransactionAmountEUR] [float] default(0),
	[ZVSTA_Position] [nvarchar](100) NULL,
	[ZVSTA_Schema] [nvarchar](50) NULL,
	[ZVSTA_Schema_Period] [nvarchar](50) NULL,
	[ZVSTA_Reporting_Period_From] Datetime NULL,
	[ZVSTA_Reporting_Period_Till] Datetime NULL)

INSERT INTO @ZVSTA_Payments
(RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,[ZVSTA_Position]
,[ZVSTA_Schema]
,[ZVSTA_Schema_Period]
,[ZVSTA_Reporting_Period_From]
,[ZVSTA_Reporting_Period_Till])
SELECT 
RegisterDate
,[MessageType]
,[InOutMessage]
,[TransactionType]
,[TransactionID]
,[DebitorsCountry]
,[CreditorsCountry]
,[TransactionAmountEUR]
,@ZVSTA_POSITION+''.''+ @PAYMENT_FLOW+''.''+@ZVSTA_COUNTRY_CODE
,@ZVSTA_SCHEMA
,@ZVSTA_SCHEMA_PERIOD
,@ZVSTA_REPORTDATE_FROM
,@ZVSTA_REPORTDATE_TILL
from  ZVSTA_Payments
where [ZVSTA_Schema]=@ZVSTA_SCHEMA and  [ZVSTA_Reporting_Period]=@ZVSTA_REPORTING_PERIOD
and [MessageType] in (''103'')
and [InOutMessage] in (@PAYMENT_FLOW)
and [CreditorsCountry]=@ZVSTA_COUNTRY_CODE
and TransactionType in (''From Electronic Banking'')

IF @COUNT_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Anzahl_Value=(Select count(ID) from @ZVSTA_Payments) 
where ID=@ZVSTA_REP_ID
END
IF @VALUE_POSITION=''Y''
BEGIN
UPDATE ZVSTAT_Reporting SET Wert_Value=(Select Sum(TransactionAmountEUR) from @ZVSTA_Payments) where ID=@ZVSTA_REP_ID
END


UPDATE ZVSTAT_Reporting SET Anzahl_Value=0 where Anzahl_Value is NULL and ID=@ZVSTA_REP_ID
UPDATE ZVSTAT_Reporting SET Wert_Value=0 where Wert_Value is NULL 
and ID=@ZVSTA_REP_ID



', N'In dieser Kategorie sind alle elektronischen Überweisungen enthalten, die nicht als Fernzahlung 
ausge- löst wurden. Erläuterungen zu "Fernzahlungsvorgang" sind im allgemeinen Teil zu ZVS 4 (S. 
26) zu finden.

Beispiele: Überweisungsauftrag an einem Überweisungsterminal, am POS-Terminal ausgelöste Über- 
weisung

Gegenbeispiele: QR-Code-basierte Überweisung
Meldepflicht: Überweisung auslösendes Institut
', NULL, N'AUTO', NULL, N'V')
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_Reporting] OFF
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ON 
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1488, N'ZVSTA_2014', N'2021', N'100', N'SUM', N'ZVS1', N'ZVS1', N'1.A1.IN.DE.N - 1.A11.IN.DE.N >= 0', N'Die Oberposition A1 des Meldeschemas ZVS1 muss mindestens so groß sein wie die dazugehörige Unterposition A11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A11'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1489, N'ZVSTA_2014', N'2021', N'110', N'SUM', N'ZVS1', N'ZVS1', N'1.A1.IN.DE.N - 1.A12.IN.DE.N >= 0', N'Die Oberposition A1 des Meldeschemas ZVS1 muss mindestens so groß sein wie die tion A12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1490, N'ZVSTA_2014', N'2021', N'120', N'SUM', N'ZVS1', N'ZVS1', N'1.A11.IN.DE.N - 1.A121.IN.DE.N >= 0', N'Die Position A11 des Meldeschemas ZVS1
muss mindestens so groß sein wie die PositionA121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A11'') 
,(''ZVS1'',''A121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1491, N'ZVSTA_2014', N'2021', N'130', N'SUM', N'ZVS1', N'ZVS1', N'1.A12.IN.DE.N - 1.A121.IN.DE.N >= 0', N'Die Position A12 des Meldeschemas ZVS1
muss mindestens so groß sein wie die PositionA121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A12'') 
,(''ZVS1'',''A121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1492, N'ZVSTA_2014', N'2021', N'140', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I121.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss
mindestens so groß sein wie die dazugehörige Unterposition I121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1493, N'ZVSTA_2014', N'2021', N'150', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I122.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
dazugehörige Unterposition I122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1494, N'ZVSTA_2014', N'2021', N'160', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I123.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss
mindestens so groß sein wie die dazugehörige Unterposition I123.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I123'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1495, N'ZVSTA_2014', N'2021', N'170', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I121.IN.DE.N -
2.I122.IN.DE.N -2.I123.IN.DE.N <= 0', N'Die Summe der Positionen I121, I122 und I123 des Meldeschemas ZVS2 muss
mindestens sogroß sein wie die Position I12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I121'') 
,(''ZVS2'',''I122'') 
,(''ZVS2'',''I123'')

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value+C.Anzahl_Value+D.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1496, N'ZVSTA_2014', N'2021', N'180', N'SUM', N'ZVS2', N'ZVS2', N'2.I124.IN.DE.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Position I124 des Meldeschemas ZVS2 daher
leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I124'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value=0 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1497, N'ZVSTA_2014', N'2021', N'190', N'SUM', N'ZVS2', N'ZVS2', N'2.I125.IN.DE.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Position I125 des Meldeschemas ZVS2 daher
leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I125'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value=0 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1498, N'ZVSTA_2014', N'2021', N'200', N'SUM', N'ZVS2', N'ZVS2', N'2.I13.IN.DE.N - 2.I131.IN.DE.N -
2.I132.IN.DE.N = 0', N'Die Oberposition I13 muss sich aus der Summe der dazugehörigen
Unterpositionen I131 desMeldeschemas ZVS2 und I132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I131'') 
,(''ZVS2'',''I132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value = B.Anzahl_Value+C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1499, N'ZVSTA_2014', N'2021', N'210', N'SUM', N'ZVS2', N'ZVS2', N'2.I13.IN.DE.N - 2.I1301.IN.DE.N >= 0', N'Die Oberposition I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
dazugehörige Unterposition I1301.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I1301'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1500, N'ZVSTA_2014', N'2021', N'220', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I11.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I11'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1501, N'ZVSTA_2014', N'2021', N'230', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I12.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
Position I12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1502, N'ZVSTA_2014', N'2021', N'240', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I13.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I13.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I13'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1503, N'ZVSTA_2014', N'2021', N'250', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I11.IN.DE.N - 2.I12.IN.DE.N -2.I13.IN.DE.N
<= 0', N'Die Summe der Positionen I11, I12 und I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I11'') 
,(''ZVS2'',''I12'') 
,(''ZVS2'',''I13'')

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value+C.Anzahl_Value+D.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1504, N'ZVSTA_2014', N'2021', N'260', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I11.IN.DE.N <= 0', N'Die Position I11 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I11'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1505, N'ZVSTA_2014', N'2021', N'270', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I12.IN.DE.N <= 0', N'Die Position I12 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1506, N'ZVSTA_2014', N'2021', N'280', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I13.IN.DE.N <= 0', N'Die Position I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1507, N'ZVSTA_2014', N'2021', N'300', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S111.IN.A1.N >= 0', N'Die Oberposition S11 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S111.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S111'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1508, N'ZVSTA_2014', N'2021', N'310', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S112.IN.A1.N >= 0', N'Die Oberposition S11 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S112.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S112'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1509, N'ZVSTA_2014', N'2021', N'320', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S111.IN.A1.N - 3.S112.IN.A1.N <= 0', N'Die Summe der Positionen S111 und S112 des Meldeschemas ZVS3 muss mindestens so groß sein wie die Position S11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S111'') 
,(''ZVS3'',''S112'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1510, N'ZVSTA_2014', N'2021', N'330', N'SUM', N'ZVS3', N'ZVS3', N'3.S12.IN.A1.N - 3.S121.IN.A1.N >= 0', N'Die Oberposition S12 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S12'') 
,(''ZVS3'',''S121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1511, N'ZVSTA_2014', N'2021', N'340', N'SUM', N'ZVS3', N'ZVS3', N'3.S12.IN.A1.N - 3.S122.IN.A1.N >= 0', N'Die Oberposition S12 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S12'') 
,(''ZVS3'',''S122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1512, N'ZVSTA_2014', N'2021', N'350', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S131.IN.A1.N >= 0', N'Die Oberposition S13 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S131.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S131'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1513, N'ZVSTA_2014', N'2021', N'360', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S132.IN.A1.N >= 0', N'Die Oberposition S13 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1514, N'ZVSTA_2014', N'2021', N'370', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S131.IN.A1.N - 3.S132.IN.A1.N <= 0', N'Die Summe der Positionen S131 und S132 des Meldeschemas ZVS3 muss mindestens so groß sein wie die Position S13.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S131'') 
,(''ZVS3'',''S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1515, N'ZVSTA_2014', N'2021', N'380', N'SUM', N'ZVS3', N'ZVS3', N'3.S132.IN.A1.N - 3.S122.IN.A1.N >= 0', N'Die Position S132 des Meldeschemas ZVS3 muss mindestens so groß sein wie die PositionS122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S132'') 
,(''ZVS3'',''S122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1516, N'ZVSTA_2014', N'2021', N'400', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21.TO.A1.N - 4.T2.I211.TO.A1.N -
4.T2.I212.TO.A1.N ~ 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I211 und T2.I212 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I211'') 
,(''ZVS4'',''T2.I212'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1517, N'ZVSTA_2014', N'2021', N'401', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21.TO.A1.V - 4.T2.I211.TO.A1.V - 4.T2.I212.TO.A1.V ~
0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I211 und T2.I212 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I211'') 
,(''ZVS4'',''T2.I212'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1518, N'ZVSTA_2014', N'2021', N'410', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I212.TO.A1.N - 4.T2.I2121.TO.A1.N -
4.T2.I2122.TO.A1.N ~ 0', N'Die Oberposition T2.I212 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I2121 und T2.I2122 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I212'') 
,(''ZVS4'',''T2.I2121'') 
,(''ZVS4'',''T2.I2122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1519, N'ZVSTA_2014', N'2021', N'411', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I212.TO.A1.V - 4.T2.I2121.TO.A1.V -
4.T2.I2122.TO.A1.V ~ 0', N'Die Oberposition T2.I212 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I2121 und T2.I2122 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I212'') 
,(''ZVS4'',''T2.I2121'') 
,(''ZVS4'',''T2.I2122'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1520, N'ZVSTA_2014', N'2021', N'420', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21001.TO.A1.N - 4.T2.I21.TO.A1.N <= 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I21001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I21001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1521, N'ZVSTA_2014', N'2021', N'421', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21001.TO.A1.V - 4.T2.I21.TO.A1.V <= 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I21001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I21001'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1522, N'ZVSTA_2014', N'2021', N'430', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I22.TO.A1.N - 4.T2.I221.TO.A1.N - 4.T2.I222.TO.A1.N ~
0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I221 und T2.I222 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I221'') 
,(''ZVS4'',''T2.I222'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1523, N'ZVSTA_2014', N'2021', N'431', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I22.TO.A1.V - 4.T2.I221.TO.A1.V - 4.T2.I222.TO.A1.V ~
0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I221 und T2.I222 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I221'') 
,(''ZVS4'',''T2.I222'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1524, N'ZVSTA_2014', N'2021', N'440', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2201.TO.A1.N - 4.T2.I22.TO.A1.N <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2201.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2201'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1525, N'ZVSTA_2014', N'2021', N'441', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2201.TO.A1.V - 4.T2.I22.TO.A1.V <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die
T2.I2201.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2201'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1526, N'ZVSTA_2014', N'2021', N'450', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2202.TO.A1.N - 4.T2.I22.TO.A1.N <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2202.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2202'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1527, N'ZVSTA_2014', N'2021', N'451', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2202.TO.A1.V - 4.T2.I22.TO.A1.V <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2202.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2202'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1528, N'ZVSTA_2014', N'2021', N'460', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I121.TO.A1.N - 4.T1.I122.TO.A1.N -
4.T1.I123.TO.A1.N ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I121, T1.I122 und T1.I123 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I121'') 
,(''ZVS4'',''T1.I122'') 
,(''ZVS4'',''T1.I123'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1529, N'ZVSTA_2014', N'2021', N'461', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I121.TO.A1.V - 4.T1.I122.TO.A1.V -
4.T1.I123.TO.A1.V ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I121, T1.I122 und T1.I123 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I121'') 
,(''ZVS4'',''T1.I122'') 
,(''ZVS4'',''T1.I123'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1530, N'ZVSTA_2014', N'2021', N'470', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I124.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I124 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I124'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1531, N'ZVSTA_2014', N'2021', N'471', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I124.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I124 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I124'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1532, N'ZVSTA_2014', N'2021', N'480', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I125.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I125 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I125'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1533, N'ZVSTA_2014', N'2021', N'481', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I125.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I125 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I125'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1534, N'ZVSTA_2014', N'2021', N'490', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I12.S1.TO.A1.N -
4.T1.I12.S3.TO.A1.N ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1535, N'ZVSTA_2014', N'2021', N'491', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I12.S1.TO.A1.V -
4.T1.I12.S3.TO.A1.V ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1536, N'ZVSTA_2014', N'2021', N'500', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I12.S1.TO.A1.N -
4.T1.I12.S3.TO.A1.N >= 0', N'Die Position T1.I12 des Meldeschemas ZVS4 muss mindestens so groß sein wie die Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1537, N'ZVSTA_2014', N'2021', N'501', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I12.S1.TO.A1.V -
4.T1.I12.S3.TO.A1.V >= 0', N'Die Position T1.I12 des Meldeschemas ZVS4 muss mindestens so groß sein wie die Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1538, N'ZVSTA_2014', N'2021', N'510', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.TO.A1.N - 4.T3.I131.TO.A1.N - 4.T3.A3.TO.A1.N ~ 0', N'Die Oberposition T3 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T3.I131 und T3.A3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3'') 
,(''ZVS4'',''T3.I31'') 
,(''ZVS4'',''T3.A3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1539, N'ZVSTA_2014', N'2021', N'511', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.TO.A1.V - 4.T3.I131.TO.A1.V - 4.T3.A3.TO.A1.V ~ 0', N'Die Oberposition T3 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T3.I131 und T3.A3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3'') 
,(''ZVS4'',''T3.I31'') 
,(''ZVS4'',''T3.A3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1540, N'ZVSTA_2014', N'2021', N'520', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.A3.TO.A1.N - 4.T3.I132.TO.A1.N >= 0', N'Die Oberposition T3.A3 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T3.I132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.A3'') 
,(''ZVS4'',''T3.I132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1541, N'ZVSTA_2014', N'2021', N'521', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.A3.TO.A1.V - 4.T3.I132.TO.A1.V >= 0', N'Die Oberposition T3.A3 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T3.I132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.A3'') 
,(''ZVS4'',''T3.I132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1542, N'ZVSTA_2014', N'2021', N'530', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T0.I24.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Zahlungsinstrumente vorgenommen werden kann und die Sammelposition T0.I24 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0.I24'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1543, N'ZVSTA_2014', N'2021', N'531', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T0.I24.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Zahlungsinstrumente vorgenommen werden kann und die Sammelposition T0.I24 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0.I24'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1544, N'ZVSTA_2014', N'2021', N'540', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.TO.A1.N - 4.T2.I21.TO.A1.N - 4.T2.I22.TO.A1.N -
4.T1.I12.TO.A1.N - 4.T3.TO.A1.N - 4.T0.I23.TO.A1.N ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte A1).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1545, N'ZVSTA_2014', N'2021', N'541', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.TO.A1.V - 4.T2.I21.TO.A1.V - 4.T2.I22.TO.A1.V -
4.T1.I12.TO.A1.V - 4.T3.TO.A1.V - 4.T0.I23.TO.A1.V ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte A1).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1546, N'ZVSTA_2014', N'2021', N'550', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.FROM.Z9.N - 4.T2.I21.FROM.Z9.N -
4.T2.I22.FROM.Z9.N - 4.T3.FROM.Z9.N -
4.T0.I23.FROM.Z9.N ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte Z9).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''Z9'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1547, N'ZVSTA_2014', N'2021', N'551', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.FROM.Z9.V - 4.T2.I21.FROM.Z9.V -
4.T2.I22.FROM.Z9.V - 4.T3.FROM.Z9.V -
4.T0.I23.FROM.Z9.V ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte Z9).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''Z9'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1548, N'ZVSTA_2014', N'2021', N'560', N'LOGICAL', N'ZVS4', N'ZVS1', N'4.T0.TO.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N +
1.A3.IN.DE.N > 0', N'Wenn in Position T0 des ZVS4 Transaktionen gemeldet werden, dann müssen auch Konten inden Positionen A1, A2 oder A3 im Meldeschema ZVS1 gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS1'',''A1'') 
,(''ZVS1'',''A2'')
,(''ZVS1'',''A3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >0 and B.Anzahl_Value + C.Anzahl_Value +
                           D.Anzahl_Value>0 THEN ''Y'' 
WHEN A.Anzahl_Value=0 and B.Anzahl_Value + C.Anzahl_Value +
                           D.Anzahl_Value=0 THEN ''Y'' 

ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
        WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1549, N'ZVSTA_2014', N'2021', N'570', N'LOGICAL', N'ZVS4', N'ZVS1', N'4.T3.I131.TO.A1.V > 0 => 1.I31.IN.DE.V > 0', N'Wenn in Position T3.I131 des ZVS4 Transaktionen gemeldet werden, dann muss der
Aufladungsgegenwert auf E-Geld-Datenträgern in Position I31 des ZVS1 ebenfalls größer 0 sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.I31'') 
,(''ZVS1'',''I31'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value=B.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1550, N'ZVSTA_2014', N'2021', N'580', N'LOGICAL', N'ZVS4', N'ZVS2', N'4.T1.I12.TO.A1.N > 0 => 2.I12.IN.DE.N > 0', N'Wenn Kartenzahlungen in Position T1.I12 des ZVS4 gemeldet wurden, dann müssen in Position I12 des ZVS2 Karten gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS2'',''I12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1551, N'ZVSTA_2014', N'2021', N'590', N'SUM', N'ZVS4', N'ZVS8', N'4.T2.I2122.TO.A1.N - 8.T2.I2122.S31.TO.A1.N >= 0', N'Die Position T2.I2122 des ZVS4 muss mindestens so groß sein wie die Position T2.I2122.S31des ZVS8.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I2122'') 
,(''ZVS8'',''T2.I2122.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>=B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1552, N'ZVSTA_2014', N'2021', N'591', N'SUM', N'ZVS4', N'ZVS8', N'4.T2.I2122.TO.A1.V - 8.T2.I2122.S31.TO.A1.V >= 0', N'Die Position T2.I2122 des ZVS4 muss mindestens so groß sein wie die Position T2.I2122.S31des ZVS8.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I2122'') 
,(''ZVS8'',''T2.I2122.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value>=B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1553, N'ZVSTA_2014', N'2021', N'600', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T0.S1.IN.A1.N - 5.A.T41.S111.IN.A1.N -
5.A.T42.S111.IN.A1.N - 5.A.T1.S12.IN.A1.N -
5.A.T3.S131.IN.A1.N - 5.A.T3.S132.IN.A1.N ~ 0', N'Die Oberposition A.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen A.T41.S111, A.T42.S111, A.T1.S12, A.T3.S131 und
A.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T0.S1'') 
,(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'')
,(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1554, N'ZVSTA_2014', N'2021', N'601', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T0.S1.IN.A1.V - 5.A.T41.S111.IN.A1.V -
5.A.T42.S111.IN.A1.V - 5.A.T1.S12.IN.A1.V -
5.A.T3.S131.IN.A1.V - 5.A.T3.S132.IN.A1.V ~ 0', N'Die Oberposition A.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen A.T41.S111, A.T42.S111, A.T1.S12, A.T3.S131 und
A.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T0.S1'') 
,(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'')
,(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1555, N'ZVSTA_2014', N'2021', N'650', N'SUM', N'ZVS5', N'ZVS5', N'5.B.T0.S1.IN.A1.N - 5.B.T41.S111.IN.A1.N -
5.B.T42.S111.IN.A1.N - 5.B.T1.S12.IN.A1.N -
5.B.T3.S131.IN.A1.N - 5.B.T3.S132.IN.A1.N ~ 0', N'Die Oberposition B.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen B.T41.S111, B.T42.S111, B.T1.S12, B.T3.S131 und
B.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''B.T0.S1'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'')
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1556, N'ZVSTA_2014', N'2021', N'651', N'SUM', N'ZVS5', N'ZVS5', N'5.B.T0.S1.IN.A1.V - 5.B.T41.S111.IN.A1.V -
5.B.T42.S111.IN.A1.V - 5.B.T1.S12.IN.A1.V -
5.B.T3.S131.IN.A1.V - 5.B.T3.S132.IN.A1.V ~ 0', N'Die Oberposition B.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der
dazugehörigen Unterpositionen B.T41.S111, B.T42.S111, B.T1.S12, B.T3.S131 und B.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''B.T0.S1'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'')
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1557, N'ZVSTA_2014', N'2021', N'700', N'SUM', N'ZVS5', N'ZVS5', N'5.C.T0.S1.IN.A1.N - 5.C.T41.S111.IN.A1.N -
5.C.T42.S111.IN.A1.N - 5.C.T1.S12.IN.A1.N -
5.C.T3.S131.IN.A1.N - 5.C.T3.S132.IN.A1.N ~ 0', N'Die Oberposition C.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der
dazugehörigen Unterpositionen C.T41.S111, C.T42.S111, C.T1.S12, C.T3.S131 und C.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS5'',''C.T41.S111'') 
,(''ZVS5'',''C.T42.S111'')
,(''ZVS5'',''C.T1.S12'') 
,(''ZVS5'',''C.T3.S131'') 
,(''ZVS5'',''C.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1558, N'ZVSTA_2014', N'2021', N'701', N'SUM', N'ZVS5', N'ZVS5', N'5.C.T0.S1.IN.A1.V - 5.C.T41.S111.IN.A1.V -
5.C.T42.S111.IN.A1.V - 5.C.T1.S12.IN.A1.V -
5.C.T3.S131.IN.A1.V - 5.C.T3.S132.IN.A1.V ~ 0', N'Die Oberposition C.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen C.T41.S111, C.T42.S111, C.T1.S12, C.T3.S131 und C.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS5'',''C.T41.S111'') 
,(''ZVS5'',''C.T42.S111'')
,(''ZVS5'',''C.T1.S12'') 
,(''ZVS5'',''C.T3.S131'') 
,(''ZVS5'',''C.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1559, N'ZVSTA_2014', N'2021', N'750', N'LOGICAL', N'ZVS5', N'ZVS1', N'5.C.T0.S1.IN.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N >
0', N'Wenn in Position C.T0.S1 des Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen auch Konten in den Positionen A1 oder A2 im Meldeschema ZVS1 gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS1'',''A1'') 
,(''ZVS1'',''A2'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value + C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value + C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1560, N'ZVSTA_2014', N'2021', N'760', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T41.S111.IN.A1.N + 5.A.T42.S111.IN.A1.N +
5.B.T41.S111.IN.A1.N + 5.B.T42.S111.IN.A1.N > 0 <=>
3.S111.IN.A1.N > 0', N'Wenn in den Positionen A.T41.S111, A.T42.S111, B.T41.S111 oder B.T42.S111 des Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen auch unter S111 des
ZVS3 Geldautomaten gemeldet werden und umgekehrt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'') 
,(''ZVS3'',''S111'')


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value>0 and E.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value=0 and E.Anzahl_Value=0  THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
           , @CHECK_TABLE E
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1561, N'ZVSTA_2014', N'2021', N'770', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T1.S12.IN.A1.N + 5.B.T1.S12.IN.A1.N > 0 <=>
3.S12.IN.A1.N > 0', N'Wenn in den Positionen A.T1.S12 oder B.T1.S12 des Meldeschemas ZVS5 Transaktionen
gemeldet werden, dann müssen auch unter S12 des ZVS3 POS-Terminals gemeldet werden und umgekehrt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS3'',''S12'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value + B.Anzahl_Value>0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1562, N'ZVSTA_2014', N'2021', N'780', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T3.S131.IN.A1.N + 5.B.T3.S131.IN.A1.N +
5.A.T3.S132.IN.A1.N + 5.B.T3.S132.IN.A1.N > 0 =>
3.S13.IN.A1.N > 0', N'Wenn in den Positionen A.T3.S131, A.T3.S132, B.T3.S131 oder B.T3.S132 des
Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen unter Position S13 des ZVS3 E-Geld-Terminals gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 
,(''ZVS3'',''S13'')


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value>0 and E.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value=0 and E.Anzahl_Value=0  THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
           , @CHECK_TABLE E
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1563, N'ZVSTA_2014', N'2021', N'880', N'LOGICAL', N'ZVS8', N'ZVS1', N'8.T42.S2.TO.A1.N + 8.T41.S2.TO.A1.N > 0 =>1.A1.IN.DE.N
> 0', N'Wenn in den Positionen T41.S2 oder T42.S2 des ZVS8 Transaktionen gemeldet werden, dann müssen auch unter A1 des ZVS1 Konten gemeldet worden sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS8'',''T41.S2'') 
,(''ZVS8'',''T42.S2'') 
,(''ZVS1'',''A1'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value + B.Anzahl_Value>0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1564, N'ZVSTA_2014', N'2021', N'890', N'LOGICAL', N'ZVS8', N'ZVS1', N'8.T2.I2122.S31.TO.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N
> 0', N'Wenn in Position T2.I2122.S31 des ZVS8 Transaktionen gemeldet werden, dann müssen auch unter A1 oder A2 des ZVS1 Konten gemeldet worden sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142021''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS8'',''T2.I2122.S31'') 
,(''ZVS1'',''A2'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1565, N'ZVSTA_2014', N'2020', N'100', N'SUM', N'ZVS1', N'ZVS1', N'1.A1.IN.DE.N - 1.A11.IN.DE.N >= 0', N'Die Oberposition A1 des Meldeschemas ZVS1 muss mindestens so groß sein wie die dazugehörige Unterposition A11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A11'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1566, N'ZVSTA_2014', N'2020', N'110', N'SUM', N'ZVS1', N'ZVS1', N'1.A1.IN.DE.N - 1.A12.IN.DE.N >= 0', N'Die Oberposition A1 des Meldeschemas ZVS1 muss mindestens so groß sein wie die tion A12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1567, N'ZVSTA_2014', N'2020', N'120', N'SUM', N'ZVS1', N'ZVS1', N'1.A11.IN.DE.N - 1.A121.IN.DE.N >= 0', N'Die Position A11 des Meldeschemas ZVS1
muss mindestens so groß sein wie die PositionA121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A11'') 
,(''ZVS1'',''A121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1568, N'ZVSTA_2014', N'2020', N'130', N'SUM', N'ZVS1', N'ZVS1', N'1.A12.IN.DE.N - 1.A121.IN.DE.N >= 0', N'Die Position A12 des Meldeschemas ZVS1
muss mindestens so groß sein wie die PositionA121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A12'') 
,(''ZVS1'',''A121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1569, N'ZVSTA_2014', N'2020', N'140', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I121.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss
mindestens so groß sein wie die dazugehörige Unterposition I121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.Anzahl_Value=B.Anzahl_Value
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1570, N'ZVSTA_2014', N'2020', N'150', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I122.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
dazugehörige Unterposition I122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1571, N'ZVSTA_2014', N'2020', N'160', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I123.IN.DE.N >= 0', N'Die Oberposition I12 des Meldeschemas ZVS2 muss
mindestens so groß sein wie die dazugehörige Unterposition I123.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I123'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1572, N'ZVSTA_2014', N'2020', N'170', N'SUM', N'ZVS2', N'ZVS2', N'2.I12.IN.DE.N - 2.I121.IN.DE.N -
2.I122.IN.DE.N -2.I123.IN.DE.N <= 0', N'Die Summe der Positionen I121, I122 und I123 des Meldeschemas ZVS2 muss
mindestens sogroß sein wie die Position I12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I121'') 
,(''ZVS2'',''I122'') 
,(''ZVS2'',''I123'')

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value+C.Anzahl_Value+D.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1573, N'ZVSTA_2014', N'2020', N'180', N'SUM', N'ZVS2', N'ZVS2', N'2.I124.IN.DE.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Position I124 des Meldeschemas ZVS2 daher
leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I124'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value=0 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1574, N'ZVSTA_2014', N'2020', N'190', N'SUM', N'ZVS2', N'ZVS2', N'2.I125.IN.DE.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Position I125 des Meldeschemas ZVS2 daher
leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I125'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value=0 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1575, N'ZVSTA_2014', N'2020', N'200', N'SUM', N'ZVS2', N'ZVS2', N'2.I13.IN.DE.N - 2.I131.IN.DE.N -
2.I132.IN.DE.N = 0', N'Die Oberposition I13 muss sich aus der Summe der dazugehörigen
Unterpositionen I131 desMeldeschemas ZVS2 und I132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I131'') 
,(''ZVS2'',''I132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value = B.Anzahl_Value+C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1576, N'ZVSTA_2014', N'2020', N'210', N'SUM', N'ZVS2', N'ZVS2', N'2.I13.IN.DE.N - 2.I1301.IN.DE.N >= 0', N'Die Oberposition I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
dazugehörige Unterposition I1301.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I1301'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1577, N'ZVSTA_2014', N'2020', N'220', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I11.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I11'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1578, N'ZVSTA_2014', N'2020', N'230', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I12.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die
Position I12.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1579, N'ZVSTA_2014', N'2020', N'240', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I13.IN.DE.N >= 0', N'Die Position I1 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I13.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I13'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  
CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1580, N'ZVSTA_2014', N'2020', N'250', N'SUM', N'ZVS2', N'ZVS2', N'2.I1.IN.DE.N - 2.I11.IN.DE.N - 2.I12.IN.DE.N -2.I13.IN.DE.N
<= 0', N'Die Summe der Positionen I11, I12 und I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I11'') 
,(''ZVS2'',''I12'') 
,(''ZVS2'',''I13'')

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value+C.Anzahl_Value+D.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1581, N'ZVSTA_2014', N'2020', N'260', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I11.IN.DE.N <= 0', N'Die Position I11 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I11'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1582, N'ZVSTA_2014', N'2020', N'270', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I12.IN.DE.N <= 0', N'Die Position I12 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I12'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1583, N'ZVSTA_2014', N'2020', N'280', N'SUM', N'ZVS2', N'ZVS2', N'2.I1001.IN.DE.N - 2.I13.IN.DE.N <= 0', N'Die Position I13 des Meldeschemas ZVS2 muss mindestens so groß sein wie die Position I1001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I13'') 
,(''ZVS2'',''I1001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1584, N'ZVSTA_2014', N'2020', N'300', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S111.IN.A1.N >= 0', N'Die Oberposition S11 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S111.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S111'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1585, N'ZVSTA_2014', N'2020', N'310', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S112.IN.A1.N >= 0', N'Die Oberposition S11 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S112.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S112'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1586, N'ZVSTA_2014', N'2020', N'320', N'SUM', N'ZVS3', N'ZVS3', N'3.S11.IN.A1.N - 3.S111.IN.A1.N - 3.S112.IN.A1.N <= 0', N'Die Summe der Positionen S111 und S112 des Meldeschemas ZVS3 muss mindestens so groß sein wie die Position S11.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S11'') 
,(''ZVS3'',''S111'') 
,(''ZVS3'',''S112'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1587, N'ZVSTA_2014', N'2020', N'330', N'SUM', N'ZVS3', N'ZVS3', N'3.S12.IN.A1.N - 3.S121.IN.A1.N >= 0', N'Die Oberposition S12 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S121.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S12'') 
,(''ZVS3'',''S121'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1588, N'ZVSTA_2014', N'2020', N'340', N'SUM', N'ZVS3', N'ZVS3', N'3.S12.IN.A1.N - 3.S122.IN.A1.N >= 0', N'Die Oberposition S12 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S12'') 
,(''ZVS3'',''S122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1589, N'ZVSTA_2014', N'2020', N'350', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S131.IN.A1.N >= 0', N'Die Oberposition S13 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S131.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S131'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1590, N'ZVSTA_2014', N'2020', N'360', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S132.IN.A1.N >= 0', N'Die Oberposition S13 des Meldeschemas ZVS3 muss mindestens so groß sein wie die dazugehörige Unterposition S132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1591, N'ZVSTA_2014', N'2020', N'370', N'SUM', N'ZVS3', N'ZVS3', N'3.S13.IN.A1.N - 3.S131.IN.A1.N - 3.S132.IN.A1.N <= 0', N'Die Summe der Positionen S131 und S132 des Meldeschemas ZVS3 muss mindestens so groß sein wie die Position S13.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S13'') 
,(''ZVS3'',''S131'') 
,(''ZVS3'',''S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1592, N'ZVSTA_2014', N'2020', N'380', N'SUM', N'ZVS3', N'ZVS3', N'3.S132.IN.A1.N - 3.S122.IN.A1.N >= 0', N'Die Position S132 des Meldeschemas ZVS3 muss mindestens so groß sein wie die PositionS122.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S132'') 
,(''ZVS3'',''S122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1593, N'ZVSTA_2014', N'2020', N'400', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21.TO.A1.N - 4.T2.I211.TO.A1.N -
4.T2.I212.TO.A1.N ~ 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I211 und T2.I212 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I211'') 
,(''ZVS4'',''T2.I212'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1594, N'ZVSTA_2014', N'2020', N'401', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21.TO.A1.V - 4.T2.I211.TO.A1.V - 4.T2.I212.TO.A1.V ~
0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I211 und T2.I212 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I211'') 
,(''ZVS4'',''T2.I212'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END





', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1595, N'ZVSTA_2014', N'2020', N'410', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I212.TO.A1.N - 4.T2.I2121.TO.A1.N -
4.T2.I2122.TO.A1.N ~ 0', N'Die Oberposition T2.I212 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I2121 und T2.I2122 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I212'') 
,(''ZVS4'',''T2.I2121'') 
,(''ZVS4'',''T2.I2122'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1596, N'ZVSTA_2014', N'2020', N'411', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I212.TO.A1.V - 4.T2.I2121.TO.A1.V -
4.T2.I2122.TO.A1.V ~ 0', N'Die Oberposition T2.I212 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I2121 und T2.I2122 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I212'') 
,(''ZVS4'',''T2.I2121'') 
,(''ZVS4'',''T2.I2122'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1597, N'ZVSTA_2014', N'2020', N'420', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21001.TO.A1.N - 4.T2.I21.TO.A1.N <= 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I21001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I21001'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1598, N'ZVSTA_2014', N'2020', N'421', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I21001.TO.A1.V - 4.T2.I21.TO.A1.V <= 0', N'Die Oberposition T2.I21 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I21001.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I21001'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1599, N'ZVSTA_2014', N'2020', N'430', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I22.TO.A1.N - 4.T2.I221.TO.A1.N - 4.T2.I222.TO.A1.N ~
0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I221 und T2.I222 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I221'') 
,(''ZVS4'',''T2.I222'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1600, N'ZVSTA_2014', N'2020', N'431', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I22.TO.A1.V - 4.T2.I221.TO.A1.V - 4.T2.I222.TO.A1.V ~
0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T2.I221 und T2.I222 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I221'') 
,(''ZVS4'',''T2.I222'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1601, N'ZVSTA_2014', N'2020', N'440', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2201.TO.A1.N - 4.T2.I22.TO.A1.N <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2201.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2201'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1602, N'ZVSTA_2014', N'2020', N'441', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2201.TO.A1.V - 4.T2.I22.TO.A1.V <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die
T2.I2201.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2201'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1603, N'ZVSTA_2014', N'2020', N'450', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2202.TO.A1.N - 4.T2.I22.TO.A1.N <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2202.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2202'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1604, N'ZVSTA_2014', N'2020', N'451', N'SUM', N'ZVS4', N'ZVS4', N'4.T2.I2202.TO.A1.V - 4.T2.I22.TO.A1.V <= 0', N'Die Oberposition T2.I22 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T2.I2202.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I22'') 
,(''ZVS4'',''T2.I2202'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1605, N'ZVSTA_2014', N'2020', N'460', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I121.TO.A1.N - 4.T1.I122.TO.A1.N -
4.T1.I123.TO.A1.N ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I121, T1.I122 und T1.I123 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I121'') 
,(''ZVS4'',''T1.I122'') 
,(''ZVS4'',''T1.I123'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1606, N'ZVSTA_2014', N'2020', N'461', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I121.TO.A1.V - 4.T1.I122.TO.A1.V -
4.T1.I123.TO.A1.V ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I121, T1.I122 und T1.I123 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I121'') 
,(''ZVS4'',''T1.I122'') 
,(''ZVS4'',''T1.I123'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1607, N'ZVSTA_2014', N'2020', N'470', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I124.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I124 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I124'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1608, N'ZVSTA_2014', N'2020', N'471', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I124.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I124 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I124'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1609, N'ZVSTA_2014', N'2020', N'480', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I125.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I125 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I125'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1610, N'ZVSTA_2014', N'2020', N'481', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T1.I125.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Kartentypen vorgenommen werden kann und die Sammelposition T1.I125 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I125'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1611, N'ZVSTA_2014', N'2020', N'490', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I12.S1.TO.A1.N -
4.T1.I12.S3.TO.A1.N ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1612, N'ZVSTA_2014', N'2020', N'491', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I12.S1.TO.A1.V -
4.T1.I12.S3.TO.A1.V ~ 0', N'Die Oberposition T1.I12 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1613, N'ZVSTA_2014', N'2020', N'500', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.N - 4.T1.I12.S1.TO.A1.N -
4.T1.I12.S3.TO.A1.N >= 0', N'Die Position T1.I12 des Meldeschemas ZVS4 muss mindestens so groß sein wie die Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1614, N'ZVSTA_2014', N'2020', N'501', N'SUM', N'ZVS4', N'ZVS4', N'4.T1.I12.TO.A1.V - 4.T1.I12.S1.TO.A1.V -
4.T1.I12.S3.TO.A1.V >= 0', N'Die Position T1.I12 des Meldeschemas ZVS4 muss mindestens so groß sein wie die Summe der dazugehörigen Unterpositionen T1.I12.S1 und T1.I12.S3.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T1.I12.S1'') 
,(''ZVS4'',''T1.I12.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1615, N'ZVSTA_2014', N'2020', N'510', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.TO.A1.N - 4.T3.I131.TO.A1.N - 4.T3.A3.TO.A1.N ~ 0', N'Die Oberposition T3 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T3.I131 und T3.A3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3'') 
,(''ZVS4'',''T3.I31'') 
,(''ZVS4'',''T3.A3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1616, N'ZVSTA_2014', N'2020', N'511', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.TO.A1.V - 4.T3.I131.TO.A1.V - 4.T3.A3.TO.A1.V ~ 0', N'Die Oberposition T3 des Meldeschemas ZVS4 muss sich aus der Summe der dazugehörigen Unterpositionen T3.I131 und T3.A3 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3'') 
,(''ZVS4'',''T3.I31'') 
,(''ZVS4'',''T3.A3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1617, N'ZVSTA_2014', N'2020', N'520', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.A3.TO.A1.N - 4.T3.I132.TO.A1.N >= 0', N'Die Oberposition T3.A3 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T3.I132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.A3'') 
,(''ZVS4'',''T3.I132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1618, N'ZVSTA_2014', N'2020', N'521', N'SUM', N'ZVS4', N'ZVS4', N'4.T3.A3.TO.A1.V - 4.T3.I132.TO.A1.V >= 0', N'Die Oberposition T3.A3 des Meldeschemas ZVS4 muss mindestens so groß sein wie die dazugehörige Unterposition T3.I132.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.A3'') 
,(''ZVS4'',''T3.I132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value 
from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value >= B.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1619, N'ZVSTA_2014', N'2020', N'530', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T0.I24.TO.A1.N = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der verschiedenen Zahlungsinstrumente vorgenommen werden kann und die Sammelposition T0.I24 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0.I24'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Anzahl_Value =0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1620, N'ZVSTA_2014', N'2020', N'531', N'LOGICAL', N'ZVS4', N'ZVS4', N'4.T0.I24.TO.A1.V = 0', N'Es wird davon ausgegangen, dass in Deutschland eine klare Unterscheidung der
verschiedenen Zahlungsinstrumente vorgenommen werden kann und die Sammelposition T0.I24 des Meldeschemas ZVS4 daher leer bleibt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0.I24'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=1
BEGIN
SELECT  CASE WHEN A.Wert_Value=0
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
        WHERE       A.ID = 1 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=0
BEGIN
SELECT ''N'' As CheckResult
END






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1621, N'ZVSTA_2014', N'2020', N'540', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.TO.A1.N - 4.T2.I21.TO.A1.N - 4.T2.I22.TO.A1.N -
4.T1.I12.TO.A1.N - 4.T3.TO.A1.N - 4.T0.I23.TO.A1.N ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte A1).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1622, N'ZVSTA_2014', N'2020', N'541', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.TO.A1.V - 4.T2.I21.TO.A1.V - 4.T2.I22.TO.A1.V -
4.T1.I12.TO.A1.V - 4.T3.TO.A1.V - 4.T0.I23.TO.A1.V ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte A1).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1623, N'ZVSTA_2014', N'2020', N'550', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.FROM.Z9.N - 4.T2.I21.FROM.Z9.N -
4.T2.I22.FROM.Z9.N - 4.T3.FROM.Z9.N -
4.T0.I23.FROM.Z9.N ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte Z9).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''Z9'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1624, N'ZVSTA_2014', N'2020', N'551', N'SUM', N'ZVS4', N'ZVS4', N'4.T0.FROM.Z9.V - 4.T2.I21.FROM.Z9.V -
4.T2.I22.FROM.Z9.V - 4.T3.FROM.Z9.V -
4.T0.I23.FROM.Z9.V ~ 0', N'Die Position T0 des Meldeschemas ZVS4 muss sich aus der Summe der Unterpositionen T2.I21, T2.I22, T1.I12, T3 und T0.I23 ergeben (hier Spalte Z9).', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS4'',''T2.I21'') 
,(''ZVS4'',''T2.I22'')
,(''ZVS4'',''T1.I12'') 
,(''ZVS4'',''T3'') 
,(''ZVS4'',''T0.I23'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''Z9'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1625, N'ZVSTA_2014', N'2020', N'560', N'LOGICAL', N'ZVS4', N'ZVS1', N'4.T0.TO.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N +
1.A3.IN.DE.N > 0', N'Wenn in Position T0 des ZVS4 Transaktionen gemeldet werden, dann müssen auch Konten inden Positionen A1, A2 oder A3 im Meldeschema ZVS1 gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T0'') 
,(''ZVS1'',''A1'') 
,(''ZVS1'',''A2'')
,(''ZVS1'',''A3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >0 and B.Anzahl_Value + C.Anzahl_Value +
                           D.Anzahl_Value>0 THEN ''Y'' 
WHEN A.Anzahl_Value=0 and B.Anzahl_Value + C.Anzahl_Value +
                           D.Anzahl_Value=0 THEN ''Y'' 

ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
        WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1626, N'ZVSTA_2014', N'2020', N'570', N'LOGICAL', N'ZVS4', N'ZVS1', N'4.T3.I131.TO.A1.V > 0 => 1.I31.IN.DE.V > 0', N'Wenn in Position T3.I131 des ZVS4 Transaktionen gemeldet werden, dann muss der
Aufladungsgegenwert auf E-Geld-Datenträgern in Position I31 des ZVS1 ebenfalls größer 0 sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T3.I31'') 
,(''ZVS1'',''I31'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value=B.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1627, N'ZVSTA_2014', N'2020', N'580', N'LOGICAL', N'ZVS4', N'ZVS2', N'4.T1.I12.TO.A1.N > 0 => 2.I12.IN.DE.N > 0', N'Wenn Kartenzahlungen in Position T1.I12 des ZVS4 gemeldet wurden, dann müssen in Position I12 des ZVS2 Karten gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T1.I12'') 
,(''ZVS2'',''I12'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1628, N'ZVSTA_2014', N'2020', N'590', N'SUM', N'ZVS4', N'ZVS8', N'4.T2.I2122.TO.A1.N - 8.T2.I2122.S31.TO.A1.N >= 0', N'Die Position T2.I2122 des ZVS4 muss mindestens so groß sein wie die Position T2.I2122.S31des ZVS8.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I2122'') 
,(''ZVS8'',''T2.I2122.S3'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>=B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1629, N'ZVSTA_2014', N'2020', N'591', N'SUM', N'ZVS4', N'ZVS8', N'4.T2.I2122.TO.A1.V - 8.T2.I2122.S31.TO.A1.V >= 0', N'Die Position T2.I2122 des ZVS4 muss mindestens so groß sein wie die Position T2.I2122.S31des ZVS8.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4'',''T2.I2122'') 
,(''ZVS8'',''T2.I2122.S3'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Wert_Value>=B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1630, N'ZVSTA_2014', N'2020', N'600', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T0.S1.IN.A1.N - 5.A.T41.S111.IN.A1.N -
5.A.T42.S111.IN.A1.N - 5.A.T1.S12.IN.A1.N -
5.A.T3.S131.IN.A1.N - 5.A.T3.S132.IN.A1.N ~ 0', N'Die Oberposition A.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen A.T41.S111, A.T42.S111, A.T1.S12, A.T3.S131 und
A.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T0.S1'') 
,(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'')
,(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1631, N'ZVSTA_2014', N'2020', N'601', N'LOGICAL', N'ZVS5', N'ZVS5', N'5.A.T0.S1.IN.A1.V - 5.A.T41.S111.IN.A1.V -
5.A.T42.S111.IN.A1.V - 5.A.T1.S12.IN.A1.V -
5.A.T3.S131.IN.A1.V - 5.A.T3.S132.IN.A1.V ~ 0', N'Die Oberposition A.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen A.T41.S111, A.T42.S111, A.T1.S12, A.T3.S131 und
A.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T0.S1'') 
,(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'')
,(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1632, N'ZVSTA_2014', N'2020', N'650', N'SUM', N'ZVS5', N'ZVS5', N'5.B.T0.S1.IN.A1.N - 5.B.T41.S111.IN.A1.N -
5.B.T42.S111.IN.A1.N - 5.B.T1.S12.IN.A1.N -
5.B.T3.S131.IN.A1.N - 5.B.T3.S132.IN.A1.N ~ 0', N'Die Oberposition B.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen B.T41.S111, B.T42.S111, B.T1.S12, B.T3.S131 und
B.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''B.T0.S1'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'')
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1633, N'ZVSTA_2014', N'2020', N'651', N'SUM', N'ZVS5', N'ZVS5', N'5.B.T0.S1.IN.A1.V - 5.B.T41.S111.IN.A1.V -
5.B.T42.S111.IN.A1.V - 5.B.T1.S12.IN.A1.V -
5.B.T3.S131.IN.A1.V - 5.B.T3.S132.IN.A1.V ~ 0', N'Die Oberposition B.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der
dazugehörigen Unterpositionen B.T41.S111, B.T42.S111, B.T1.S12, B.T3.S131 und B.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''B.T0.S1'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'')
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1634, N'ZVSTA_2014', N'2020', N'700', N'SUM', N'ZVS5', N'ZVS5', N'5.C.T0.S1.IN.A1.N - 5.C.T41.S111.IN.A1.N -
5.C.T42.S111.IN.A1.N - 5.C.T1.S12.IN.A1.N -
5.C.T3.S131.IN.A1.N - 5.C.T3.S132.IN.A1.N ~ 0', N'Die Oberposition C.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der
dazugehörigen Unterpositionen C.T41.S111, C.T42.S111, C.T1.S12, C.T3.S131 und C.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS5'',''C.T41.S111'') 
,(''ZVS5'',''C.T42.S111'')
,(''ZVS5'',''C.T1.S12'') 
,(''ZVS5'',''C.T3.S131'') 
,(''ZVS5'',''C.T3.S132'') 

UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
					+ E.Anzahl_Value + F.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1635, N'ZVSTA_2014', N'2020', N'701', N'SUM', N'ZVS5', N'ZVS5', N'5.C.T0.S1.IN.A1.V - 5.C.T41.S111.IN.A1.V -
5.C.T42.S111.IN.A1.V - 5.C.T1.S12.IN.A1.V -
5.C.T3.S131.IN.A1.V - 5.C.T3.S132.IN.A1.V ~ 0', N'Die Oberposition C.T0.S1 des Meldeschemas ZVS5 muss sich aus der Summe der dazugehörigen Unterpositionen C.T41.S111, C.T42.S111, C.T1.S12, C.T3.S131 und C.T3.S132 ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS5'',''C.T41.S111'') 
,(''ZVS5'',''C.T42.S111'')
,(''ZVS5'',''C.T1.S12'') 
,(''ZVS5'',''C.T3.S131'') 
,(''ZVS5'',''C.T3.S132'') 

UPDATE A SET A.Wert_Value=B.Wert_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''A1'')

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
					+ E.Wert_Value + F.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A
, @CHECK_TABLE B
, @CHECK_TABLE C
, @CHECK_TABLE D
, @CHECK_TABLE E
, @CHECK_TABLE F

        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
		AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1636, N'ZVSTA_2014', N'2020', N'750', N'LOGICAL', N'ZVS5', N'ZVS1', N'5.C.T0.S1.IN.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N >
0', N'Wenn in Position C.T0.S1 des Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen auch Konten in den Positionen A1 oder A2 im Meldeschema ZVS1 gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''C.T0.S1'') 
,(''ZVS1'',''A1'') 
,(''ZVS1'',''A2'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value + C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value + C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END















', N'N')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1637, N'ZVSTA_2014', N'2020', N'760', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T41.S111.IN.A1.N + 5.A.T42.S111.IN.A1.N +
5.B.T41.S111.IN.A1.N + 5.B.T42.S111.IN.A1.N > 0 <=>
3.S111.IN.A1.N > 0', N'Wenn in den Positionen A.T41.S111, A.T42.S111, B.T41.S111 oder B.T42.S111 des Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen auch unter S111 des
ZVS3 Geldautomaten gemeldet werden und umgekehrt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T41.S111'') 
,(''ZVS5'',''A.T42.S111'') 
,(''ZVS5'',''B.T41.S111'') 
,(''ZVS5'',''B.T42.S111'') 
,(''ZVS3'',''S111'')


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value>0 and E.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value=0 and E.Anzahl_Value=0  THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
           , @CHECK_TABLE E
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1638, N'ZVSTA_2014', N'2020', N'770', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T1.S12.IN.A1.N + 5.B.T1.S12.IN.A1.N > 0 <=>
3.S12.IN.A1.N > 0', N'Wenn in den Positionen A.T1.S12 oder B.T1.S12 des Meldeschemas ZVS5 Transaktionen
gemeldet werden, dann müssen auch unter S12 des ZVS3 POS-Terminals gemeldet werden und umgekehrt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T1.S12'') 
,(''ZVS5'',''B.T1.S12'') 
,(''ZVS3'',''S12'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value + B.Anzahl_Value>0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1639, N'ZVSTA_2014', N'2020', N'780', N'LOGICAL', N'ZVS5', N'ZVS3', N'5.A.T3.S131.IN.A1.N + 5.B.T3.S131.IN.A1.N +
5.A.T3.S132.IN.A1.N + 5.B.T3.S132.IN.A1.N > 0 =>
3.S13.IN.A1.N > 0', N'Wenn in den Positionen A.T3.S131, A.T3.S132, B.T3.S131 oder B.T3.S132 des
Meldeschemas ZVS5 Transaktionen gemeldet werden, dann müssen unter Position S13 des ZVS3 E-Geld-Terminals gemeldet werden.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5'',''A.T3.S131'') 
,(''ZVS5'',''A.T3.S132'') 
,(''ZVS5'',''B.T3.S131'') 
,(''ZVS5'',''B.T3.S132'') 
,(''ZVS3'',''S13'')


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value>0 and E.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value +B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value=0 and E.Anzahl_Value=0  THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
           , @CHECK_TABLE D
           , @CHECK_TABLE E
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1640, N'ZVSTA_2014', N'2020', N'880', N'LOGICAL', N'ZVS8', N'ZVS1', N'8.T42.S2.TO.A1.N + 8.T41.S2.TO.A1.N > 0 =>1.A1.IN.DE.N
> 0', N'Wenn in den Positionen T41.S2 oder T42.S2 des ZVS8 Transaktionen gemeldet werden, dann müssen auch unter A1 des ZVS1 Konten gemeldet worden sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS8'',''T41.S2'') 
,(''ZVS8'',''T42.S2'') 
,(''ZVS1'',''A1'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value + B.Anzahl_Value>0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value + B.Anzahl_Value=0 and C.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
           , @CHECK_TABLE C
         WHERE  A.ID = 1 AND B.ID = 2 AND C.ID = 3  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (1641, N'ZVSTA_2014', N'2020', N'890', N'LOGICAL', N'ZVS8', N'ZVS1', N'8.T2.I2122.S31.TO.A1.N > 0 => 1.A1.IN.DE.N + 1.A2.IN.DE.N
> 0', N'Wenn in Position T2.I2122.S31 des ZVS8 Transaktionen gemeldet werden, dann müssen auch unter A1 oder A2 des ZVS1 Konten gemeldet worden sein.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_20142020''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS8'',''T2.I2122.S31'') 
,(''ZVS1'',''A2'') 


UPDATE A SET A.Anzahl_Value=B.Anzahl_Value from @CHECK_TABLE A INNER JOIN ZVSTAT_Reporting B on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr
where B.[ZVSTA_Schema]+B.[ReportingPeriod]=@CURRENT_ZV_REPORT

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value>0 and B.Anzahl_Value>0 THEN ''Y'' 
             WHEN A.Anzahl_Value=0 and B.Anzahl_Value=0 THEN ''Y''
            ELSE ''N'' END As CheckResult
        FROM @CHECK_TABLE A       
 	    , @CHECK_TABLE B
         WHERE  A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6822, N'ZVSTA_2022_H', N'202212', N'S101', N'SUM', N'ZVS1', N'ZVS1', N'D1 >= D11', N'Die Anzahl der Online-Konten mit täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D1'') 
,(''ZVS1'',''D11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 



IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6823, N'ZVSTA_2022_H', N'202212', N'S102', N'SUM', N'ZVS1', N'ZVS1', N'D1 >= D12', N'Die Anzahl der Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D1'') 
,(''ZVS1'',''D12'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 



IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6824, N'ZVSTA_2022_H', N'202212', N'S103', N'SUM', N'ZVS1', N'ZVS1', N'D11 >= D121', N'Die Anzahl der Online-Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Online-Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D11'') 
,(''ZVS1'',''D121'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 



IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6825, N'ZVSTA_2022_H', N'202212', N'S104', N'SUM', N'ZVS1', N'ZVS1', N'D12 >= D121', N'Die Anzahl der Online-Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit übertragbaren, täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D12'') 
,(''ZVS1'',''D121'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 



IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6826, N'ZVSTA_2022_H', N'202212', N'S105', N'SUM', N'ZVS1', N'ZVS1', N'A1 >= A11', N'Die Anzahl der Zahlungskonten, auf die durch Kontoinformationsdienstleister zugegriffen wurde, darf nicht größer sein als die Anzahl der Zahlungskonten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6827, N'ZVSTA_2022_H', N'202212', N'S201', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I1', N'Es können nicht mehr Karten mit Bargeldfunktion gemeldet werde als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6828, N'ZVSTA_2022_H', N'202212', N'S202', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I2', N'Es können nicht mehr Karten mit Zahlungsfunktion gemeldet werden als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6829, N'ZVSTA_2022_H', N'202212', N'S203', N'SUM', N'ZVS2', N'ZVS2', N'I2 = I21 + I22 + I23', N'Die Anzahl der Karten mit Zahlungsfunktion muss sich aus der Summe der Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I2'') 
,(''ZVS2'',''I21'') 
,(''ZVS2'',''I22'')
,(''ZVS2'',''I23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6830, N'ZVSTA_2022_H', N'202212', N'S204.PCS', N'SUM', N'ZVS2', N'ZVS2', N'I21 >= I21.PCS', N'Die Anzahl der Debitkarten eines einzelnen Kartenzahlverfahren (Kartenscheme)* kann nicht größer sein als die Anzahl aller Debitkarten.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I21.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6831, N'ZVSTA_2022_H', N'202212', N'S205', N'SUM', N'ZVS2', N'ZVS2', N'I21 <= ∑ I21.PCS', N'Die Anzahl der Debitkarten kann nicht größer sein als die Summe der Karten der Kartenzahlverfahren (Kartenschemes).', N'


DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I21.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6832, N'ZVSTA_2022_H', N'202212', N'S206', N'SUM', N'ZVS2', N'ZVS2', N'I22 = ∑ I22.PCS', N'Die Anzahl der Kreditkarten ohne Kreditfunktion muss sich aus der Summe der Karten der Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I22'') 
,(''ZVS2'',''I22.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6833, N'ZVSTA_2022_H', N'202212', N'S207', N'SUM', N'ZVS2', N'ZVS2', N'I23 = ∑ I23.PCS', N'Die Anzahl der Kreditkarten mit Kreditfunktion muss sich aus der Summe der Karten der Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I23'') 
,(''ZVS2'',''I23.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6834, N'ZVSTA_2022_H', N'202212', N'S208', N'SUM', N'ZVS2', N'ZVS2', N'I3 = I31 + I32', N'Die Anzahl der E-Geld-Karten muss sich aus der Summe der E-Geld-Karten, auf denen E-Geld direkt gespeichert werden kann, und mit Zugang zu einem Konto ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I3'') 
,(''ZVS2'',''I31'') 
,(''ZVS2'',''I32'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6835, N'ZVSTA_2022_H', N'202212', N'S209', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I3', N'Es können nicht mehr Karten mit E-Geldfunktion gemeldet werde als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I3'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6836, N'ZVSTA_2022_H', N'202212', N'S210', N'SUM', N'ZVS2', N'ZVS2', N'I31 >= I311', N'Es können nicht mehr E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und die mindestens einmal geladen wurden, gemeldet werden als E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I31'') 
,(''ZVS2'',''I311'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6837, N'ZVSTA_2022_H', N'202212', N'S211', N'SUM', N'ZVS2', N'ZVS2', N'I0 <= I1 + I2 + I3', N'Die Anzahl der Karten insgesamt kann nicht größer sein als die Summe der Karten nach Funktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I1'') 
,(''ZVS2'',''I2'')
,(''ZVS2'',''I3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6838, N'ZVSTA_2022_H', N'202212', N'S212', N'SUM', N'ZVS2', N'ZVS2', N'I1 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit Bargeldfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6839, N'ZVSTA_2022_H', N'202212', N'S213', N'SUM', N'ZVS2', N'ZVS2', N'I21 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit Debitfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6840, N'ZVSTA_2022_H', N'202212', N'S214', N'SUM', N'ZVS2', N'ZVS2', N'I3 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit E-Geldfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I3'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6841, N'ZVSTA_2022_H', N'202212', N'S215', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6842, N'ZVSTA_2022_H', N'202212', N'S216', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I02', N'Es können nicht mehr Karten mit Kontaktlosfunktion gemeldet werden als Karten insgesamt', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I02'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6843, N'ZVSTA_2022_H', N'202212', N'S217', N'SUM', N'ZVS2', N'ZVS2', N'I02 <= I2 + I3', N'Es können nicht mehr Karten mit Kontaktlosfunktion gemeldet werden als die Summe aus Karten mit Zahlungsfunktion und Karten mit E-Geld-Funktion', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I02'') 
,(''ZVS2'',''I2'') 
,(''ZVS2'',''I3'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6844, N'ZVSTA_2022_H', N'202212', N'S301', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S11', N'Es können nicht mehr Geldautomaten gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6845, N'ZVSTA_2022_H', N'202212', N'S302', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S12', N'Es können nicht mehr Bankautomaten mit Überweisungsfunktion gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S12'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6846, N'ZVSTA_2022_H', N'202212', N'S303', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S13', N'Es können nicht mehr Bankautomaten mit Kontaktlosfunktion gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S13'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6847, N'ZVSTA_2022_H', N'202212', N'S304', N'SUM', N'ZVS3', N'ZVS3', N'S2 >= S21', N'Es können nicht mehr EFTPOS gemeldet werden als POS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S2'') 
,(''ZVS3'',''S21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6848, N'ZVSTA_2022_H', N'202212', N'S305', N'SUM', N'ZVS3', N'ZVS3', N'S21 >= S211', N'Es können nicht mehr EFTPOS mit Kontaktlosfunktion gemeldet werden als EFTPOS selbst.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S21'') 
,(''ZVS3'',''S211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6849, N'ZVSTA_2022_H', N'202212', N'S306', N'SUM', N'ZVS3', N'ZVS3', N'S21 >= S212', N'Es können nicht mehr EFTPOS, die E-Geld akzeptieren, gemeldet werden als EFTPOS selbst.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S21'') 
,(''ZVS3'',''S212'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6850, N'ZVSTA_2022_H', N'202212', N'S307', N'SUM', N'ZVS3', N'ZVS3', N'S32 >= S212', N'Es können nicht mehr EFTPOS, die E-Geld akzeptieren, gemeldet werden als Terminals, die E-Geld akzeptieren, insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S32'') 
,(''ZVS3'',''S212'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6851, N'ZVSTA_2022_H', N'202212', N'S308', N'SUM', N'ZVS3', N'ZVS3', N'S3 <= S31 + S32', N'Die Anzahl der E-Geld-Terminals darf nicht größer sein als die Summe der Terminals zum Auf- und Entladen von E-Geld und der Terminals, die E-Geld akzeptieren.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S31'') 
,(''ZVS3'',''S32'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6852, N'ZVSTA_2022_H', N'202212', N'S309', N'SUM', N'ZVS3', N'ZVS3', N'S3 >= S31', N'Es können nicht mehr Terminals zum Auf- und Entladen von E-Geld gemeldet werden als E-Geld Terminals insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S31'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6853, N'ZVSTA_2022_H', N'202212', N'S310', N'SUM', N'ZVS3', N'ZVS3', N'S3 >= S32', N'Es können nicht mehr Terminals, die E-Geld akzeptieren, gemeldet werden als E-Geld Terminals insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S32'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6854, N'ZVSTA_2022_H', N'202212', N'S4101.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT = PCT.1 + PCT.2 + PCT.3', N'Die Unterkategorien „beleghaft ausgelöst“, „elektronisch ausgelöst“ und „Sonstige“ müssen in der Summe die Überweisungen insgesamt ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PCT.1'') 
,(''ZVS4.1'',''PCT.2'')
,(''ZVS4.1'',''PCT.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6855, N'ZVSTA_2022_H', N'202212', N'S4102.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2 = PCT.2.R + PCT.2.NR', N'Die elektronischen Überweisungen müssen sich aus der Summe der elektronischen Überweisungen, welche über einen Fernzugang und ohne Fernzugang ausgelöst wurden, ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2'') 
,(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6856, N'ZVSTA_2022_H', N'202212', N'S4103.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2 = PCT.21 + PCT.22', N'Die elektronischen Überweisungen müssen sich aus der Summe der Datei/Sammelüberweisungen und der Einzelüberweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2'') 
,(''ZVS4.1'',''PCT.21'') 
,(''ZVS4.1'',''PCT.22'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6857, N'ZVSTA_2022_H', N'202212', N'S4104.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.22 = PCT.221 + PCT.222 + PCT.223', N'Die Einzelüberweisungen müssen sich aus der Summe der Onlineüberweisungen, am Bankautomat oder sonstigem durch einen ZDL bereitgestellten Terminal ausgelösten Überweisungen und mobilen Überweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.22'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.222'')
,(''ZVS4.1'',''PCT.223'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6858, N'ZVSTA_2022_H', N'202212', N'S4105.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.221 >= PCT.2211', N'Die E-Commerce-Zahlungen dürfen nicht größer sein als die Onlineüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.2211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6859, N'ZVSTA_2022_H', N'202212', N'S4106.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.223 >= PCT.2231', N'Die mobilen P2P-Überweisungen dürfen nicht größer sein als die mobilen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.223'') 
,(''ZVS4.1'',''PCT.2231'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6860, N'ZVSTA_2022_H', N'202212', N'S4107.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R = ∑ PCT.2.R.CTS', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.2.R.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6861, N'ZVSTA_2022_H', N'202212', N'S4108.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R >= PCT.221 + PCT.223', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen müssen mindestens so hoch sein wie die Summe der online ausgelösten und mobilen Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.223'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6862, N'ZVSTA_2022_H', N'202212', N'S4109.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R <= PCT.221 + PCT.223 + PCT.21', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen dürfen nicht höher sein als die Summe der online initiierten, den mobilen sowie der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.223'')
,(''ZVS4.1'',''PCT.21'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value <= B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6863, N'ZVSTA_2022_H', N'202212', N'S4110.CTS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.CTS = PCT.2.R.CTS.1 + PCT.2.R.CTS.2', N'Die über einen Fernzugang ausgelösten Überweisungen je nach Überweisungsverfahren* müssen sich aus den Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.CTS'') 
,(''ZVS4.1'',''PCT.2.R.CTS.1'') 
,(''ZVS4.1'',''PCT.2.R.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6864, N'ZVSTA_2022_H', N'202212', N'S4111.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.r0 = ∑ PCT.2.R.CTS.2', N'Die Summe der Überweisungen über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.r0'') 
,(''ZVS4.1'',''PCT.2.R.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6865, N'ZVSTA_2022_H', N'202212', N'S4112.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.r0 = PCT.2.R.r1 + PCT.2.R.r3 + PCT.2.R.r4 ', N'Die über einen Fernzugriff ausgelösten Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.r0'') 
,(''ZVS4.1'',''PCT.2.R.r1'') 
,(''ZVS4.1'',''PCT.2.R.r3'')
,(''ZVS4.1'',''PCT.2.R.r4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6866, N'ZVSTA_2022_H', N'202212', N'S4113.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR = ∑ PCT.2.NR.CTS', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.2.NR.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6867, N'ZVSTA_2022_H', N'202212', N'S4114.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR >= PCT.222', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen müssen mindestens genauso hoch sein wie die an einem Bankautomaten initiierten Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.222'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6868, N'ZVSTA_2022_H', N'202212', N'S4115.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR <= PCT.222 + PCT.21', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen dürfen nicht höher sein als die Summer der an einem Bankautomaten initiierten und der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.222'') 
,(''ZVS4.1'',''PCT.21'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6869, N'ZVSTA_2022_H', N'202212', N'S4116.CTS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.CTS = PCT.2.NR.CTS.1 + PCT.2.NR.CTS.2', N'Die nicht über einen Fernzugang ausgelösten Überweisungen je nach Überweisungsverfahren* müssen sich aus den Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.CTS'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.1'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6870, N'ZVSTA_2022_H', N'202212', N'S4117.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.r0 = ∑ PCT.2.NR.CTS.2', N'Die Summe der Überweisungen, nicht über einen Fernzugang, nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.r0'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6871, N'ZVSTA_2022_H', N'202212', N'S4118.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.r0 = PCT.2.NR.r2 + PCT.2.NR.r3 + PCT.2.NR', N'Die nicht über einen Fernzugriff ausgelösten Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.r0'') 
,(''ZVS4.1'',''PCT.2.NR.r2'') 
,(''ZVS4.1'',''PCT.2.NR.r3'')
,(''ZVS4.1'',''PCT.2.NR'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6872, N'ZVSTA_2022_H', N'202212', N'S4119.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT >= PCT.4', N'Die von einem Zahlungsauslösedienstleister ausgelösten Überweisungen können nicht größer sein als die Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PCT.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6873, N'ZVSTA_2022_H', N'202212', N'S4120.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD = PDD.1 + PDD.2', N'Die Lastschriften insgesamt müssen sich aus den Datei/Sammel- und Einzellastschriften ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PDD.1'') 
,(''ZVS4.1'',''PDD.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6874, N'ZVSTA_2022_H', N'202212', N'S4121.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD = PDD.3 + PDD.4', N'Die Lastschriften insgesamt müssen sich aus den Lastschriften mit elektronischer und sonstiger Mandatserteilung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PDD.3'') 
,(''ZVS4.1'',''PDD.4'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6875, N'ZVSTA_2022_H', N'202212', N'S4122.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.3 = ∑ PDD.3.DDS', N'Die Lastschriften mit elektronischer Mandatserteilung müssen sich aus der Summe der Lastschriften je nach Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.3'') 
,(''ZVS4.1'',''PCT.3.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6876, N'ZVSTA_2022_H', N'202212', N'S4123.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.4 = ∑ PDD.4.DDS', N'Die Lastschriften mit sonstiger Mandatserteilung müssen sich aus der Summe der Lastschriften ja nach Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.4'') 
,(''ZVS4.1'',''PCT.4.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6877, N'ZVSTA_2022_H', N'202212', N'S4124.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.5 <= PDD', N'Die karteninduzierten Lastschriften dürfen nicht größer sein als die Lastschriften insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.5'') 
,(''ZVS4.1'',''PDD'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6878, N'ZVSTA_2022_H', N'202212', N'S4125.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCW = ∑ PCW.PCS', N'Die Bargeldabhebungen mit Karten insgesamt müssen sich aus den Bargeldabhebungen mit Karten der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCW'') 
,(''ZVS4.1'',''PCW.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6879, N'ZVSTA_2022_H', N'202212', N'S4126.PCS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCW.PCS = PCW.PCS.1 + PCW.PCS.2 + PCW.PCS.3', N'Für jedes Kartenzahlverfahren (Kartenscheme)* müssen sich die Bargeldabhebungen mit Karten aus den Bargeldabhebungen mit Debitkarten, Kreditkarten ohne Kreditfunktion und Kreditkarten mit Kreditfunktion ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCW.PCS'') 
,(''ZVS4.1'',''PCW.PCS.1'') 
,(''ZVS4.1'',''PCW.PCS.2'')
,(''ZVS4.1'',''PCW.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6880, N'ZVSTA_2022_H', N'202212', N'S4127.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM = PEM.1 + PEM.2', N'Die Zahlungen mit E-Geld insgesamt müssen sich aus den Zahlungen mit E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und Zahlungen mit E-Geld-Konten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PEM.1'') 
,(''ZVS4.1'',''PEM.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6881, N'ZVSTA_2022_H', N'202212', N'S4128.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM = PEM.R + PEM.NR', N'Die Zahlungen mit E-Geld insgesamt müssen sich aus den E-Geld-Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6882, N'ZVSTA_2022_H', N'202212', N'S4129.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.2 = PEM.21 + PEM.22 + PEM.23', N'Die Zahlungen mit E-Geld-Konten müssen sich aus der Verfügung per Karte, mobilen E-Geld-Zahlungen und sonstigen E-Geld-Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.2'') 
,(''ZVS4.1'',''PEM.21'') 
,(''ZVS4.1'',''PEM.22'')
,(''ZVS4.1'',''PEM.23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6883, N'ZVSTA_2022_H', N'202212', N'S4130.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.22 >= PEM.221', N'Die mobilen E-Geld P2P-Zahlungen dürfen nicht höher sein als die E-Geld P2P-Zahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.22'') 
,(''ZVS4.1'',''PEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6884, N'ZVSTA_2022_H', N'202212', N'S4131.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R = PEM.R.1 + PEM.R.2', N'Die über einen Fernzugang ausgelösten E-Geld-Zahlungen müssen sich aus den E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.R.1'') 
,(''ZVS4.1'',''PEM.R.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6885, N'ZVSTA_2022_H', N'202212', N'S4132.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R >= PEM.221', N'Die E-Geld-Zahlungen über einen Fernzugang insgesamt dürfen nicht kleiner sein als die mobilen E-Geld P2P-Zahlungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6886, N'ZVSTA_2022_H', N'202212', N'S4133.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R.2 = PEM.R.2.r0', N'Die Summe der über einen Fernzugang ausgelösten E-Geld-Zahlungen nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der E-Geld-Zahlungen ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2'') 
,(''ZVS4.1'',''PEM.R.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6887, N'ZVSTA_2022_H', N'202212', N'S4134.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R.2.r0 = PEM.R.2.r1 + PEM.R.2.r3 + PEM.R.2.r4 ', N'Die über einen Fernzugriff ausgelösten E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2.r0'') 
,(''ZVS4.1'',''PEM.R.2.r1'') 
,(''ZVS4.1'',''PEM.R.2.r3'')
,(''ZVS4.1'',''PEM.R.2.r4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6888, N'ZVSTA_2022_H', N'202212', N'S4135.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR >= PEM.1', N'Die nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen dürfen nicht kleiner sein als E-Geld-Zahlungen mit Karten, auf denen das E-Geld direkt gespeichert werden kann.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR'') 
,(''ZVS4.1'',''PEM.1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6889, N'ZVSTA_2022_H', N'202212', N'S4136.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR = PEM.NR.1 + PEM.NR.2', N'Die nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen müssen sich aus den E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR'') 
,(''ZVS4.1'',''PEM.NR.1'') 
,(''ZVS4.1'',''PEM.NR.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6890, N'ZVSTA_2022_H', N'202212', N'S4137.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR.2 = PEM.NR.2.r0', N'Die Summe der nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der E-Geld-Zahlungen ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR.2'') 
,(''ZVS4.1'',''PEM.NR.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6891, N'ZVSTA_2022_H', N'202212', N'S4138.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR.2.r0 = PEM.NR.2.r2 + PEM.NR.2.r4 + PEM.NR.2', N'Die nicht über einen Fernzugriff ausgelösten E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2.r0'') 
,(''ZVS4.1'',''PEM.R.2.r2'') 
,(''ZVS4.1'',''PEM.R.2.r4'')
,(''ZVS4.1'',''PEM.NR.2'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6892, N'ZVSTA_2022_H', N'202212', N'S4139.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PTT = PCT + PDD + PCP + PCW + PEM + PCH + PMR + PO', N'Die Zahlungsvorgänge insgesamt müssen sich aus der Summe der Überweisungen, Lastschriften, Kartenzahlungen, Bargeldabhebungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und Sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PTT'')
,(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PCP'')
,(''ZVS4.1'',''PCW'') 
,(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PCH'') 
,(''ZVS4.1'',''PMR'') 
,(''ZVS4.1'',''PO'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E, @CHECK_TABLE F, @CHECK_TABLE G, @CHECK_TABLE H, @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6 AND G.ID = 7 AND H.ID = 8 AND I.ID = 9 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6893, N'ZVSTA_2022_H', N'202212', N'S4140.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI = PPI.R + PPI.NR', N'Die Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI'') 
,(''ZVS4.1'',''PPI.R'') 
,(''ZVS4.1'',''PPI.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6894, N'ZVSTA_2022_H', N'202212', N'S4141.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI = PPI.PCT + PPI.OTH', N'Die Transaktionen von Zahlungsauslösediensten müssen sich aus den Überweisungen und sonstigen Transaktionen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI'') 
,(''ZVS4.1'',''PPI.PCT'') 
,(''ZVS4.1'',''PPI.OTH'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6895, N'ZVSTA_2022_H', N'202212', N'S4142.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI.R = PPI.R.1 + PPI.R.2', N'Die über einen Fernzugang ausgelösten Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI.R'') 
,(''ZVS4.1'',''PPI.R.1'') 
,(''ZVS4.1'',''PPI.R.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6896, N'ZVSTA_2022_H', N'202212', N'S4143.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI.NR = PPI.NR.1 + PPI.NR.2', N'Die nicht über einen Fernzugang ausgelösten Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI.NR'') 
,(''ZVS4.1'',''PPI.NR.1'') 
,(''ZVS4.1'',''PPI.NR.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6897, N'ZVSTA_2022_H', N'202212', N'S4144.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PTT (empfangen) = PCT (empfangen) + PDD (empfangen', N'Die empfangenen Zahlungsvorgänge insgesamt müssen sich aus der Summe der Überweisungen, Lastschriften, Kartenzahlungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und Sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.1'',''PTT'',''FROM'') 
,(''ZVS4.1'',''PCT'',''FROM'') 
,(''ZVS4.1'',''PDD'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6898, N'ZVSTA_2022_H', N'202212', N'S4201.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP = PCP.1 + PCP.2', N'Die Zahlungen mit Karten insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten Zahlungen mit Karten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP'') 
,(''ZVS4.2'',''PCP.1'') 
,(''ZVS4.2'',''PCP.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6899, N'ZVSTA_2022_H', N'202212', N'S4202.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.1 = PCP.1.R + PCP.1.NR', N'Die nicht elektronisch ausgelösten Zahlungen mit Karten müssen sich aus den nicht elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.1'') 
,(''ZVS4.2'',''PCP.1.R'') 
,(''ZVS4.2'',''PCP.1.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6900, N'ZVSTA_2022_H', N'202212', N'S4203.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2 = PCP.2.R + PCP.2.NR', N'Die elektronisch ausgelösten Zahlungen mit Karten müssen sich aus den elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2'') 
,(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6901, N'ZVSTA_2022_H', N'202212', N'S4204.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R = ∑ PCP.2.R.PCS', N'Die elektronischen, über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.R.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6902, N'ZVSTA_2022_H', N'202212', N'S4205.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R = PCP.2.R.1 + PCP.2.R.4 ', N'Die über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den mobilen und sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.R.1'') 
,(''ZVS4.2'',''PCP.2.R.4'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6903, N'ZVSTA_2022_H', N'202212', N'S4206.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS = PCP.2.R.PCS.1 + PCP.2.R.PCS.2 + PCP.2.R.PCS.3', N'Die über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'') 
,(''ZVS4.2'',''PCP.2.R.PCS.1'') 
,(''ZVS4.2'',''PCP.2.R.PCS.2'')
,(''ZVS4.2'',''PCP.2.R.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6904, N'ZVSTA_2022_H', N'202212', N'S4207.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS = PCP.2.R.PCS.4 + PCP.2.R.PCS.5', N'Die über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'') 
,(''ZVS4.2'',''PCP.2.R.PCS.4'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6905, N'ZVSTA_2022_H', N'202212', N'S4208.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.1 >= PCP.2.R.11', N'Die über einen Fernzugang ausgelösten mobilen P2P-Kartenzahlungen dürfen nicht höher sein als die über einen Fernzugang ausgelösten mobilen Kartenzahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.1'') 
,(''ZVS4.2'',''PCP.2.R.11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6906, N'ZVSTA_2022_H', N'202212', N'S4209.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 = ∑ PCP.2.R.PCS.5', N'Die Summe der Kartenzahlungen über Fernzugriff ohne starke Kundenauthentifizierung der einzelnen Kartenzahlverfahren (Kartenschemes) muss den Kartenzahlungen nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6907, N'ZVSTA_2022_H', N'202212', N'S4210.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 = PCP.2.R.r1 + PCP.2.R.r4 + PCP.2.R.r5 ', N'Die über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'') 
,(''ZVS4.2'',''PCP.2.R.r1'') 
,(''ZVS4.2'',''PCP.2.R.r4'')
,(''ZVS4.2'',''PCP.2.R.r5'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6908, N'ZVSTA_2022_H', N'202212', N'S4211.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR = ∑ PCP.2.NR.PCS', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR'') 
,(''ZVS4.2'',''PCP.2.NR.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6909, N'ZVSTA_2022_H', N'202212', N'S4212.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR = PCP.2.NR.2 + PCP.2.NR.3 + PCP.2.NR.4', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR'') 
,(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.3'')
,(''ZVS4.2'',''PCP.2.NR.4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6910, N'ZVSTA_2022_H', N'202212', N'S4213.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS = PCP.2.NR.PCS.1 + PCP.2.NR.PCS.2 + PCP.2.NR.PCS.3', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.1'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.2'')
,(''ZVS4.2'',''PCP.2.NR.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6911, N'ZVSTA_2022_H', N'202212', N'S4214.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS = PCP.2.NR.PCS.4 + PCP.2.NR.PCS.5', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.4'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6912, N'ZVSTA_2022_H', N'202212', N'S4215.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.2 >= PCP.2.NR.21', N'Die kontaktlosen Kartenzahlungen an einem physischen EFTPOS dürfen nicht größer sein als die Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6913, N'ZVSTA_2022_H', N'202212', N'S4216.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.21 >= PCP.2.NR.211', N'Die kontaktlosen Kartenzahlungen an einem physischen EFTPOS per NFC dürfen nicht größer sein als die kontaktlosen Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.21'') 
,(''ZVS4.2'',''PCP.2.NR.2111'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6914, N'ZVSTA_2022_H', N'202212', N'S4217.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.2 >= PCP.2.NR.r6', N'Die elektronischen Kartenzahlungen ohne starke Kundenauthentifizierung an unbeaufsichtigten Terminals für Verkehrsnutzungsentgelte und Parkgebühren können nicht höher sein als elektronische Kartenzahlungen an physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.r6'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6915, N'ZVSTA_2022_H', N'202212', N'S4218.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 = ∑ PCP.2.NR.PCS.5', N'Die Summe der Kartenzahlungen nicht über einen Fernzugriff ohne starke Kundenauthentifizierung der einzelnen Kartenzahlverfahren (Kartenschemes) muss den Kartenzahlungen nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6916, N'ZVSTA_2022_H', N'202212', N'S4219.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 = PCP.2.NR.r2 + PCP.2.NR.r4 + PCP.2.NR.r5 + PCP.2.NR.r6 + PCP.2.NR.r10', N'Die nicht über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'') 
,(''ZVS4.2'',''PCP.2.NR.r2'') 
,(''ZVS4.2'',''PCP.2.NR.r4'')
,(''ZVS4.2'',''PCP.2.NR.r5'') 
,(''ZVS4.2'',''PCP.2.NR.r6'')
,(''ZVS4.2'',''PCP.2.NR.r10'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
                                 + E.Anzahl_Value + F.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value
+ F.Wert_Value

THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D , @CHECK_TABLE E , @CHECK_TABLE F
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6917, N'ZVSTA_2022_H', N'202212', N'S4220.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.1 <= PCP.2.NR.2 + PCP.2.NR.3', N'Die nicht über einen Fernzugang ausgelösten mobilen Kartenzahlungsvorgänge können nicht größer sein die Summe der Kartenzahlungen am EFTPOS-Terminal und am Bankautomat.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.1'') 
,(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.3'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6918, N'ZVSTA_2022_H', N'202212', N'S4221.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP (empfangen) = PCP.1 (empfangen) + PCP.2 (empfangen)', N'Die Zahlungen mit Karten an selbst abgerechneten Terminals insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten Zahlungen mit Karten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP'',''FROM'') 
,(''ZVS4.2'',''PCP.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6919, N'ZVSTA_2022_H', N'202212', N'S4222.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.1 (empfangen) = PCP.1.R (empfangen) + PCP.1.NR (empfangen)', N'Die nicht elektronisch ausgelösten Zahlungen mit Karten an selbst abgerechneten Terminals müssen sich aus den nicht elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.1'',''FROM'') 
,(''ZVS4.2'',''PCP.1.R'',''FROM'') 
,(''ZVS4.2'',''PCP.1.NR'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6920, N'ZVSTA_2022_H', N'202212', N'S4223.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2 (empfangen) = PCP.2.R (empfangen) + PCP.2.NR (empfangen)', N'Die elektronisch ausgelösten Zahlungen mit Karten an selbst abgerechneten Terminals müssen sich aus den elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6921, N'ZVSTA_2022_H', N'202212', N'S4224.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R (empfangen) = ∑ PCP.2.R.PCS (empfangen)', N'Die elektronischen, über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6922, N'ZVSTA_2022_H', N'202212', N'S4225.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS (empfangen) = PCP.2.R.PCS.1 (empfangen) + PCP.2.R.PCS.2 (empfangen) + PCP.2.R.PCS.3 (empfangen)', N'Die über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.3'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6923, N'ZVSTA_2022_H', N'202212', N'S4226.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS (empfangen) = PCP.2.R.PCS.4 (empfangen) + PCP.2.R.PCS.5 (empfangen)', N'Die über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.4'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6924, N'ZVSTA_2022_H', N'202212', N'S4227.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 (empfangen) = ∑ PCP.2.R.PCS.5 (empfangen)', N'Die Kartenzahlungen, über einen Fernzugriff, ohne starke Kundenauthentifizierung, nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung müssen der Summe der Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) an selbst abge', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6925, N'ZVSTA_2022_H', N'202212', N'S4228.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 (empfangen) = PCP.2.R.r1 (empfangen) + PCP.2.R.r5 (empfangen) + PCP.2.R.r8 (empfangen) + PCP.2.R.r9 (empfangen) + PCP.2.R.r10 (empfangen)', N'Die über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r5'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r8'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r9'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r10'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value + E.Anzahl_Value + F.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D , @CHECK_TABLE E, @CHECK_TABLE F         
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6926, N'ZVSTA_2022_H', N'202212', N'S4229.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR (empfangen) = ∑ PCP.2.NR.PCS (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6927, N'ZVSTA_2022_H', N'202212', N'S4230.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR (empfangen) = PCP.2.NR.2 (empfangen) + PCP.2.NR.3 (empfangen) + PCP.2.NR.4 (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.3'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.4'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6928, N'ZVSTA_2022_H', N'202212', N'S4231.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS (empfangen) = PCP.2.NR.PCS.1 (empfangen) + PCP.2.NR.PCS.2 (empfangen) + PCP.2.NR.PCS.3 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.3'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6929, N'ZVSTA_2022_H', N'202212', N'S4232.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS (empfangen) = PCP.2.NR.PCS.4 (empfangen) + PCP.2.NR.PCS.5 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.4'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6930, N'ZVSTA_2022_H', N'202212', N'S4233.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 (empfangen) = ∑ PCP.2.NR.PCS.5 (empfangen)', N'Die Kartenzahlungen, nicht über einen Fernzugriff, ohne starke Kundenauthentifizierung, nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung müssen der Summe der Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) an selbs', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6931, N'ZVSTA_2022_H', N'202212', N'S4234.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 (empfangen) = PCP.2.NR.r2 (empfangen) + PCP.2.NR.r5 (empfangen) + PCP.2.NR.r6 (empfangen) + PCP.2.NR.r10 (empfangen)', N'Die nicht über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r5'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r6'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r10'',''FROM'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value + E.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D   , @CHECK_TABLE E       
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6932, N'ZVSTA_2022_H', N'202212', N'S5101.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT = FCT.1 + FCT.2 + FCT.3', N'Die betrügerischen Überweisungen insgesamt müssen sich aus den beleghaften, beleglosen und sonstigen Überweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FCT.1'') 
,(''ZVS5.1'',''FCT.2'')
,(''ZVS5.1'',''FCT.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6933, N'ZVSTA_2022_H', N'202212', N'S5102.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2 = FCT.2.R + FCT.2.NR', N'Die betrügerischen elektronisch ausgelösten Überweisungen müssen sich aus den betrügerischen elektronischen Überweisungen mit und ohne Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2'') 
,(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6934, N'ZVSTA_2022_H', N'202212', N'S5103.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2 = FCT.21 + FCT.22', N'Die elektronischen betrügerischen Überweisungen müssen sich aus der Summe der als Datei/Sammelüberweisung und Einzelüberweisung ausgelösten betrügerischenÜberweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2'') 
,(''ZVS5.1'',''FCT.21'') 
,(''ZVS5.1'',''FCT.22'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6935, N'ZVSTA_2022_H', N'202212', N'S5104.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.22 = FCT.221 + FCT.222 + FCT.223', N'Die betrügerischen Einzelüberweisungen insgesamt müssen sich aus der Summe der betrügerischen Onlineüberweisungen, am Bankautomat oder sonstigem durch einen ZDL bereitgestellten Terminal ausgelösten betrügerischen Überweisungen und mobilen betrügerischen ', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.22'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.222'')
,(''ZVS5.1'',''FCT.223'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6936, N'ZVSTA_2022_H', N'202212', N'S5105.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.221 >= FCT.2211', N'Die betrügerischen E-Commerce-Zahlungen dürfen nicht größter sein als die betrügerischen Onlineüberweisungen .', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.2211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6937, N'ZVSTA_2022_H', N'202212', N'S5106.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.223 >= FCT.2231', N'Die betrügerischen mobilen P2P-Überweisungen dürfen nicht größer sein als die betrügerischen mobilen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.223'') 
,(''ZVS5.1'',''FCT.2231'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6938, N'ZVSTA_2022_H', N'202212', N'S5107.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R = ∑ FCT.2.R.CTS', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.2.R.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6939, N'ZVSTA_2022_H', N'202212', N'S5108.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R >= FCT.221 + FCT.223', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen mindestens so hoch sein wie die Summe der online initiierten und mobilen Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.223'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6940, N'ZVSTA_2022_H', N'202212', N'S5109.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R <= FCT.221 + FCT.223 + FCT.21', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen dürfen nicht höher sein als die Summe wie die Summe der online initiierten und mobilen Überweisungen, sowie der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.223'')
,(''ZVS5.1'',''FCT.21'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value <= B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6941, N'ZVSTA_2022_H', N'202212', N'S5110.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS = FCT.2.R.CTS.1 + FCT.2.R.CTS.2', N'Die über einen Fernzugang ausgelösten betrügerischen Überweisungen je nach Überweisungsverfahren* müssen sich aus den betrügerischen Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6942, N'ZVSTA_2022_H', N'202212', N'S5111.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS.1 = FCT.2.R.CTS.1.f1 + FCT.2.R.CTS.1.f2 + FCT.2.R.CTS.1.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* mit starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6943, N'ZVSTA_2022_H', N'202212', N'S5112.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS.2 = FCT.2.R.CTS.2.f1 + FCT.2.R.CTS.2.f2 + FCT.2.R.CTS.2.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* ohne starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS.2'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6944, N'ZVSTA_2022_H', N'202212', N'S5113.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.r0 = ∑ FCT.2.R.CTS.2', N'Die Summe der betrügerischen Überweisungen über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der betrügerischen Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.r0'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6945, N'ZVSTA_2022_H', N'202212', N'S5114.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.r0 = FCT.2.R.r1 + FCT.2.R.r3 + FCT.2.R.r4 + FCT.2.R.r5 + FCT.2.R.r7 + FCT.2.R.r8', N'Die über einen Fernzugriff ausgelösten betrügerischen Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.r0'') 
,(''ZVS5.1'',''FCT.2.R.r1'') 
,(''ZVS5.1'',''FCT.2.R.r3'')
,(''ZVS5.1'',''FCT.2.R.r4'') 
,(''ZVS5.1'',''FCT.2.R.r5'') 
,(''ZVS5.1'',''FCT.2.R.r7'') 
,(''ZVS5.1'',''FCT.2.R.r8'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value
and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 AND G.ID = 7
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6946, N'ZVSTA_2022_H', N'202212', N'S5115.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR = ∑ FCT.2.NR.CTS', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen ergeben sich aus der Summe der einzelnen Überweisungsverfahren.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.2.NR.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6947, N'ZVSTA_2022_H', N'202212', N'S5116.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR >= FCT.222', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen mindestens genauso hoch sein wie die an einem Bankautomaten ausgelösten Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.222'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6948, N'ZVSTA_2022_H', N'202212', N'S5117.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR <= FCT.222 + FCT.21', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen dürfen nicht höher sein als die Summer der an einem Bankautomaten ausgelösten Überweisungen und der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.222'') 
,(''ZVS5.1'',''FCT.21'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6949, N'ZVSTA_2022_H', N'202212', N'S5118.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS = FCT.2.NR.CTS.1 + FCT.2.NR.CTS.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Überweisungen je nach Überweisungsverfahren* müssen sich aus den betrügerischen Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.1'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6950, N'ZVSTA_2022_H', N'202212', N'S5119.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS.1 = FCT.2.NR.CTS.1.f1 + FCT.2.NR.CTS.1.f2 + FCT.2.NR.CTS.1.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* mit starker Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6951, N'ZVSTA_2022_H', N'202212', N'S5120.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS.2 = FCT.2.NR.CTS.2.f1 + FCT.2.NR.CTS.2.f2 + FCT.2.NR.CTS.2.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* ohne starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS.2'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6952, N'ZVSTA_2022_H', N'202212', N'S5121.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.r0 = ∑ FCT.2.NR.CTS.2', N'Die Summe der betrügerischen Überweisungen nicht über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der betrügerischen Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entspr', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.r0'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6953, N'ZVSTA_2022_H', N'202212', N'S5122.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.r0 = FCT.2.NR.r2 + FCT.2.NR.r3 + FCT.2.NR.r4 + FCT.2.NR.r5 + FCT.2.NR.r6', N'Die nicht über einen Fernzugriff ausgelösten betrügerischen Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.r0'') 
,(''ZVS5.1'',''FCT.2.NR.r2'') 
,(''ZVS5.1'',''FCT.2.NR.r3'')
,(''ZVS5.1'',''FCT.2.NR.r4'') 
,(''ZVS5.1'',''FCT.2.NR.r5'') 
,(''ZVS5.1'',''FCT.2.NR.r6'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6954, N'ZVSTA_2022_H', N'202212', N'S5123.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT >= FCT.4', N'Die betrügerischen Überweisungen, die von einem Zahlungsdienstleister ausgelöst wurden, dürfen nicht höher sein als die betrügerischen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FCT.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6955, N'ZVSTA_2022_H', N'202212', N'S5124.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD = FDD.1 + FDD.2', N'Die betrügerischen Lastschriften insgesamt müssen sich aus den betrügerischen Datei/Sammellastschriften und Einzellastschriften ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD'') 
,(''ZVS5.1'',''FDD.1'') 
,(''ZVS5.1'',''FDD.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6956, N'ZVSTA_2022_H', N'202212', N'S5125.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD = FDD.3 + FDD.4', N'Die betrügerischen Lastschriften müssen sich aus den betrügerischen Lastschriften mit elektronischer und sonstiger Mandatserteilung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD'') 
,(''ZVS5.1'',''FDD.3'') 
,(''ZVS5.1'',''FDD.4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6957, N'ZVSTA_2022_H', N'202212', N'S5126.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.3 = ∑ FDD.3.DDS', N'Die Lastschriften mit elektronischer Mandatserteilung müssen sich aus der Summe der Lastschriften mit elektronischer Mandatserteilung der einzelnen Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.3'') 
,(''ZVS5.1'',''FDD.3.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6958, N'ZVSTA_2022_H', N'202212', N'S5127.DDS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.3.DDS = FDD.3.DDS.f3 + FDD.3.DDS.f4', N'Die betrügerischen Lastschriften je nach Lastschriftverfahren* mit elektronischer Mandatserteilung müssen sich aus den betrügerischen Lastschriften je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.3.DDS'') 
,(''ZVS5.1'',''FDD.3.DDS.f3'') 
,(''ZVS5.1'',''FDD.3.DDS.f4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6959, N'ZVSTA_2022_H', N'202212', N'S5128.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.4 = ∑ FDD.4.DDS', N'Die Lastschriften mit sonstiger Mandatserteilung müssen sich aus der Summe der Lastschriften mit sonstiger Mandatserteilung der einzelnen Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.4'') 
,(''ZVS5.1'',''FDD.4.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6960, N'ZVSTA_2022_H', N'202212', N'S5129.DDS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.4.DDS = FDD.4.DDS.f3 + FDD.4.DDS.f4', N'Die betrügerischen Lastschriften je nach Lastschriftverfahren* mit sonstiger Mandatserteilung müssen sich aus den betrügerischen Lastschriften je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.4.DDS'') 
,(''ZVS5.1'',''FDD.4.DDS.f3'') 
,(''ZVS5.1'',''FDD.4.DDS.f4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6961, N'ZVSTA_2022_H', N'202212', N'S5130.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW = ∑ FCW.PCS', N'Die betrügerischen Bargeldabhebungen müssen sich aus der Summe der betrügerischen Bargeldabhebungen nach Kartenzahlverfahren (Kartenscheme) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW'') 
,(''ZVS5.1'',''FCW.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6962, N'ZVSTA_2022_H', N'202212', N'S5131.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS = FCW.PCS.1 + FCW.PCS.2 + FCW.PCS.3', N'Die betrügerischen Bargeldabhebungen mit Karten müssen sich für jedes Kartenzahlverfahren (Kartenscheme)* aus den Bargeldabhebungen mit Debitkarten, Kreditkarten ohne Kreditfunktion und Kreditkarten mit Kreditfunktion ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS'') 
,(''ZVS5.1'',''FCW.PCS.1'') 
,(''ZVS5.1'',''FCW.PCS.2'')
,(''ZVS5.1'',''FCW.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6963, N'ZVSTA_2022_H', N'202212', N'S5132.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS = FCW.PCS.f1 + FCW.PCS.f3', N'Die betrügerischen Bargeldabhebungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Bargeldabhebungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS'') 
,(''ZVS5.1'',''FCW.PCS.f1'') 
,(''ZVS5.1'',''FCW.PCS.f3'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6964, N'ZVSTA_2022_H', N'202212', N'S5133.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS.f1 = FCW.PCS.f11 + FCW.PCS.f12 + FCW.PCS.f13 + FCW.PCS.f16', N'Die betrügerischen Bargeldabhebungen durch Erteilung eines Auftrags durch den Betrüger je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS.f1'') 
,(''ZVS5.1'',''FCW.PCS.f11'') 
,(''ZVS5.1'',''FCW.PCS.f12'')
,(''ZVS5.1'',''FCW.PCS.f13'') 
,(''ZVS5.1'',''FCW.PCS.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6965, N'ZVSTA_2022_H', N'202212', N'S5134.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM = FEM.1 + FEM.2', N'Die betrügerischen Zahlungen mit E-Geld insgesamt müssen sich aus den betrügerischen Zahlungen mit E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und betrügerischen Zahlungen mit E-Geld-Konten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FEM.1'') 
,(''ZVS5.1'',''FEM.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6966, N'ZVSTA_2022_H', N'202212', N'S5135.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM = FEM.R + FEM.NR', N'Die betrügerischen Zahlungen mit E-Geld insgesamt müssen sich aus den betrügerischen E-Geld-Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6967, N'ZVSTA_2022_H', N'202212', N'S5136.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.2 = FEM.21 + FEM.22 + FEM.23', N'Die betrügerischen Zahlungen mit E-Geld-Konten müssen sich aus der Verfügung per Karte, mobilen E-Geld-Zahlungen und sonstigen E-Geld-Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.2'') 
,(''ZVS5.1'',''FEM.21'') 
,(''ZVS5.1'',''FEM.22'')
,(''ZVS5.1'',''FEM.23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6968, N'ZVSTA_2022_H', N'202212', N'S5137.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.22 >= FEM.221', N'Die betrügerischen mobilen E-Geld P2P-Zahlungen dürfen nicht höher sein als die E-Geld P2P-Zahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.22'') 
,(''ZVS5.1'',''FEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6969, N'ZVSTA_2022_H', N'202212', N'S5138.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R = FEM.R.1 + FEM.R.2', N'Die über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen müssen sich aus den betrügerischen E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.R.1'') 
,(''ZVS5.1'',''FEM.R.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6970, N'ZVSTA_2022_H', N'202212', N'S5139.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R >= FEM.221', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang insgesamt dürfen nicht kleiner sein als die mobilen E-Geld P2P-Zahlungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6971, N'ZVSTA_2022_H', N'202212', N'S5140.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.1 = FEM.R.1.f1 + FEM.R.1.f2 + FEM.R.1.f3', N'Die betrügerischen E-Geld-Zahlungen mit starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.1'') 
,(''ZVS5.1'',''FEM.R.1.f1'') 
,(''ZVS5.1'',''FEM.R.1.f2'')
,(''ZVS5.1'',''FEM.R.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6972, N'ZVSTA_2022_H', N'202212', N'S5141.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.1.f1 = FEM.R.1.f11 + FEM.R.1.f12 + FEM.R.1.f13 + FEM.R.1.f14 + FEM.R.1.f15', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang mit starker Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.1.f1'') 
,(''ZVS5.1'',''FEM.R.1.f11'') 
,(''ZVS5.1'',''FEM.R.1.f12'')
,(''ZVS5.1'',''FEM.R.1.f13'') 
,(''ZVS5.1'',''FEM.R.1.f14'') 
,(''ZVS5.1'',''FEM.R.1.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6973, N'ZVSTA_2022_H', N'202212', N'S5142.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2 = FEM.R.2.f1 + FEM.R.2.f2 + FEM.R.2.f3', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2'') 
,(''ZVS5.1'',''FEM.R.2.f1'') 
,(''ZVS5.1'',''FEM.R.2.f2'')
,(''ZVS5.1'',''FEM.R.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6974, N'ZVSTA_2022_H', N'202212', N'S5143.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2.f1 = FEM.R.2.f11 + FEM.R.2.f12 + FEM.R.2.f13 + FEM.R.2.f14 + FEM.R.2.f15', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang ohne starke Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2.f1'') 
,(''ZVS5.1'',''FEM.R.2.f11'') 
,(''ZVS5.1'',''FEM.R.2.f12'')
,(''ZVS5.1'',''FEM.R.2.f13'') 
,(''ZVS5.1'',''FEM.R.2.f14'') 
,(''ZVS5.1'',''FEM.R.2.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6975, N'ZVSTA_2022_H', N'202212', N'S5144.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2 = FEM.R.2.r0', N'Die über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus der Summe der betrügerischen E-Geld-Zahlungen je Grund für die Durchführung ohne starke Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2'') 
,(''ZVS5.1'',''FEM.R.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6976, N'ZVSTA_2022_H', N'202212', N'S5145.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2.r0 = FEM.R.2.r1 + FEM.R.2.r3 + FEM.R.2.r4 + FEM.R.2.r5 + FEM.R.2.r7 + FEM.R.2.r8 + FEM.R.2.r9 + FEM.R.2.r10', N'Die über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2.r0'') 
,(''ZVS5.1'',''FEM.R.2.r1'') 
,(''ZVS5.1'',''FEM.R.2.r3'')
,(''ZVS5.1'',''FEM.R.2.r4'') 
,(''ZVS5.1'',''FEM.R.2.r5'')
,(''ZVS5.1'',''FEM.R.2.r7'') 
,(''ZVS5.1'',''FEM.R.2.r8'') 
,(''ZVS5.1'',''FEM.R.2.r9'') 
,(''ZVS5.1'',''FEM.R.2.r10'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H , @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6
AND G.ID = 7
AND H.ID = 8
AND I.ID = 9

END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6977, N'ZVSTA_2022_H', N'202212', N'S5146.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR >= FEM.1', N'Die nicht über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen dürfen nicht kleiner sein als E-Geld-Zahlungen mit Karten, auf denen das E-Geld direkt gespeichert werden kann.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR'') 
,(''ZVS5.1'',''FEM.1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6978, N'ZVSTA_2022_H', N'202212', N'S5147.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR = FEM.NR.1 + FEM.NR.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen müssen sich aus den betrügerischen E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR'') 
,(''ZVS5.1'',''FEM.NR.1'') 
,(''ZVS5.1'',''FEM.NR.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6979, N'ZVSTA_2022_H', N'202212', N'S5148.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.1 = FEM.NR.1.f1 + FEM.NR.1.f2 + FEM.NR.1.f3', N'Die betrügerischen E-Geld-Zahlungen mit starker Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.1'') 
,(''ZVS5.1'',''FEM.NR.1.f1'') 
,(''ZVS5.1'',''FEM.NR.1.f2'')
,(''ZVS5.1'',''FEM.NR.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6980, N'ZVSTA_2022_H', N'202212', N'S5149.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.1.f1 = FEM.NR.1.f11 + FEM.NR.1.f12 + FEM.NR.1.f13 + FEM.NR.1.f15', N'Die betrügerischen E-Geld-Zahlungen nicht über einen Fernzugang mit starker Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.1.f1'') 
,(''ZVS5.1'',''FEM.NR.1.f11'') 
,(''ZVS5.1'',''FEM.NR.1.f12'')
,(''ZVS5.1'',''FEM.NR.1.f13'') 
,(''ZVS5.1'',''FEM.NR.1.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6981, N'ZVSTA_2022_H', N'202212', N'S5150.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2 = FEM.NR.2.f1 + FEM.NR.2.f2 + FEM.NR.2.f3', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2'') 
,(''ZVS5.1'',''FEM.NR.2.f1'') 
,(''ZVS5.1'',''FEM.NR.2.f2'')
,(''ZVS5.1'',''FEM.NR.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6982, N'ZVSTA_2022_H', N'202212', N'S5151.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2.f1 = FEM.NR.2.f11 + FEM.NR.2.f12 + FEM.NR.2.f13 + FEM.NR.2.f15', N'Die betrügerischen E-Geld-Zahlungen nicht über einen Fernzugang ohne starke Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2.f1'') 
,(''ZVS5.1'',''FEM.NR.2.f11'') 
,(''ZVS5.1'',''FEM.NR.2.f12'')
,(''ZVS5.1'',''FEM.NR.2.f13'') 
,(''ZVS5.1'',''FEM.NR.2.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6983, N'ZVSTA_2022_H', N'202212', N'S5152.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2 = FEM.NR.2.r0', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus der Summe der betrügerischen E-Geld-Zahlungen je Grund für die Durchführung ohne starke Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2'') 
,(''ZVS5.1'',''FEM.NR.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6984, N'ZVSTA_2022_H', N'202212', N'S5153.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2.r0 = FEM.NR.2.r2 + FEM.NR.2.r4 + FEM.NR.2.r5 + FEM.NR.2.r6 + FEM.NR.2.r10 ', N'Die nicht über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2.r0'') 
,(''ZVS5.1'',''FEM.NR.2.r2'') 
,(''ZVS5.1'',''FEM.NR.2.r4'')
,(''ZVS5.1'',''FEM.NR.2.r5'') 
,(''ZVS5.1'',''FEM.NR.2.r6'') 
,(''ZVS5.1'',''FEM.NR.2.r10'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6985, N'ZVSTA_2022_H', N'202212', N'S5154.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FTT = FCT + FDD + FCP + FCW + FEM + FCH + FMR + FOT', N'Die betrügerischen Zahlungsvorgänge insgesamt müssen sich aus der Summe der betrügerischen Überweisungen, Lastschriften, Kartenzahlungen, Bargeldabhebungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und sonstigen betrügerischen Zahlungsvorg', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FTT'') 
,(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FDD'')
,(''ZVS5.1'',''FCP'') 
,(''ZVS5.1'',''FCW'')
,(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FCH'') 
,(''ZVS5.1'',''FMR'') 
,(''ZVS5.1'',''FOT'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 

IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H , @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6
AND G.ID = 7
AND H.ID = 8
AND I.ID = 9

END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6986, N'ZVSTA_2022_H', N'202212', N'S5155.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI = FPI.R + FPI.NR', N'Die betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI'') 
,(''ZVS5.1'',''FPI.R'') 
,(''ZVS5.1'',''FPI.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6987, N'ZVSTA_2022_H', N'202212', N'S5156.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI = FPI.CTS + FPI.OTH', N'Die betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Überweisungen und sonstigen betrügerischen Transaktionen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI'') 
,(''ZVS5.1'',''FPI.CTS'') 
,(''ZVS5.1'',''FPI.OTH'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6988, N'ZVSTA_2022_H', N'202212', N'S5157.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI.R = FPI.R.1 + FPI.R.2', N'Die über einen Fernzugang ausgelösten betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI.R'') 
,(''ZVS5.1'',''FPI.R.1'') 
,(''ZVS5.1'',''FPI.R.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6989, N'ZVSTA_2022_H', N'202212', N'S5158.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI.NR = FPI.NR.1 + FPI.NR.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI.NR'') 
,(''ZVS5.1'',''FPI.NR.1'') 
,(''ZVS5.1'',''FPI.NR.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6990, N'ZVSTA_2022_H', N'202212', N'S5201.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP = FCP.1 + FCP.2', N'Die betrügerischen Kartenzahlungen insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten betrügerischen Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP'') 
,(''ZVS5.2'',''FCP.1'') 
,(''ZVS5.2'',''FCP.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6991, N'ZVSTA_2022_H', N'202212', N'S5202.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.1 = FCP.1.R + FCP.1.NR', N'Die betrügerischen nicht elektronisch ausgelösten Kartenzahlungen müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.1'') 
,(''ZVS5.2'',''FCP.1.R'') 
,(''ZVS5.2'',''FCP.1.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (6992, N'ZVSTA_2022_H', N'202212', N'S5203.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2 = FCP.2.R + FCP.2.NR', N'Die betrügerischen elektronisch ausgelösten Kartenzahlungen müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202212''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2'') 
,(''ZVS5.2'',''FCP.2.R'') 
,(''ZVS5.2'',''FCP.2.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11649, N'ZVSTA_2022_H', N'202206', N'INTERNAL_1', N'SUM', N'ZVS5.2', N'ZVS5.2', N'ZVS5.2 POSITIONS=4 Items', N'All Positions in ZVS5.2 should be have 4 Datarows (W0->Country,Country <->W0,Country<-->Country)', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

DECLARE @TOTALS_CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
PositionNr Nvarchar(50) NULL)

INSERT @TOTALS_CHECK_TABLE
(PositionNr)
SELECT PositionNr from @CHECK_TABLE
GROUP BY PositionNr  HAVING COUNT(*)<>4

 IF
 (Select COUNT(ID) from @TOTALS_CHECK_TABLE)<>0
 BEGIN 
 SELECT ''N'' As CheckResult
 END
 ELSE
 BEGIN 
 SELECT ''Y'' As CheckResult
 END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11650, N'ZVSTA_2022_H', N'202206', N'S101', N'SUM', N'ZVS1', N'ZVS1', N'D1 >= D11', N'Die Anzahl der Online-Konten mit täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D1'') 
,(''ZVS1'',''D11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

 

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11651, N'ZVSTA_2022_H', N'202206', N'S102', N'SUM', N'ZVS1', N'ZVS1', N'D1 >= D12', N'Die Anzahl der Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D1'') 
,(''ZVS1'',''D12'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11652, N'ZVSTA_2022_H', N'202206', N'S103', N'SUM', N'ZVS1', N'ZVS1', N'D11 >= D121', N'Die Anzahl der Online-Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Online-Konten mit täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D11'') 
,(''ZVS1'',''D121'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11653, N'ZVSTA_2022_H', N'202206', N'S104', N'SUM', N'ZVS1', N'ZVS1', N'D12 >= D121', N'Die Anzahl der Online-Konten mit übertragbaren, täglich fälligen Einlagen kann nicht größer sein als die Anzahl der Konten mit übertragbaren, täglich fälligen Einlagen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''D12'') 
,(''ZVS1'',''D121'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11654, N'ZVSTA_2022_H', N'202206', N'S105', N'SUM', N'ZVS1', N'ZVS1', N'A1 >= A11', N'Die Anzahl der Zahlungskonten, auf die durch Kontoinformationsdienstleister zugegriffen wurde, darf nicht größer sein als die Anzahl der Zahlungskonten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS1'',''A1'') 
,(''ZVS1'',''A11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11655, N'ZVSTA_2022_H', N'202206', N'S201', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I1', N'Es können nicht mehr Karten mit Bargeldfunktion gemeldet werde als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11656, N'ZVSTA_2022_H', N'202206', N'S202', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I2', N'Es können nicht mehr Karten mit Zahlungsfunktion gemeldet werden als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11657, N'ZVSTA_2022_H', N'202206', N'S203', N'SUM', N'ZVS2', N'ZVS2', N'I2 = I21 + I22 + I23', N'Die Anzahl der Karten mit Zahlungsfunktion muss sich aus der Summe der Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I2'') 
,(''ZVS2'',''I21'') 
,(''ZVS2'',''I22'')
,(''ZVS2'',''I23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11658, N'ZVSTA_2022_H', N'202206', N'S204.PCS', N'SUM', N'ZVS2', N'ZVS2', N'I21 >= I21.PCS', N'Die Anzahl der Debitkarten eines einzelnen Kartenzahlverfahren (Kartenscheme)* kann nicht größer sein als die Anzahl aller Debitkarten.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I21.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11659, N'ZVSTA_2022_H', N'202206', N'S205', N'SUM', N'ZVS2', N'ZVS2', N'I21 <= ∑ I21.PCS', N'Die Anzahl der Debitkarten kann nicht größer sein als die Summe der Karten der Kartenzahlverfahren (Kartenschemes).', N'


DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I21.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11660, N'ZVSTA_2022_H', N'202206', N'S206', N'SUM', N'ZVS2', N'ZVS2', N'I22 = ∑ I22.PCS', N'Die Anzahl der Kreditkarten ohne Kreditfunktion muss sich aus der Summe der Karten der Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I22'') 
,(''ZVS2'',''I22.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11661, N'ZVSTA_2022_H', N'202206', N'S207', N'SUM', N'ZVS2', N'ZVS2', N'I23 = ∑ I23.PCS', N'Die Anzahl der Kreditkarten mit Kreditfunktion muss sich aus der Summe der Karten der Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I23'') 
,(''ZVS2'',''I23.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11662, N'ZVSTA_2022_H', N'202206', N'S208', N'SUM', N'ZVS2', N'ZVS2', N'I3 = I31 + I32', N'Die Anzahl der E-Geld-Karten muss sich aus der Summe der E-Geld-Karten, auf denen E-Geld direkt gespeichert werden kann, und mit Zugang zu einem Konto ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I3'') 
,(''ZVS2'',''I31'') 
,(''ZVS2'',''I32'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11663, N'ZVSTA_2022_H', N'202206', N'S209', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I3', N'Es können nicht mehr Karten mit E-Geldfunktion gemeldet werde als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I3'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11664, N'ZVSTA_2022_H', N'202206', N'S210', N'SUM', N'ZVS2', N'ZVS2', N'I31 >= I311', N'Es können nicht mehr E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und die mindestens einmal geladen wurden, gemeldet werden als E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I31'') 
,(''ZVS2'',''I311'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11665, N'ZVSTA_2022_H', N'202206', N'S211', N'SUM', N'ZVS2', N'ZVS2', N'I0 <= I1 + I2 + I3', N'Die Anzahl der Karten insgesamt kann nicht größer sein als die Summe der Karten nach Funktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I1'') 
,(''ZVS2'',''I2'')
,(''ZVS2'',''I3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11666, N'ZVSTA_2022_H', N'202206', N'S212', N'SUM', N'ZVS2', N'ZVS2', N'I1 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit Bargeldfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I1'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11667, N'ZVSTA_2022_H', N'202206', N'S213', N'SUM', N'ZVS2', N'ZVS2', N'I21 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit Debitfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I21'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11668, N'ZVSTA_2022_H', N'202206', N'S214', N'SUM', N'ZVS2', N'ZVS2', N'I3 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten mit E-Geldfunktion.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I3'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11669, N'ZVSTA_2022_H', N'202206', N'S215', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I01', N'Es können nicht mehr Karten mit kombinierten Funktionen gemeldet werden als Karten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I01'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11670, N'ZVSTA_2022_H', N'202206', N'S216', N'SUM', N'ZVS2', N'ZVS2', N'I0 >= I02', N'Es können nicht mehr Karten mit Kontaktlosfunktion gemeldet werden als Karten insgesamt', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I0'') 
,(''ZVS2'',''I02'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11671, N'ZVSTA_2022_H', N'202206', N'S217', N'SUM', N'ZVS2', N'ZVS2', N'I02 <= I2 + I3', N'Es können nicht mehr Karten mit Kontaktlosfunktion gemeldet werden als die Summe aus Karten mit Zahlungsfunktion und Karten mit E-Geld-Funktion', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS2'',''I02'') 
,(''ZVS2'',''I2'') 
,(''ZVS2'',''I3'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11672, N'ZVSTA_2022_H', N'202206', N'S301', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S11', N'Es können nicht mehr Geldautomaten gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11673, N'ZVSTA_2022_H', N'202206', N'S302', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S12', N'Es können nicht mehr Bankautomaten mit Überweisungsfunktion gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S12'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11674, N'ZVSTA_2022_H', N'202206', N'S303', N'SUM', N'ZVS3', N'ZVS3', N'S1 >= S13', N'Es können nicht mehr Bankautomaten mit Kontaktlosfunktion gemeldet werden als Bankautomaten insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S1'') 
,(''ZVS3'',''S13'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11675, N'ZVSTA_2022_H', N'202206', N'S304', N'SUM', N'ZVS3', N'ZVS3', N'S2 >= S21', N'Es können nicht mehr EFTPOS gemeldet werden als POS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S2'') 
,(''ZVS3'',''S21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11676, N'ZVSTA_2022_H', N'202206', N'S305', N'SUM', N'ZVS3', N'ZVS3', N'S21 >= S211', N'Es können nicht mehr EFTPOS mit Kontaktlosfunktion gemeldet werden als EFTPOS selbst.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S21'') 
,(''ZVS3'',''S211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11677, N'ZVSTA_2022_H', N'202206', N'S306', N'SUM', N'ZVS3', N'ZVS3', N'S21 >= S212', N'Es können nicht mehr EFTPOS, die E-Geld akzeptieren, gemeldet werden als EFTPOS selbst.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S21'') 
,(''ZVS3'',''S212'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11678, N'ZVSTA_2022_H', N'202206', N'S307', N'SUM', N'ZVS3', N'ZVS3', N'S32 >= S212', N'Es können nicht mehr EFTPOS, die E-Geld akzeptieren, gemeldet werden als Terminals, die E-Geld akzeptieren, insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S32'') 
,(''ZVS3'',''S212'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11679, N'ZVSTA_2022_H', N'202206', N'S308', N'SUM', N'ZVS3', N'ZVS3', N'S3 <= S31 + S32', N'Die Anzahl der E-Geld-Terminals darf nicht größer sein als die Summe der Terminals zum Auf- und Entladen von E-Geld und der Terminals, die E-Geld akzeptieren.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S31'') 
,(''ZVS3'',''S32'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END

ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11680, N'ZVSTA_2022_H', N'202206', N'S309', N'SUM', N'ZVS3', N'ZVS3', N'S3 >= S31', N'Es können nicht mehr Terminals zum Auf- und Entladen von E-Geld gemeldet werden als E-Geld Terminals insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S31'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11681, N'ZVSTA_2022_H', N'202206', N'S310', N'SUM', N'ZVS3', N'ZVS3', N'S3 >= S32', N'Es können nicht mehr Terminals, die E-Geld akzeptieren, gemeldet werden als E-Geld Terminals insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS3'',''S3'') 
,(''ZVS3'',''S32'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11682, N'ZVSTA_2022_H', N'202206', N'S4101.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT = PCT.1 + PCT.2 + PCT.3', N'Die Unterkategorien „beleghaft ausgelöst“, „elektronisch ausgelöst“ und „Sonstige“ müssen in der Summe die Überweisungen insgesamt ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0),
LandCode Nvarchar(50) default ''W0'')


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PCT.1'') 
,(''ZVS4.1'',''PCT.2'')
,(''ZVS4.1'',''PCT.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,[LandCode]  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT
and [LandCode] in (''W0'') and [Landkontext] in (''TO'')
GROUP BY PositionNr,FormNr,[LandCode])B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.[LandCode]=B.[LandCode]

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and ROUND(A.Wert_Value,2) = ROUND(B.Wert_Value,2) + ROUND(C.Wert_Value,2) + ROUND(D.Wert_Value,2)
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11683, N'ZVSTA_2022_H', N'202206', N'S4102.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2 = PCT.2.R + PCT.2.NR', N'Die elektronischen Überweisungen müssen sich aus der Summe der elektronischen Überweisungen, welche über einen Fernzugang und ohne Fernzugang ausgelöst wurden, ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2'') 
,(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11684, N'ZVSTA_2022_H', N'202206', N'S4103.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2 = PCT.21 + PCT.22', N'Die elektronischen Überweisungen müssen sich aus der Summe der Datei/Sammelüberweisungen und der Einzelüberweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2'') 
,(''ZVS4.1'',''PCT.21'') 
,(''ZVS4.1'',''PCT.22'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11685, N'ZVSTA_2022_H', N'202206', N'S4104.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.22 = PCT.221 + PCT.222 + PCT.223', N'Die Einzelüberweisungen müssen sich aus der Summe der Onlineüberweisungen, am Bankautomat oder sonstigem durch einen ZDL bereitgestellten Terminal ausgelösten Überweisungen und mobilen Überweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.22'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.222'')
,(''ZVS4.1'',''PCT.223'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11686, N'ZVSTA_2022_H', N'202206', N'S4105.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.221 >= PCT.2211', N'Die E-Commerce-Zahlungen dürfen nicht größer sein als die Onlineüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.2211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11687, N'ZVSTA_2022_H', N'202206', N'S4106.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.223 >= PCT.2231', N'Die mobilen P2P-Überweisungen dürfen nicht größer sein als die mobilen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.223'') 
,(''ZVS4.1'',''PCT.2231'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11688, N'ZVSTA_2022_H', N'202206', N'S4107.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R = ∑ PCT.2.R.CTS', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.2.R.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11689, N'ZVSTA_2022_H', N'202206', N'S4108.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R >= PCT.221 + PCT.223', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen müssen mindestens so hoch sein wie die Summe der online ausgelösten und mobilen Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.223'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11690, N'ZVSTA_2022_H', N'202206', N'S4109.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R <= PCT.221 + PCT.223 + PCT.21', N'Die über einen Fernzugang ausgelösten elektronischen Überweisungen dürfen nicht höher sein als die Summe der online initiierten, den mobilen sowie der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R'') 
,(''ZVS4.1'',''PCT.221'') 
,(''ZVS4.1'',''PCT.223'')
,(''ZVS4.1'',''PCT.21'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value <= B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11691, N'ZVSTA_2022_H', N'202206', N'S4110.CTS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.CTS = PCT.2.R.CTS.1 + PCT.2.R.CTS.2', N'Die über einen Fernzugang ausgelösten Überweisungen je nach Überweisungsverfahren* müssen sich aus den Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.CTS'') 
,(''ZVS4.1'',''PCT.2.R.CTS.1'') 
,(''ZVS4.1'',''PCT.2.R.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11692, N'ZVSTA_2022_H', N'202206', N'S4111.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.r0 = ∑ PCT.2.R.CTS.2', N'Die Summe der Überweisungen über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.r0'') 
,(''ZVS4.1'',''PCT.2.R.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11693, N'ZVSTA_2022_H', N'202206', N'S4112.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.R.r0 = PCT.2.R.r1 + PCT.2.R.r3 + PCT.2.R.r4 ', N'Die über einen Fernzugriff ausgelösten Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.R.r0'') 
,(''ZVS4.1'',''PCT.2.R.r1'') 
,(''ZVS4.1'',''PCT.2.R.r3'')
,(''ZVS4.1'',''PCT.2.R.r4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11694, N'ZVSTA_2022_H', N'202206', N'S4113.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR = ∑ PCT.2.NR.CTS', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.2.NR.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11695, N'ZVSTA_2022_H', N'202206', N'S4114.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR >= PCT.222', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen müssen mindestens genauso hoch sein wie die an einem Bankautomaten initiierten Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.222'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11696, N'ZVSTA_2022_H', N'202206', N'S4115.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR <= PCT.222 + PCT.21', N'Die nicht über einen Fernzugang ausgelösten elektronischen Überweisungen dürfen nicht höher sein als die Summer der an einem Bankautomaten initiierten und der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR'') 
,(''ZVS4.1'',''PCT.222'') 
,(''ZVS4.1'',''PCT.21'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11697, N'ZVSTA_2022_H', N'202206', N'S4116.CTS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.CTS = PCT.2.NR.CTS.1 + PCT.2.NR.CTS.2', N'Die nicht über einen Fernzugang ausgelösten Überweisungen je nach Überweisungsverfahren* müssen sich aus den Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.CTS'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.1'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11698, N'ZVSTA_2022_H', N'202206', N'S4117.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.r0 = ∑ PCT.2.NR.CTS.2', N'Die Summe der Überweisungen, nicht über einen Fernzugang, nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.r0'') 
,(''ZVS4.1'',''PCT.2.NR.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11699, N'ZVSTA_2022_H', N'202206', N'S4118.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT.2.NR.r0 = PCT.2.NR.r2 + PCT.2.NR.r3 + PCT.2.NR', N'Die nicht über einen Fernzugriff ausgelösten Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT.2.NR.r0'') 
,(''ZVS4.1'',''PCT.2.NR.r2'') 
,(''ZVS4.1'',''PCT.2.NR.r3'')
,(''ZVS4.1'',''PCT.2.NR.r4'')
,(''ZVS4.1'',''PCT.2.NR.r5'')
,(''ZVS4.1'',''PCT.2.NR.r6'')
,(''ZVS4.1'',''PCT.2.NR'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11700, N'ZVSTA_2022_H', N'202206', N'S4119.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCT >= PCT.4', N'Die von einem Zahlungsauslösedienstleister ausgelösten Überweisungen können nicht größer sein als die Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PCT.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11701, N'ZVSTA_2022_H', N'202206', N'S4120.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD = PDD.1 + PDD.2', N'Die Lastschriften insgesamt müssen sich aus den Datei/Sammel- und Einzellastschriften ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PDD.1'') 
,(''ZVS4.1'',''PDD.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11702, N'ZVSTA_2022_H', N'202206', N'S4121.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD = PDD.3 + PDD.4', N'Die Lastschriften insgesamt müssen sich aus den Lastschriften mit elektronischer und sonstiger Mandatserteilung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PDD.3'') 
,(''ZVS4.1'',''PDD.4'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11703, N'ZVSTA_2022_H', N'202206', N'S4122.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.3 = ∑ PDD.3.DDS', N'Die Lastschriften mit elektronischer Mandatserteilung müssen sich aus der Summe der Lastschriften je nach Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.3'') 
,(''ZVS4.1'',''PCT.3.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11704, N'ZVSTA_2022_H', N'202206', N'S4123.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.4 = ∑ PDD.4.DDS', N'Die Lastschriften mit sonstiger Mandatserteilung müssen sich aus der Summe der Lastschriften ja nach Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.4'') 
,(''ZVS4.1'',''PCT.4.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11705, N'ZVSTA_2022_H', N'202206', N'S4124.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PDD.5 <= PDD', N'Die karteninduzierten Lastschriften dürfen nicht größer sein als die Lastschriften insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PDD.5'') 
,(''ZVS4.1'',''PDD'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11706, N'ZVSTA_2022_H', N'202206', N'S4125.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCW = ∑ PCW.PCS', N'Die Bargeldabhebungen mit Karten insgesamt müssen sich aus den Bargeldabhebungen mit Karten der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCW'') 
,(''ZVS4.1'',''PCW.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11707, N'ZVSTA_2022_H', N'202206', N'S4126.PCS.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PCW.PCS = PCW.PCS.1 + PCW.PCS.2 + PCW.PCS.3', N'Für jedes Kartenzahlverfahren (Kartenscheme)* müssen sich die Bargeldabhebungen mit Karten aus den Bargeldabhebungen mit Debitkarten, Kreditkarten ohne Kreditfunktion und Kreditkarten mit Kreditfunktion ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PCW.PCS'') 
,(''ZVS4.1'',''PCW.PCS.1'') 
,(''ZVS4.1'',''PCW.PCS.2'')
,(''ZVS4.1'',''PCW.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11708, N'ZVSTA_2022_H', N'202206', N'S4127.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM = PEM.1 + PEM.2', N'Die Zahlungen mit E-Geld insgesamt müssen sich aus den Zahlungen mit E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und Zahlungen mit E-Geld-Konten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PEM.1'') 
,(''ZVS4.1'',''PEM.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11709, N'ZVSTA_2022_H', N'202206', N'S4128.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM = PEM.R + PEM.NR', N'Die Zahlungen mit E-Geld insgesamt müssen sich aus den E-Geld-Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11710, N'ZVSTA_2022_H', N'202206', N'S4129.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.2 = PEM.21 + PEM.22 + PEM.23', N'Die Zahlungen mit E-Geld-Konten müssen sich aus der Verfügung per Karte, mobilen E-Geld-Zahlungen und sonstigen E-Geld-Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.2'') 
,(''ZVS4.1'',''PEM.21'') 
,(''ZVS4.1'',''PEM.22'')
,(''ZVS4.1'',''PEM.23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11711, N'ZVSTA_2022_H', N'202206', N'S4130.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.22 >= PEM.221', N'Die mobilen E-Geld P2P-Zahlungen dürfen nicht höher sein als die E-Geld P2P-Zahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.22'') 
,(''ZVS4.1'',''PEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11712, N'ZVSTA_2022_H', N'202206', N'S4131.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R = PEM.R.1 + PEM.R.2', N'Die über einen Fernzugang ausgelösten E-Geld-Zahlungen müssen sich aus den E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.R.1'') 
,(''ZVS4.1'',''PEM.R.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11713, N'ZVSTA_2022_H', N'202206', N'S4132.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R >= PEM.221', N'Die E-Geld-Zahlungen über einen Fernzugang insgesamt dürfen nicht kleiner sein als die mobilen E-Geld P2P-Zahlungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R'') 
,(''ZVS4.1'',''PEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11714, N'ZVSTA_2022_H', N'202206', N'S4133.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R.2 = PEM.R.2.r0', N'Die Summe der über einen Fernzugang ausgelösten E-Geld-Zahlungen nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der E-Geld-Zahlungen ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2'') 
,(''ZVS4.1'',''PEM.R.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11715, N'ZVSTA_2022_H', N'202206', N'S4134.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.R.2.r0 = PEM.R.2.r1 + PEM.R.2.r3 + PEM.R.2.r4 ', N'Die über einen Fernzugriff ausgelösten E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2.r0'') 
,(''ZVS4.1'',''PEM.R.2.r1'') 
,(''ZVS4.1'',''PEM.R.2.r3'')
,(''ZVS4.1'',''PEM.R.2.r4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11716, N'ZVSTA_2022_H', N'202206', N'S4135.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR >= PEM.1', N'Die nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen dürfen nicht kleiner sein als E-Geld-Zahlungen mit Karten, auf denen das E-Geld direkt gespeichert werden kann.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR'') 
,(''ZVS4.1'',''PEM.1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11717, N'ZVSTA_2022_H', N'202206', N'S4136.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR = PEM.NR.1 + PEM.NR.2', N'Die nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen müssen sich aus den E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR'') 
,(''ZVS4.1'',''PEM.NR.1'') 
,(''ZVS4.1'',''PEM.NR.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11718, N'ZVSTA_2022_H', N'202206', N'S4137.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR.2 = PEM.NR.2.r0', N'Die Summe der nicht über einen Fernzugang ausgelösten E-Geld-Zahlungen nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der E-Geld-Zahlungen ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.NR.2'') 
,(''ZVS4.1'',''PEM.NR.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11719, N'ZVSTA_2022_H', N'202206', N'S4138.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PEM.NR.2.r0 = PEM.NR.2.r2 + PEM.NR.2.r4 + PEM.NR.2', N'Die nicht über einen Fernzugriff ausgelösten E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PEM.R.2.r0'') 
,(''ZVS4.1'',''PEM.R.2.r2'') 
,(''ZVS4.1'',''PEM.R.2.r4'')
,(''ZVS4.1'',''PEM.NR.2'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11720, N'ZVSTA_2022_H', N'202206', N'S4139.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PTT = PCT + PDD + PCP + PCW + PEM + PCH + PMR + PO', N'Die Zahlungsvorgänge insgesamt müssen sich aus der Summe der Überweisungen, Lastschriften, Kartenzahlungen, Bargeldabhebungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und Sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PTT'')
,(''ZVS4.1'',''PCT'') 
,(''ZVS4.1'',''PDD'') 
,(''ZVS4.1'',''PCP'')
,(''ZVS4.1'',''PCW'') 
,(''ZVS4.1'',''PEM'') 
,(''ZVS4.1'',''PCH'') 
,(''ZVS4.1'',''PMR'') 
,(''ZVS4.1'',''PO'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E, @CHECK_TABLE F, @CHECK_TABLE G, @CHECK_TABLE H, @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6 AND G.ID = 7 AND H.ID = 8 AND I.ID = 9 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11721, N'ZVSTA_2022_H', N'202206', N'S4140.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI = PPI.R + PPI.NR', N'Die Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI'') 
,(''ZVS4.1'',''PPI.R'') 
,(''ZVS4.1'',''PPI.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11722, N'ZVSTA_2022_H', N'202206', N'S4141.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI = PPI.PCT + PPI.OTH', N'Die Transaktionen von Zahlungsauslösediensten müssen sich aus den Überweisungen und sonstigen Transaktionen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI'') 
,(''ZVS4.1'',''PPI.PCT'') 
,(''ZVS4.1'',''PPI.OTH'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11723, N'ZVSTA_2022_H', N'202206', N'S4142.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI.R = PPI.R.1 + PPI.R.2', N'Die über einen Fernzugang ausgelösten Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI.R'') 
,(''ZVS4.1'',''PPI.R.1'') 
,(''ZVS4.1'',''PPI.R.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11724, N'ZVSTA_2022_H', N'202206', N'S4143.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PPI.NR = PPI.NR.1 + PPI.NR.2', N'Die nicht über einen Fernzugang ausgelösten Transaktionen von Zahlungsauslösediensten müssen sich aus den Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.1'',''PPI.NR'') 
,(''ZVS4.1'',''PPI.NR.1'') 
,(''ZVS4.1'',''PPI.NR.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11725, N'ZVSTA_2022_H', N'202206', N'S4144.A/W', N'SUM', N'ZVS4.1', N'ZVS4.1', N'PTT (empfangen) = PCT (empfangen) + PDD (empfangen', N'Die empfangenen Zahlungsvorgänge insgesamt müssen sich aus der Summe der Überweisungen, Lastschriften, Kartenzahlungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und Sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.1'',''PTT'',''FROM'') 
,(''ZVS4.1'',''PCT'',''FROM'') 
,(''ZVS4.1'',''PDD'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11726, N'ZVSTA_2022_H', N'202206', N'S4201.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP = PCP.1 + PCP.2', N'Die Zahlungen mit Karten insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten Zahlungen mit Karten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP'') 
,(''ZVS4.2'',''PCP.1'') 
,(''ZVS4.2'',''PCP.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11727, N'ZVSTA_2022_H', N'202206', N'S4202.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.1 = PCP.1.R + PCP.1.NR', N'Die nicht elektronisch ausgelösten Zahlungen mit Karten müssen sich aus den nicht elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.1'') 
,(''ZVS4.2'',''PCP.1.R'') 
,(''ZVS4.2'',''PCP.1.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11728, N'ZVSTA_2022_H', N'202206', N'S4203.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2 = PCP.2.R + PCP.2.NR', N'Die elektronisch ausgelösten Zahlungen mit Karten müssen sich aus den elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2'') 
,(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11729, N'ZVSTA_2022_H', N'202206', N'S4204.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R = ∑ PCP.2.R.PCS', N'Die elektronischen, über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.R.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11730, N'ZVSTA_2022_H', N'202206', N'S4205.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R = PCP.2.R.1 + PCP.2.R.4 ', N'Die über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den mobilen und sonstigen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R'') 
,(''ZVS4.2'',''PCP.2.R.1'') 
,(''ZVS4.2'',''PCP.2.R.4'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11731, N'ZVSTA_2022_H', N'202206', N'S4206.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS = PCP.2.R.PCS.1 + PCP.2.R.PCS.2 + PCP.2.R.PCS.3', N'Die über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'') 
,(''ZVS4.2'',''PCP.2.R.PCS.1'') 
,(''ZVS4.2'',''PCP.2.R.PCS.2'')
,(''ZVS4.2'',''PCP.2.R.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11732, N'ZVSTA_2022_H', N'202206', N'S4207.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS = PCP.2.R.PCS.4 + PCP.2.R.PCS.5', N'Die über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'') 
,(''ZVS4.2'',''PCP.2.R.PCS.4'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11733, N'ZVSTA_2022_H', N'202206', N'S4208.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.1 >= PCP.2.R.11', N'Die über einen Fernzugang ausgelösten mobilen P2P-Kartenzahlungen dürfen nicht höher sein als die über einen Fernzugang ausgelösten mobilen Kartenzahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.1'') 
,(''ZVS4.2'',''PCP.2.R.11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11734, N'ZVSTA_2022_H', N'202206', N'S4209.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 = ∑ PCP.2.R.PCS.5', N'Die Summe der Kartenzahlungen über Fernzugriff ohne starke Kundenauthentifizierung der einzelnen Kartenzahlverfahren (Kartenschemes) muss den Kartenzahlungen nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11735, N'ZVSTA_2022_H', N'202206', N'S4210.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 = PCP.2.R.r1 + PCP.2.R.r4 + PCP.2.R.r5 ', N'Die über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'') 
,(''ZVS4.2'',''PCP.2.R.r1'') 
,(''ZVS4.2'',''PCP.2.R.r4'')
,(''ZVS4.2'',''PCP.2.R.r5'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11736, N'ZVSTA_2022_H', N'202206', N'S4211.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR = ∑ PCP.2.NR.PCS', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR'') 
,(''ZVS4.2'',''PCP.2.NR.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11737, N'ZVSTA_2022_H', N'202206', N'S4212.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR = PCP.2.NR.2 + PCP.2.NR.3 + PCP.2.NR.4', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR'') 
,(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.3'')
,(''ZVS4.2'',''PCP.2.NR.4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11738, N'ZVSTA_2022_H', N'202206', N'S4213.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS = PCP.2.NR.PCS.1 + PCP.2.NR.PCS.2 + PCP.2.NR.PCS.3', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.1'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.2'')
,(''ZVS4.2'',''PCP.2.NR.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11739, N'ZVSTA_2022_H', N'202206', N'S4214.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS = PCP.2.NR.PCS.4 + PCP.2.NR.PCS.5', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.4'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11740, N'ZVSTA_2022_H', N'202206', N'S4215.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.2 >= PCP.2.NR.21', N'Die kontaktlosen Kartenzahlungen an einem physischen EFTPOS dürfen nicht größer sein als die Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11741, N'ZVSTA_2022_H', N'202206', N'S4216.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.21 >= PCP.2.NR.211', N'Die kontaktlosen Kartenzahlungen an einem physischen EFTPOS per NFC dürfen nicht größer sein als die kontaktlosen Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.21'') 
,(''ZVS4.2'',''PCP.2.NR.2111'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11742, N'ZVSTA_2022_H', N'202206', N'S4217.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.2 >= PCP.2.NR.r6', N'Die elektronischen Kartenzahlungen ohne starke Kundenauthentifizierung an unbeaufsichtigten Terminals für Verkehrsnutzungsentgelte und Parkgebühren können nicht höher sein als elektronische Kartenzahlungen an physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.r6'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11743, N'ZVSTA_2022_H', N'202206', N'S4218.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 = ∑ PCP.2.NR.PCS.5', N'Die Summe der Kartenzahlungen nicht über einen Fernzugriff ohne starke Kundenauthentifizierung der einzelnen Kartenzahlverfahren (Kartenschemes) muss den Kartenzahlungen nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11744, N'ZVSTA_2022_H', N'202206', N'S4219.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 = PCP.2.NR.r2 + PCP.2.NR.r4 + PCP.2.NR.r5 + PCP.2.NR.r6 + PCP.2.NR.r10', N'Die nicht über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'') 
,(''ZVS4.2'',''PCP.2.NR.r2'') 
,(''ZVS4.2'',''PCP.2.NR.r4'')
,(''ZVS4.2'',''PCP.2.NR.r5'') 
,(''ZVS4.2'',''PCP.2.NR.r6'')
,(''ZVS4.2'',''PCP.2.NR.r10'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
                                 + E.Anzahl_Value + F.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value
+ F.Wert_Value

THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D , @CHECK_TABLE E , @CHECK_TABLE F
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11745, N'ZVSTA_2022_H', N'202206', N'S4220.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.1 <= PCP.2.NR.2 + PCP.2.NR.3', N'Die nicht über einen Fernzugang ausgelösten mobilen Kartenzahlungsvorgänge können nicht größer sein die Summe der Kartenzahlungen am EFTPOS-Terminal und am Bankautomat.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS4.2'',''PCP.2.NR.1'') 
,(''ZVS4.2'',''PCP.2.NR.2'') 
,(''ZVS4.2'',''PCP.2.NR.3'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11746, N'ZVSTA_2022_H', N'202206', N'S4221.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP (empfangen) = PCP.1 (empfangen) + PCP.2 (empfangen)', N'Die Zahlungen mit Karten an selbst abgerechneten Terminals insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten Zahlungen mit Karten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP'',''FROM'') 
,(''ZVS4.2'',''PCP.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11747, N'ZVSTA_2022_H', N'202206', N'S4222.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.1 (empfangen) = PCP.1.R (empfangen) + PCP.1.NR (empfangen)', N'Die nicht elektronisch ausgelösten Zahlungen mit Karten an selbst abgerechneten Terminals müssen sich aus den nicht elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.1'',''FROM'') 
,(''ZVS4.2'',''PCP.1.R'',''FROM'') 
,(''ZVS4.2'',''PCP.1.NR'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11748, N'ZVSTA_2022_H', N'202206', N'S4223.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2 (empfangen) = PCP.2.R (empfangen) + PCP.2.NR (empfangen)', N'Die elektronisch ausgelösten Zahlungen mit Karten an selbst abgerechneten Terminals müssen sich aus den elektronisch ausgelösten Zahlungen über einen Fernzugriff und nicht über einen Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11749, N'ZVSTA_2022_H', N'202206', N'S4224.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R (empfangen) = ∑ PCP.2.R.PCS (empfangen)', N'Die elektronischen, über einen Fernzugriff ausgelösten Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11750, N'ZVSTA_2022_H', N'202206', N'S4225.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS (empfangen) = PCP.2.R.PCS.1 (empfangen) + PCP.2.R.PCS.2 (empfangen) + PCP.2.R.PCS.3 (empfangen)', N'Die über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.3'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11751, N'ZVSTA_2022_H', N'202206', N'S4226.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.PCS (empfangen) = PCP.2.R.PCS.4 (empfangen) + PCP.2.R.PCS.5 (empfangen)', N'Die über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.4'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11752, N'ZVSTA_2022_H', N'202206', N'S4227.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 (empfangen) = ∑ PCP.2.R.PCS.5 (empfangen)', N'Die Kartenzahlungen, über einen Fernzugriff, ohne starke Kundenauthentifizierung, nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung müssen der Summe der Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) an selbst abge', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11753, N'ZVSTA_2022_H', N'202206', N'S4228.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.R.r0 (empfangen) = PCP.2.R.r1 (empfangen) + PCP.2.R.r5 (empfangen) + PCP.2.R.r8 (empfangen) + PCP.2.R.r9 (empfangen) + PCP.2.R.r10 (empfangen)', N'Die über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.R.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r5'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r8'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r9'',''FROM'') 
,(''ZVS4.2'',''PCP.2.R.r10'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value + E.Anzahl_Value + F.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
 THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D , @CHECK_TABLE E, @CHECK_TABLE F         
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11754, N'ZVSTA_2022_H', N'202206', N'S4229.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR (empfangen) = ∑ PCP.2.NR.PCS (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11755, N'ZVSTA_2022_H', N'202206', N'S4230.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR (empfangen) = PCP.2.NR.2 (empfangen) + PCP.2.NR.3 (empfangen) + PCP.2.NR.4 (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.3'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.4'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11756, N'ZVSTA_2022_H', N'202206', N'S4231.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS (empfangen) = PCP.2.NR.PCS.1 (empfangen) + PCP.2.NR.PCS.2 (empfangen) + PCP.2.NR.PCS.3 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.1'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.3'',''FROM'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D          
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11757, N'ZVSTA_2022_H', N'202206', N'S4232.PCS.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.PCS (empfangen) = PCP.2.NR.PCS.4 (empfangen) + PCP.2.NR.PCS.5 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.PCS'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.4'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11758, N'ZVSTA_2022_H', N'202206', N'S4233.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 (empfangen) = ∑ PCP.2.NR.PCS.5 (empfangen)', N'Die Kartenzahlungen, nicht über einen Fernzugriff, ohne starke Kundenauthentifizierung, nach dem Grund für die Durchführung ohne starke Kundenauthentifizierung müssen der Summe der Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) an selbs', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.PCS.5'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B        
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11759, N'ZVSTA_2022_H', N'202206', N'S4234.A/W', N'SUM', N'ZVS4.2', N'ZVS4.2', N'PCP.2.NR.r0 (empfangen) = PCP.2.NR.r2 (empfangen) + PCP.2.NR.r5 (empfangen) + PCP.2.NR.r6 (empfangen) + PCP.2.NR.r10 (empfangen)', N'Die nicht über einen Fernzugriff durchgeführten Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS4.2'',''PCP.2.NR.r0'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r2'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r5'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r6'',''FROM'') 
,(''ZVS4.2'',''PCP.2.NR.r10'',''FROM'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value  + C.Anzahl_Value + D.Anzahl_Value + E.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C , @CHECK_TABLE D   , @CHECK_TABLE E       
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11760, N'ZVSTA_2022_H', N'202206', N'S5101.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT = FCT.1 + FCT.2 + FCT.3', N'Die betrügerischen Überweisungen insgesamt müssen sich aus den beleghaften, beleglosen und sonstigen Überweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FCT.1'') 
,(''ZVS5.1'',''FCT.2'')
,(''ZVS5.1'',''FCT.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11761, N'ZVSTA_2022_H', N'202206', N'S5102.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2 = FCT.2.R + FCT.2.NR', N'Die betrügerischen elektronisch ausgelösten Überweisungen müssen sich aus den betrügerischen elektronischen Überweisungen mit und ohne Fernzugriff ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2'') 
,(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.2.NR'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11762, N'ZVSTA_2022_H', N'202206', N'S5103.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2 = FCT.21 + FCT.22', N'Die elektronischen betrügerischen Überweisungen müssen sich aus der Summe der als Datei/Sammelüberweisung und Einzelüberweisung ausgelösten betrügerischenÜberweisungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2'') 
,(''ZVS5.1'',''FCT.21'') 
,(''ZVS5.1'',''FCT.22'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11763, N'ZVSTA_2022_H', N'202206', N'S5104.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.22 = FCT.221 + FCT.222 + FCT.223', N'Die betrügerischen Einzelüberweisungen insgesamt müssen sich aus der Summe der betrügerischen Onlineüberweisungen, am Bankautomat oder sonstigem durch einen ZDL bereitgestellten Terminal ausgelösten betrügerischen Überweisungen und mobilen betrügerischen ', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.22'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.222'')
,(''ZVS5.1'',''FCT.223'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11764, N'ZVSTA_2022_H', N'202206', N'S5105.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.221 >= FCT.2211', N'Die betrügerischen E-Commerce-Zahlungen dürfen nicht größter sein als die betrügerischen Onlineüberweisungen .', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.2211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11765, N'ZVSTA_2022_H', N'202206', N'S5106.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.223 >= FCT.2231', N'Die betrügerischen mobilen P2P-Überweisungen dürfen nicht größer sein als die betrügerischen mobilen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.223'') 
,(''ZVS5.1'',''FCT.2231'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11766, N'ZVSTA_2022_H', N'202206', N'S5107.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R = ∑ FCT.2.R.CTS', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen sich aus der Summe der einzelnen Überweisungsverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.2.R.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11767, N'ZVSTA_2022_H', N'202206', N'S5108.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R >= FCT.221 + FCT.223', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen mindestens so hoch sein wie die Summe der online initiierten und mobilen Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.223'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11768, N'ZVSTA_2022_H', N'202206', N'S5109.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R <= FCT.221 + FCT.223 + FCT.21', N'Die über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen dürfen nicht höher sein als die Summe wie die Summe der online initiierten und mobilen Überweisungen, sowie der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R'') 
,(''ZVS5.1'',''FCT.221'') 
,(''ZVS5.1'',''FCT.223'')
,(''ZVS5.1'',''FCT.21'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value <= B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11769, N'ZVSTA_2022_H', N'202206', N'S5110.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS = FCT.2.R.CTS.1 + FCT.2.R.CTS.2', N'Die über einen Fernzugang ausgelösten betrügerischen Überweisungen je nach Überweisungsverfahren* müssen sich aus den betrügerischen Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11770, N'ZVSTA_2022_H', N'202206', N'S5111.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS.1 = FCT.2.R.CTS.1.f1 + FCT.2.R.CTS.1.f2 + FCT.2.R.CTS.1.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* mit starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11771, N'ZVSTA_2022_H', N'202206', N'S5112.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.CTS.2 = FCT.2.R.CTS.2.f1 + FCT.2.R.CTS.2.f2 + FCT.2.R.CTS.2.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* ohne starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.CTS.2'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11772, N'ZVSTA_2022_H', N'202206', N'S5113.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.r0 = ∑ FCT.2.R.CTS.2', N'Die Summe der betrügerischen Überweisungen über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der betrügerischen Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.r0'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11773, N'ZVSTA_2022_H', N'202206', N'S5114.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.R.r0 = FCT.2.R.r1 + FCT.2.R.r3 + FCT.2.R.r4 + FCT.2.R.r5 + FCT.2.R.r7 + FCT.2.R.r8', N'Die über einen Fernzugriff ausgelösten betrügerischen Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.R.r0'') 
,(''ZVS5.1'',''FCT.2.R.r1'') 
,(''ZVS5.1'',''FCT.2.R.r3'')
,(''ZVS5.1'',''FCT.2.R.r4'') 
,(''ZVS5.1'',''FCT.2.R.r5'') 
,(''ZVS5.1'',''FCT.2.R.r7'') 
,(''ZVS5.1'',''FCT.2.R.r8'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value
and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 AND G.ID = 7
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11774, N'ZVSTA_2022_H', N'202206', N'S5115.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR = ∑ FCT.2.NR.CTS', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen ergeben sich aus der Summe der einzelnen Überweisungsverfahren.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.2.NR.CTS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11775, N'ZVSTA_2022_H', N'202206', N'S5116.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR >= FCT.222', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen müssen mindestens genauso hoch sein wie die an einem Bankautomaten ausgelösten Überweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.222'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11776, N'ZVSTA_2022_H', N'202206', N'S5117.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR <= FCT.222 + FCT.21', N'Die nicht über einen Fernzugang ausgelösten betrügerischen elektronischen Überweisungen dürfen nicht höher sein als die Summer der an einem Bankautomaten ausgelösten Überweisungen und der Datei/Sammelüberweisungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR'') 
,(''ZVS5.1'',''FCT.222'') 
,(''ZVS5.1'',''FCT.21'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value <= B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value <= B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11777, N'ZVSTA_2022_H', N'202206', N'S5118.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS = FCT.2.NR.CTS.1 + FCT.2.NR.CTS.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Überweisungen je nach Überweisungsverfahren* müssen sich aus den betrügerischen Überweisungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.1'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.2'')
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11778, N'ZVSTA_2022_H', N'202206', N'S5119.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS.1 = FCT.2.NR.CTS.1.f1 + FCT.2.NR.CTS.1.f2 + FCT.2.NR.CTS.1.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* mit starker Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS.1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.1.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11779, N'ZVSTA_2022_H', N'202206', N'S5120.CTS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.CTS.2 = FCT.2.NR.CTS.2.f1 + FCT.2.NR.CTS.2.f2 + FCT.2.NR.CTS.2.f3', N'Die betrügerischen Überweisungen je nach Überweisungsverfahren* ohne starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen Überweisungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.CTS.2'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f1'') 
,(''ZVS5.1'',''FCT.2.R.CTS.2.f2'')
,(''ZVS5.1'',''FCT.2.R.CTS.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11780, N'ZVSTA_2022_H', N'202206', N'S5121.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.r0 = ∑ FCT.2.NR.CTS.2', N'Die Summe der betrügerischen Überweisungen nicht über einen Fernzugang nach Grund für die Durchführung ohne starke Kundenauthentifizierung muss der Summe der betrügerischen Überweisungen ohne starke Kundenauthentifizierung der Überweisungsverfahren entspr', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.r0'') 
,(''ZVS5.1'',''FCT.2.NR.CTS.2'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11781, N'ZVSTA_2022_H', N'202206', N'S5122.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT.2.NR.r0 = FCT.2.NR.r2 + FCT.2.NR.r3 + FCT.2.NR.r4 + FCT.2.NR.r5 + FCT.2.NR.r6', N'Die nicht über einen Fernzugriff ausgelösten betrügerischen Überweisungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT.2.NR.r0'') 
,(''ZVS5.1'',''FCT.2.NR.r2'') 
,(''ZVS5.1'',''FCT.2.NR.r3'')
,(''ZVS5.1'',''FCT.2.NR.r4'') 
,(''ZVS5.1'',''FCT.2.NR.r5'') 
,(''ZVS5.1'',''FCT.2.NR.r6'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11782, N'ZVSTA_2022_H', N'202206', N'S5123.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCT >= FCT.4', N'Die betrügerischen Überweisungen, die von einem Zahlungsdienstleister ausgelöst wurden, dürfen nicht höher sein als die betrügerischen Überweisungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FCT.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11783, N'ZVSTA_2022_H', N'202206', N'S5124.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD = FDD.1 + FDD.2', N'Die betrügerischen Lastschriften insgesamt müssen sich aus den betrügerischen Datei/Sammellastschriften und Einzellastschriften ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD'') 
,(''ZVS5.1'',''FDD.1'') 
,(''ZVS5.1'',''FDD.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11784, N'ZVSTA_2022_H', N'202206', N'S5125.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD = FDD.3 + FDD.4', N'Die betrügerischen Lastschriften müssen sich aus den betrügerischen Lastschriften mit elektronischer und sonstiger Mandatserteilung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD'') 
,(''ZVS5.1'',''FDD.3'') 
,(''ZVS5.1'',''FDD.4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11785, N'ZVSTA_2022_H', N'202206', N'S5126.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.3 = ∑ FDD.3.DDS', N'Die Lastschriften mit elektronischer Mandatserteilung müssen sich aus der Summe der Lastschriften mit elektronischer Mandatserteilung der einzelnen Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.3'') 
,(''ZVS5.1'',''FDD.3.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11786, N'ZVSTA_2022_H', N'202206', N'S5127.DDS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.3.DDS = FDD.3.DDS.f3 + FDD.3.DDS.f4', N'Die betrügerischen Lastschriften je nach Lastschriftverfahren* mit elektronischer Mandatserteilung müssen sich aus den betrügerischen Lastschriften je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.3.DDS'') 
,(''ZVS5.1'',''FDD.3.DDS.f3'') 
,(''ZVS5.1'',''FDD.3.DDS.f4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11787, N'ZVSTA_2022_H', N'202206', N'S5128.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.4 = ∑ FDD.4.DDS', N'Die Lastschriften mit sonstiger Mandatserteilung müssen sich aus der Summe der Lastschriften mit sonstiger Mandatserteilung der einzelnen Lastschriftverfahren ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.4'') 
,(''ZVS5.1'',''FDD.4.DDS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11788, N'ZVSTA_2022_H', N'202206', N'S5129.DDS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FDD.4.DDS = FDD.4.DDS.f3 + FDD.4.DDS.f4', N'Die betrügerischen Lastschriften je nach Lastschriftverfahren* mit sonstiger Mandatserteilung müssen sich aus den betrügerischen Lastschriften je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FDD.4.DDS'') 
,(''ZVS5.1'',''FDD.4.DDS.f3'') 
,(''ZVS5.1'',''FDD.4.DDS.f4'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11789, N'ZVSTA_2022_H', N'202206', N'S5130.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW = ∑ FCW.PCS', N'Die betrügerischen Bargeldabhebungen müssen sich aus der Summe der betrügerischen Bargeldabhebungen nach Kartenzahlverfahren (Kartenscheme) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW'') 
,(''ZVS5.1'',''FCW.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11790, N'ZVSTA_2022_H', N'202206', N'S5131.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS = FCW.PCS.1 + FCW.PCS.2 + FCW.PCS.3', N'Die betrügerischen Bargeldabhebungen mit Karten müssen sich für jedes Kartenzahlverfahren (Kartenscheme)* aus den Bargeldabhebungen mit Debitkarten, Kreditkarten ohne Kreditfunktion und Kreditkarten mit Kreditfunktion ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS'') 
,(''ZVS5.1'',''FCW.PCS.1'') 
,(''ZVS5.1'',''FCW.PCS.2'')
,(''ZVS5.1'',''FCW.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 









', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11791, N'ZVSTA_2022_H', N'202206', N'S5132.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS = FCW.PCS.f1 + FCW.PCS.f3', N'Die betrügerischen Bargeldabhebungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Bargeldabhebungen nach Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS'') 
,(''ZVS5.1'',''FCW.PCS.f1'') 
,(''ZVS5.1'',''FCW.PCS.f3'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11792, N'ZVSTA_2022_H', N'202206', N'S5133.PCS.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FCW.PCS.f1 = FCW.PCS.f11 + FCW.PCS.f12 + FCW.PCS.f13 + FCW.PCS.f16', N'Die betrügerischen Bargeldabhebungen durch Erteilung eines Auftrags durch den Betrüger je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FCW.PCS.f1'') 
,(''ZVS5.1'',''FCW.PCS.f11'') 
,(''ZVS5.1'',''FCW.PCS.f12'')
,(''ZVS5.1'',''FCW.PCS.f13'') 
,(''ZVS5.1'',''FCW.PCS.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11793, N'ZVSTA_2022_H', N'202206', N'S5134.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM = FEM.1 + FEM.2', N'Die betrügerischen Zahlungen mit E-Geld insgesamt müssen sich aus den betrügerischen Zahlungen mit E-Geldkarten, auf denen E-Geld direkt gespeichert werden kann und betrügerischen Zahlungen mit E-Geld-Konten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FEM.1'') 
,(''ZVS5.1'',''FEM.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11794, N'ZVSTA_2022_H', N'202206', N'S5135.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM = FEM.R + FEM.NR', N'Die betrügerischen Zahlungen mit E-Geld insgesamt müssen sich aus den betrügerischen E-Geld-Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11795, N'ZVSTA_2022_H', N'202206', N'S5136.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.2 = FEM.21 + FEM.22 + FEM.23', N'Die betrügerischen Zahlungen mit E-Geld-Konten müssen sich aus der Verfügung per Karte, mobilen E-Geld-Zahlungen und sonstigen E-Geld-Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.2'') 
,(''ZVS5.1'',''FEM.21'') 
,(''ZVS5.1'',''FEM.22'')
,(''ZVS5.1'',''FEM.23'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11796, N'ZVSTA_2022_H', N'202206', N'S5137.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.22 >= FEM.221', N'Die betrügerischen mobilen E-Geld P2P-Zahlungen dürfen nicht höher sein als die E-Geld P2P-Zahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.22'') 
,(''ZVS5.1'',''FEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11797, N'ZVSTA_2022_H', N'202206', N'S5138.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R = FEM.R.1 + FEM.R.2', N'Die über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen müssen sich aus den betrügerischen E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.R.1'') 
,(''ZVS5.1'',''FEM.R.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11798, N'ZVSTA_2022_H', N'202206', N'S5139.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R >= FEM.221', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang insgesamt dürfen nicht kleiner sein als die mobilen E-Geld P2P-Zahlungen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R'') 
,(''ZVS5.1'',''FEM.221'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11799, N'ZVSTA_2022_H', N'202206', N'S5140.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.1 = FEM.R.1.f1 + FEM.R.1.f2 + FEM.R.1.f3', N'Die betrügerischen E-Geld-Zahlungen mit starker Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.1'') 
,(''ZVS5.1'',''FEM.R.1.f1'') 
,(''ZVS5.1'',''FEM.R.1.f2'')
,(''ZVS5.1'',''FEM.R.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 










', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11800, N'ZVSTA_2022_H', N'202206', N'S5141.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.1.f1 = FEM.R.1.f11 + FEM.R.1.f12 + FEM.R.1.f13 + FEM.R.1.f14 + FEM.R.1.f15', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang mit starker Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.1.f1'') 
,(''ZVS5.1'',''FEM.R.1.f11'') 
,(''ZVS5.1'',''FEM.R.1.f12'')
,(''ZVS5.1'',''FEM.R.1.f13'') 
,(''ZVS5.1'',''FEM.R.1.f14'') 
,(''ZVS5.1'',''FEM.R.1.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11801, N'ZVSTA_2022_H', N'202206', N'S5142.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2 = FEM.R.2.f1 + FEM.R.2.f2 + FEM.R.2.f3', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2'') 
,(''ZVS5.1'',''FEM.R.2.f1'') 
,(''ZVS5.1'',''FEM.R.2.f2'')
,(''ZVS5.1'',''FEM.R.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 











', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11802, N'ZVSTA_2022_H', N'202206', N'S5143.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2.f1 = FEM.R.2.f11 + FEM.R.2.f12 + FEM.R.2.f13 + FEM.R.2.f14 + FEM.R.2.f15', N'Die betrügerischen E-Geld-Zahlungen über einen Fernzugang ohne starke Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2.f1'') 
,(''ZVS5.1'',''FEM.R.2.f11'') 
,(''ZVS5.1'',''FEM.R.2.f12'')
,(''ZVS5.1'',''FEM.R.2.f13'') 
,(''ZVS5.1'',''FEM.R.2.f14'') 
,(''ZVS5.1'',''FEM.R.2.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11803, N'ZVSTA_2022_H', N'202206', N'S5144.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2 = FEM.R.2.r0', N'Die über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus der Summe der betrügerischen E-Geld-Zahlungen je Grund für die Durchführung ohne starke Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2'') 
,(''ZVS5.1'',''FEM.R.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11804, N'ZVSTA_2022_H', N'202206', N'S5145.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.R.2.r0 = FEM.R.2.r1 + FEM.R.2.r3 + FEM.R.2.r4 + FEM.R.2.r5 + FEM.R.2.r7 + FEM.R.2.r8 + FEM.R.2.r9 + FEM.R.2.r10', N'Die über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.R.2.r0'') 
,(''ZVS5.1'',''FEM.R.2.r1'') 
,(''ZVS5.1'',''FEM.R.2.r3'')
,(''ZVS5.1'',''FEM.R.2.r4'') 
,(''ZVS5.1'',''FEM.R.2.r5'')
,(''ZVS5.1'',''FEM.R.2.r7'') 
,(''ZVS5.1'',''FEM.R.2.r8'') 
,(''ZVS5.1'',''FEM.R.2.r9'') 
,(''ZVS5.1'',''FEM.R.2.r10'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H , @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6
AND G.ID = 7
AND H.ID = 8
AND I.ID = 9

END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11805, N'ZVSTA_2022_H', N'202206', N'S5146.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR >= FEM.1', N'Die nicht über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen dürfen nicht kleiner sein als E-Geld-Zahlungen mit Karten, auf denen das E-Geld direkt gespeichert werden kann.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR'') 
,(''ZVS5.1'',''FEM.1'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11806, N'ZVSTA_2022_H', N'202206', N'S5147.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR = FEM.NR.1 + FEM.NR.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen E-Geld-Zahlungen müssen sich aus den betrügerischen E-Geld-Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR'') 
,(''ZVS5.1'',''FEM.NR.1'') 
,(''ZVS5.1'',''FEM.NR.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11807, N'ZVSTA_2022_H', N'202206', N'S5148.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.1 = FEM.NR.1.f1 + FEM.NR.1.f2 + FEM.NR.1.f3', N'Die betrügerischen E-Geld-Zahlungen mit starker Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.1'') 
,(''ZVS5.1'',''FEM.NR.1.f1'') 
,(''ZVS5.1'',''FEM.NR.1.f2'')
,(''ZVS5.1'',''FEM.NR.1.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 












', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11808, N'ZVSTA_2022_H', N'202206', N'S5149.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.1.f1 = FEM.NR.1.f11 + FEM.NR.1.f12 + FEM.NR.1.f13 + FEM.NR.1.f15', N'Die betrügerischen E-Geld-Zahlungen nicht über einen Fernzugang mit starker Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.1.f1'') 
,(''ZVS5.1'',''FEM.NR.1.f11'') 
,(''ZVS5.1'',''FEM.NR.1.f12'')
,(''ZVS5.1'',''FEM.NR.1.f13'') 
,(''ZVS5.1'',''FEM.NR.1.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11809, N'ZVSTA_2022_H', N'202206', N'S5150.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2 = FEM.NR.2.f1 + FEM.NR.2.f2 + FEM.NR.2.f3', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus den betrügerischen E-Geld-Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2'') 
,(''ZVS5.1'',''FEM.NR.2.f1'') 
,(''ZVS5.1'',''FEM.NR.2.f2'')
,(''ZVS5.1'',''FEM.NR.2.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11810, N'ZVSTA_2022_H', N'202206', N'S5151.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2.f1 = FEM.NR.2.f11 + FEM.NR.2.f12 + FEM.NR.2.f13 + FEM.NR.2.f15', N'Die betrügerischen E-Geld-Zahlungen nicht über einen Fernzugang ohne starke Kundenauthentifizierung durch Erteilung eines Zahlungsauftrages durch den Betrüger müssen sich aus den Betrugsarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2.f1'') 
,(''ZVS5.1'',''FEM.NR.2.f11'') 
,(''ZVS5.1'',''FEM.NR.2.f12'')
,(''ZVS5.1'',''FEM.NR.2.f13'') 
,(''ZVS5.1'',''FEM.NR.2.f15'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11811, N'ZVSTA_2022_H', N'202206', N'S5152.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2 = FEM.NR.2.r0', N'Die betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugang müssen sich aus der Summe der betrügerischen E-Geld-Zahlungen je Grund für die Durchführung ohne starke Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2'') 
,(''ZVS5.1'',''FEM.NR.2.r0'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11812, N'ZVSTA_2022_H', N'202206', N'S5153.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FEM.NR.2.r0 = FEM.NR.2.r2 + FEM.NR.2.r4 + FEM.NR.2.r5 + FEM.NR.2.r6 + FEM.NR.2.r10 ', N'Die nicht über einen Fernzugriff ausgelösten betrügerischen E-Geld-Zahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FEM.NR.2.r0'') 
,(''ZVS5.1'',''FEM.NR.2.r2'') 
,(''ZVS5.1'',''FEM.NR.2.r4'')
,(''ZVS5.1'',''FEM.NR.2.r5'') 
,(''ZVS5.1'',''FEM.NR.2.r6'') 
,(''ZVS5.1'',''FEM.NR.2.r10'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11813, N'ZVSTA_2022_H', N'202206', N'S5154.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FTT = FCT + FDD + FCP + FCW + FEM + FCH + FMR + FOT', N'Die betrügerischen Zahlungsvorgänge insgesamt müssen sich aus der Summe der betrügerischen Überweisungen, Lastschriften, Kartenzahlungen, Bargeldabhebungen, E-Geld-Zahlungen, Schecks, Finanztransfers (Remittances) und sonstigen betrügerischen Zahlungsvorg', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FTT'') 
,(''ZVS5.1'',''FCT'') 
,(''ZVS5.1'',''FDD'')
,(''ZVS5.2'',''FCP'') 
,(''ZVS5.1'',''FCW'')
,(''ZVS5.1'',''FEM'') 
,(''ZVS5.1'',''FCH'') 
,(''ZVS5.1'',''FMR'') 
,(''ZVS5.1'',''FOT'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.FormNr in (''ZVS5.1'')

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.FormNr in (''ZVS5.2'')

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=9
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value + I.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value + G.Wert_Value + H.Wert_Value + I.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H , @CHECK_TABLE I
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5
AND F.ID = 6
AND G.ID = 7
AND H.ID = 8
AND I.ID = 9

END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11814, N'ZVSTA_2022_H', N'202206', N'S5155.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI = FPI.R + FPI.NR', N'Die betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI'') 
,(''ZVS5.1'',''FPI.R'') 
,(''ZVS5.1'',''FPI.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11815, N'ZVSTA_2022_H', N'202206', N'S5156.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI = FPI.CTS + FPI.OTH', N'Die betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Überweisungen und sonstigen betrügerischen Transaktionen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI'') 
,(''ZVS5.1'',''FPI.CTS'') 
,(''ZVS5.1'',''FPI.OTH'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11816, N'ZVSTA_2022_H', N'202206', N'S5157.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI.R = FPI.R.1 + FPI.R.2', N'Die über einen Fernzugang ausgelösten betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI.R'') 
,(''ZVS5.1'',''FPI.R.1'') 
,(''ZVS5.1'',''FPI.R.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11817, N'ZVSTA_2022_H', N'202206', N'S5158.A/W', N'SUM', N'ZVS5.1', N'ZVS5.1', N'FPI.NR = FPI.NR.1 + FPI.NR.2', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Transaktionen von Zahlungsauslösediensten müssen sich aus den betrügerischen Transaktionen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.1'',''FPI.NR'') 
,(''ZVS5.1'',''FPI.NR.1'') 
,(''ZVS5.1'',''FPI.NR.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11818, N'ZVSTA_2022_H', N'202206', N'S5201.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP = FCP.1 + FCP.2', N'Die betrügerischen Kartenzahlungen insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten betrügerischen Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP'') 
,(''ZVS5.2'',''FCP.1'') 
,(''ZVS5.2'',''FCP.2'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11819, N'ZVSTA_2022_H', N'202206', N'S5202.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.1 = FCP.1.R + FCP.1.NR', N'Die betrügerischen nicht elektronisch ausgelösten Kartenzahlungen müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.1'') 
,(''ZVS5.2'',''FCP.1.R'') 
,(''ZVS5.2'',''FCP.1.NR'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11820, N'ZVSTA_2022_H', N'202206', N'S5203.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2 = FCP.2.R + FCP.2.NR', N'Die betrügerischen elektronisch ausgelösten Kartenzahlungen müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2'') 
,(''ZVS5.2'',''FCP.2.R'') 
,(''ZVS5.2'',''FCP.2.NR'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11821, N'ZVSTA_2022_H', N'202206', N'S5204.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R = ∑ FCP.2.R.PCS', N'Die elektronischen, über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den betrügerischen Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R'') 
,(''ZVS5.2'',''FCP.2.R.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11822, N'ZVSTA_2022_H', N'202206', N'S5205.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R = FCP.2.R.1 + FCP.2.R.4 ', N'Die über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den mobilen und sonstigen betrügerischen Zahlungsvorgängen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R'') 
,(''ZVS5.2'',''FCP.2.R.1'') 
,(''ZVS5.2'',''FCP.2.R.4'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 







































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11823, N'ZVSTA_2022_H', N'202206', N'S5206.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS = FCP.2.R.PCS.1 + FCP.2.R.PCS.2 + FCP.2.R.PCS.3', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'') 
,(''ZVS5.2'',''FCP.2.R.PCS.1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.2'')
,(''ZVS5.2'',''FCP.2.R.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11824, N'ZVSTA_2022_H', N'202206', N'S5207.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS = FCP.2.R.PCS.4 + FCP.2.R.PCS.5', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value +  C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B , @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2  AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 








































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11825, N'ZVSTA_2022_H', N'202206', N'S5208.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4 = FCP.2.R.PCS.4.f1 + FCP.2.R.PCS.4.f2 + FCP.2.R.PCS.4.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f2'')
,(''ZVS5.2'',''FCP.2.R.PCS.4.f3'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11826, N'ZVSTA_2022_H', N'202206', N'S5209.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4.f1 = FCP.2.R.PCS.4.f11 + FCP.2.R.PCS.4.f12 + FCP.2.R.PCS.4.f13 + FCP.2.R.PCS.4.f14 + FCP.2.R.PCS.4.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f11'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f12'')
,(''ZVS5.2'',''FCP.2.R.PCS.4.f13'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f14'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f16'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11827, N'ZVSTA_2022_H', N'202206', N'S5210.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5 = FCP.2.R.PCS.5.f1 + FCP.2.R.PCS.5.f2 + FCP.2.R.PCS.5.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f2'')
,(''ZVS5.2'',''FCP.2.R.PCS.5.f3'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11828, N'ZVSTA_2022_H', N'202206', N'S5211.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5.f1 = FCP.2.R.PCS.5.f11 + FCP.2.R.PCS.5.f12 + FCP.2.R.PCS.5.f13 + FCP.2.R.PCS.5.f14 + FCP.2.R.PCS.5.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f11'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f12'')
,(''ZVS5.2'',''FCP.2.R.PCS.5.f13'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f14'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11829, N'ZVSTA_2022_H', N'202206', N'S5212.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.1 >= FCP.2.R.11', N'Die über einen Fernzugang ausgelösten betrügerischen mobilen P2P-Kartenzahlungen dürfen nicht höher sein als die über einen Fernzugang ausgelösten mobilen Kartenzahlungen insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.1'') 
,(''ZVS5.2'',''FCP.2.R.11'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11830, N'ZVSTA_2022_H', N'202206', N'S5213.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR = ∑ FCP.2.NR.PCS', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR'') 
,(''ZVS5.2'',''FCP.2.NR.PCS'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11831, N'ZVSTA_2022_H', N'202206', N'S5214.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 = ∑ FCP.2.R.PCS.5', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung je Ausnahmegrun', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11832, N'ZVSTA_2022_H', N'202206', N'S5215.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 = FCP.2.R.r1 + FCP.2.R.r4 + FCP.2.R.r5 + FCP.2.R.r7 + FCP.2.R.r8 + FCP.2.R.r9 + FCP.2.R.r10', N'Die über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'') 
,(''ZVS5.2'',''FCP.2.R.r1'') 
,(''ZVS5.2'',''FCP.2.R.r4'')
,(''ZVS5.2'',''FCP.2.R.r5'') 
,(''ZVS5.2'',''FCP.2.R.r7'') 
,(''ZVS5.2'',''FCP.2.R.r8'') 
,(''ZVS5.2'',''FCP.2.R.r9'') 
,(''ZVS5.2'',''FCP.2.R.r10'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=8
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value + H.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value + H.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F , @CHECK_TABLE G , @CHECK_TABLE H           
WHERE       
A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 AND G.ID = 7
AND H.ID = 8
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11833, N'ZVSTA_2022_H', N'202206', N'S5216.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR = FCP.2.NR.2 + FCP.2.NR.3 + FCP.2.NR.4', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen Kartenzahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR'') 
,(''ZVS5.2'',''FCP.2.NR.2'') 
,(''ZVS5.2'',''FCP.2.NR.3'')
,(''ZVS5.2'',''FCP.2.NR.4'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11834, N'ZVSTA_2022_H', N'202206', N'S5217.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS = FCP.2.NR.PCS.1 + FCP.2.NR.PCS.2 + FCP.2.NR.PCS.3', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.2'')
,(''ZVS5.2'',''FCP.2.NR.PCS.3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11835, N'ZVSTA_2022_H', N'202206', N'S5218.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS = FCP.2.NR.PCS.4 + FCP.2.NR.PCS.5', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11836, N'ZVSTA_2022_H', N'202206', N'S5219.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4 = FCP.2.NR.PCS.4.f1 + FCP.2.NR.PCS.4.f2 + FCP.2.NR.PCS.4.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f2'')
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11837, N'ZVSTA_2022_H', N'202206', N'S5220.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4.f1 = FCP.2.NR.PCS.4.f11 + FCP.2.NR.PCS.4.f12 + FCP.2.NR.PCS.4.f13 + FCP.2.NR.PCS.4.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f11'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f12'')
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f13'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11838, N'ZVSTA_2022_H', N'202206', N'S5221.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5 = FCP.2.NR.PCS.5.f1 + FCP.2.NR.PCS.5.f2 + FCP.2.NR.PCS.5.f3', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f2'')
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f3'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11839, N'ZVSTA_2022_H', N'202206', N'S5222.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5.f1 = FCP.2.NR.PCS.5.f11 + FCP.2.NR.PCS.5.f12 + FCP.2.NR.PCS.5.f13 + FCP.2.NR.PCS.5.f16', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f11'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f12'')
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f13'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f16'') 


UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END

 


IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5  
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11840, N'ZVSTA_2022_H', N'202206', N'S5223.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.2 >= FCP.2.NR.21', N'Die betrügerischen kontaktlosen Kartenzahlungen an einem physischen EFTPOS dürfen nicht größer sein als die Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.2'') 
,(''ZVS5.2'',''FCP.2.NR.21'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11841, N'ZVSTA_2022_H', N'202206', N'S5224.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.21 >= FCP.2.NR.211', N'Die betrügerischen kontaktlosen Kartenzahlungen an einem physischen EFTPOS per NFC dürfen nicht größer sein als die kontaktlosen Zahlungen an einem physischen EFTPOS insgesamt.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.21'') 
,(''ZVS5.2'',''FCP.2.NR.211'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value 
and A.Wert_Value >= B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11842, N'ZVSTA_2022_H', N'202206', N'S5225.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 = ∑ FCP.2.NR.PCS.5', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der Transaktionen ohne starke Kundenauthentifizierung je Ausnahmegrund entsprech', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



































', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11843, N'ZVSTA_2022_H', N'202206', N'S5226.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 = FCP.2.NR.r2 + FCP.2.NR.r4 + FCP.2.NR.r5 + FCP.2.NR.r6 + FCP.2.NR.r10', N'Die nicht über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))


INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'') 
,(''ZVS5.2'',''FCP.2.NR.r2'') 
,(''ZVS5.2'',''FCP.2.NR.r4'')
,(''ZVS5.2'',''FCP.2.NR.r5'') 
,(''ZVS5.2'',''FCP.2.NR.r6'') 
,(''ZVS5.2'',''FCP.2.NR.r10'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END
 
IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11844, N'ZVSTA_2022_H', N'202206', N'S5227.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP (empfangen) = FCP.1 (empfangen) + FCP.2 (empfangen)', N'Die betrügerischen Kartenzahlungen an selbst abgerechneten Terminals insgesamt müssen sich aus den elektronisch und nicht elektronisch ausgelösten betrügerischen Zahlungen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP'',''FROM'') 
,(''ZVS5.2'',''FCP.1'',''FROM'') 
,(''ZVS5.2'',''FCP.2'',''FROM'') 
 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 













', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11845, N'ZVSTA_2022_H', N'202206', N'S5228.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.1 (empfangen) = FCP.1.R (empfangen) + FCP.1.NR (empfangen)', N'Die betrügerischen nicht elektronisch ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.1'',''FROM'') 
,(''ZVS5.2'',''FCP.1.R'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 














', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11846, N'ZVSTA_2022_H', N'202206', N'S5229.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2 (empfangen) = FCP.2.R (empfangen) + FCP.2.NR (empfangen)', N'Die betrügerischen elektronisch ausgelösten Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den betrügerischen Zahlungen über einen Fernzugang und nicht über einen Fernzugang ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11847, N'ZVSTA_2022_H', N'202206', N'S5230.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R (empfangen) =
∑ FCP.2.R.PCS (empfangen)', N'Die elektronischen, über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen müssen sich aus den betrügerischen Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11848, N'ZVSTA_2022_H', N'202206', N'S5231.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS (empfangen) = FCP.2.R.PCS.1 (empfangen) + FCP.2.R.PCS.2 (empfangen) + FCP.2.R.PCS.3 (empfangen)', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11849, N'ZVSTA_2022_H', N'202206', N'S5232.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS (empfangen) = FCP.2.R.PCS.4 (empfangen) + FCP.2.R.PCS.5 (empfangen)', N'Die über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11850, N'ZVSTA_2022_H', N'202206', N'S5233.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4 (empfangen) = FCP.2.R.PCS.4.f1 (empfangen) + FCP.2.R.PCS.4.f2 (empfangen) + FCP.2.R.PCS.4.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11851, N'ZVSTA_2022_H', N'202206', N'S5234.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.4.f1 (empfangen) = FCP.2.R.PCS.4.f11 (empfangen) + FCP.2.R.PCS.4.f12 (empfangen) + FCP.2.R.PCS.4.f13 (empfangen) + FCP.2.R.PCS.4.f14 (empfangen) + FCP.2.R.PCS.4.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger an selbst abgerechneten Terminals ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs er', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.4.f14'',''FROM'')
,(''ZVS5.2'',''FCP.2.R.PCS.4.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11852, N'ZVSTA_2022_H', N'202206', N'S5235.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5 (empfangen) = FCP.2.R.PCS.5.f1 (empfangen) + FCP.2.R.PCS.5.f2 (empfangen) + FCP.2.R.PCS.5.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11853, N'ZVSTA_2022_H', N'202206', N'S5236.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.PCS.5.f1 (empfangen) = FCP.2.R.PCS.5.f11 (empfangen) + FCP.2.R.PCS.5.f12 (empfangen) + FCP.2.R.PCS.5.f13 (empfangen) + FCP.2.R.PCS.5.f14 (empfangen) + FCP.2.R.PCS.5.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger an selbst abgerechneten Terminals ausgelöst müssen sich aus den Zahlungen nach Grund des Betrugs er', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5.f14'',''FROM'')
,(''ZVS5.2'',''FCP.2.R.PCS.5.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11854, N'ZVSTA_2022_H', N'202206', N'S5237.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 (empfangen) = ∑ FCP.2.R.PCS.5 (empfangen)', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der Transaktionen ohne starke Kundenauthentifizierung je Ausnahmegrund entsprechen.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11855, N'ZVSTA_2022_H', N'202206', N'S5238.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.R.r0 (empfangen) = FCP.2.R.r1 (empfangen) + FCP.2.R.r5 (empfangen) + FCP.2.R.r8 (empfangen) + FCP.2.R.r9 (empfangen) + FCP.2.R.r10 (empfangen)', N'Die über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.R.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r8'',''FROM'') 
,(''ZVS5.2'',''FCP.2.R.r9'',''FROM'')
,(''ZVS5.2'',''FCP.2.R.r10'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=6
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11856, N'ZVSTA_2022_H', N'202206', N'S5239.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR (empfangen) =∑ FCP.2.NR.PCS (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den Kartenzahlungen der einzelnen Kartenzahlverfahren (Kartenschemes) ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11857, N'ZVSTA_2022_H', N'202206', N'S5240.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR (empfangen) = FCP.2.NR.2 (empfangen) + FCP.2.NR.3 (empfangen) + FCP.2.NR.4 (empfangen)', N'Die elektronischen, nicht über einen Fernzugriff ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals müssen sich aus den betrügerischen Zahlungen an einem physischen EFTPOS, an Bankautomaten und sonstigen betrügerischen Kartenzahl', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.3'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.4'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 

















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11858, N'ZVSTA_2022_H', N'202206', N'S5241.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS (empfangen) = FCP.2.NR.PCS.1 (empfangen) + FCP.2.NR.PCS.2 (empfangen) + FCP.2.NR.PCS.3 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit den einzelnen Kartenarten ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 


















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11859, N'ZVSTA_2022_H', N'202206', N'S5242.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS (empfangen) = FCP.2.NR.PCS.4 (empfangen) + FCP.2.NR.PCS.5 (empfangen)', N'Die nicht über einen Fernzugang ausgelösten betrügerischen Kartenzahlungen an selbst abgerechneten Terminals je nach Kartenzahlverfahren (Kartenscheme)* müssen sich aus den betrügerischen Zahlungen mit und ohne starker Kundenauthentifizierung ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value 
and A.Wert_Value = B.Wert_Value + C.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C        
WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 
















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11860, N'ZVSTA_2022_H', N'202206', N'S5243.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4 (empfangen) = FCP.2.NR.PCS.4.f1 (empfangen) + FCP.2.NR.PCS.4.f2 (empfangen) + FCP.2.NR.PCS.4.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11861, N'ZVSTA_2022_H', N'202206', N'S5244.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.4.f1 (empfangen) = FCP.2.NR.PCS.4.f11 (empfangen) + FCP.2.NR.PCS.4.f12 (empfangen) + FCP.2.NR.PCS.4.f13 (empfangen) + FCP.2.NR.PCS.4.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang mit starker Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.4.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.4.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value  
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11862, N'ZVSTA_2022_H', N'202206', N'S5245.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5 (empfangen) = FCP.2.NR.PCS.5.f1 (empfangen) + FCP.2.NR.PCS.5.f2 (empfangen) + FCP.2.NR.PCS.5.f3 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung müssen sich aus den betrügerischen Zahlungen je Betrugsquelle ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f3'',''FROM'') 

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=4
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
and A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 




















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11863, N'ZVSTA_2022_H', N'202206', N'S5246.PCS.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.PCS.5.f1 (empfangen) = FCP.2.NR.PCS.5.f11 (empfangen) + FCP.2.NR.PCS.5.f12 (empfangen) + FCP.2.NR.PCS.5.f13 (empfangen) + FCP.2.NR.PCS.5.f16 (empfangen)', N'Die betrügerischen Kartenzahlungen je nach Kartenzahlverfahren (Kartenscheme)* nicht über einen Fernzugang ohne starke Kundenauthentifizierung durch den Betrüger ausgelöst müssen sich aus den betrügerischen Zahlungen nach Grund des Betrugs ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.PCS.5.f1'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f11'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f12'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f13'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5.f16'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value  
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11864, N'ZVSTA_2022_H', N'202206', N'S5247.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 (empfangen) = ∑ FCP.2.NR.PCS.5 (empfangen)', N'Die Summe der betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung nicht über einen Fernzugriff der einzelnen Kartenzahlverfahren (Kartenschemes) muss der Summe der betrügerischen Transaktionen ohne starke Kundenauthentifizierung je Ausnahme', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.PCS.5'',''FROM'') 
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value 
and A.Wert_Value = B.Wert_Value  THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B      
WHERE       A.ID = 1 AND B.ID = 2  END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 



















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11865, N'ZVSTA_2022_H', N'202206', N'S5248.A/W', N'SUM', N'ZVS5.2', N'ZVS5.2', N'FCP.2.NR.r0 (empfangen) = FCP.2.NR.r2 (empfangen) + FCP.2.NR.r5 (empfangen) + FCP.2.NR.r6 (empfangen) + FCP.2.NR.r10 (empfangen)', N'Die nicht über einen Fernzugriff durchgeführten betrügerischen Kartenzahlungen ohne starke Kundenauthentifizierung müssen sich aus den einzelnen Ausnahmegründen ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''FCP.2.NR.r0'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r2'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r5'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r6'',''FROM'') 
,(''ZVS5.2'',''FCP.2.NR.r10'',''FROM'')
 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=5
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value  and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value  
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E         WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11866, N'ZVSTA_2022_H', N'202206', N'S601', N'SUM', N'ZVS6', N'ZVS6', N'1.PTT = 1.PCW + 1.PCD + 1.OTR + 1.POS + 1.LEM + 1.PEM', N'Die Transaktionen an den von inländischen Acquirern abgerechneten Terminals (Gesamt) mit inländischen Karten müssen sich aus den Positionen Bargeldabhebungen /-einzahlungen, sonstigen Transaktionen, POS-Transaktionen sowie Auf-/ Entladen von E-Geld-Karten', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''1.PTT'',''FROM'') 
,(''ZVS5.2'',''1.PCW'',''FROM'') 
,(''ZVS5.2'',''1.PCD'',''FROM'') 
,(''ZVS5.2'',''1.OTR'',''FROM'') 
,(''ZVS5.2'',''1.POS'',''FROM'')
,(''ZVS5.2'',''1.LEM'',''FROM'')
,(''ZVS5.2'',''1.PEM'',''FROM'')

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=7
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F  , @CHECK_TABLE G       WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6  AND G.ID = 7 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 





















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11867, N'ZVSTA_2022_H', N'202206', N'S602', N'SUM', N'ZVS6', N'ZVS6', N'2.PTT = 2.PCW + 2.PCD + 2.OTR + 2.POS + 2.LEM + 2.PEM', N'Die Transaktionen an den von inländischen Acquirern abgerechneten Terminals (Gesamt) mit ausländischen Karten müssen sich aus den Positionen Bargeldabhebungen /-einzahlungen, sonstigen Transaktionen, POS-Transaktionen sowie Auf-/ Entladen von E-Geld-Karte', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''2.PTT'',''FROM'') 
,(''ZVS5.2'',''2.PCW'',''FROM'') 
,(''ZVS5.2'',''2.PCD'',''FROM'') 
,(''ZVS5.2'',''2.OTR'',''FROM'') 
,(''ZVS5.2'',''2.POS'',''FROM'')
,(''ZVS5.2'',''2.LEM'',''FROM'')
,(''ZVS5.2'',''2.PEM'',''FROM'')

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=7
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F  , @CHECK_TABLE G       WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6  AND G.ID = 7 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 






















', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11868, N'ZVSTA_2022_H', N'202206', N'S603', N'SUM', N'ZVS6', N'ZVS6', N'3.PTT = 3.PCW + 3.PCD + 3.OTR + 3.POS + 3.LEM + 3.PEM', N'Die Transaktionen an den von ausl. ZDL abgerechneten Terminals (Gesamt) mit ausgegebenen Karten müssen sich aus den Positionen Bargeldabhebungen /-einzahlungen, sonstigen Transaktionen, POS-Transaktionen sowie Auf-/ Entladen von E-Geld-Karten und E-Geld-Z', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_H202206''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Landkontext Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr,
Landkontext)
VALUES 
(''ZVS5.2'',''3.PTT'',''FROM'') 
,(''ZVS5.2'',''3.PCW'',''FROM'') 
,(''ZVS5.2'',''3.PCD'',''FROM'') 
,(''ZVS5.2'',''3.OTR'',''FROM'') 
,(''ZVS5.2'',''3.POS'',''FROM'')
,(''ZVS5.2'',''3.LEM'',''FROM'')
,(''ZVS5.2'',''3.PEM'',''FROM'')

 
UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr,Landkontext  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
and LandCode in (''W0'') and LandCode_T in (''W0'')
GROUP BY PositionNr,FormNr,Landkontext)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr and A.Landkontext=B.Landkontext

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0'') and LandCode_T in (''W0'')
and Landkontext in (''FROM''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0'') and LandCode_T not in (''W0'')
and Landkontext in (''FROM''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN 
SELECT ''N'' As CheckResult
END

IF (Select Count(ID) from @CHECK_TABLE)=7
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value + D.Anzahl_Value
+ E.Anzahl_Value + F.Anzahl_Value + G.Anzahl_Value and 
A.Wert_Value = B.Wert_Value + C.Wert_Value + D.Wert_Value + E.Wert_Value + F.Wert_Value
+ G.Wert_Value 
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C, @CHECK_TABLE D
, @CHECK_TABLE E , @CHECK_TABLE F  , @CHECK_TABLE G       WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3 AND D.ID = 4 AND E.ID = 5 AND F.ID = 6  AND G.ID = 7 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END

 























', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11869, N'ZVSTA_2022_Q', N'202203', N'S901', N'SUM', N'ZVS9', N'ZVS9', N'PCP.2.NR >= ∑ PCP.2.NR.MCC', N'Die Kartenzahlungen, welche nicht über einen Fernzugang ausgelöst wurden, müssen mindestens so hoch sein wie die Summe der Kartenzahlungen (nicht über einen Fernzugang ausgelöst) je MCC.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_Q202203''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCP.2.NR'') 
,(''ZVS9'',''PCP.2.NR.MCC'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value and A.Wert_Value>=B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11870, N'ZVSTA_2022_Q', N'202203', N'S902', N'SUM', N'ZVS9', N'ZVS9', N'PCP.2.R >= ∑ PCP.2.R.MCC', N'Die Kartenzahlungen, welche über einen Fernzugang ausgelöst wurden, müssen mindestens so hoch sein wie die Summe der Kartenzahlungen (über einen Fernzugang ausgelöst) je MCC.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_Q202203''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCP.2.R'') 
,(''ZVS9'',''PCP.2.R.MCC'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=2
BEGIN
SELECT  CASE WHEN A.Anzahl_Value >= B.Anzahl_Value and A.Wert_Value>=B.Wert_Value THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B
        WHERE       A.ID = 1 AND B.ID = 2 
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END
', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11871, N'ZVSTA_2022_Q', N'202203', N'S903', N'SUM', N'ZVS9', N'ZVS9', N'PCT.2 = PCT.2.R + PCT.2.NR', N'Die elektronischen Überweisungen müssen sich aus der Summe der elektronischen Überweisungen, welche über einen Fernzugang und ohne Fernzugang ausgelöst wurden, ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_Q202203''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCT.2'') 
,(''ZVS9'',''PCT.2.R'') 
,(''ZVS9'',''PCT.2.NR'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr



IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value and
                  ROUND(A.Wert_Value,2) = ROUND(B.Wert_Value,2) + ROUND(C.Wert_Value,2)
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END








', N'Y')
GO
INSERT [dbo].[ZVSTAT_ReportingValidityCheck] ([ID], [ZVSTA_Schema], [ReportingPeriod], [Validity_ID], [ValidityType], [ReportingFormLeft], [ReportingFormRight], [ValidityTerm], [ValidityTermDescription], [ValiditySqlParameter], [ValidityCheckResult]) VALUES (11872, N'ZVSTA_2022_Q', N'202203', N'S904', N'SUM', N'ZVS9', N'ZVS9', N'PCP.2 = PCP.2.NR + PCP.2.R', N'Die elektronischen Kartenzahlungen müssen sich aus der Summe der elektronischen Kartenzahlungen, welche über einen Fernzugang und ohne Fernzugang ausgelöst wurden, ergeben.', N'DECLARE @CURRENT_ZV_REPORT Nvarchar(100)=''ZVSTA_2022_Q202203''
DECLARE @TOTAL_W0 float=0
DECLARE @TOTAL_NOT_W0 float=0
DECLARE @CHECK_TABLE as Table
([ID] int IDENTITY(1,1) NOT NULL,
FormNr Nvarchar(10) NULL,
PositionNr Nvarchar(50) NULL,
Anzahl_Value float Default(0),
Wert_Value float Default(0))

INSERT INTO @CHECK_TABLE
(FormNr,
PositionNr)
VALUES 
(''ZVS9'',''PCP.2'') 
,(''ZVS9'',''PCP.2.NR'') 
,(''ZVS9'',''PCP.2.R'') 

UPDATE A SET A.Anzahl_Value=B.SumAnzahl,A.Wert_Value=B.SumWert from @CHECK_TABLE A INNER JOIN 
(Select Sum(Anzahl_Value) as SumAnzahl,Sum(Wert_Value) as SumWert,PositionNr,FormNr  from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT 
GROUP BY PositionNr,FormNr)B
on A.FormNr=B.FormNr and A.PositionNr=B.PositionNr

SET @TOTAL_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode in (''W0''))
SET @TOTAL_NOT_W0 =(Select ISNULL(Sum(Anzahl_Value+Wert_Value),0) from ZVSTAT_Reporting where [ZVSTA_Schema]+[ReportingPeriod]=@CURRENT_ZV_REPORT and PositionNr in (Select PositionNr from @CHECK_TABLE) and LandCode not in (''W0''))
IF @TOTAL_W0<>@TOTAL_NOT_W0
BEGIN
SELECT ''N'' As CheckResult
END


IF (Select Count(ID) from @CHECK_TABLE)=3
BEGIN
SELECT  CASE WHEN A.Anzahl_Value = B.Anzahl_Value + C.Anzahl_Value and
                  A.Wert_Value = B.Wert_Value + C.Wert_Value
THEN ''Y'' ELSE ''N'' END As CheckResult
        FROM        @CHECK_TABLE A, @CHECK_TABLE B, @CHECK_TABLE C
        WHERE       A.ID = 1 AND B.ID = 2 AND C.ID = 3
END
ELSE IF (Select Count(ID) from @CHECK_TABLE)<=1
BEGIN
SELECT ''N'' As CheckResult
END









', N'Y')
GO
SET IDENTITY_INSERT [dbo].[ZVSTAT_ReportingValidityCheck] OFF
GO
ALTER TABLE [dbo].[ZVSTAT_Reporting] ADD  CONSTRAINT [DF__ZVSTAT_Re__PayCa__15E52B55]  DEFAULT ('N') FOR [PayCardSystem_Description]
GO
ALTER TABLE [dbo].[ZVSTAT_Reporting] ADD  CONSTRAINT [DF_ZVSTAT_Reporting_SumPosition]  DEFAULT (N'N') FOR [SumPosition]
GO
ALTER TABLE [dbo].[ZVSTAT_Reporting] ADD  CONSTRAINT [DF__ZVSTAT_Re__Anzah__16D94F8E]  DEFAULT ((0)) FOR [Anzahl_Value]
GO
ALTER TABLE [dbo].[ZVSTAT_Reporting] ADD  CONSTRAINT [DF__ZVSTAT_Re__Wert___17CD73C7]  DEFAULT ((0)) FOR [Wert_Value]
GO
ALTER TABLE [dbo].[ZVSTAT_Reporting] ADD  CONSTRAINT [DF_ZVSTAT_Reporting_LastUpdateUser]  DEFAULT (N'AUTO') FOR [LastUpdateUser]
GO
ALTER TABLE [dbo].[ZVSTAT_Reporting] ADD  CONSTRAINT [DF__ZVSTAT_Re__Repor__3DBE1285]  DEFAULT ('A') FOR [ReportStatus]
GO
