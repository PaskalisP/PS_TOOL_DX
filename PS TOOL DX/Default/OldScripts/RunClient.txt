Imports System
Imports System.IO
Imports System.Data.SqlClient
Imports System.ComponentModel
Imports DevExpress.Skins
Imports DevExpress.LookAndFeel
Imports DevExpress.UserSkins
Imports DevExpress.XtraBars
Imports DevExpress.XtraBars.Ribbon
Imports DevExpress.XtraBars.Helpers
Imports DevExpress.XtraEditors
Imports DevExpress.XtraGrid.Views.Grid
Imports System.Text
Imports System.Collections
Imports System.Windows.Forms
Imports DevExpress.XtraSplashScreen
Imports DevExpress.XtraGrid.Views.Grid.ViewInfo
Imports DevExpress.XtraGrid.Views.Layout.ViewInfo
Imports DevExpress.XtraLayout.Customization
Imports DevExpress.XtraGrid.Views.Layout.Drawing
Imports DevExpress.XtraLayout.Utils
Imports DevExpress.XtraGrid.Views.Base
Imports DevExpress.XtraNavBar
Imports DevExpress.XtraPrinting
Imports System.Threading
Imports DevExpress.XtraTab
Imports DevExpress.XtraTab.ViewInfo
Imports DevExpress.XtraReports.UI
Imports DevExpress.XtraGrid.Columns
Imports DevExpress.XtraGrid.Controls
Imports DevExpress.XtraEditors.Controls
Imports DevExpress.XtraReports.Parameters
Imports CrystalDecisions.Shared
Imports CrystalDecisions.CrystalReports.Engine
Imports Microsoft.Office.Interop.Excel
Imports DevExpress.Spreadsheet



Public Class RunClient

    Dim conn As New SqlClient.SqlConnection
    Dim cmd As New SqlCommand
    Dim connEVENT As New SqlClient.SqlConnection
    Dim cmdEVENT As New SqlCommand

    Dim excel As Microsoft.Office.Interop.Excel.Application
    Dim instance As Microsoft.Office.Interop.Excel.WorksheetFunction




    Private QueryText As String = ""
    Private da As New SqlDataAdapter
    Private dt As New System.Data.DataTable
    Private da1 As New SqlDataAdapter
    Private dt1 As New System.Data.DataTable
    Private da2 As New SqlDataAdapter
    Private dt2 As New System.Data.DataTable

    Dim RunClient_btn_clicked As Boolean = False 'Button for Start Client

    Dim rd As Date
    Dim rdsql As String = Nothing
    Dim MaxProcDate As Date
    Dim CheckingDate As Date
    Dim CheckingDateSql As String = Nothing
    Dim LastDayCurrentMonth As Date
    Dim FirstDayOverNextMonth As Date
    Dim HasDataResult As String = Nothing

    Dim CurrentClientProcedure As String = Nothing

    Dim wck As Double = 0
    Dim summeAM1 As Double = 0
    Dim summeAM2 As Double = 0

    Dim sumCreditRiskAmountEUR As Double = 0
    Dim sumCreditOutstandingEURequ As Double = 0
    Dim sumMAKEuroEquivalent As Double = 0
    Dim sumdifference As Double = 0
    Dim sumNetCreditRiskAmountEUR As Double = 0
    Dim sumNetCreditRiskAmountEUR45 As Double = 0
    Dim BadRefinaceSoldFounded As Double = 0
    Dim SumPledgedVariableDepositsCustomer As Double = 0


    Sub New()
        InitSkins()
        InitializeComponent()
        SkinManager.EnableMdiFormSkins()
    End Sub
    Sub InitSkins()
        DevExpress.Skins.SkinManager.EnableFormSkins()
        DevExpress.UserSkins.BonusSkins.Register()
        UserLookAndFeel.Default.SetSkinStyle(CurrentSkinName)
    End Sub

    Private Sub CLIENT_EVENTSBindingNavigatorSaveItem_Click(sender As Object, e As EventArgs)
        Me.Validate()
        Me.CLIENT_EVENTSBindingSource.EndEdit()
        Me.TableAdapterManager.UpdateAll(Me.EDPDataSet)

    End Sub

    Private Sub RunClient_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing
        If Me.BgwClientRun.IsBusy = True Then
            e.Cancel = True
        Else
            e.Cancel = False
        End If
    End Sub

    Private Sub RunClient_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        conn.ConnectionString = My.Settings.PS_TOOL_DX_SQL_Client_ConnectionString
        cmd.Connection = conn
        cmd.CommandTimeout = 60000

        connEVENT.ConnectionString = My.Settings.PS_TOOL_DX_SQL_Client_ConnectionString
        cmdEVENT.Connection = connEVENT
        cmdEVENT.CommandTimeout = 60000

        'Get Max Date
        cmd.CommandText = "SELECT MAX([ProcDate]) FROM [CLIENT EVENTS]"
        cmd.Connection.Open()
        If cmd.ExecuteScalar IsNot DBNull.Value Then
            MaxProcDate = cmd.ExecuteScalar
        Else
            MaxProcDate = DateSerial(2014, 9, 30)
        End If
        cmd.Connection.Close()

        'Bind Combobox
        Me.ClientDateFrom_Comboedit.Properties.Items.Clear()
        Me.ClientDateTill_Comboedit.Properties.Items.Clear()
        Me.QueryText = "Select CONVERT(VARCHAR(10),[RLDC Date],104) as 'RLDC Date' from [RISK LIMIT DAILY CONTROL] where [RLDC Date]>='20140101' and [PL Result] is not NULL and [Client_Lock]=0 ORDER BY [ID] desc"
        da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        dt = New System.Data.DataTable()
        da.Fill(dt)
        For Each row As DataRow In dt.Rows
            If dt.Rows.Count > 0 Then
                Me.ClientDateFrom_Comboedit.Properties.Items.Add(row("RLDC Date"))
                Me.ClientDateTill_Comboedit.Properties.Items.Add(row("RLDC Date"))
            End If
        Next
        If dt.Rows.Count > 0 Then
            Me.ClientDateFrom_Comboedit.Text = dt.Rows.Item(0).Item("RLDC Date")
            Me.ClientDateTill_Comboedit.Text = dt.Rows.Item(0).Item("RLDC Date")
        End If


        Me.CLIENT_EVENTSTableAdapter.FillByProcDate(Me.EDPDataSet.CLIENT_EVENTS, MaxProcDate)

    End Sub

    Private Sub ClientEvents_BasicView_RowStyle(sender As Object, e As RowStyleEventArgs) Handles ClientEvents_BasicView.RowStyle
        'Set Backcolor to Filter row
        If e.RowHandle = DevExpress.XtraGrid.GridControl.AutoFilterRowHandle Then
            e.Appearance.BackColor = SystemColors.InactiveCaptionText

        End If
    End Sub

    Private Sub ClientEvents_BasicView_ShownEditor(sender As Object, e As EventArgs) Handles ClientEvents_BasicView.ShownEditor
        Dim view As GridView = CType(sender, GridView)
        If view.FocusedRowHandle = DevExpress.XtraGrid.GridControl.AutoFilterRowHandle Then
            view.ActiveEditor.Properties.Appearance.ForeColor = Color.Yellow
        End If
    End Sub

    Private Sub Print_Export_ClientEvents_Gridview_btn_Click(sender As Object, e As EventArgs) Handles Print_Export_ClientEvents_Gridview_btn.Click
        If Not GridControl2.IsPrintingAvailable Then
            MessageBox.Show("The 'DevExpress.XtraPrinting' Library is not found", "Error")
            Return
        End If

        SplashScreenManager.ShowForm(Me, GetType(WaitForm1), True, True, False)
        PrintableComponentLink1.CreateDocument()
        PrintableComponentLink1.ShowPreview()
        SplashScreenManager.CloseForm(False)
    End Sub


    Private Sub PrintableComponentLink1_CreateMarginalFooterArea(sender As Object, e As CreateAreaEventArgs) Handles PrintableComponentLink1.CreateMarginalFooterArea
        Dim pinfoBrick As PageInfoBrick, r As RectangleF, iSize As Size
        Try
            iSize = e.Graph.MeasureString(String.Format("Printed: {0:F}M", DateTime.Now)).ToSize
            r = New RectangleF(New PointF(e.Graph.ClientPageSize.Width - iSize.Width, 0), iSize)
            pinfoBrick = e.Graph.DrawPageInfo(PageInfo.DateTime, "Printed: {0:F}", e.Graph.ForeColor, r, DevExpress.XtraPrinting.BorderSide.None)

        Catch ex As Exception

        End Try
    End Sub

    Private Sub PrintableComponentLink1_CreateMarginalHeaderArea(sender As Object, e As CreateAreaEventArgs) Handles PrintableComponentLink1.CreateMarginalHeaderArea
        Dim reportfooter As String = "CLIENT EVENTS"
        e.Graph.DrawString(reportfooter, New RectangleF(0, 0, e.Graph.ClientPageSize.Width, 20))
    End Sub

    Private Sub StartClient_btn_Click(sender As Object, e As EventArgs) Handles StartClient_btn.Click
        RunClient_btn_clicked = True
        If IsDate(Me.ClientDateFrom_Comboedit.Text) = True Then
            If MessageBox.Show("Should the PS TOOL Client be started?", "START PS TOOL Client", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) = System.Windows.Forms.DialogResult.Yes Then
                DISABLE_START_IMPORT()
                If Me.BgwClientRun.IsBusy = False Then
                    Me.BgwClientRun.RunWorkerAsync()
                End If
            End If
        End If
    End Sub

#Region "ENABLE_DISABLE_CONTROLS_BY_CLIENT_RUN"
    Private Sub DISABLE_START_IMPORT()
        Me.ClientProgressBar.Visible = True
        StartClient_btn.Enabled = False
        Me.ClientDateFrom_Comboedit.Enabled = False
        Me.ClientDateTill_Comboedit.Enabled = False
    End Sub

    Private Sub ENABLE_FINISH_IMPORT()
        Me.ClientProgressBar.Value = 0
        Me.ClientProgressBar.Visible = False
        StartClient_btn.Enabled = True
        Me.ClientDateFrom_Comboedit.Enabled = True
        Me.ClientDateTill_Comboedit.Enabled = True
    End Sub
#End Region

    Private Sub BgwClientRun_DoWork(sender As Object, e As DoWorkEventArgs) Handles BgwClientRun.DoWork
        If Me.ClientDateFrom_Comboedit.Text <> "" And Me.ClientDateTill_Comboedit.Text <> "" Then
            Dim d1 As Date = Me.ClientDateFrom_Comboedit.Text
            Dim sqld1 As String = d1.ToString("yyyyMMdd")
            Dim d2 As Date = Me.ClientDateTill_Comboedit.Text
            Dim sqld2 As String = d2.ToString("yyyyMMdd")
            If d2 >= d1 Then

                Try
                    If cmd.Connection.State = ConnectionState.Open Then
                        cmd.Connection.Close()
                    End If
                    cmd.Connection.Open()
                    cmd.CommandTimeout = 500


                    'Select all requested Dates
                    Me.BgwClientRun.ReportProgress(1, "Select all requested Dates to run the Client")
                    Me.QueryText = "Select [RLDC Date] from [RISK LIMIT DAILY CONTROL] where [RLDC Date]>='" & sqld1 & "' and [RLDC Date]<='" & sqld2 & "' and [Client_Lock]=0 ORDER BY [RLDC Date] asc"
                    da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
                    dt = New System.Data.DataTable()
                    da.Fill(dt)
                    For Each row As DataRow In dt.Rows
                        rd = row("RLDC Date")
                        rdsql = rd.ToString("yyyyMMdd")

                        Me.BgwClientRun.ReportProgress(50, "Starting PS TOOL Client for " & rd)
                        'PROCEDURES

                        INTEREST_RATE_RISK_CALCULATION()
                        CREDIT_RISK_MAK_CALCULATION()
                        NEW_CREDIT_BUSINESS()
                        FX_CREDIT_EQUIV_CALCULATION()
                        IRS_CREDIT_EQUIV_CALCULATION()
                        UNEXPECTED_LOSS_CALCULATION()
                        DAILY_ART13_KWG_CHINESE_BANKS_CALCULATION()
                        DAILY_ART13_KWG_NONE_CHINESE_BANKS_CALCULATION()
                        BUSINESS_TYPE_CREDIT_PORTFOLIO_CALCULATION()
                        BUSINESS_TYPE_LIABILITIES_CALCULATION()
                        RLDC_UPDATE()
                        LOAN_EXPOSURE_CORPORATES()
                        STRESS_TESTS_HEAD_OFFICE_CALCULATION()
                        FORMBLATT_BALANCE_CALCULATION()
                        CURRENCY_RISK_CALCULATION()
                        CAR_CALCULATION()
                        LiqV_CALCULATION()
                        LIQUIDITY_OVERVIEW_DATA_COLLECTION()

                        'UPDATE_AWVz14z15() 'Only on Scedule Task
                        'LOAD_LOANS_TRANSACTIONS() 'Only on Scedule Task
                        'NOSTRO_RECONCILIATION() ' TEST


                        Me.BgwClientRun.ReportProgress(100, "PS TOOL Client run for " & rd & " is finished!")
                    Next

                    If cmd.Connection.State = ConnectionState.Open Then
                        cmd.Connection.Close()
                    End If

                Catch ex As Exception
                    Me.BgwClientRun.ReportProgress(24, "ERROR " & ex.Message.Replace("'", ""))
                    If cmd.Connection.State = ConnectionState.Open Then
                        cmd.Connection.Close()
                    End If
                End Try

            End If
        End If
    End Sub

    Private Sub BgwClientRun_ProgressChanged(sender As Object, e As ProgressChangedEventArgs) Handles BgwClientRun.ProgressChanged
        Dim ClientEvent As String = e.UserState
        Me.ClientProgressBar.Value = e.ProgressPercentage

        Dim stackFrame As New Diagnostics.StackFrame()
        Dim rtnName As String = stackFrame.GetMethod.Name.ToString()
        rtnName = rtnName & stackFrame.GetMethod.DeclaringType.FullName.ToString()



        cmdEVENT.Connection.Open()
        cmdEVENT.CommandTimeout = 500
        Try
            cmdEVENT.CommandText = "INSERT INTO [CLIENT EVENTS] ([EVENT],[ProcName],[SystemName]) Values('" & ClientEvent & "','" & CurrentClientProcedure & "','PS TOOL CLIENT')"
            cmdEVENT.ExecuteNonQuery()
        Catch ex As System.Exception
            cmdEVENT.CommandText = "INSERT INTO [CLIENT EVENTS] ([EVENT],[ProcName],[SystemName]) Values('ERROR +++ " & ex.Message.ToString.Replace("'", " ") & "','" & CurrentClientProcedure & "','PS TOOL CLIENT')"
            cmdEVENT.ExecuteNonQuery()
            Exit Try
        End Try
        'Get Max Date
        cmdEVENT.CommandText = "SELECT MAX([ProcDate]) FROM [CLIENT EVENTS]"
        Dim MaxNewProcDate As Date = cmdEVENT.ExecuteScalar
        cmdEVENT.Connection.Close()
        'See events
        Me.CLIENT_EVENTSTableAdapter.FillByProcDate(Me.EDPDataSet.CLIENT_EVENTS, MaxNewProcDate)
        Me.GridControl2.Update()
    End Sub

    Private Sub BgwClientRun_RunWorkerCompleted(sender As Object, e As RunWorkerCompletedEventArgs) Handles BgwClientRun.RunWorkerCompleted
        ENABLE_FINISH_IMPORT()

        'Set Button Click as default to False
        RunClient_btn_clicked = False

        If cmd.Connection.State = ConnectionState.Open Then
            cmd.Connection.Close()
        End If
    End Sub


    Private Sub INTEREST_RATE_RISK_CALCULATION()
        'INTEREST RATE RISK
        CurrentClientProcedure = "INTEREST RATE RISK"
        Me.BgwClientRun.ReportProgress(2, "Current Date for Client execution: " & rd)
        cmd.CommandText = "SELECT [RISK DATE] FROM [RATERISK DETAILS ALL DATA] WHERE [RISK DATE]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            Me.BgwClientRun.ReportProgress(3, "Delete all data in Interest Rate Risk Tables for: " & rd)
            cmd.CommandText = "DELETE  FROM [RATERISK DETAILS] WHERE [RISK DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE  FROM [RATERISK TOTALS] WHERE [RISK DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE  FROM [RATERISK DATE] WHERE [RateRiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE  FROM [RATERISK DELETIONS] WHERE [RISK DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            '*******SPECIAL CASE -- CORRECTION OF DEPOSIT CONTRACT Nr.2003097*******************
            Me.BgwClientRun.ReportProgress(3, "Table:[RATERISK DETAILS ALL DATA] Set correct Event Date to Contract Nr.2003097 for: " & rd)
            cmd.CommandText = "UPDATE A SET A.[Next EventDate]=B.[EventDate] from [RATERISK DETAILS ALL DATA] A INNER JOIN [FRISTEN] B on A.[RISK DATE]=B.RiskDate and A.[Contract/Account]=B.Contract where A.[RISK DATE]='" & rdsql & "' and A.[Contract/Account] in ('2003097') and B.AmountType in ('Interest')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Table:[RATERISK DETAILS ALL DATA] Set correct PERIOD to Contract Nr.2003097 based on the Next Event Date for: " & rd)
            cmd.CommandText = "UPDATE [RATERISK DETAILS ALL DATA] set PERIOD=Case when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>84 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=120 then '7 - 10 Years' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>60 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=84 then '5 - 7 Years' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>48 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=60 then '4 - 5 Years' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>36 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=48 then '3 - 4 Years' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>24 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=36 then '2 - 3 Years' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>12 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=24 then '1 - 2 Years' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>6 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=12 then '6 - 12 Months' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>3 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=6 then '3 - 6 Months' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])>1 and DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=3 then '1 - 3 Months' when DATEDIFF(MONTH,'" & rdsql & "',[Next EventDate])<=1  then '<= 1 Month' end where [RISK DATE]='" & rdsql & "' and [Contract/Account] in ('2003097')"
            cmd.ExecuteNonQuery()
            '*****************************************************************************************

            Me.BgwClientRun.ReportProgress(4, "Insert Data in RATERISK DETAILS from Table RATERISK DETAILS ALL DATA for: " & rd)
            cmd.CommandText = "INSERT INTO [RATERISK DETAILS]([CURRENCY],[PERIOD],[Contract Type],[ProductType],[GLMaster / Account Type],[Contract/Account],[Counterparty/Issuer],[Next EventType],[Next EventDate],[Final Maturity Date],[Type],[Principal Amount/Value Balance],[Principal Amount/Value Balance(EUR Equ)],[DATA DATE],[RISK DATE],[IdRateRiskDate])Select[CURRENCY],[PERIOD],[Contract Type],[ProductType],[GLMaster / Account Type],[Contract/Account],[Counterparty/Issuer],[Next EventType],[Next EventDate],[Final Maturity Date],[Type],[Principal Amount/Value Balance],[Principal Amount/Value Balance(EUR Equ)],[DATA DATE],[RISK DATE],[RISK DATE]FROM [RATERISK DETAILS ALL DATA] where [RISK DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(4, "Delete Contract type=DDPCIAL (Pauschalwertberichtigung) in RATERISK DETAILS  for: " & rd)
            cmd.CommandText = "DELETE FROM [RATERISK DETAILS] where [RISK DATE]='" & rdsql & "' and [ProductType] in ('DDPCIAL')"
            cmd.ExecuteNonQuery()

            Me.BgwClientRun.ReportProgress(5, "Insert Data in RATERISK DELETIONS where  [Next EventType]=ST and [Next EventDate]>" & rd)
            cmd.CommandText = "INSERT INTO [RATERISK DELETIONS]([PERIOD],[CURRENCY],[Contract Type],[ProductType],[GLMaster / Account Type],[Contract/Account],[Counterparty/Issuer],[Next EventType],[Next EventDate],[Final Maturity Date],[Type],[Principal Amount/Value Balance],[Principal Amount/Value Balance(EUR Equ)],[DATA DATE],[RISK DATE]) Select [PERIOD],[CURRENCY],[Contract Type],[ProductType],[GLMaster / Account Type],[Contract/Account],[Counterparty/Issuer],[Next EventType],[Next EventDate],[Final Maturity Date],[Type],[Principal Amount/Value Balance],[Principal Amount/Value Balance(EUR Equ)],[DATA DATE],[RISK DATE] from [RATERISK DETAILS] where [RISK DATE]='" & rdsql & "' and [Next EventType]='ST' and [Next EventDate]>[RISK DATE]"
            cmd.ExecuteNonQuery()
            'Daten auf NULL stellen
            Me.BgwClientRun.ReportProgress(6, "Set [Principal Amount/Value Balance(EUR Equ)]= 0 and [Next EventType]=ST-Modified in RATERISK DETAILS where  [Next EventType]=ST and [Next EventDate]>" & rd)
            cmd.CommandText = "UPDATE [RATERISK DETAILS] SET [Principal Amount/Value Balance]= 0, [Principal Amount/Value Balance(EUR Equ)]= 0,[Next EventType]='ST-Modified'  where [RISK DATE]='" & rdsql & "' and [Next EventType]='ST' and [Next EventDate]>[RISK DATE]"
            cmd.ExecuteNonQuery()
            '******************************SPEZIALFALL THYSSEN****************************
            '*****************************************************************************
            '678100000750000 in CNY (1-3 Months)
            '678100000730000 in USD (3-6 Months)
            'PERIOD für Relevante Contracts auf 1-2 Years ändern
            Me.BgwClientRun.ReportProgress(7, "Special Case THYSSEN - Set [PERIOD]=1 - 2 Years in RATERISK DETAILS where  [Contract/Account] in (678100000750000,678100000730000) for " & rd)
            cmd.CommandText = "UPDATE [RATERISK DETAILS] SET [PERIOD]='1 - 2 Years' where [Contract/Account] in ('678100000750000','678100000730000') and [RISK DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '*****************************************************************************
            'Working Capital importieren - Working Capital des Letzten Datensatzes (NEU)
            Me.BgwClientRun.ReportProgress(8, "Select last Value of Working Capital from last RATERISK DATE")
            cmd.CommandText = "Select [Working Capital] from [RATERISK DATE] where [RateRiskDate]=(Select Max([RateRiskDate]) from [RATERISK DATE])"
            wck = Math.Round(cmd.ExecuteScalar, 0)
            'Neuanlage in RISK DATES
            Me.BgwClientRun.ReportProgress(9, "Insert New Risk Date and Working Capital in  RATERISK DATE for: " & rd)
            cmd.CommandText = "INSERT INTO [RATERISK DATE]([RateRiskDate],[Working Capital],[USER],[IdBank]) Values('" & rdsql & "','" & Str(wck) & "','" & "imported from " & " " & SystemInformation.UserName & " on " & " " & Today & "','3') "
            cmd.ExecuteNonQuery()
            'IMPORT IN RATERISK TOTALS
            Me.BgwClientRun.ReportProgress(10, "Insert new Data in RATERISK TOTALS for: " & rd)
            cmd.CommandText = "INSERT INTO [RATERISK TOTALS] ([CURRENCY],[Period],[Principal Amount/Value Balance],[Principal Amount/Value Balance(EUR Equ)],[RISK DATE],[IdRateRiskDate]) SELECT [CURRENCY],[PERIOD],sum(PB),sum(EQB),[RISK DATE],[RISK DATE] from (Select [CURRENCY],[PERIOD],[RISK DATE],sum([Principal Amount/Value Balance]) as PB,sum([Principal Amount/Value Balance(EUR Equ)]) as EQB FROM [RATERISK DETAILS] where [RISK DATE]='" & rdsql & "' and [Type]='Assets' GROUP BY [CURRENCY],[PERIOD],[RISK DATE] Union All Select [CURRENCY],[PERIOD],[RISK DATE],sum([Principal Amount/Value Balance])*(-1) as PB ,sum([Principal Amount/Value Balance(EUR Equ)])*(-1) as EQB FROM [RATERISK DETAILS] where [RISK DATE]='" & rdsql & "' and [Type]='Liabilities' GROUP BY [CURRENCY],[PERIOD],[RISK DATE] Union All Select [CURRENCY],[PERIOD],[RISK DATE],sum([Principal Amount/Value Balance]) as PB,sum([Principal Amount/Value Balance(EUR Equ)]) as EQB FROM [RATERISK DETAILS] where [RISK DATE]='" & rdsql & "' and [Type]='Long positions' GROUP BY [CURRENCY],[PERIOD],[RISK DATE] Union All Select [CURRENCY],[PERIOD],[RISK DATE],sum([Principal Amount/Value Balance])*(-1) as PB,sum([Principal Amount/Value Balance(EUR Equ)])*(-1) as EQB FROM [RATERISK DETAILS] where [RISK DATE]='" & rdsql & "' and [Type]='Short positions' GROUP BY [CURRENCY],[PERIOD],[RISK DATE])GW  GROUP BY [CURRENCY],[PERIOD],[RISK DATE]"
            cmd.ExecuteNonQuery()
            'Update WEIGHTING FACTORS in RATERISK TOTALS
            Me.BgwClientRun.ReportProgress(11, "Update WEIGHTING FACTORS in RATERISK TOTALS for: " & rd)
            cmd.CommandText = "UPDATE A SET A.[WF1]=B.[WF-200],A.[WF2]=B.[WF+200],A.[WF3]=B.[WF+50],A.[WF4]=B.[WF-100],A.[WF10]=B.[WF],A.[WF20]=B.[WF20],A.[WF25]=B.[WF25],A.[WFHUMP]=B.[WFHUMP],A.[WF_TWIST1]=B.[WF_TWIST1],A.[WF_TWIST2]=B.[WF_TWIST2] from [RATERISK TOTALS] A INNER JOIN [RATERISK BC WF] B ON A.[Period]=B.[Period] where [RISK DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update WEIGHTING FACTORS in RATERISK TOTALS
            Me.BgwClientRun.ReportProgress(12, "Update WEIGHTING FACTORS AMOUNTS in RATERISK TOTALS for: " & rd)
            cmd.CommandText = "UPDATE [RATERISK TOTALS]  SET [AM1]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF1]/100,2)*(-1),[AM2]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF2]/100,2)*(-1),[AM3]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF3]/100,2)*(-1),[AM4]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF4]/100,2)*(-1),[AM10]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF10]/100,2)*(-1),[AM20]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF20]/100,2)*(-1),[AM25]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF25]/100,2)*(-1),[AMHUMP]=Round([Principal Amount/Value Balance(EUR Equ)]*[WFHUMP]/100,2)*(-1),[AM_TWIST1]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF_TWIST1]/100,2)*(-1),[AM_TWIST2]=Round([Principal Amount/Value Balance(EUR Equ)]*[WF_TWIST2]/100,2)*(-1) where [RISK DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '#####################################################################################
            'INTEREST RATE RISK AMOUNT (WEIGHTING FACTOR 15) WITHOUT SECURITIES
            '#####################################################################################
            'Me.BgwClientRun.ReportProgress(13, "Update Principal Amount/Value Balance(EUR Equ)withoutSECUR in RATERISK TOTALS for: " & rd)
            'Me.QueryText = "select sum([Principal Amount/Value Balance(EUR Equ)]) as SUMME,[PERIOD],[CURRENCY] from [RATERISK DETAILS]  where [RISK DATE]='" & rdsql & "' and [Contract Type]='SECUR' GROUP BY [PERIOD],[CURRENCY]"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For y = 0 To dt.Rows.Count - 1
            'Principal Amount (EURO) without SECUR update
            'cmd.CommandText = "UPDATE [RATERISK TOTALS] SET [Principal Amount/Value Balance(EUR Equ)withoutSECUR]= ABS([Principal Amount/Value Balance(EUR Equ)]) - " & Str(dt.Rows.Item(y).Item("SUMME")) & " where [Period]='" & dt.Rows.Item(y).Item("PERIOD") & "' and [CURRENCY]='" & dt.Rows.Item(y).Item("CURRENCY") & "' and [RISK DATE]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            'Next
            'cmd.CommandText = "UPDATE [RATERISK TOTALS] SET [AM15]= Round([WF15]*[Principal Amount/Value Balance(EUR Equ)withoutSECUR]/100,2)  where [Principal Amount/Value Balance(EUR Equ)withoutSECUR] is not NULL and [RISK DATE]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            '#######################################################################################
            'SUMME
            'Me.BgwClientRun.ReportProgress(14, "Get SUM(AM1) and SUM(AM2) in RATERISK TOTALS for: " & rd)
            'cmd.CommandText = "SELECT sum([AM1]) from [RATERISK TOTALS] Where [IdRateRiskDate]='" & rdsql & "'"
            'summeAM1 = cmd.ExecuteScalar()
            'cmd.CommandText = "SELECT sum([AM2]) from [RATERISK TOTALS] Where [IdRateRiskDate]='" & rdsql & "'"
            'summeAM2 = cmd.ExecuteScalar()
            Me.BgwClientRun.ReportProgress(15, "Get SUM(AM1) and SUM(AM2) from  RATERISK TOTALS and Calculate INTEREST RATE RISK for: " & rd)
            If rd <= DateSerial(2015, 12, 11) Then
                cmd.CommandText = "UPDATE [RATERISK DATE] SET [SumAM1]=(SELECT sum([AM1]) from [RATERISK TOTALS] Where [IdRateRiskDate]='" & rdsql & "'), [SumAM2]=(SELECT sum([AM2]) from [RATERISK TOTALS] Where [IdRateRiskDate]='" & rdsql & "')   where [RateRiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RATERISK DATE] SET [IRR_200bps_Minus]=Round([SumAM1]/[Working Capital]*100,2),[IRR_200bps_Plus]=Round([SumAM2]/[Working Capital]*100,2) WHERE [RateRiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RATERISK DATE] SET [Position/Capital]=ABS([IRR_200bps_Plus]) Where [IdRateRiskDate]='" & rdsql & "'"

            ElseIf rd > DateSerial(2015, 12, 11) Then
                cmd.CommandText = "UPDATE [RATERISK DATE] SET [SumAM1]=(Select Round(Sum(x.a),2) from (SELECT [CURRENCY],ABS(Sum([AM1]))*(-1) a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' and [CURRENCY] not in ('EUR') GROUP BY [CURRENCY] UNION SELECT [CURRENCY],Sum([AM1]) a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' and [CURRENCY] in ('EUR') GROUP BY [CURRENCY])x), [SumAM2]=(Select Round(Sum(x.a),2) from (SELECT [CURRENCY],ABS(Sum([AM2]))*(-1) a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' and [CURRENCY] not in ('EUR') GROUP BY [CURRENCY] UNION SELECT [CURRENCY],Sum([AM2]) a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' and [CURRENCY] in ('EUR') GROUP BY [CURRENCY])x)  where [RateRiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RATERISK DATE] SET [IRR_200bps_Minus]=Round([SumAM1]/[Working Capital]*100,2),[IRR_200bps_Plus]=Round([SumAM2]/[Working Capital]*100,2) WHERE [RateRiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RATERISK DATE] SET [Position/Capital]=CASE when ABS([IRR_200bps_Minus])>ABS([IRR_200bps_Plus]) then ABS([IRR_200bps_Minus]) else ABS([IRR_200bps_Plus]) end WHERE [RateRiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
            End If


            'NEUBERECHNUNG DES INTEREST RATE RISKS nach den EIGENMITTEL KAPITAL
            'Einfügen des Eigenmittel Kapitals in RATERISK DATE
            cmd.CommandText = "SELECT [OwnCapitalBAIS] from [RISK LIMIT DAILY CONTROL] where [RLDC Date]='" & rdsql & "'"
            Dim RLDC_WorkingCapital As Double = cmd.ExecuteScalar
            If RLDC_WorkingCapital <> 0 Then
                Me.BgwClientRun.ReportProgress(60, "Insert BAIS EIGENMITTEL CAPITAL in RATE RISK (INTERST RATE RISK)")
                cmd.CommandText = "UPDATE [RATERISK DATE] SET [Working Capital]='" & Str(RLDC_WorkingCapital) & "'  WHERE [RateRiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'Neuberechnung der Interest rate risk
                Me.BgwClientRun.ReportProgress(65, "Recalculate INTEREST RATE RISK")
                If rd <= DateSerial(2015, 12, 11) Then
                    cmd.CommandText = "UPDATE [RATERISK DATE] SET [Position/Capital]=ABS([IRR_200bps_Plus])  WHERE [RateRiskDate]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                ElseIf rd > DateSerial(2015, 12, 11) Then
                    cmd.CommandText = "UPDATE [RATERISK DATE] SET [Position/Capital]=CASE when ABS([IRR_200bps_Minus])>ABS([IRR_200bps_Plus]) then ABS([IRR_200bps_Minus]) else ABS([IRR_200bps_Plus]) end WHERE [RateRiskDate]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                End If

                'Neuberechnung der Interest rate risk
                Me.BgwClientRun.ReportProgress(67, "Insert EIGENMITTEL CAPITAL in MAK CR TOTALS")
                cmd.CommandText = "UPDATE [MAK CR TOTALS] SET [WorkingCapital]='" & Str(RLDC_WorkingCapital) & "'  WHERE [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()

                'EINFÜGEN Neuberechnete INTEREST RATE RISK in RISK LIMIT DAILY CONTROL
                Me.BgwClientRun.ReportProgress(70, "Insert Recalculated INTEREST RATE RISK in RISK LIMIT DAILY CONTROL")
                cmd.CommandText = "SELECT [RLDC Date] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                Dim t1 As String = cmd.ExecuteScalar
                If IsNothing(t1) = False Then
                    cmd.CommandText = "UPDATE A SET A.[Interest rate risk]=B.[Position/Capital],A.[InterestRateRisk_Minus200bps]=B.[IRR_200bps_Minus],A.[InterestRateRisk_Plus200bps]=B.[IRR_200bps_Plus] from [RISK LIMIT DAILY CONTROL] A INNER JOIN [RATERISK DATE] B ON A.[RLDC Date]=B.[RateRiskDate] WHERE A.[RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsNothing(t1) = True Then
                    cmd.CommandText = "INSERT INTO [RISK LIMIT DAILY CONTROL]([RLDC Date],[Interest rate risk],[InterestRateRisk_Minus200bps],[InterestRateRisk_Plus200bps]) Select [RateRiskDate],[Position/Capital],[IRR_200bps_Minus],[IRR_200bps_Plus] FROM [RATERISK DATE] WHERE [RateRiskDate]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                End If
            End If
        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If


        Me.BgwClientRun.ReportProgress(16, "INTEREST RATE RISK calculation finished for: " & rd)

    End Sub

    Private Sub CREDIT_RISK_MAK_CALCULATION()
        'CREDIT RISK + MAK
        CurrentClientProcedure = "CREDIT RISK and MAK"
        'Daten mit dem aktuellen rd datum löschen
        cmd.CommandText = "SELECT [DateMakCrTotals] FROM [CREDIT RISK ALL DATA] where [DateMakCrTotals]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            Me.BgwClientRun.ReportProgress(1, "Delete all Data from CREDIT RISK for " & rd)
            cmd.CommandText = "DELETE  FROM [CREDIT RISK] where [DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(1, "Delete all Data from MAK REPORT for " & rd)
            cmd.CommandText = "DELETE  FROM [MAK REPORT] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(1, "Delete all Data from MAK CR TOTALS for " & rd)
            cmd.CommandText = "DELETE FROM [MAK CR TOTALS] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Neuanlage in MAK CREDIT RISK DATES
            Me.BgwClientRun.ReportProgress(2, "Insert new Risk Date in MAK CR TOTALS")
            cmd.CommandText = "INSERT INTO [MAK CR TOTALS]([RiskDate],[USER],[IdBank]) Values('" & rdsql & "','" & "imported from " & " " & SystemInformation.UserName & " on " & " " & Today & "','3') "
            cmd.ExecuteNonQuery()
            'Neuanlage in CREDIT RISK
            Me.BgwClientRun.ReportProgress(3, "Insert Data in CREDIT RISK for " & rd)
            cmd.CommandText = "INSERT INTO [CREDIT RISK]([Obligor Rate],[Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Name],[Client No],[Contract Collateral ID],[Maturity Date],[Remaining Year(s) to Maturity],[Org Ccy],[Credit Outstanding (Org Ccy)],[Credit Outstanding (EUR Equ)],[PD],[(1-ER)],[Credit Risk Amount(EUR Equ)],[RiskDate],[RepDate],[DateMakCrTotals])Select [Obligor Rate],[Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Name],[Client No],[Contract Collateral ID],[Maturity Date],[Remaining Year(s) to Maturity],[Org Ccy],[Credit Outstanding (Org Ccy)],[Credit Outstanding (EUR Equ)],[PD],[(1-ER)],[Credit Risk Amount(EUR Equ)],[RiskDate],[RepDate],[RiskDate] FROM [CREDIT RISK ALL DATA] where [DateMakCrTotals]='" & rdsql & "' and [Contract Type] not in ('FXD','FXMK','LIMIT')"
            cmd.ExecuteNonQuery()
            'Neuanlage in MAK REPORT
            Me.BgwClientRun.ReportProgress(4, "Insert Data in MAK REPORT for " & rd)
            cmd.CommandText = "INSERT INTO [MAK REPORT]([Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Country of Risk],[Country of Residence],[Industry(HO)],[Client Group],[Contract Collateral ID],[Start Date],[Maturity Date],[Org Ccy],[Credit Exposure],[Accrued Interest],[Euro Equivalent],[RiskDate],[RepDate],[DateMakCrTotals])Select [Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Country of Risk],[Country of Residence],[Industry(HO)],[Client Group],[Contract Collateral ID],[Start Date],[Maturity Date],[Org Ccy],[Credit Exposure],[Accrued Interest],[Euro Equivalent],[RiskDate],[RepDate],[RiskDate] FROM [MAK REPORT ALL DATA] where [DateMakCrTotals]='" & rdsql & "' and [Contract Type] not in ('FXD','FXMK','LIMIT')"
            cmd.ExecuteNonQuery()
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'SPECIAL CASE SECURITY REF.4000064 MODIFY PRINCIPAL AMOUNT
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Me.BgwClientRun.ReportProgress(10, "SPECIAL CASE - Amend Credit Exposure Amount in MAK REPORT for Security Ref.4000064 - [Credit Exposure]-([Accrued Interest]*9)")
            cmd.CommandText = "UPDATE [MAK REPORT] SET [Credit Exposure]=[Credit Exposure]-([Accrued Interest]*9),[Euro Equivalent]=[Credit Exposure]-([Accrued Interest]*9) where [Contract Collateral ID]='4000064' and [RiskDate]='" & rdsql & "' "
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(10, "SPECIAL CASE - Amend Credit Outstanding Amounts in CREDIT RISK  for Security Ref.4000064 based on the amended data in MAK REPORT")
            cmd.CommandText = "UPDATE A SET A.[Credit Outstanding (Org Ccy)]=B.[Credit Exposure],A.[Credit Outstanding (EUR Equ)]=B.[Euro Equivalent] from [CREDIT RISK] A INNER JOIN [MAK REPORT] B ON A.[Contract Collateral ID]=B.[Contract Collateral ID] and A.[RiskDate]=B.[RiskDate] where A.[Contract Collateral ID]='4000064' and A.[RiskDate]= '" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Me.BgwClientRun.ReportProgress(5, "Update INDUSTRIAL CLASS LOCAL in MAK REPORT for " & rd)
            cmd.CommandText = "Update A set A.[IndustrialClassLocalCode]=B.[INDUSTRIAL_CLASS_LOCAL],A.[IndustrialClassLocalCodeName]=B.[INDUSTRIAL_CLASS_LOCAL_NAME] FROM [MAK REPORT] A INNER JOIN [CUSTOMER_INFO] B ON A.[Client No]=B.[ClientNo] where A.[IndustrialClassLocalCode] is NULL and A.[DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Einfügen des WORKING CAPITALS von RATERISK DATE
            Me.BgwClientRun.ReportProgress(6, "Insert Working Capital from RATERISK DATE in MAK CR TOTALS for " & rd)
            cmd.CommandText = "UPDATE[MAK CR TOTALS] SET [WorkingCapital]=(Select [Working Capital] from [RATERISK DATE]  WHERE [RateRiskDate]='" & rdsql & "') where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Me.BgwClientRun.ReportProgress(7, "Define SPCODE=Industry(HO), LBCODE=Counterparty/Issuer/Collateral Provider in MAK REPORT for " & rd)
            'Anfrage des SPCODES,LBCODES und SPCODES
            cmd.CommandText = "UPDATE[MAK REPORT] SET [SPCODE]=[Industry(HO)],[LBCODE]=[Counterparty/Issuer/Collateral Provider] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(7, "Define SPCODE from Parameter:MAKREPSPCODE")
            cmd.CommandText = "UPDATE A SET A.[SPCODE]=B.S from [MAK REPORT] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as S from [PARAMETER] where [IdABTEILUNGSPARAMETER]='MAKREPSPCODE' and [PARAMETER STATUS] ='Y')B ON A.[Counterparty/Issuer/Collateral Provider] like B.[PARAMETER1] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(7, "Define LBCODE from Parameter:MAKREPLBCODE")
            cmd.CommandText = "UPDATE A SET A.[LBCODE]=B.S from [MAK REPORT] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as S from [PARAMETER] where [IdABTEILUNGSPARAMETER]='MAKREPLBCODE' and [PARAMETER STATUS] ='Y')B ON A.[Counterparty/Issuer/Collateral Provider] like B.[PARAMETER1] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'Me.QueryText = "select * from [PARAMETER]  where [IdABTEILUNGSPARAMETER] in ('MAKREPSPCODE') and [PARAMETER STATUS]='Y'"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For i = 0 To dt.Rows.Count - 1
            'Dim sr As String = dt.Rows.Item(i).Item("PARAMETER1") & "%"
            'cmd.CommandText = "UPDATE[MAK REPORT] SET [SPCODE]='" & dt.Rows.Item(i).Item("PARAMETER2") & "' where [RiskDate]='" & rdsql & "' and [Counterparty/Issuer/Collateral Provider] like '" & sr & "'"
            'cmd.ExecuteNonQuery()
            'Next
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'Me.QueryText = "select * from [PARAMETER]  where [IdABTEILUNGSPARAMETER] in ('MAKREPLBCODE') and [PARAMETER STATUS]='Y'"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For i = 0 To dt.Rows.Count - 1
            'Dim sr As String = dt.Rows.Item(i).Item("PARAMETER1") & "%"
            'cmd.CommandText = "UPDATE[MAK REPORT] SET [LBCODE]='" & dt.Rows.Item(i).Item("PARAMETER2") & "' where [RiskDate]='" & rdsql & "' and [Counterparty/Issuer/Collateral Provider] like '" & sr & "'"
            'cmd.ExecuteNonQuery()
            'Next
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

            'CUSTOMER TYPE IN MAK REPORT DEFINIEREN
            Me.BgwClientRun.ReportProgress(8, "Define CUSTOMER TYPE in MAK REPORT for " & rd)
            cmd.CommandText = "UPDATE [MAK REPORT] set [CUSTOMER TYPE]=B.[ClientType] from [MAK REPORT] A INNER JOIN [CUSTOMER_INFO] B ON A.[Client No]=B.[ClientNo] where A.[CUSTOMER TYPE] is NULL and  A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            Me.BgwClientRun.ReportProgress(9, "Define CLIENT GROUP NAME from Parameter REPORT/CLIENT_GROUP_DEFINE")
            cmd.CommandText = "UPDATE A SET A.[ClientGroupName]=B.S from [CUSTOMER_RATING] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as S from [PARAMETER] where [IdABTEILUNGSPARAMETER]='CLIENT_GROUP_DEFINE' and [PARAMETER STATUS] ='Y')B ON A.[ClientGroup]=B.[PARAMETER1]"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(10, "Define SUB CLIENT GROUP NAME from Parameter REPORT/SUB_CLIENT_GROUP_DEFINE")
            cmd.CommandText = "UPDATE A SET A.[ClientGroup]=B.NewClientGroup, A.[ClientGroupName]=B.ClientGroupName from [CUSTOMER_RATING] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as ClientGroupName , [PARAMETER INFO] as NewClientGroup from [PARAMETER] where [IdABTEILUNGSPARAMETER]='SUB_CLIENT_GROUP_DEFINE' and [PARAMETER STATUS] ='Y')B ON A.[ClientNo]=B.[PARAMETER1]"
            cmd.ExecuteNonQuery()

            'Me.QueryText = "select * from [PARAMETER]  where [IdABTEILUNGSPARAMETER] in ('CLIENT_GROUP_DEFINE') and [PARAMETER STATUS]='Y'"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For i = 0 To dt.Rows.Count - 1
            ' Dim ClientGroup As String = dt.Rows.Item(i).Item("PARAMETER1")
            ' Dim ClientGroupName As String = dt.Rows.Item(i).Item("PARAMETER2")
            'cmd.CommandText = "UPDATE [CUSTOMER_RATING] SET [ClientGroupName]='" & ClientGroupName & "' where [ClientGroup]= '" & ClientGroup & "'"
            'cmd.ExecuteNonQuery()
            'Next
            'Me.BgwClientRun.ReportProgress(10, "Define SUB CLIENT GROUP NAME from Parameter REPORT/SUB_CLIENT_GROUP_DEFINE")
            'Me.QueryText = "select * from [PARAMETER]  where [IdABTEILUNGSPARAMETER] in ('SUB_CLIENT_GROUP_DEFINE') and [PARAMETER STATUS]='Y'"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For i = 0 To dt.Rows.Count - 1
            'Dim ClientNo As String = dt.Rows.Item(i).Item("PARAMETER1")
            'Dim ClientGroupName As String = dt.Rows.Item(i).Item("PARAMETER2")
            'Dim NewClientGroup As String = dt.Rows.Item(i).Item("PARAMETER INFO")
            'cmd.CommandText = "UPDATE [CUSTOMER_RATING] SET [ClientGroup]='" & NewClientGroup & "',[ClientGroupName]='" & ClientGroupName & "' where [ClientNo]= '" & ClientNo & "'"
            'cmd.ExecuteNonQuery()
            'Next

            Me.BgwClientRun.ReportProgress(11, "Set CLIENT GROUP=0 if CLIENT GROUP is Null")
            cmd.CommandText = "UPDATE [CUSTOMER_RATING] set [ClientGroup]='0' where [ClientGroup] is NULL "
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(11, "Set CLIENT GROUP=CLIENT NO if CLIENT GROUP=0")
            cmd.CommandText = "UPDATE [CUSTOMER_RATING] set [ClientGroup]=[ClientNo]  where [ClientGroup]='0'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(11, "Define CLIENT GROUP NAME if is NULL")
            cmd.CommandText = "UPDATE [CUSTOMER_RATING] set [ClientGroupName]=[ClientName] where [ClientGroupName] is NULL "
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(11, "Modify CLIENT GROUP in MAK REPORT based on CUSTOMER RATING")
            cmd.CommandText = "UPDATE A SET A.[Client Group]=B.[ClientGroup] from [MAK REPORT] A INNER JOIN [CUSTOMER_RATING] B ON A.[Client No]=B.[ClientNo] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()


            Me.BgwClientRun.ReportProgress(12, "Set Obligor Rate,PD,ER,Credit Risk Amount(EUR),Net Credit Risk Amount (EUR) to NULL")
            cmd.CommandText = "UPDATE [CREDIT RISK] SET [Obligor Rate]='U',PD=0,[(1-ER)]=0,[Credit Risk Amount(EUR Equ)]=0,[NetCredit Risk Amount(EUR Equ)]=0 where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update Obligor Grates from Customer Ratings
            Me.BgwClientRun.ReportProgress(13, "Update Obligor Grates,PD,ER,CLIENT GROUP,CLIENT GROUP NAME and all relevant ratings from CUSTOMER RATING Table")
            cmd.CommandText = "UPDATE A SET A.[Obligor Rate]=B.[Rating],A.[PD]=B.[PD],A.[(1-ER)]=B.[ER_25],A.[(1-ER_45)]=B.[ER_45],A.[CoreDefinition]=B.[CoreDefinition],A.[StandardPoorsRating]=B.[StandardPoorsRating],A.[MoodysRating]=B.[MoodysRating],A.[FitchRating]=B.[FitchRating],A.[ClientGroup]=B.[ClientGroup],A.[ClientGroupName]=B.[ClientGroupName] FROM [CREDIT RISK] A INNER JOIN [CUSTOMER_RATING] B ON A.[Client No]=B.[ClientNo] WHERE A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()


            'SPECIAL FALL LGD 20 % in specific Product and Business Types
            Me.BgwClientRun.ReportProgress(16, "Check SQL PARAMETER STATUS for SQL PARAMETER:CREDIT_RISK_LGD_20_SPECIAL")
            cmd.CommandText = "SELECT [SQL_Parameter_Status] FROM [SQL_PARAMETER] where  [SQL_Parameter_Name]='CREDIT_RISK_LGD_20_SPECIAL'"
            Dim CreditRiskLGD20_Special_Result As String = cmd.ExecuteScalar
            If CreditRiskLGD20_Special_Result = "Y" Then
                Me.BgwClientRun.ReportProgress(16, "SQL PARAMETER: CREDIT_RISK_LGD_20_SPECIAL is VALID - Execute SQL Commands for CREDIT_RISK_LGD_20_SPECIAL")
                Me.QueryText = "Select * from [SQL_PARAMETER_DETAILS]  where [Id_SQL_Parameters] in ('CREDIT_RISK_LGD_20_SPECIAL')"
                da2 = New SqlDataAdapter(Me.QueryText.Trim(), conn)
                dt2 = New System.Data.DataTable()
                da2.Fill(dt2)
                For i = 0 To dt2.Rows.Count - 1
                    Dim SqlCommandText As String = dt2.Rows.Item(i).Item("SQL_Command_1").ToString.Replace("<RiskDate>", rdsql)
                    cmd.CommandText = SqlCommandText
                    cmd.ExecuteNonQuery()
                Next
            Else
                Me.BgwClientRun.ReportProgress(16, "SQL PARAMETER: CREDIT_RISK_LGD_20_SPECIAL is INVALID - No Further Action")
            End If


            'Calculating CreditRiskAmount again
            Me.BgwClientRun.ReportProgress(17, "Calculating Credit Risk Amount (Expected Loss)  based on the new PD,ER for defined Obligor Grates (Not U and CA)")
            cmd.CommandText = "UPDATE [CREDIT RISK] SET [Credit Risk Amount(EUR Equ)]=Round([Credit Outstanding (EUR Equ)]*[PD]*[(1-ER)],2),[CreditRiskAmountEUREquER45]=Round([Credit Outstanding (EUR Equ)]*[PD]*[(1-ER_45)],2) where [RiskDate]='" & rdsql & "' and [Obligor Rate] not in ('U','CA')"
            cmd.ExecuteNonQuery()


            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'CASH PLEDGE - CREDIT RISK
            Me.BgwClientRun.ReportProgress(18, "Define Cashpledge in CREDIT RISK")
            Me.QueryText = "select * from [CREDIT RISK CASH PLEDGE]  where [Valid]='Y' and [ValidTill]>= '" & rdsql & "'"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim CashPledgeAmount As Double = dt.Rows.Item(i).Item("CashpledgeAmount")
                Me.QueryText = "select * from [CREDIT RISK]  Where [RiskDate]='" & rdsql & "' and [Client No]='" & dt.Rows.Item(i).Item("CustomerNr") & "'"
                da1 = New SqlDataAdapter(Me.QueryText.Trim(), conn)
                dt1 = New System.Data.DataTable()
                da1.Fill(dt1)
                For y = 0 To dt1.Rows.Count - 1
                    Dim CreditOutstandingEURequ As Double = dt1.Rows.Item(y).Item("Credit Outstanding (EUR Equ)")
                    If CreditOutstandingEURequ < CashPledgeAmount Then
                        cmd.CommandText = "UPDATE [CREDIT RISK] SET [NetCreditOutstandingAmountEUR]=0,[InternalInfo]='CASHPLEDGE' Where [ID]='" & dt1.Rows.Item(y).Item("ID") & "' and [Obligor Rate] not in ('U','CA')"
                        cmd.ExecuteNonQuery()
                        CashPledgeAmount = CashPledgeAmount - CreditOutstandingEURequ
                    ElseIf CreditOutstandingEURequ > CashPledgeAmount Then
                        cmd.CommandText = "UPDATE [CREDIT RISK] SET [NetCreditOutstandingAmountEUR]='" & Str(CreditOutstandingEURequ - CashPledgeAmount) & "',[InternalInfo]='CASHPLEDGE' Where [ID]='" & dt1.Rows.Item(y).Item("ID") & "' and [Obligor Rate] not in ('U','CA')"
                        cmd.ExecuteNonQuery()
                        CashPledgeAmount = 0
                    ElseIf CreditOutstandingEURequ = CashPledgeAmount Then
                        cmd.CommandText = "UPDATE [CREDIT RISK] SET [NetCreditOutstandingAmountEUR]=0,[InternalInfo]='CASHPLEDGE' Where [ID]='" & dt1.Rows.Item(y).Item("ID") & "' and [Obligor Rate] not in ('U','CA')"
                        cmd.ExecuteNonQuery()
                        CashPledgeAmount = 0
                    End If
                Next
            Next
            'Credit Risk Outstanding Amount auf NetCreditRiskOutstandingAmount stellen wenn InternalInfo<>CASHPLEDGE
            Me.BgwClientRun.ReportProgress(19, "Set NetCreditOutstandingAmountEUR=Credit Risk Amount(EUR Equ) where InternalInfo not CASHPLEDGE")
            cmd.CommandText = "UPDATE [CREDIT RISK] SET [NetCreditOutstandingAmountEUR]=[Credit Outstanding (EUR Equ)] Where [RiskDate]='" & rdsql & "' and [InternalInfo] not in ('CASHPLEDGE')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(20, "Recalculating Credit Risk Amount (Expected Loss) again based on the new PD,ER for defined Obligor Grates (Not U and CA)")
            cmd.CommandText = "UPDATE [CREDIT RISK] SET [Credit Risk Amount(EUR Equ)]=Round([Credit Outstanding (EUR Equ)]*[PD]*[(1-ER)],2),[CreditRiskAmountEUREquER45]=Round([Credit Outstanding (EUR Equ)]*[PD]*[(1-ER_45)],2),[NetCredit Risk Amount(EUR Equ)]=Round([NetCreditOutstandingAmountEUR]*[PD]*[(1-ER)],2),[NetCreditRiskAmountEUREquER45]=Round([NetCreditOutstandingAmountEUR]*[PD]*[(1-ER_45)],2) where [RiskDate]='" & rdsql & "' and [Obligor Rate] not in ('U','CA')"
            cmd.ExecuteNonQuery()

            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'Me.BgwClientRun.ReportProgress(21, "Calculating the Credit Risk Amount(EUR) SUM from CREDIT RISK Table")
            'Summe des Credit Risk Amounts(EUR Equ)
            'cmd.CommandText = "SELECT Sum([Credit Risk Amount(EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "'"
            'sumCreditRiskAmountEUR = cmd.ExecuteScalar
            'Füllen des Feldes CREDIT RISK in Tabelle MAK CR TOTALS
            'Me.BgwClientRun.ReportProgress(22, "Inserting the Credit Risk Amount(EUR) SUM in MAK CR TOTALS Table")
            'cmd.CommandText = "UPDATE [MAK CR TOTALS] SET [SumCreditRisk]='" & Str(sumCreditRiskAmountEUR) & "' WHERE [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(22, "Calculating the Credit Risk Amount(EUR) SUM from CREDIT RISK Table and Inserting the Credit Risk Amount(EUR) SUM in MAK CR TOTALS Table")
            cmd.CommandText = "UPDATE [MAK CR TOTALS] SET [SumCreditRisk]=(SELECT Sum([Credit Risk Amount(EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "') WHERE [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'Übernahme der Summen von Credit Outstanding(EUR Equ)(CREDIT RISK REPORT) und EuroEquivalent(MAK REPORT) in CR_MAK_TOTALS
            'Me.BgwClientRun.ReportProgress(23, "Calculating the Credit Outstanding (EUR Equ) SUM from CREDIT RISK Table")
            'cmd.CommandText = "SELECT Sum([Credit Outstanding (EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "'"
            'sumCreditOutstandingEURequ = cmd.ExecuteScalar
            'Me.BgwClientRun.ReportProgress(24, "Calculating the Euro Equivalent SUM from MAK REPORT Table")
            'cmd.CommandText = "SELECT Sum([Euro Equivalent]) FROM [MAK REPORT] WHERE [RiskDate]='" & rdsql & "'"
            'sumMAKEuroEquivalent = cmd.ExecuteScalar
            'sumdifference = sumCreditOutstandingEURequ - sumMAKEuroEquivalent
            'Füllen der felder in Tabelle CR_MAK_TOTALS
            'Me.BgwClientRun.ReportProgress(25, "Inserting of the Credit Outstanding (EUR Equ) SUM,Euro Equivalent SUM and their calculated difference in MAK CR TOTALS Table")
            'cmd.CommandText = "UPDATE [MAK CR TOTALS] SET [SumCreditOutstandingEURequ]='" & Str(sumCreditOutstandingEURequ) & "',[SumEuroEquivalent]='" & Str(sumMAKEuroEquivalent) & "',[SumsDifference]='" & Str(sumdifference) & "' WHERE [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(25, "Calculating the Credit Outstanding (EUR Equ) SUM from CREDIT RISK Table,the Euro Equivalent SUM from MAK REPORT Table and Inserting of the Credit Outstanding (EUR Equ) SUM,Euro Equivalent SUM and their calculated difference in MAK CR TOTALS Table")
            cmd.CommandText = "UPDATE [MAK CR TOTALS] SET [SumCreditOutstandingEURequ]=(SELECT Sum([Credit Outstanding (EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "'),[SumEuroEquivalent]=(SELECT Sum([Euro Equivalent]) FROM [MAK REPORT] WHERE [RiskDate]='" & rdsql & "'),[SumsDifference]=(SELECT Sum([Credit Outstanding (EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "')- (SELECT Sum([Euro Equivalent]) FROM [MAK REPORT] WHERE [RiskDate]='" & rdsql & "') WHERE [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'Summe des Credit Risk Amounts(EUR Equ)
            'Me.BgwClientRun.ReportProgress(26, "Calculating the NetCredit Risk Amount(EUR Equ) SUM from CREDIT RISK Table")
            'cmd.CommandText = "SELECT Sum([NetCredit Risk Amount(EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "'"
            'sumNetCreditRiskAmountEUR = cmd.ExecuteScalar
            '********************************************************************************************************************************
            'Me.BgwClientRun.ReportProgress(27, "Calculating the NetCreditRiskAmountEUREquER45 SUM from CREDIT RISK Table")
            'cmd.CommandText = "SELECT Sum([NetCreditRiskAmountEUREquER45]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "'"
            'sumNetCreditRiskAmountEUR45 = cmd.ExecuteScalar
            'Me.BgwClientRun.ReportProgress(28, "Inserting of the NetCredit Risk Amount(EUR Equ) and  NetCreditRiskAmountEUREquER45 SUM in MAK CR TOTALS Table")
            'Füllen des Feldes CREDIT RISK in Tabelle MAK CR TOTALS
            'cmd.CommandText = "UPDATE [MAK CR TOTALS] SET [SumCreditRiskCashpledge]='" & Str(sumNetCreditRiskAmountEUR) & "',[SumCreditRiskCashpledge45]='" & Str(sumNetCreditRiskAmountEUR45) & "' WHERE [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(28, "Calculating the NetCredit Risk Amount(EUR Equ) SUM from CREDIT RISK Table ,the NetCreditRiskAmountEUREquER45 SUM from CREDIT RISK Table and Inserting of the NetCredit Risk Amount(EUR Equ) and  NetCreditRiskAmountEUREquER45 SUM in MAK CR TOTALS Table")
            cmd.CommandText = "UPDATE [MAK CR TOTALS] SET [SumCreditRiskCashpledge]=(SELECT Sum([NetCredit Risk Amount(EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "'),[SumCreditRiskCashpledge45]=(SELECT Sum([NetCreditRiskAmountEUREquER45]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "') WHERE [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If

    End Sub

    Private Sub NEW_CREDIT_BUSINESS()
        CurrentClientProcedure = "NEW CREDIT BUSINESS"
        cmd.CommandText = "SELECT [RiskDate] FROM [MAK REPORT] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            Me.BgwClientRun.ReportProgress(1, "Delete all Data in NEW CREDIT BUSINESS for " & rd)
            cmd.CommandText = "DELETE  FROM [NEW CREDIT BUSINESS] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(36, "Inserting New Credit Business in NEW CREDIT BUSINESS Table after comparing Table with MAK REPORT Table")
            cmd.CommandText = "INSERT INTO   [NEW CREDIT BUSINESS] ([Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Country of Risk],[Country of Residence],[Industry(HO)],[SPCODE],[LBCODE],[STRCODE],[BTCODE],[CUSTOMER TYPE],[Client Group],[Contract Collateral ID],[Start Date],[Maturity Date],[Org Ccy],[Credit Exposure],[Accrued Interest],[Euro Equivalent],[RiskDate],[RepDate],[DateMakCrTotals]) select [Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Country of Risk],[Country of Residence],[Industry(HO)],[SPCODE],[LBCODE],[STRCODE],[BTCODE],[CUSTOMER TYPE] ,[Client Group],[Contract Collateral ID],[Start Date],[Maturity Date],[Org Ccy],[Credit Exposure],[Accrued Interest],[Euro Equivalent],[RiskDate],[RepDate],[DateMakCrTotals] from   [MAK REPORT] where  [RiskDate]='" & rdsql & "' and [Contract Collateral ID] not in (Select [Contract Collateral ID] from [NEW CREDIT BUSINESS])"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(37, "Update Product Type Name in New Credit Business Table")
            cmd.CommandText = "UPDATE A SET A.[ProductTypeName]=B.[Product Type Name] FROM [NEW CREDIT BUSINESS] A INNER JOIN [ProductType] B ON A.[Product Type]=B.[Product Type] where A.[ProductTypeName] is NULL "
            cmd.ExecuteNonQuery()
        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If
    End Sub

    Private Sub FX_CREDIT_EQUIV_CALCULATION()
        CurrentClientProcedure = "FX CREDIT EQUIVALENT CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start the FX CREDIT EQUIVELANT CALCULATION for " & rd)
        cmd.CommandText = "SELECT [RiskDate] FROM [FX DAILY REVALUATION] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE  FROM [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE  FROM [FX CREDIT EQUIVALENT Basic] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Import Data in details
            Me.BgwClientRun.ReportProgress(2, "Insert Data in FX CREDIT EQUIVALENT Details from FX DAILY REVALUATION where DealType in (FW,SW) and MaturityDate > RiskDate for " & rd)
            cmd.CommandText = "INSERT INTO [FX CREDIT EQUIVALENT Details]([Class],[ContractType],[ProductType],[Contract],[Counterparty_Name],[Counterparty_No],[TradeDate],[StartDate],[Final_Maturity_Date],[AmountType],[OrgCcy],[OrgCcyAmount],[RiskDate],[RepDate])SELECT [DealType],[ContractType],[ProductType],[ContractNr],[ClientName],[ClientNo],[InputDate],[ValueDate],[MaturityDate],'Bank Buy Amount',[BuyCCY],[BuyAmount],[RiskDate],[RiskDate] from [FX DAILY REVALUATION] where [DealType] in ('FW','SW') and [MaturityDate]>[RiskDate] and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update Client Group in Details
            Me.BgwClientRun.ReportProgress(3, "Update Client Group Nr. and client Group Name in FX CREDIT EQUIVALENT Details from CUSTOMER_RATING")
            cmd.CommandText = "UPDATE A SET A.[ClientGroup]=B.[ClientGroup],A.[ClientGroupName]=B.[ClientGroupName] from [FX CREDIT EQUIVALENT Details] A INNER JOIN [CUSTOMER_RATING] B ON A.[Counterparty_No]=B.[ClientNo] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update Client Group in Details
            Me.BgwClientRun.ReportProgress(4, "Set Client Group and Name to UNDEFINED if Client Nr is NULL")
            cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details] SET [ClientGroup]=999999,[ClientGroupName]='UNDEFINED GROUP' where [Counterparty_No] is NULL and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(5, "Set Client Group=Client Nr in FX CREDIT EQUIVALENT Details where Client Group is NULL")
            cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details] SET [ClientGroup]=[Counterparty_No],[ClientGroupName]=[Counterparty_Name]  where [ClientGroup] is NULL and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update OCBS Exchange Rates-Last working day
            Me.BgwClientRun.ReportProgress(6, "Update Exchange Rates in FX CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details] set [ExchangeRate]=1 where [OrgCcy]='EUR' and [ExchangeRate] is NULL and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[ExchangeRate]=B.[MIDDLE RATE] from [FX CREDIT EQUIVALENT Details] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[OrgCcy]=B.[CURRENCY CODE] where A.[ExchangeRate] is NULL and B.[EXCHANGE RATE DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Calculate EuroEquivelant
            Me.BgwClientRun.ReportProgress(7, "Calculate Euro Equivalent nominal amount in FX CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details] set [EURequ]=Round([OrgCcyAmount]/[ExchangeRate],2) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteScalar()
            'Import Data in Basic
            Me.BgwClientRun.ReportProgress(8, "Import Data in FX CREDIT EQUIVALENT Basic")
            cmd.CommandText = "INSERT INTO [FX CREDIT EQUIVALENT Basic]([RiskDate],[ClientGroup])select [RiskDate],[ClientGroup] from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [RiskDate],[ClientGroup]"
            cmd.ExecuteNonQuery()
            'Update Client Group Name
            Me.BgwClientRun.ReportProgress(9, "Update Client Group Name in FX CREDIT EQUIVALENT Basic")
            cmd.CommandText = "UPDATE A SET A.[ClientGroupName]=B.[ClientGroupName] from [FX CREDIT EQUIVALENT Basic] A INNER JOIN [FX CREDIT EQUIVALENT Details] B ON A.[ClientGroup]=B.[ClientGroup] where A.[RiskDate]=B.[RiskDate] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update IdFX_CRED_EQU_BASIC in FX CREDIT EQUIVALENT Details
            Me.BgwClientRun.ReportProgress(10, "Update IdFX_CRED_EQU_BASIC in FX CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE A set A.[IdFX_CRED_EQU_BASIC]=B.[ID] from [FX CREDIT EQUIVALENT Details] A INNER JOIN [FX CREDIT EQUIVALENT Basic] B ON A.[ClientGroup]=B.[ClientGroup] where A.[RiskDate]=B.[RiskDate] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update PD,LGD,Obligor Rate in FX CREDIT EQUIVALENT Details
            Me.BgwClientRun.ReportProgress(11, "Update PD,LGD,Obligor Rate in FX CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE A SET A.[PD]=B.[PD],A.[LGD]=B.[ER_45],A.[Obligor Rate]=B.[Rating] from [FX CREDIT EQUIVALENT Details] A INNER JOIN [CUSTOMER_RATING] B ON A.[Counterparty_No]=B.[ClientNo] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update MonthsToEventStartDay
            Me.BgwClientRun.ReportProgress(12, "Update MonthsToEventStartDay in FX CREDIT EQUIVALENT Details")
            'OLD CODE
            'cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [MonthToEventStartDate]=(Case when DATENAME(dw,[Final_Maturity_Date])='Monday' then DATEDIFF(day,[StartDate],[Final_Maturity_Date])-2 else DATEDIFF(day,[StartDate],[Final_Maturity_Date])end) where  [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            'Me.BgwClientRun.ReportProgress(12, "Update ModifiedStartDate= If Trade Date=Start Date then Start Date + 2")
            'cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [ModifiedStartDate]=(Case when [TradeDate]=[StartDate] then DATEADD(day,2,[StartDate])else [StartDate] end) where  [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()

            'NEW CODE
            'Me.BgwClientRun.ReportProgress(12, "Update ModifiedStartDate= If Trade Date=Start Date and Start Date in THURSDAY or FRIDAY then Start Date + 4")
            'Me.BgwClientRun.ReportProgress(12, "Update ModifiedStartDate= If Trade Date=Start Date and Start Date not in THURSDAY or FRIDAY then Start Date + 2")
            'Me.BgwClientRun.ReportProgress(12, "Update ModifiedStartDate= If Trade Date<>Start Date then Start Date")
            'cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [ModifiedStartDate]=(Case when [TradeDate]=[StartDate] and DATENAME(dw,[StartDate]) in ('Thursday','Friday')then DATEADD(day,4,[StartDate])when [TradeDate]=[StartDate] and DATENAME(dw,[StartDate]) not in ('Thursday','Friday')then DATEADD(day,2,[StartDate])else [StartDate] end) where  [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            'Me.BgwClientRun.ReportProgress(12, "Modify ModifiedStartDate= If Saturday then + 2 Days and If Sunday then + 1")
            'cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [ModifiedStartDate]=(Case when DATENAME(dw,[ModifiedStartDate]) in ('Sunday') then DATEADD(day,1,[ModifiedStartDate])when DATENAME(dw,[ModifiedStartDate]) in ('Saturday') then DATEADD(day,2,[ModifiedStartDate])else [ModifiedStartDate]end) where  [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(12, "Update ModifiedStartDate= If Trade Date=Start Date then StartDate + Next Business Day (SQL Function=GetNextWorkingDate) + 1 ELSE StartDate")
            cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [ModifiedStartDate]=(Case when [TradeDate]=[StartDate] then dbo.GetNextWorkingDay([StartDate])+1 else [StartDate] end) where  [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(12, "Modify ModifiedStartDate= If Saturday then + 2 Days and If Sunday then + 1")
            cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [ModifiedStartDate]=(Case when DATENAME(dw,[ModifiedStartDate]) in ('Sunday') then DATEADD(day,1,[ModifiedStartDate])when DATENAME(dw,[ModifiedStartDate]) in ('Saturday') then DATEADD(day,2,[ModifiedStartDate])else [ModifiedStartDate]end) where  [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(12, "Update ModifiedStartDate= If Modified Start Date is HOLIDAY then GetNextWorkingDate ELSE ModifiedStartDate")
            cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [ModifiedStartDate]=dbo.GetNextWorkingDay([ModifiedStartDate]) where  [RiskDate]='" & rdsql & "' and [ModifiedStartDate] in (Select [CalendarDate] from [Calendar] where [HolidayType] in ('H'))"
            cmd.ExecuteNonQuery()
            '+++++++++++++++++++++++++++++++++++++++
            '++++++TEST+++++++++++++++++++++++++++++
            'cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [ModifiedStartDate]=(Case when [ModifiedStartDate]+1=[Final_Maturity_Date] then [Final_Maturity_Date] else [ModifiedStartDate] end) where  [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            '++++++++++++++++++++++++++++++++++++++
            'Me.BgwClientRun.ReportProgress(12, "Update MonthToEventStartDate= If FinalMaturityDate is MONDAY then - 3 Days")
            'cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [MonthToEventStartDate]=(Case when DATENAME(dw,[Final_Maturity_Date]) in ('Monday') then DATEDIFF(day,[ModifiedStartDate],[Final_Maturity_Date])-3 else DATEDIFF(day,[ModifiedStartDate],[Final_Maturity_Date])end) where  [RiskDate]='" & rdsql & "'"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(12, "Update Modified_FinalMaturityDate=If Final_Maturity_Date is MONDAY then - 3 Days else Final_Maturity_Date")
            cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [Modified_Final_Maturity_Date]=(Case when DATENAME(dw,[Final_Maturity_Date]) in ('Monday') then [Final_Maturity_Date]-3 else [Final_Maturity_Date] end)  where  [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(12, "Update MonthToEventStartDate to Years(NOT CONSIDERING LEAP YEARS)")
            cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details] set [MonthToEventStartDate]=dbo.yearDiff([Modified_Final_Maturity_Date],[ModifiedStartDate]) where  [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            'Update Percent Calculation in FX CREDIT EQUIVALENT Details (NEW)
            Me.BgwClientRun.ReportProgress(13, "Update Percent Calculation in FX CREDIT EQUIVALENT Details where Modified Start Date <= Business Date and Modified Final Maturity Date <> Working Date")
            'cmd.CommandText = "SELECT * FROM [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.02 where [MonthToEventStartDate]<=365 and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.05 where [MonthToEventStartDate]>365 and [MonthToEventStartDate]<=730 and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "'end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.08 where [MonthToEventStartDate]>730 and [MonthToEventStartDate]<=1095 and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.11 where [MonthToEventStartDate]>1095 and [MonthToEventStartDate]<=1460 and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.14 where [MonthToEventStartDate]>1460 and [MonthToEventStartDate]<=1825 and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.17 where [MonthToEventStartDate]>1825 and [MonthToEventStartDate]<=2190 and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.20 where [MonthToEventStartDate]>2190 and [MonthToEventStartDate]<=2555 and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end"
            'cmd.ExecuteNonQuery()
            'cmd.CommandText = "SELECT * FROM [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.02 where [MonthToEventStartDate]<=365 and [ModifiedStartDate]<= '" & rdsql & "' and [Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.05 where [MonthToEventStartDate]>365 and [MonthToEventStartDate]<=730 and [ModifiedStartDate]<= '" & rdsql & "' and [Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "'end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.08 where [MonthToEventStartDate]>730 and [MonthToEventStartDate]<=1095 and [ModifiedStartDate]<= '" & rdsql & "' and [Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.11 where [MonthToEventStartDate]>1095 and [MonthToEventStartDate]<=1460 and [ModifiedStartDate]<= '" & rdsql & "' and [Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.14 where [MonthToEventStartDate]>1460 and [MonthToEventStartDate]<=1825 and [ModifiedStartDate]<= '" & rdsql & "' and [Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.17 where [MonthToEventStartDate]>1825 and [MonthToEventStartDate]<=2190 and [Final_Maturity_Date]<> '" & rdsql & "' and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.20 where [MonthToEventStartDate]>2190 and [MonthToEventStartDate]<=2555 and [ModifiedStartDate]<= '" & rdsql & "' and [Final_Maturity_Date]<> '" & rdsql & "'  and [RiskDate]='" & rdsql & "' end"
            'cmd.ExecuteNonQuery()
            cmd.CommandText = "SELECT * FROM [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.02 where [MonthToEventStartDate]<=1 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.05 where [MonthToEventStartDate]>1 and [MonthToEventStartDate]<=2 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "'end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.08 where [MonthToEventStartDate]>2 and [MonthToEventStartDate]<=3 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.11 where [MonthToEventStartDate]>3 and [MonthToEventStartDate]<=4 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.14 where [MonthToEventStartDate]>4 and [MonthToEventStartDate]<=5 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.17 where [MonthToEventStartDate]>5 and [MonthToEventStartDate]<=6 and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [ModifiedStartDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details] set [PercentCalculation]=0.20 where [MonthToEventStartDate]>6 and [MonthToEventStartDate]<=7 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "'  and [RiskDate]='" & rdsql & "' end"
            cmd.ExecuteNonQuery()
            'Update EURequCalculated in FX CREDIT EQUIVALENT Details and CreditRiskAmountER
            Me.BgwClientRun.ReportProgress(14, "Update EURequCalculated  and CreditRiskAmountER in FX CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details] set [EURequCalculated]=[EURequ]*[PercentCalculation] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details] SET [CreditRiskAmountER]=[EURequCalculated]*[PD]*[LGD] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update Sum Fields in FX CREDIT EQUIVALENT Basic
            Me.BgwClientRun.ReportProgress(15, "Update Sum Fields in FX CREDIT EQUIVALENT Basic")
            cmd.CommandText = "UPDATE A SET A.[SumEURequ]=B.S from [FX CREDIT EQUIVALENT Basic] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequ]) as S from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmount]=B.S from [FX CREDIT EQUIVALENT Basic] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountTill1Jear]=B.S from [FX CREDIT EQUIVALENT Basic] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details] where [PercentCalculation]=0.02 and [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountOver1Till2Years]=B.S from [FX CREDIT EQUIVALENT Basic] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details] where [PercentCalculation]=0.05 and [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountOver2Years]=B.S from [FX CREDIT EQUIVALENT Basic] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details] where [PercentCalculation]=0.08 and [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditRiskAmountSUM]=B.S from [FX CREDIT EQUIVALENT Basic] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([CreditRiskAmountER]) as S from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            'Calculation of the Own Deals revaluation
            cmd.CommandText = "UPDATE A SET A.[SpotBuyRate]=B.[MIDDLE RATE] FROM [FX DAILY REVALUATION] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[BuyCCY]=B.[CURRENCY CODE] AND A.[RiskDate]=B.[EXCHANGE RATE DATE] and B.[EXCHANGE RATE DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[SpotSellRate]=B.[MIDDLE RATE] FROM [FX DAILY REVALUATION] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[SellCCY]=B.[CURRENCY CODE] AND A.[RiskDate]=B.[EXCHANGE RATE DATE] and B.[EXCHANGE RATE DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[TradeBuyRate]=B.[MIDDLE RATE] FROM [FX DAILY REVALUATION] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[BuyCCY]=B.[CURRENCY CODE] AND A.[InputDate]=B.[EXCHANGE RATE DATE] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[TradeSellRate]=B.[MIDDLE RATE] FROM [FX DAILY REVALUATION] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[SellCCY]=B.[CURRENCY CODE] AND A.[InputDate]=B.[EXCHANGE RATE DATE] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [FX DAILY REVALUATION] SET  [SpotBuyRate]=1,[TradeBuyRate]=1 where [BuyCCY]='EUR' and [RiskDate]='" & rdsql & "' "
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [FX DAILY REVALUATION] SET  [SpotSellRate]=1,[TradeSellRate]=1 where [SellCCY]='EUR' and [RiskDate]='" & rdsql & "' "
            cmd.ExecuteNonQuery()
            'Berechnungen
            cmd.CommandText = "UPDATE [FX DAILY REVALUATION] SET  [TradeDateBuySellAmount]=Round(([BuyAmount]/[TradeBuyRate])-([SellAmount]/[TradeSellRate]),2) where [RiskDate]='" & rdsql & "' and [OwnDeal]='Y'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [FX DAILY REVALUATION] SET  [AmortizationToRiskDate]=Round((([TradeDateBuySellAmount]/Datediff(day,[InputDate],[MaturityDate])) * Datediff(day,[InputDate],[RiskDate]+1)),2) where [RiskDate]='" & rdsql & "' and [OwnDeal]='Y'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [FX DAILY REVALUATION] SET  [Buy2Buy1Amount]=Round(([BuyAmount]/[SpotBuyRate])-([BuyAmount]/[TradeBuyRate]),2) where [RiskDate]='" & rdsql & "'  and [OwnDeal]='Y'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [FX DAILY REVALUATION] SET  [Sell2Sell1Amount]=Round(([SellAmount]/[SpotSellRate])-([SellAmount]/[TradeSellRate]),2) where [RiskDate]='" & rdsql & "'  and [OwnDeal]='Y'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [FX DAILY REVALUATION] SET  [IDW_Amount]=Round(([BuyAmount]/[SpotBuyRate])-([SellAmount]/[SpotSellRate]),2)-[TradeDateBuySellAmount] where [RiskDate]='" & rdsql & "' and [OwnDeal]='Y'"
            cmd.ExecuteNonQuery()

           

        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If
        Me.BgwClientRun.ReportProgress(16, "The daily FX CREDIT EQUIVELANT CALCULATION is finished")
    End Sub

    Private Sub IRS_CREDIT_EQUIV_CALCULATION()
        CurrentClientProcedure = "IRS CREDIT EQUIVALENT CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start the IRS CREDIT EQUIVELANT CALCULATION for " & rd)
        cmd.CommandText = "SELECT [RiskDate] FROM [CREDIT RISK] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE  FROM [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE  FROM [IRS CREDIT EQUIVALENT Basic] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Import Data in details
            Me.BgwClientRun.ReportProgress(2, "Insert Data in IRS CREDIT EQUIVALENT Details from CREDIT RISK where Contract Type in (SWAP,SWPS) and MaturityDate > RiskDate for " & rd)
            cmd.CommandText = "INSERT INTO [IRS CREDIT EQUIVALENT Details]([Class],[ContractType],[ProductType],[GL_Master_Account_Type],[Contract],[Counterparty_Name],[Counterparty_No],[Final_Maturity_Date],[OrgCcy],[OrgCcyAmount],[RiskDate],[RepDate]) SELECT 'IRS',[Contract Type],[Product Type],[GL Master / Account Type],[Contract Collateral ID],[Counterparty/Issuer/Collateral Name],[Client No],[Maturity Date],[Org Ccy],[Credit Outstanding (EUR Equ)],[RiskDate],[RepDate] from [CREDIT RISK]   where [Contract Type] in ('SWAP','SWPS') and [Maturity Date]>[RiskDate] and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(2, "Update Start Date, Original Amount in IRS CREDIT EQUIVALENT Details from ACCRUED INTEREST ANALYSIS")
            cmd.CommandText = "UPDATE A SET A.[StartDate]=B.[Start Date],A.[OrgCcyAmount]=B.[Principal (Org  Ccy)] from [IRS CREDIT EQUIVALENT Details] A INNER JOIN [ACCRUED INTEREST ANALYSIS] B on A.[RiskDate]=B.[Datadate] and A.[Contract]=B.[Contract] where A.[RiskDate]='" & rdsql & "' and B.[Class] in ('Assets')"
            cmd.ExecuteNonQuery()
            'Update Client Group in Details
            Me.BgwClientRun.ReportProgress(3, "Update Client Group Nr. and client Group Name in IRS CREDIT EQUIVALENT Details from CUSTOMER_RATING")
            cmd.CommandText = "UPDATE A SET A.[ClientGroup]=B.[ClientGroup],A.[ClientGroupName]=B.[ClientGroupName] from [IRS CREDIT EQUIVALENT Details] A INNER JOIN [CUSTOMER_RATING] B ON A.[Counterparty_No]=B.[ClientNo] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update Client Group in Details
            Me.BgwClientRun.ReportProgress(4, "Set Client Group and Name to UNDEFINED if Client Nr is NULL")
            cmd.CommandText = "UPDATE [IRS CREDIT EQUIVALENT Details] SET [ClientGroup]=999999,[ClientGroupName]='UNDEFINED GROUP' where [Counterparty_No] is NULL and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(5, "Set Client Group=Client Nr in IRS CREDIT EQUIVALENT Details where Client Group is NULL")
            cmd.CommandText = "UPDATE [IRS CREDIT EQUIVALENT Details] SET [ClientGroup]=[Counterparty_No],[ClientGroupName]=[Counterparty_Name]  where [ClientGroup] is NULL and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update OCBS Exchange Rates-Last working day
            Me.BgwClientRun.ReportProgress(6, "Update Exchange Rates in IRS CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE [IRS CREDIT EQUIVALENT Details] set [ExchangeRate]=1 where [OrgCcy]='EUR' and [ExchangeRate] is NULL and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[ExchangeRate]=B.[MIDDLE RATE] from [IRS CREDIT EQUIVALENT Details] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[OrgCcy]=B.[CURRENCY CODE] where A.[ExchangeRate] is NULL and B.[EXCHANGE RATE DATE]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Calculate EuroEquivelant
            Me.BgwClientRun.ReportProgress(7, "Calculate Euro Equivalent nominal amount in IRS CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE [IRS CREDIT EQUIVALENT Details] set [EURequ]=Round([OrgCcyAmount]/[ExchangeRate],2) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteScalar()
            'Import Data in Basic
            Me.BgwClientRun.ReportProgress(8, "Import Data in IRS CREDIT EQUIVALENT Basic")
            cmd.CommandText = "INSERT INTO [IRS CREDIT EQUIVALENT Basic]([RiskDate],[ClientGroup])select [RiskDate],[ClientGroup] from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [RiskDate],[ClientGroup]"
            cmd.ExecuteNonQuery()
            'Update Client Group Name
            Me.BgwClientRun.ReportProgress(9, "Update Client Group Name in IRS CREDIT EQUIVALENT Basic")
            cmd.CommandText = "UPDATE A SET A.[ClientGroupName]=B.[ClientGroupName] from [IRS CREDIT EQUIVALENT Basic] A INNER JOIN [IRS CREDIT EQUIVALENT Details] B ON A.[ClientGroup]=B.[ClientGroup] where A.[RiskDate]=B.[RiskDate] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update IdFX_CRED_EQU_BASIC in FX CREDIT EQUIVALENT Details
            Me.BgwClientRun.ReportProgress(10, "Update Id_IRS_CRED_EQU_BASIC in IRS CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE A set A.[Id_IRS_CRED_EQU_BASIC]=B.[ID] from [IRS CREDIT EQUIVALENT Details] A INNER JOIN [IRS CREDIT EQUIVALENT Basic] B ON A.[ClientGroup]=B.[ClientGroup] where A.[RiskDate]=B.[RiskDate] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update PD,LGD,Obligor Rate in FX CREDIT EQUIVALENT Details
            Me.BgwClientRun.ReportProgress(11, "Update PD,LGD,Obligor Rate in IRS CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE A SET A.[PD]=B.[PD],A.[LGD]=B.[ER_45],A.[Obligor Rate]=B.[Rating] from [IRS CREDIT EQUIVALENT Details] A INNER JOIN [CUSTOMER_RATING] B ON A.[Counterparty_No]=B.[ClientNo] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            
            Me.BgwClientRun.ReportProgress(12, "Update ModifiedStartDate=Start Date and [Modified_Final_Maturity_Date]=[Final_Maturity_Date]")
            cmd.CommandText = "Update [IRS CREDIT EQUIVALENT Details] set [ModifiedStartDate]=[StartDate] , [Modified_Final_Maturity_Date]=[Final_Maturity_Date] where  [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(12, "Update MonthToEventStartDate to Years(NOT CONSIDERING LEAP YEARS)")
            cmd.CommandText = "Update [IRS CREDIT EQUIVALENT Details] set [MonthToEventStartDate]=dbo.yearDiff([Modified_Final_Maturity_Date],[ModifiedStartDate]) where  [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            'Update Percent Calculation in FX CREDIT EQUIVALENT Details (NEW)
            Me.BgwClientRun.ReportProgress(13, "Update Percent Calculation in IRS CREDIT EQUIVALENT Details")
            cmd.CommandText = "SELECT * FROM [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' begin update [IRS CREDIT EQUIVALENT Details] set [PercentCalculation]=0.005 where [MonthToEventStartDate]<=1 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [IRS CREDIT EQUIVALENT Details] set [PercentCalculation]=0.01 where [MonthToEventStartDate]>1 and [MonthToEventStartDate]<=2 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "'end begin update [IRS CREDIT EQUIVALENT Details] set [PercentCalculation]=[MonthToEventStartDate]*0.01-0.01 where [MonthToEventStartDate]>2 and [ModifiedStartDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end"
            cmd.ExecuteNonQuery()
            'Update EURequCalculated in FX CREDIT EQUIVALENT Details and CreditRiskAmountER
            Me.BgwClientRun.ReportProgress(14, "Update EURequCalculated  and CreditRiskAmountER in FX CREDIT EQUIVALENT Details")
            cmd.CommandText = "UPDATE [IRS CREDIT EQUIVALENT Details] set [EURequCalculated]=[EURequ]*[PercentCalculation] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [IRS CREDIT EQUIVALENT Details] SET [CreditRiskAmountER]=[EURequCalculated]*[PD]*[LGD] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Update Sum Fields in FX CREDIT EQUIVALENT Basic
            Me.BgwClientRun.ReportProgress(15, "Update Sum Fields in IRS CREDIT EQUIVALENT Basic")
            cmd.CommandText = "UPDATE A SET A.[SumEURequ]=B.S from [IRS CREDIT EQUIVALENT Basic] A INNER JOIN (Select [Id_IRS_CRED_EQU_BASIC],Sum([EURequ]) as S from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [Id_IRS_CRED_EQU_BASIC]) B on A.[ID]=B.[Id_IRS_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmount]=B.S from [IRS CREDIT EQUIVALENT Basic] A INNER JOIN (Select [Id_IRS_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [Id_IRS_CRED_EQU_BASIC]) B on A.[ID]=B.[Id_IRS_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountTill1Jear]=B.S from [IRS CREDIT EQUIVALENT Basic] A INNER JOIN (Select [Id_IRS_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [IRS CREDIT EQUIVALENT Details] where [PercentCalculation]=0.005 and [RiskDate]='" & rdsql & "' group by [Id_IRS_CRED_EQU_BASIC]) B on A.[ID]=B.[Id_IRS_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountOver1Till2Years]=B.S from [IRS CREDIT EQUIVALENT Basic] A INNER JOIN (Select [Id_IRS_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [IRS CREDIT EQUIVALENT Details] where [PercentCalculation]=0.01 and [RiskDate]='" & rdsql & "' group by [Id_IRS_CRED_EQU_BASIC]) B on A.[ID]=B.[Id_IRS_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountOver2Years]=B.S from [IRS CREDIT EQUIVALENT Basic] A INNER JOIN (Select [Id_IRS_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [IRS CREDIT EQUIVALENT Details] where [PercentCalculation]>0.01 and [RiskDate]='" & rdsql & "' group by [Id_IRS_CRED_EQU_BASIC]) B on A.[ID]=B.[Id_IRS_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CreditRiskAmountSUM]=B.S from [IRS CREDIT EQUIVALENT Basic] A INNER JOIN (Select [Id_IRS_CRED_EQU_BASIC],Sum([CreditRiskAmountER]) as S from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' group by [Id_IRS_CRED_EQU_BASIC]) B on A.[ID]=B.[Id_IRS_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

           

        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If
        Me.BgwClientRun.ReportProgress(16, "The daily IRS CREDIT EQUIVELANT CALCULATION is finished")
    End Sub

    Private Sub UNEXPECTED_LOSS_CALCULATION()
        CurrentClientProcedure = "UNEXPECTED LOSS CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start UNEXPECTED LOSS Calculation for " & rd)
        cmd.CommandText = "SELECT [RiskDate] FROM [CREDIT RISK] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE FROM [UNEXPECTED_LOSS_Details] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE FROM [UNEXPECTED_LOSS] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE FROM [UNEXPECTED_LOSS_DATE] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'INSERT RELEVANT FX DEALS IN CREDIT RISK
            cmd.CommandText = "INSERT INTO [CREDIT RISK]([Obligor Rate],[Contract Type],[Product Type],[Counterparty/Issuer/Collateral Name],[Client No],[Contract Collateral ID],[Maturity Date],[Org Ccy],[Credit Outstanding (Org Ccy)],[Credit Outstanding (EUR Equ)],[NetCreditOutstandingAmountEUR],[InternalInfo],[PD],[(1-ER_45)],[RiskDate],[RepDate],[DateMakCrTotals],[ClientGroup],[ClientGroupName]) Select [Obligor Rate],[ContractType],[ProductType],[Counterparty_Name],[Counterparty_No],[Contract],[Final_Maturity_Date],[OrgCcy],[OrgCcyAmount],[EURequ],[EURequCalculated],'FX DEAL',[PD],[LGD],[RiskDate],[RepDate],[RiskDate],[ClientGroup],[ClientGroupName] from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and  [PD]<>0"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[(1-ER)]=B.[ER_25],A.[CoreDefinition]=B.[CoreDefinition],A.[StandardPoorsRating]=B.[StandardPoorsRating],A.[MoodysRating]=B.[MoodysRating],A.[FitchRating]=B.[FitchRating] FROM [CREDIT RISK] A INNER JOIN [CUSTOMER_RATING] B ON A.[Client No]=B.[ClientNo] WHERE A.[RiskDate]='" & rdsql & "' and A.[InternalInfo]='FX DEAL' "
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [CREDIT RISK] SET [Credit Risk Amount(EUR Equ)]=Round([Credit Outstanding (EUR Equ)]*[PD]*[(1-ER)],2),[CreditRiskAmountEUREquER45]=Round([Credit Outstanding (EUR Equ)]*[PD]*[(1-ER_45)],2),[NetCredit Risk Amount(EUR Equ)]=Round([NetCreditOutstandingAmountEUR]*[PD]*[(1-ER)],2),[NetCreditRiskAmountEUREquER45]=Round([NetCreditOutstandingAmountEUR]*[PD]*[(1-ER_45)],2) where [RiskDate]='" & rdsql & "' and [InternalInfo]='FX DEAL' "
            cmd.ExecuteNonQuery()

            '*******SPLITING CCB GROUP**********
            Me.BgwClientRun.ReportProgress(10, "Update ClientGroupN and ClientGroupNameN (Parameter:REPORTS/CCB_INDIVIDUAL_GROUP) in CREDIT RISK")
            Me.QueryText = "select * from [PARAMETER]  where [IdABTEILUNGSPARAMETER] in ('CCB_INDIVIDUAL_GROUP') and [PARAMETER STATUS]='Y'"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim sr As String = dt.Rows.Item(i).Item("PARAMETER1") & "%"
                cmd.CommandText = "UPDATE [CREDIT RISK] SET [ClientGroupN]='" & dt.Rows.Item(i).Item("PARAMETER2") & "',[ClientGroupNameN]='" & dt.Rows.Item(i).Item("PARAMETER INFO") & "' where [RiskDate]='" & rdsql & "' and [Counterparty/Issuer/Collateral Name] like '" & sr & "'"
                cmd.ExecuteNonQuery()
            Next
            Me.BgwClientRun.ReportProgress(80, "Set defaults in Individual Client Group")
            cmd.CommandText = "UPDATE [CREDIT RISK] SET [ClientGroupN]=[ClientGroup],[ClientGroupNameN]=[ClientGroupName] where [RiskDate]='" & rdsql & "' and [ClientGroupN] is NULL "
            cmd.ExecuteNonQuery()


            'Calculation in CREDIT RISK
            'Define MaturityWithoutCapFloor in CREDIT RISK
            Me.BgwClientRun.ReportProgress(16, "Define MaturityWithoutCapFloor in CREDIT RISK")
            Dim NextHalfYearDate As Date = DateAdd(DateInterval.Month, 6, rd)
            Me.QueryText = "select * from [CREDIT RISK] where [RiskDate]='" & rdsql & "' and [Maturity Date] is not NULL"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ID As String = dt.Rows.Item(i).Item("ID")
                Dim MaturityDate As Date = dt.Rows.Item(i).Item("Maturity Date")
                Dim DiffernceRiskDateMaturityDate As Double = 0
                If MaturityDate = DateSerial(9999, 12, 31) Then
                    DiffernceRiskDateMaturityDate = Math.Round(DateDiff(DateInterval.Day, rd, NextHalfYearDate) / 365.25, 2)
                    cmd.CommandText = "UPDATE [CREDIT RISK] Set [MaturityWithoutCapFloor]=" & Str(DiffernceRiskDateMaturityDate) & " where [ID]='" & ID & "'"
                    cmd.ExecuteNonQuery()
                Else
                    DiffernceRiskDateMaturityDate = Math.Round(DateDiff(DateInterval.Day, rd, MaturityDate) / 365.25, 2)
                    cmd.CommandText = "UPDATE [CREDIT RISK] Set [MaturityWithoutCapFloor]=" & Str(DiffernceRiskDateMaturityDate) & " where [ID]='" & ID & "'"
                    cmd.ExecuteNonQuery()
                End If
            Next


            Me.BgwClientRun.ReportProgress(2, "Update EaDweigthedMaturityWithoutCapFloor and LGDfinalEaDweighted in CREDIT RISK for " & rd)
            cmd.CommandText = "UPDATE [CREDIT RISK] SET [EaDweigthedMaturityWithoutCapFloor]=Round([MaturityWithoutCapFloor]*[NetCreditOutstandingAmountEUR],2),[LGDfinalEaDweighted]=Round([(1-ER_45)]*[NetCreditOutstandingAmountEUR],2),[PDxFinalEaD]=Round([PD]*[NetCreditOutstandingAmountEUR],2) where  [RiskDate]='" & rdsql & "' and [PD]<>0"
            cmd.ExecuteNonQuery()
            'UNEXPECTED LOSS
            Me.BgwClientRun.ReportProgress(3, "Insert Risk Date in UNEXPECTED_LOSS_DATE Table for " & rd)
            cmd.CommandText = "INSERT INTO [UNEXPECTED_LOSS_DATE](RiskDate) Values('" & rdsql & "')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(4, "Insert Client Group,Risk Date from CREDIT RISK in UNEXPECTED LOSS Table grouped by Client Group and RiskDate for " & rd)
            cmd.CommandText = "INSERT INTO [UNEXPECTED_LOSS]([ClientGroup],[RiskDate]) SELECT [ClientGroupN],[RiskDate] from [CREDIT RISK] where [RiskDate]='" & rdsql & "' GROUP BY [ClientGroupN],[RiskDate]"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(5, "Update Client Group Name in UNEXPECTED LOSS Table")
            cmd.CommandText = "UPDATE A SET A.[ClientGroupName]=B.[ClientGroupNameN] from [UNEXPECTED_LOSS] A INNER JOIN [CREDIT RISK] B ON A.[ClientGroup]=B.[ClientGroupN] where A.[RiskDate]='" & rdsql & "' and B.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(6, "Insert relevant Data to UNEXPECTED_LOSS_Details")
            Me.QueryText = "Select [ID],[ClientGroup] from [UNEXPECTED_LOSS] where [RiskDate]='" & rdsql & "' "
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ID As Double = dt.Rows.Item(i).Item("ID")
                Dim ClientGroup As String = dt.Rows.Item(i).Item("ClientGroup")
                cmd.CommandText = "INSERT INTO [UNEXPECTED_LOSS_Details]([Obligor Rate],[Contract Type],[Product Type],[GL Master / Account Type],[Counterparty/Issuer/Collateral Name],[Client No],[Contract Collateral ID],[Maturity Date],[Remaining Year(s) to Maturity],[Org Ccy],[Credit Outstanding (Org Ccy)],[Credit Outstanding (EUR Equ)],[NetCreditOutstandingAmountEUR],[InternalInfo],[PD],[(1-ER)],[Credit Risk Amount(EUR Equ)],[NetCredit Risk Amount(EUR Equ)],[(1-ER_45)],[CreditRiskAmountEUREquER45],[NetCreditRiskAmountEUREquER45],[CoreDefinition],[ClientGroup],[ClientGroupName],[MaturityWithoutCapFloor],[EaDweigthedMaturityWithoutCapFloor],[PDxFinalEaD],[LGDfinalEaDweighted],[RiskDate],[IdClientGroup]) SELECT B.[Obligor Rate],B.[Contract Type],B.[Product Type],B.[GL Master / Account Type],B.[Counterparty/Issuer/Collateral Name],B.[Client No],B.[Contract Collateral ID],B.[Maturity Date],B.[Remaining Year(s) to Maturity],B.[Org Ccy],B.[Credit Outstanding (Org Ccy)],B.[Credit Outstanding (EUR Equ)],B.[NetCreditOutstandingAmountEUR],B.[InternalInfo],B.[PD],B.[(1-ER)],B.[Credit Risk Amount(EUR Equ)],B.[NetCredit Risk Amount(EUR Equ)],B.[(1-ER_45)],B.[CreditRiskAmountEUREquER45],B.[NetCreditRiskAmountEUREquER45],B.[CoreDefinition],B.[ClientGroupN],B.[ClientGroupNameN],B.[MaturityWithoutCapFloor],B.[EaDweigthedMaturityWithoutCapFloor],B.[PDxFinalEaD],B.[LGDfinalEaDweighted],B.[RiskDate]," & Str(ID) & " from [CREDIT RISK] B where B.[ClientGroupN]='" & ClientGroup & "' and B.[RiskDate]='" & rdsql & "' and B.[PD]<>0"
                cmd.ExecuteNonQuery()
            Next


            Me.BgwClientRun.ReportProgress(7, "Update SubBorrowersCounter in UNEXPECTED LOSS Table from CREDIT RISK where PD<>0")
            Me.QueryText = "Select Count([ClientGroupN]) as SubBorrowerCount,[ClientGroupN] from [CREDIT RISK]  Where [RiskDate]='" & rdsql & "' and [PD]<>0  GROUP BY [ClientGroupN]"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ClientGroup As String = dt.Rows.Item(i).Item("ClientGroupN")
                Dim SubBorrowerCount As Double = dt.Rows.Item(i).Item("SubBorrowerCount")
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [SubBorrowersCounter]=" & Str(SubBorrowerCount) & " where [ClientGroup]='" & ClientGroup & "' and [RiskDate]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
            Next
            Me.BgwClientRun.ReportProgress(8, "Update FinalEadTotalSum,LGD,PD_EaD_weigthed in UNEXPECTED LOSS Table from CREDIT RISK  where PD<>0 and Contract Type <>LIMIT")
            Me.QueryText = "Select Sum([NetCreditOutstandingAmountEUR]) as SumNetCreditOutstandingEURequ,Sum([LGDfinalEaDweighted]) as SumLGD,Sum([PDxFinalEaD]) as SumPDxFinalEaD,[ClientGroupN] from [CREDIT RISK]  Where [RiskDate]='" & rdsql & "' and [PD]<>0  GROUP BY [ClientGroupN]"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ClientGroup As String = dt.Rows.Item(i).Item("ClientGroupN")
                Dim SumNetCreditOutstandingEURequUNEXPECT As Double = dt.Rows.Item(i).Item("SumNetCreditOutstandingEURequ")
                If SumNetCreditOutstandingEURequUNEXPECT <> 0 Then
                    cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [FinalEadTotalSum]=" & Str(SumNetCreditOutstandingEURequUNEXPECT) & " where [ClientGroup]='" & ClientGroup & "' and [RiskDate]='" & rdsql & "' "
                    cmd.ExecuteNonQuery()
                End If
                Dim SumLGD As Double = dt.Rows.Item(i).Item("SumLGD")
                cmd.CommandText = "Select [FinalEadTotalSum] from [UNEXPECTED_LOSS] where [ClientGroup]='" & ClientGroup & "' and [RiskDate]='" & rdsql & "' "
                Dim FinalEadTotalSum As Double = cmd.ExecuteScalar
                Dim LGD As Double = Math.Round(SumLGD / FinalEadTotalSum, 2)
                Dim SumPDxFinalEaD As Double = dt.Rows.Item(i).Item("SumPDxFinalEaD")
                If FinalEadTotalSum <> 0 AndAlso SumLGD <> 0 Then
                    Dim PD_EaD_weighted As Double = Math.Round(SumPDxFinalEaD / FinalEadTotalSum, 5)
                    cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [LGD]=" & Str(LGD) & ",[PD_EaD_weighted]=" & Str(PD_EaD_weighted) & " where [ClientGroup]='" & ClientGroup & "' and [RiskDate]='" & rdsql & "' "
                    cmd.ExecuteNonQuery()
                End If
            Next
            Me.BgwClientRun.ReportProgress(9, "Update PD_3bps_floor in UNEXPECTED LOSS Table")
            Me.QueryText = "Select [PD_EaD_weighted],[ClientGroup] from [UNEXPECTED_LOSS]  Where [RiskDate]='" & rdsql & "' GROUP BY [ClientGroup],[PD_EaD_weighted]"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ClientGroup As String = dt.Rows.Item(i).Item("ClientGroup")
                Dim PD_EaD_weighted As Double = dt.Rows.Item(i).Item("PD_EaD_weighted")
                Dim CheckNumber As Double = 0.0003
                Dim MaxNumber As Double = 0
                'Get PD_3bps_floor
                If PD_EaD_weighted > CheckNumber Then
                    MaxNumber = PD_EaD_weighted
                    'MsgBox("Greater" & "  " & PD_EaD_weighted & "   " & CheckNumber & "   " & MaxNumber)
                Else
                    MaxNumber = CheckNumber
                    'MsgBox("Less" & "  " & PD_EaD_weighted & "   " & CheckNumber & "   " & MaxNumber)
                End If
                Dim SecondNumber As Double = 0
                If PD_EaD_weighted = 0 Then
                    SecondNumber = 0
                    'MsgBox("Equal 0" & "  " & PD_EaD_weighted & "   " & SecondNumber)
                Else
                    SecondNumber = 1
                    'MsgBox("Not Equal 0" & "  " & PD_EaD_weighted & "   " & SecondNumber)
                End If
                Dim PD_3bps_floor As Double = MaxNumber * SecondNumber
                'MsgBox("PD_3bpsfloor " & PD_3bps_floor)
                'Get IndicatorOfFloor
                Dim IndicatorOfFloor As Double = 0
                Dim difference As Double = PD_3bps_floor - PD_EaD_weighted
                'MsgBox(difference)
                If difference > 0 Then
                    IndicatorOfFloor = 1
                Else
                    IndicatorOfFloor = 0
                End If
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [PD_3bps_floor]=" & Str(PD_3bps_floor) & ",[IndicatorOfFloor]=" & Str(IndicatorOfFloor) & " where [RiskDate]='" & rdsql & "' and [ClientGroup]='" & ClientGroup & "'"
                cmd.ExecuteNonQuery()
            Next
            Me.BgwClientRun.ReportProgress(10, "Update MaturityEADweigthed in UNEXPECTED LOSS Table")
            Me.QueryText = "Select Sum([EaDweigthedMaturityWithoutCapFloor]) as SumEaDweigthedMaturityWithoutCapFloor,[ClientGroupN] from [CREDIT RISK]  Where [RiskDate]='" & rdsql & "' and [PD]<>0  GROUP BY [ClientGroupN]"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ClientGroup As String = dt.Rows.Item(i).Item("ClientGroupN")
                Dim SumEaDweigthedMaturityWithoutCapFloor As Double = dt.Rows.Item(i).Item("SumEaDweigthedMaturityWithoutCapFloor")
                cmd.CommandText = "Select [FinalEadTotalSum] from [UNEXPECTED_LOSS] where [ClientGroup]='" & ClientGroup & "' and [RiskDate]='" & rdsql & "' "
                Dim FinalEadTotalSum As Double = cmd.ExecuteScalar
                Dim Variable1 As Double = SumEaDweigthedMaturityWithoutCapFloor / FinalEadTotalSum
                Dim CheckNumber As Double = 5
                Dim Variable2 As Double = 0
                If Variable1 > 5 Then
                    Variable2 = 5
                Else
                    Variable2 = Variable1
                End If
                Dim Variable3 As Double = 0
                If Variable2 > 1 Then
                    Variable3 = Variable2
                Else
                    Variable3 = 1
                End If
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [MaturityEADweigthed]=" & Str(Variable3) & " where [ClientGroup]='" & ClientGroup & "' and [RiskDate]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
            Next
            Me.BgwClientRun.ReportProgress(11, "Update R_CoefficientOfColleration and b_MaturityAdjustment in UNEXPECTED LOSS Table")
            Me.QueryText = "Select [PD_3bps_floor],[ClientGroup] from [UNEXPECTED_LOSS]  Where [RiskDate]='" & rdsql & "'  GROUP BY [ClientGroup],[PD_3bps_floor]"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ClientGroup As String = dt.Rows.Item(i).Item("ClientGroup")
                Dim PD As Double = dt.Rows.Item(i).Item("PD_3bps_floor")
                Dim PDminus As Double = PD * (-50)
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [R_CoefficientOfColleration]=(SELECT 0.12 * (1- Power(2.71828182845904," & Str(PDminus) & ")/1-Power(2.71828182845904,-50))+0.24 * (1-(1- Power(2.71828182845904," & Str(PDminus) & ")/1-Power(2.71828182845904,-50)))) where  [RiskDate]='" & rdsql & "' and [ClientGroup]='" & ClientGroup & "' "
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [b_MaturityAdjustment]=(SELECT Power(0.11852-0.05478 * Log(" & Str(PD) & ") ,2)) where  [RiskDate]='" & rdsql & "' and [ClientGroup]='" & ClientGroup & "' "
                cmd.ExecuteNonQuery()
                'Set b_MaturityAdjustment to 0 if NULL
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [b_MaturityAdjustment]=0 where  [RiskDate]='" & rdsql & "' and [b_MaturityAdjustment] is NULL"
                cmd.ExecuteNonQuery()
            Next
            'Get LevelOfConfidence from UNEXPTECTED_LOSS_DATE
            Me.BgwClientRun.ReportProgress(12, "Get LEVEL OF CONFIDENCE from UNEXPECTED LOSS DATE Table")
            cmd.CommandText = "Select [LevelOfConfidence] from [UNEXPECTED_LOSS_DATE] where [RiskDate]='" & rdsql & "'"
            Dim LevelOfConfidence As Double = cmd.ExecuteScalar

            Me.BgwClientRun.ReportProgress(13, "Update RW_RiskWeightedExposure and UL_UnexpectedLoss in UNEXPECTED LOSS Table")
            Me.QueryText = "Select * from [UNEXPECTED_LOSS]  Where [RiskDate]='" & rdsql & "' and [b_MaturityAdjustment]<>0"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim ID As String = dt.Rows.Item(i).Item("ID")
                Dim LGD As Double = dt.Rows.Item(i).Item("LGD")
                Dim R As Double = dt.Rows.Item(i).Item("R_CoefficientOfColleration")
                Dim PD As Double = dt.Rows.Item(i).Item("PD_3bps_floor")
                Dim M As Double = dt.Rows.Item(i).Item("MaturityEADweigthed")
                Dim b As Double = dt.Rows.Item(i).Item("b_MaturityAdjustment")
                'Get First Part of Formula
                cmd.CommandText = "SELECT " & Str(LGD) & "*dbo.GET_NORMSDIST_CALC((1/sqrt(1-" & Str(R) & ")* dbo.GET_NORMSINV_CALC(" & Str(PD) & ",1)+Sqrt(" & Str(R) & ")/Sqrt(1.0-" & Str(R) & ")*dbo.GET_NORMSINV_CALC(" & Str(LevelOfConfidence) & ",1))) -" & Str(LGD) & "*" & Str(PD) & "  as FirstPartFormulaRW from [UNEXPECTED_LOSS] where [ID]='" & ID & "' "
                Dim FirstPartFormulaRW = cmd.ExecuteScalar
                'Get Second Part of Formula
                cmd.CommandText = "select (1+(" & Str(M) & "-2.5)*" & Str(b) & ")/(1-1.5*" & Str(b) & ")*12.5*1.06 as SecondPartFormulaRW from [UNEXPECTED_LOSS] where [ID]='" & ID & "'"
                Dim SecondPartFormulaRW = cmd.ExecuteScalar
                Dim RW_Calculated As Double = FirstPartFormulaRW * SecondPartFormulaRW
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [RW_RiskWeightedExposure]=" & Str(RW_Calculated) & " where [ID]='" & ID & "' "
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [UL_UnexpectedLoss]=Round([RW_RiskWeightedExposure]*[FinalEadTotalSum]*0.08,2) where [ID]='" & ID & "' "
                cmd.ExecuteNonQuery()
            Next
            Me.BgwClientRun.ReportProgress(14, "Update Sum Unexpected Loss in UNEXPECTED LOSS DATE Table")
            cmd.CommandText = "UPDATE [UNEXPECTED_LOSS_DATE] SET [SumUL]=(Select Sum([UL_UnexpectedLoss]) from [UNEXPECTED_LOSS] where [RiskDate]='" & rdsql & "') where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "DELETE FROM [CREDIT RISK] where [RiskDate]='" & rdsql & "' and [InternalInfo]='FX DEAL'"
            cmd.ExecuteNonQuery()


            'GRANULARITY APPROACH
            CurrentClientProcedure = "GRANULARITY APPROACH CALCULATION"
            Me.BgwClientRun.ReportProgress(1, "Start GRANULARITY APPROACH Calculation for " & rd)
            Me.BgwClientRun.ReportProgress(2, "Calculate s_i Value for " & rd)
            cmd.CommandText = "Update [UNEXPECTED_LOSS] set [s_i]=Round([FinalEadTotalSum]/(select Sum([FinalEadTotalSum]) from [UNEXPECTED_LOSS] where [RiskDate]='" & rdsql & "'),10) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Calculate K_i Value for " & rd)
            cmd.CommandText = "Update [UNEXPECTED_LOSS] set [K_i]=(select Case [FinalEadTotalSum] when 0 then 0 else Round([UL_UnexpectedLoss]/[FinalEadTotalSum],10) end) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(4, "Calculate R_i Value for " & rd)
            cmd.CommandText = "Update [UNEXPECTED_LOSS] set [R_i]=Round([LGD]*[PD_3bps_floor],10) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(5, "Calculate VLGD_i Value for " & rd)
            cmd.CommandText = "Update [UNEXPECTED_LOSS] set [VLGD_i]=Round((select nu_Value from UNEXPECTED_LOSS_DATE where [RiskDate]='" & rdsql & "')*[LGD]*(1-[LGD]),10) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(6, "Calculate C_i Value for " & rd)
            cmd.CommandText = "Update [UNEXPECTED_LOSS] set [C_i]=(Power([LGD],2)+[VLGD_i])/[LGD] where [RiskDate]='" & rdsql & "' and [LGD]<>0"
            cmd.ExecuteNonQuery()

            Me.BgwClientRun.ReportProgress(7, "Calculate GAMMAINV for " & rd)
            Me.QueryText = "Select * from [UNEXPECTED_LOSS_DATE]  Where [RiskDate]='" & rdsql & "'"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            Dim p_alpha_Value As Double = dt.Rows.Item(0).Item("p_alpha_Value")
            Dim b_beta_Value As Double = dt.Rows.Item(0).Item("b_beta_value")
            Dim ConfidenceLevelUL As Double = dt.Rows.Item(0).Item("LevelOfConfidence")
            Dim b_beta_Value_Calculated As Double = 1 / b_beta_Value

            'excel = New Microsoft.Office.Interop.Excel.Application
            'instance = excel.WorksheetFunction

            'Dim GAMMA_INV As Double = Math.Round(instance.GammaInv(ConfidenceLevelUL, p_alpha_Value, b_beta_Value_Calculated), 10)

            'Excel Instanz beenden
            'Dim procs() As Process = Process.GetProcessesByName("EXCEL")
            'Dim i1 As Short
            'i1 = 0
            'For i1 = 0 To (procs.Length - 1)
            'procs(i1).Kill()
            'Next i1

            Dim workbook As New DevExpress.Spreadsheet.Workbook()
            Dim worksheets As WorksheetCollection = workbook.Worksheets
            Dim worksheet As DevExpress.Spreadsheet.Worksheet = workbook.Worksheets(0)

            worksheet.Range("A1").NumberFormat = "#0.00"
            worksheet.Range("A2").NumberFormat = "#0.00"
            worksheet.Range("A3").NumberFormat = "#0.00"
            worksheet.Range("A4").NumberFormat = "#0.0000000000"
            worksheet.Range("A1").Value = ConfidenceLevelUL
            worksheet.Range("A2").Value = p_alpha_Value
            worksheet.Range("A3").Value = b_beta_Value_Calculated
            worksheet.Range("A4").Formula = "=ROUND(GAMMAINV(A1;A2;A3);10)"
            Dim GAMMA_INV As Double = worksheet.Range("A4").Value.NumericValue



            Me.BgwClientRun.ReportProgress(8, "Calculate DELTA Value for " & rd)
            Dim DELTA_VALUE As Double = Math.Round((GAMMA_INV - 1) * (p_alpha_Value + (1 - p_alpha_Value) / (GAMMA_INV)), 10)
            Me.BgwClientRun.ReportProgress(9, "Update DELTA Value and GAMMAINV for " & rd)
            cmd.CommandText = "Update [UNEXPECTED_LOSS_DATE] set [Gamma_inv]=" & Str(GAMMA_INV) & ",[Delta]=" & Str(DELTA_VALUE) & " where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(10, "Calculate and Insert K_Value for " & rd)
            cmd.CommandText = "Update [UNEXPECTED_LOSS_DATE] set [K_Value]= (Select Round(Sum([s_i]*[K_i]),10) from [UNEXPECTED_LOSS] where [RiskDate]='" & rdsql & "') where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            Dim s_i As Decimal = 0
            Dim C_i As Decimal = 0
            Dim K_i As Decimal = 0
            Dim R_i As Decimal = 0
            Dim LGD_i As Decimal = 0
            Dim VLGD_i As Decimal = 0
            Dim CALCULATION_1 As Decimal = 0
            Dim CALCULATION_2 As Decimal = 0
            Dim CALCULATION_3 As Decimal = 0
            Dim TOTAL_CALCULATION As Decimal = 0

            Me.BgwClientRun.ReportProgress(10, "Calculate GA_n Value for " & rd)
            Me.QueryText = "Select * from [UNEXPECTED_LOSS]  Where [RiskDate]='" & rdsql & "' and [LGD]<>0"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                Dim IDNR As Double = dt.Rows.Item(i).Item("ID")
                s_i = dt.Rows.Item(i).Item("s_i")
                C_i = dt.Rows.Item(i).Item("C_i")
                K_i = dt.Rows.Item(i).Item("K_i")
                R_i = dt.Rows.Item(i).Item("R_i")
                LGD_i = dt.Rows.Item(i).Item("LGD")
                VLGD_i = dt.Rows.Item(i).Item("VLGD_i")
                Dim DELTA_VALUE_R As Decimal = Math.Round(DELTA_VALUE, 9)

                Dim PowerS_i As Decimal = Math.Round(s_i ^ 2, 12)
                Dim Calculation_A As Decimal = Math.Round(DELTA_VALUE_R * C_i * (K_i + R_i), 12)
                Dim Calculation_B As Decimal = Math.Round(DELTA_VALUE_R * (K_i + R_i) ^ 2, 12)
                Dim PowerVLGD As Decimal = VLGD_i ^ 2
                Dim PowerLGD As Decimal = LGD_i ^ 2
                Dim Calculation_C As Decimal = Math.Round(PowerVLGD / PowerLGD, 12)
                Dim Calculation_D As Decimal = Calculation_A + Calculation_B * Calculation_C

                CALCULATION_1 = Math.Round(Calculation_D, 12)
                CALCULATION_2 = Math.Round(K_i * (C_i + 2 * (K_i + R_i) * Calculation_C), 12)
                CALCULATION_3 = CALCULATION_1 - CALCULATION_2

                TOTAL_CALCULATION = Math.Round(PowerS_i * CALCULATION_3, 12)

                cmd.CommandText = "UPDATE [UNEXPECTED_LOSS] SET [GA_n]=" & Str(TOTAL_CALCULATION) & " where [ID]=" & IDNR & ""
                cmd.ExecuteNonQuery()

            Next
            Me.BgwClientRun.ReportProgress(10, "Calculate and Insert Sum GA_rel Value for " & rd)
            cmd.CommandText = "UPDATE [UNEXPECTED_LOSS_DATE] SET [SumGA_rel]=(Select Round(Sum([GA_n])/(Select 2*[K_Value] from [UNEXPECTED_LOSS_DATE] where [RiskDate]='" & rdsql & "'),10) from [UNEXPECTED_LOSS] where [RiskDate]='" & rdsql & "') where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            Me.BgwClientRun.ReportProgress(10, "Calculate and Insert Sum GA_Total Value for " & rd)
            cmd.CommandText = "Select Sum([FinalEadTotalSum]) from [UNEXPECTED_LOSS] where [RiskDate]='" & rdsql & "'"
            Dim SummeFinalEADTotalSum As Double = cmd.ExecuteScalar
            cmd.CommandText = "Select [SumGA_rel] from [UNEXPECTED_LOSS_DATE] where [RiskDate]='" & rdsql & "'"
            Dim SummeGArel As Double = cmd.ExecuteScalar
            Dim SummeGA_Total As Decimal = Math.Round(SummeGArel * SummeFinalEADTotalSum, 2)
            cmd.CommandText = "UPDATE [UNEXPECTED_LOSS_DATE] SET [SumGA_Total]='" & Str(SummeGA_Total) & "' where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If

    End Sub

    Private Sub DAILY_ART13_KWG_CHINESE_BANKS_CALCULATION()
        CurrentClientProcedure = "ART.13 KWG CHINESE BANKS CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start Artikel 13 KWG for Chinesse Banks calculation")
        cmd.CommandText = "SELECT [RiskDate] FROM [MAK REPORT] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE  FROM [Daily_Art13_Kwg_ChineseBanks] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(10, "Insert only CCB Banks Guarantees (MAK REPORT) where Country of Risk is CHINA and HONG KONG - SPCODE is CCBG")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_ChineseBanks]([Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate] from [MAK REPORT] where [RiskDate]='" & rdsql & "' and [Contract Type]='CLGU' and [Country of Risk] in ('CN','HK') and [Industry(HO)]='J' and [SPCODE] in ('CCBG')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(10, "Insert Nostro Account from MAK REPORT where Client Nr. in PARAMETERS/REPORT/ARTIKEL 13 NOSTRO ACCOUNTS")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_ChineseBanks]([Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate] from [MAK REPORT] where [RiskDate]='" & rdsql & "' and [Contract Type]='NOSTRO' and [Client No] in (Select [PARAMETER2] from [PARAMETER] where [PARAMETER STATUS]='Y' and [IdABTEILUNGSPARAMETER]='ARTIKEL 13 NOSTRO ACCOUNTS')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(20, "Insert all Data from other Banks (MAK REPORT) where Country of Risk is CHINA and HONG KONG and SPCODE is not CCBG")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_ChineseBanks]([Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate] from [MAK REPORT] where [RiskDate]='" & rdsql & "' and [Country of Risk] in ('CN','HK') and [Industry(HO)]='J' and [SPCODE] not in ('CCBG')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(30, "Update ContractTypeName from ContractType Table")
            cmd.CommandText = "UPDATE A SET A.[ContractTypeName]=B.[Contract Type Name(English)] from [Daily_Art13_Kwg_ChineseBanks] A INNER JOIN [ContractType] B ON A.[Contract Type]=B.[Contract Type]"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(40, "Insert Data from FX CREDIT EQUIVALENT Calculation where Client Group is 1000")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_ChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'FX CREDIT EQUIVALENT',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [ClientGroup] in ('1000')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(40, "Insert Data from FX CREDIT EQUIVALENT Calculation where Risk Country is CHINA and HONG KONG and Contract Collateral Id not in Daily_Art13_Kwg_ChineseBanks")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_ChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'FX CREDIT EQUIVALENT',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [Counterparty_No] in (Select [ClientNo] from [CUSTOMER_INFO] where [RiskCountry] in ('CN','HK') and [INDUSTRIAL_CLASS_CN] in ('J')) and [Contract] not in (Select [Contract Collateral ID]  from [Daily_Art13_Kwg_ChineseBanks] where [RiskDate]='" & rdsql & "')"
            cmd.ExecuteNonQuery()

            Me.BgwClientRun.ReportProgress(40, "Insert Data from IRS CREDIT EQUIVALENT Calculation where Client Group is 1000")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_ChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'INTEREST RATE SWAP',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [ClientGroup] in ('1000')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(40, "Insert Data from IRS CREDIT EQUIVALENT Calculation where Risk Country is CHINA and HONG KONG and Contract Collateral Id not in Daily_Art13_Kwg_ChineseBanks")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_ChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'INTEREST RATE SWAP',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [Counterparty_No] in (Select [ClientNo] from [CUSTOMER_INFO] where [RiskCountry] in ('CN','HK') and [INDUSTRIAL_CLASS_CN] in ('J')) and [Contract] not in (Select [Contract Collateral ID]  from [Daily_Art13_Kwg_ChineseBanks] where [RiskDate]='" & rdsql & "')"
            cmd.ExecuteNonQuery()

            Me.BgwClientRun.ReportProgress(50, "Delete Data if EurEquivalent is 0")
            cmd.CommandText = "DELETE  FROM [Daily_Art13_Kwg_ChineseBanks] where [RiskDate]='" & rdsql & "' and [Euro Equivalent]=0"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(60, "Update Client Group Name")
            cmd.CommandText = "UPDATE A SET A.[ClientGroupName]=B.[ClientGroupName] from [Daily_Art13_Kwg_ChineseBanks] A INNER JOIN [CUSTOMER_RATING] B ON A.[Client Group]=B.[ClientGroup] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(70, "Update Individual Client Group (Parameter:REPORT\CCB_INDIVIDUAL_GROUP)")
            cmd.CommandText = "UPDATE A SET A.[IndividualClientGroup]=B.S, A.[IndividualNameClientGroup]=B.N from [Daily_Art13_Kwg_ChineseBanks] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as S,[PARAMETER INFO] as N from [PARAMETER] where [IdABTEILUNGSPARAMETER]='CCB_INDIVIDUAL_GROUP' and [PARAMETER STATUS] ='Y')B ON A.[Counterparty/Issuer/Collateral Provider]  like B.[PARAMETER1] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(40, "Remove from EuroEquivalent the accrued interests only for Product Type is FORFTDL")
            cmd.CommandText = "UPDATE A SET A.[Euro Equivalent]=A.[Euro Equivalent]-B.[Accrued Interest] from [Daily_Art13_Kwg_ChineseBanks] A INNER JOIN [MAK REPORT] B ON A.[Contract Collateral ID]=B.[Contract Collateral ID] where A.[RiskDate]=B.[RiskDate] and B.[RiskDate]='" & rdsql & "' and A.[Product Type] in ('FORFTDL')"
            cmd.ExecuteNonQuery()
            'Me.QueryText = "select * from [PARAMETER]  where [IdABTEILUNGSPARAMETER] in ('CCB_INDIVIDUAL_GROUP') and [PARAMETER STATUS]='Y'"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For i = 0 To dt.Rows.Count - 1
            'Dim sr As String = dt.Rows.Item(i).Item("PARAMETER1") & "%"
            'cmd.CommandText = "UPDATE[Daily_Art13_Kwg_ChineseBanks] SET [IndividualClientGroup]='" & dt.Rows.Item(i).Item("PARAMETER2") & "',[IndividualNameClientGroup]='" & dt.Rows.Item(i).Item("PARAMETER INFO") & "' where [RiskDate]='" & rdsql & "' and [Counterparty/Issuer/Collateral Provider] like '" & sr & "'"
            'cmd.ExecuteNonQuery()
            'Next
            Me.BgwClientRun.ReportProgress(80, "Set defaults in Individual Client Group")
            cmd.CommandText = "UPDATE [Daily_Art13_Kwg_ChineseBanks] SET [IndividualClientGroup]=[Client Group],[IndividualNameClientGroup]=[ClientGroupName] where [RiskDate]='" & rdsql & "' and [IndividualClientGroup] is NULL "
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(80, "Define CIC Group Members from MAK Report and FX CREDIT EQUIVALENT Table")
            cmd.CommandText = "UPDATE [Daily_Art13_Kwg_ChineseBanks] set [CIC_Group]='N' where RiskDate='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CIC_Group]='Y' from [Daily_Art13_Kwg_ChineseBanks] A INNER JOIN [MAK REPORT] B on A.[Client No]=B.[Client No] and A.RiskDate=B.RiskDate where B.LBCODE in ('CHINA INVESTMENT CO. LTD') and A.RiskDate='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CIC_Group]='Y' from [Daily_Art13_Kwg_ChineseBanks] A INNER JOIN [FX CREDIT EQUIVALENT Details] B on A.[Client No]=B.[Counterparty_No] and A.RiskDate=B.RiskDate where B.[ClientGroup] in ('1000') and A.RiskDate='" & rdsql & "'"
            cmd.ExecuteNonQuery()
        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If
        Me.BgwClientRun.ReportProgress(90, "Artikel 13 KWG for Chinesse Banks calculation finished")
    End Sub

    Private Sub DAILY_ART13_KWG_NONE_CHINESE_BANKS_CALCULATION()
        CurrentClientProcedure = "ART.13 KWG NONE CHINESE BANKS CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start Artikel 13 KWG for Chinesse Banks calculation")
        cmd.CommandText = "SELECT [RiskDate] FROM [MAK REPORT] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE  FROM [Daily_Art13_Kwg_NoneChineseBanks] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(10, "Insert Banks Guarantees (MAK REPORT) where Country of Risk not CHINA and HONG KONG - SPCODE is not CCBG")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_NoneChineseBanks]([Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate] from [MAK REPORT] where [RiskDate]='" & rdsql & "' and [Contract Type]='CLGU' and [Country of Risk] not in ('CN','HK') and [Industry(HO)]='J' and [SPCODE] not in ('CCBG')"
            cmd.ExecuteNonQuery()
            'Me.BgwClientRun.ReportProgress(10, "Insert Nostro Account from MAK REPORT where Client Nr. not in PARAMETERS/REPORT/ARTIKEL 13 NOSTRO ACCOUNTS")
            'cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_NoneChineseBanks]([Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate] from [MAK REPORT] where [RiskDate]='" & rdsql & "' and [Contract Type]='NOSTRO' and [Client No] not in (Select [ClientNo] from [CUSTOMER_INFO] where [CCB_Group]='Y')"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(20, "Insert all Data from other Banks (MAK REPORT) where Country of Risk is not CHINA and HONG KONG and SPCODE is not CCBG")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_NoneChineseBanks]([Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [Contract Type],[Product Type],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate] from [MAK REPORT] where [RiskDate]='" & rdsql & "' and [Country of Risk] not in ('CN','HK') and [Industry(HO)]='J' and [SPCODE] not in ('CCBG')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(30, "Update ContractTypeName from ContractType Table")
            cmd.CommandText = "UPDATE A SET A.[ContractTypeName]=B.[Contract Type Name(English)] from [Daily_Art13_Kwg_NoneChineseBanks] A INNER JOIN [ContractType] B ON A.[Contract Type]=B.[Contract Type]"
            cmd.ExecuteNonQuery()
            'Me.BgwClientRun.ReportProgress(40, "Insert Data from FX CREDIT EQUIVALENT Calculation where Client Group is not 1000")
            'cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_NoneChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'FX CREDIT EQUIVALENT',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [ClientGroup] not in ('1000')"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(40, "Insert Data from FX CREDIT EQUIVALENT Calculation where Risk Country is not CHINA and HONG KONG and Contract Collateral Id not in Daily_Art13_Kwg_NoneChineseBanks")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_NoneChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'FX CREDIT EQUIVALENT',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [FX CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [Counterparty_No] not in (Select [ClientNo] from [CUSTOMER_INFO] where [RiskCountry] in ('CN','HK') and [INDUSTRIAL_CLASS_CN] in ('J')) and [Contract] not in (Select [Contract Collateral ID]  from [Daily_Art13_Kwg_NoneChineseBanks] where [RiskDate]='" & rdsql & "')"
            cmd.ExecuteNonQuery()

            'Me.BgwClientRun.ReportProgress(40, "Insert Data from IRS CREDIT EQUIVALENT Calculation where Client Group is not 1000")
            'cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_NoneChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'INTEREST RATE SWAP',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [ClientGroup] not in ('1000')"
            'cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(40, "Insert Data from IRS CREDIT EQUIVALENT Calculation where Risk Country is not CHINA and HONG KONG and Contract Collateral Id not in Daily_Art13_Kwg_NoneChineseBanks")
            cmd.CommandText = "INSERT INTO [Daily_Art13_Kwg_NoneChineseBanks]([Contract Type],[Product Type],[ContractTypeName],[Counterparty/Issuer/Collateral Provider],[Client No],[Client Group],[Contract Collateral ID],[Org Ccy],[Credit Exposure],[Euro Equivalent],[RiskDate])Select [ContractType],[ProductType],'INTEREST RATE SWAP',[Counterparty_Name],[Counterparty_No],[ClientGroup],[Contract],[OrgCcy],[OrgCcyAmount],[EURequCalculated],[RiskDate] from [IRS CREDIT EQUIVALENT Details] where [RiskDate]='" & rdsql & "' and [Counterparty_No] not in (Select [ClientNo] from [CUSTOMER_INFO] where [RiskCountry] in ('CN','HK') and [INDUSTRIAL_CLASS_CN] in ('J')) and [Contract] not in (Select [Contract Collateral ID]  from [Daily_Art13_Kwg_NoneChineseBanks] where [RiskDate]='" & rdsql & "')"
            cmd.ExecuteNonQuery()

            
            Me.BgwClientRun.ReportProgress(50, "Delete Data if EurEquivalent is 0")
            cmd.CommandText = "DELETE  FROM [Daily_Art13_Kwg_NoneChineseBanks] where [RiskDate]='" & rdsql & "' and [Euro Equivalent]=0"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(50, "Delete Data if Customer is not FINANCIAL INSTITUTION")
            cmd.CommandText = "DELETE  FROM [Daily_Art13_Kwg_NoneChineseBanks] where [RiskDate]='" & rdsql & "' and [Client No] not in (Select [ClientNo] from [CUSTOMER_INFO] where [ClientType] in ('F - FINANCIAL'))"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(50, "Delete Data if Client is Central Bank (DEUTSCHE BUNDESBANK)")
            cmd.CommandText = "DELETE  FROM [Daily_Art13_Kwg_NoneChineseBanks] where [RiskDate]='" & rdsql & "' and [Client No] in ('67890201')"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(60, "Update Client Group Name")
            cmd.CommandText = "UPDATE A SET A.[ClientGroupName]=B.[ClientGroupName] from [Daily_Art13_Kwg_NoneChineseBanks] A INNER JOIN [CUSTOMER_RATING] B ON A.[Client Group]=B.[ClientGroup] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(70, "Update Individual Client Group (Parameter:REPORT\CCB_INDIVIDUAL_GROUP)")
            cmd.CommandText = "UPDATE A SET A.[IndividualClientGroup]=B.S, A.[IndividualNameClientGroup]=B.N from [Daily_Art13_Kwg_NoneChineseBanks] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as S,[PARAMETER INFO] as N from [PARAMETER] where [IdABTEILUNGSPARAMETER]='CCB_INDIVIDUAL_GROUP' and [PARAMETER STATUS] ='Y')B ON A.[Counterparty/Issuer/Collateral Provider]  like B.[PARAMETER1] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(40, "Remove from EuroEquivalent the accrued interests only for Product Type is FORFTDL")
            cmd.CommandText = "UPDATE A SET A.[Euro Equivalent]=A.[Euro Equivalent]-B.[Accrued Interest] from [Daily_Art13_Kwg_NoneChineseBanks] A INNER JOIN [MAK REPORT] B ON A.[Contract Collateral ID]=B.[Contract Collateral ID] where A.[RiskDate]=B.[RiskDate] and B.[RiskDate]='" & rdsql & "' and A.[Product Type] in ('FORFTDL')"
            cmd.ExecuteNonQuery()
            'Me.QueryText = "select * from [PARAMETER]  where [IdABTEILUNGSPARAMETER] in ('CCB_INDIVIDUAL_GROUP') and [PARAMETER STATUS]='Y'"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For i = 0 To dt.Rows.Count - 1
            'Dim sr As String = dt.Rows.Item(i).Item("PARAMETER1") & "%"
            'cmd.CommandText = "UPDATE[Daily_Art13_Kwg_ChineseBanks] SET [IndividualClientGroup]='" & dt.Rows.Item(i).Item("PARAMETER2") & "',[IndividualNameClientGroup]='" & dt.Rows.Item(i).Item("PARAMETER INFO") & "' where [RiskDate]='" & rdsql & "' and [Counterparty/Issuer/Collateral Provider] like '" & sr & "'"
            'cmd.ExecuteNonQuery()
            'Next
            Me.BgwClientRun.ReportProgress(80, "Set defaults in Individual Client Group")
            cmd.CommandText = "UPDATE [Daily_Art13_Kwg_NoneChineseBanks] SET [IndividualClientGroup]=[Client Group],[IndividualNameClientGroup]=[ClientGroupName] where [RiskDate]='" & rdsql & "' and [IndividualClientGroup] is NULL "
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(80, "Define CIC Group Members from MAK Report and FX CREDIT EQUIVALENT Table")
            cmd.CommandText = "UPDATE [Daily_Art13_Kwg_NoneChineseBanks] set [CIC_Group]='N' where RiskDate='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CIC_Group]='Y' from [Daily_Art13_Kwg_NoneChineseBanks] A INNER JOIN [MAK REPORT] B on A.[Client No]=B.[Client No] and A.RiskDate=B.RiskDate where B.LBCODE in ('CHINA INVESTMENT CO. LTD') and A.RiskDate='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE A SET A.[CIC_Group]='Y' from [Daily_Art13_Kwg_NoneChineseBanks] A INNER JOIN [FX CREDIT EQUIVALENT Details] B on A.[Client No]=B.[Counterparty_No] and A.RiskDate=B.RiskDate where B.[ClientGroup] in ('1000') and A.RiskDate='" & rdsql & "'"
            cmd.ExecuteNonQuery()
        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If
        Me.BgwClientRun.ReportProgress(90, "Artikel 13 KWG for None Chinesse Banks calculation finished")
    End Sub

    Private Sub BUSINESS_TYPE_CREDIT_PORTFOLIO_CALCULATION()
        CurrentClientProcedure = "BUSINESS TYPES-CREDIT PORTFOLIO CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start Business Types-Credit Portfolio calculation")
        cmd.CommandText = "SELECT [RiskDate] FROM [CREDIT RISK] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE  FROM [BusinessTypesCreditPortfolioDetails] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE FROM [BusinessTypesCreditPortfolioLive] where [DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(2, "Insert SQL Commands in BusinessTypesCreditPortfolioLive from SQL PARAMETER:BUSINESS TYPES - CREDIT PORTFOLIO")
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'BUSINESS TYPES - Einfügen der SQL Befehle am neuen Tag
            'Neuanlage in BusinessTypesCreditPortfolioLive
            'cmd.CommandText = "INSERT INTO [BusinessTypesCreditPortfolioLive]([BusinesType],[SQLBusinessTypeDetails],[DateMakCrTotals])Select [BusinesType],[SQLBusinessTypeDetails],'" & rdsql & "' FROM [BusinessTypesCreditPortfolioTemp]"
            'cmd.ExecuteNonQuery()
            cmd.CommandText = "INSERT INTO [BusinessTypesCreditPortfolioLive]([BusinesType],[SQLBusinessTypeDetails],[DateMakCrTotals])Select [SQL_Name_1],[SQL_Command_1],'" & rdsql & "' FROM [SQL_PARAMETER_DETAILS] where [Id_SQL_Parameters]='BUSINESS TYPES - CREDIT PORTFOLIO'"
            cmd.ExecuteNonQuery()
            'Ersetzen der <Risk Date> mit gültigen Risk Datum
            cmd.CommandText = "UPDATE [BusinessTypesCreditPortfolioLive] SET [SQLBusinessTypeDetails]= REPLACE([SQLBusinessTypeDetails],'<RiskDate>','" & rdsql & "') where [DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Anwenden der SQL Befehle
            Me.BgwClientRun.ReportProgress(3, "Execute SQL Commands in Business Types Credit Portfolio")
            Me.QueryText = "select * from [BusinessTypesCreditPortfolioLive] where [DateMakCrTotals]='" & rdsql & "'"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                If IsDBNull(dt.Rows.Item(i).Item("SQLBusinessTypeDetails")) = False And dt.Rows.Item(i).Item("BusinesType") <> "" Then
                    cmd.CommandText = dt.Rows.Item(i).Item("SQLBusinessTypeDetails")
                    cmd.ExecuteNonQuery()
                End If
            Next
            'Execute SQL Commands for Sum
            Me.BgwClientRun.ReportProgress(3, "Update Summary in AmountBusinessType, NetCreditRiskAmountER1 and NetCreditRiskAmountER2")
            cmd.CommandText = "UPDATE A SET A.[AmountBusinessType]=B.ABT, A.[NetCreditRiskAmountER1]=B.NCR1, A.[NetCreditRiskAmountER2]=B.NCR2 from [BusinessTypesCreditPortfolioLive] A INNER JOIN  (SELECT [IdBusinessTypeLive],Sum([Credit Outstanding (EUR Equ)]) as ABT,Sum([NetCredit Risk Amount(EUR Equ)]) as NCR1, Sum([NetCreditRiskAmountEUREquER45]) as NCR2 FROM [BusinessTypesCreditPortfolioDetails] GROUP BY [IdBusinessTypeLive])B on A.[ID]=B.[IdBusinessTypeLive]  WHERE A.[DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Execute SQL Commands for Clients Count
            Me.BgwClientRun.ReportProgress(3, "Update Clients Count Field - Distinct Client Nr for each Business Type")
            cmd.CommandText = "UPDATE A SET A.[ClientsCount]=B.ClientsCount from [BusinessTypesCreditPortfolioLive] A INNER JOIN  (SELECT [IdBusinessTypeLive],Count(distinct [Client No]) as ClientsCount FROM [BusinessTypesCreditPortfolioDetails] GROUP BY [IdBusinessTypeLive],[BusinessTypeName])B on A.[ID]=B.[IdBusinessTypeLive] WHERE A.[DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(10, "Update Client Group and Glient Group Name in BusinessTypesCreditPortfolioDetails from CUSTOMER RATING")
            cmd.CommandText = "UPDATE A SET A.[ClientGroup]=B.[ClientGroup], A.[ClientGroupName]=B.[ClientGroupName] from [BusinessTypesCreditPortfolioDetails] A INNER JOIN [CUSTOMER_RATING] B ON A.[Client No]=B.[ClientNo] where A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Me.BgwClientRun.ReportProgress(3, "Execute Summary SQL Commands in Business Types Credit Portfolio")
            'Me.QueryText = "select * from [BusinessTypesCreditPortfolioLive] where [DateMakCrTotals]='" & rdsql & "'"
            'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            'dt = New System.Data.DataTable()
            'da.Fill(dt)
            'For i = 0 To dt.Rows.Count - 1
            'If dt.Rows.Item(i).Item("BusinesType") <> "" Then
            'Sum Credit Risk Amount
            'cmd.CommandText = "Select sum([Credit Outstanding (EUR Equ)]) from [BusinessTypesCreditPortfolioDetails] where [IdBusinessTypeLive]='" & dt.Rows.Item(i).Item("ID") & "'"
            'Dim BusinessTypeAmount As Double = 0
            'If cmd.ExecuteScalar IsNot DBNull.Value Then
            'BusinessTypeAmount = cmd.ExecuteScalar * 1
            'Else
            'BusinessTypeAmount = 0
            'End If
            'cmd.CommandText = "UPDATE [BusinessTypesCreditPortfolioLive] SET [AmountBusinessType]='" & Str(BusinessTypeAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
            'cmd.ExecuteNonQuery()
            'Sume Net Credit Risk Amount ER1
            'cmd.CommandText = "Select sum([NetCredit Risk Amount(EUR Equ)]) from [BusinessTypesCreditPortfolioDetails] where [IdBusinessTypeLive]='" & dt.Rows.Item(i).Item("ID") & "'"
            'Dim NetCreditRiskAmountER1 As Double = 0
            'If cmd.ExecuteScalar IsNot DBNull.Value Then
            'NetCreditRiskAmountER1 = cmd.ExecuteScalar * 1
            'Else
            'NetCreditRiskAmountER1 = 0
            'End If
            'cmd.CommandText = "UPDATE [BusinessTypesCreditPortfolioLive] SET [NetCreditRiskAmountER1]='" & Str(NetCreditRiskAmountER1) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
            'cmd.ExecuteNonQuery()
            'Sume Net Credit Risk Amount ER2
            'cmd.CommandText = "Select sum([NetCreditRiskAmountEUREquER45]) from [BusinessTypesCreditPortfolioDetails] where [IdBusinessTypeLive]='" & dt.Rows.Item(i).Item("ID") & "'"
            'Dim NetCreditRiskAmountER2 As Double = 0
            'If cmd.ExecuteScalar IsNot DBNull.Value Then
            'NetCreditRiskAmountER2 = cmd.ExecuteScalar * 1
            'Else
            'NetCreditRiskAmountER2 = 0
            'End If
            'cmd.CommandText = "UPDATE [BusinessTypesCreditPortfolioLive] SET [NetCreditRiskAmountER2]='" & Str(NetCreditRiskAmountER2) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
            'cmd.ExecuteNonQuery()
            'End If
            'Next
            Me.BgwClientRun.ReportProgress(3, "Update Expected Loss Value in UNEXPECTED_LOSS_DATE Table")
            cmd.CommandText = "UPDATE A SET A.[SumEL]=B.S from [UNEXPECTED_LOSS_DATE] A INNER JOIN  (SELECT [DateMakCrTotals],Sum([NetCreditRiskAmountER2]) as S FROM [BusinessTypesCreditPortfolioLive] GROUP BY [DateMakCrTotals])B on A.[RiskDate]=B.[DateMakCrTotals]  WHERE A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Set Business Type in CREDIT RISK and MAK REPORT to NULL")
            cmd.CommandText = "Update [CREDIT RISK] SET [BusinessType]=NULL where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "Update [MAK REPORT] SET [BusinessType]=NULL where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Update Business Type in CREDIT RISK and MAK REPORT based on BusinessTypesCreditPortfolioDetails")
            cmd.CommandText = "Update A SET A.[BusinessType]=B.[BusinessTypeName] from [CREDIT RISK] A INNER JOIN [BusinessTypesCreditPortfolioDetails] B ON A.[RiskDate]=B.[RiskDate] where A.[Contract Collateral ID]=B.[Contract Collateral ID] and A.[Client No]=B.[Client No] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "Update A SET A.[BusinessType]=B.[BusinessTypeName] from [MAK REPORT] A INNER JOIN [BusinessTypesCreditPortfolioDetails] B ON A.[RiskDate]=B.[RiskDate] where A.[Contract Collateral ID]=B.[Contract Collateral ID] and A.[Client No]=B.[Client No] and A.[RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If
        Me.BgwClientRun.ReportProgress(5, "Business Types-Credit Portfolio calculation finished")
    End Sub

    Private Sub BUSINESS_TYPE_LIABILITIES_CALCULATION()
        CurrentClientProcedure = "BUSINESS TYPES-LIABILITIES CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start Business Types-Liabilities calculation")
        cmd.CommandText = "SELECT [RiskDate] FROM [CREDIT RISK] where [RiskDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE  FROM [BusinessTypesLiabilitiesDetails] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE FROM [BusinessTypesLiabilitiesLive] where [DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(2, "Insert SQL Commands in BusinessTypesLiabilitiesLive from SQL PARAMETER:BUSINESS TYPES - LIABILITIES")
            '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'BUSINESS TYPES - Einfügen der SQL Befehle am neuen Tag
            'Neuanlage in BusinessTypesCreditPortfolioLive
            'cmd.CommandText = "INSERT INTO [BusinessTypesCreditPortfolioLive]([BusinesType],[SQLBusinessTypeDetails],[DateMakCrTotals])Select [BusinesType],[SQLBusinessTypeDetails],'" & rdsql & "' FROM [BusinessTypesCreditPortfolioTemp]"
            'cmd.ExecuteNonQuery()
            If rd <= DateSerial(2015, 12, 15) Then 'Vostro accounts not in Daily Balance Sheet Details
                cmd.CommandText = "INSERT INTO [BusinessTypesLiabilitiesLive]([BusinesType],[SQLBusinessType],[DateMakCrTotals])Select [SQL_Name_1],[SQL_Command_1],'" & rdsql & "' FROM [SQL_PARAMETER_DETAILS] where [Id_SQL_Parameters]='BUSINESS TYPES - LIABILITIES' order by [SQL_Float_1] asc"
                cmd.ExecuteNonQuery()
            ElseIf rd > DateSerial(2015, 12, 15) Then 'Vostro accounts in Daily Balance Sheet Details
                cmd.CommandText = "INSERT INTO [BusinessTypesLiabilitiesLive]([BusinesType],[SQLBusinessType],[DateMakCrTotals])Select [SQL_Name_1],[SQL_Command_2],'" & rdsql & "' FROM [SQL_PARAMETER_DETAILS] where [Id_SQL_Parameters]='BUSINESS TYPES - LIABILITIES' order by [SQL_Float_1] asc"
                cmd.ExecuteNonQuery()
            End If

            'Ersetzen der <Risk Date> mit gültigen Risk Datum
            cmd.CommandText = "UPDATE [BusinessTypesLiabilitiesLive] SET [SQLBusinessType]= REPLACE([SQLBusinessType],'<RiskDate>','" & rdsql & "') where [DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Anwenden der SQL Befehle
            Me.BgwClientRun.ReportProgress(3, "Execute SQL Commands in Business Types Liabilities")
            Me.QueryText = "select * from [BusinessTypesLiabilitiesLive] where [DateMakCrTotals]='" & rdsql & "'"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                If IsDBNull(dt.Rows.Item(i).Item("SQLBusinessType")) = False And dt.Rows.Item(i).Item("BusinesType") <> "" Then
                    Me.BgwClientRun.ReportProgress(3, "Execute SQL Commands in Business Type " & dt.Rows.Item(i).Item("BusinesType").ToString.Replace("'", ""))
                    cmd.CommandText = dt.Rows.Item(i).Item("SQLBusinessType")
                    cmd.ExecuteNonQuery()
                End If
            Next
            'Delete Duplicates
            Me.BgwClientRun.ReportProgress(3, "Delete Duplicates")
            cmd.CommandText = "DELETE FROM [BusinessTypesLiabilitiesDetails] where [RiskDate]='" & rdsql & "' and [ID] not in (Select Min([ID]) from [BusinessTypesLiabilitiesDetails] where [RiskDate]='" & rdsql & "' group by [Contract Collateral ID])"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Set Contract Type SUSPENCE ACCOUNT if Product Type is DDPSUP01")
            cmd.CommandText = "UPDATE [BusinessTypesLiabilitiesDetails] set [Contract Type]='SUSPENCE ACCOUNT' where [Product Type] in ('DDPSUP01') and [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Execute SQL Commands for Clients Count
            Me.BgwClientRun.ReportProgress(3, "Update Clients Count Field - Distinct Client Nr for each Business Type")
            cmd.CommandText = "UPDATE A SET A.[ClientsCount]=B.ClientsCount from [BusinessTypesLiabilitiesLive] A INNER JOIN  (SELECT [IdBusinessTypeLiabilitiesLive],Count(distinct [Client No]) as ClientsCount FROM [BusinessTypesLiabilitiesDetails] GROUP BY [IdBusinessTypeLiabilitiesLive],[BusinessTypeName])B on A.[ID]=B.[IdBusinessTypeLiabilitiesLive] WHERE A.[DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Update OrgTotalAmount")
            cmd.CommandText = "Update 	[BusinessTypesLiabilitiesDetails] set [OrgTotalAmount]=[OrgPrincipalAmount]+[OrgInterestAmount] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Update Exchange Rates")
            cmd.CommandText = "Update A set A.[ExchangeRate]=B.[MIDDLE RATE] from [BusinessTypesLiabilitiesDetails] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[OrgCcy]=B.[CURRENCY CODE] where A.[RiskDate]='" & rdsql & "' and A.[RiskDate]=B.[EXCHANGE RATE DATE]"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Update all amounts in EURO")
            cmd.CommandText = "Update [BusinessTypesLiabilitiesDetails] set [PrincipalAmountEUR]=Round([OrgPrincipalAmount]/[ExchangeRate],2),[InterestAmountEUR]=Round([OrgInterestAmount]/[ExchangeRate],2) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Update all TOTALS")
            cmd.CommandText = "Update [BusinessTypesLiabilitiesDetails] set [TotalAmountEUR]=[PrincipalAmountEUR]+[InterestAmountEUR] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Execute SQL Commands for Sum
            Me.BgwClientRun.ReportProgress(3, "Update Summary in AmountBusinessType, Interests and TOTALS")
            cmd.CommandText = "UPDATE A SET A.[AmountBusinessTypePrincipalEUR]=B.ABT, A.[AmountBusinessTypeInterestEUR]=B.NCR1, A.[AmountBusinessTypeTOTAL_EUR]=B.NCR2 from [BusinessTypesLiabilitiesLive] A INNER JOIN  (SELECT [IdBusinessTypeLiabilitiesLive],Sum([PrincipalAmountEUR]) as ABT,Sum([InterestAmountEUR]) as NCR1, Sum([TotalAmountEUR]) as NCR2 FROM [BusinessTypesLiabilitiesDetails] GROUP BY [IdBusinessTypeLiabilitiesLive])B on A.[ID]=B.[IdBusinessTypeLiabilitiesLive]  WHERE A.[DateMakCrTotals]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(3, "Update Contract Collateral ID -RTRIM-LTRIM-Delete Blancks")
            cmd.CommandText = "UPDATE [BusinessTypesLiabilitiesDetails] set [Contract Collateral ID]=RTRIM(LTRIM([Contract Collateral ID])) where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If
        Me.BgwClientRun.ReportProgress(5, "Business Types-Credit Portfolio calculation finished")
    End Sub

    Private Sub STRESS_TESTS_CALCULATION()
        CurrentClientProcedure = "STRESS TEST CALCULATION"
        Me.BgwClientRun.ReportProgress(1, "Start Stress Test calculation")
        cmd.CommandText = "DELETE from [StressTestsLiveDetails] where [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "DELETE  FROM [StressTestsLive] where [DateMakCrTotals]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Insert new Data to StressTestsLive Table
        Me.BgwClientRun.ReportProgress(2, "Insert SQL Commands  in StressTestsLive Table")
        'Einfügen der SQL Befehle für STRESS TESTS
        'Neuanlage in StressTestsLive
        cmd.CommandText = "INSERT INTO [StressTestsLive]([BusinesType],[PDunderStress],[SQLBusinessTypeDefinition],[SQLBusinessTypeAmount])Select [BusinesType],[PDunderStress],[SQLBusinessTypeDefinition],[SQLBusinessTypeAmount] FROM [StressTestsTemp]"
        cmd.ExecuteNonQuery()
        'Einfügen des RiskDatums
        cmd.CommandText = "UPDATE [StressTestsLive] SET[DateMakCrTotals]='" & rdsql & "' where [DateMakCrTotals] is NULL"
        cmd.ExecuteNonQuery()
        'Ersetzen der <Risk Date> mit gültigen Risk Datum
        cmd.CommandText = "UPDATE [StressTestsLive] SET [SQLBusinessTypeDefinition]= REPLACE([SQLBusinessTypeDefinition],'<RiskDate>','" & rdsql & "'),[SQLBusinessTypeAmount]=REPLACE([SQLBusinessTypeAmount],'<RiskDate>','" & rdsql & "') where [DateMakCrTotals]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Ausführen SQL Befehle für STRESS TESTS-SQL Business Type Definition-Fill StressTestDetails
        Me.BgwClientRun.ReportProgress(3, "Execute SQL Commands  in StressTestsLive Table (Business Type Definition)")
        Me.QueryText = "select * from [StressTestsLive] where [DateMakCrTotals]='" & rdsql & "'"
        da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        dt = New System.Data.DataTable()
        da.Fill(dt)
        For i = 0 To dt.Rows.Count - 1
            If IsDBNull(dt.Rows.Item(i).Item("SQLBusinessTypeDefinition")) = False And dt.Rows.Item(i).Item("BusinesType") <> "" Then
                cmd.CommandText = dt.Rows.Item(i).Item("SQLBusinessTypeDefinition")
                cmd.ExecuteScalar()
            End If
        Next
        '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'Set StressNewAmount=EuroEquivalent in StressTestsLive Details
        Me.BgwClientRun.ReportProgress(4, "Set StressNewAmount=EuroEquivalent in StressTestsLive Details Table")
        cmd.CommandText = "UPDATE [StressTestsLiveDetails]  SET [StressNewAmount]=[Euro Equivalent] Where [RiskDate]='" & rdsql & "'"
        cmd.ExecuteScalar()
        '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'INTERNAL GUARANTESS DEFINIEREN
        Me.BgwClientRun.ReportProgress(5, "Define INTERNAL GUARANTEES in StressTestsLiveDetails Table and Set StressNewAmount=0")
        Me.QueryText = "select * from [INTERNAL GUARANTEES]  where [Valid]='Y'"
        da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        dt = New System.Data.DataTable()
        da.Fill(dt)
        For i = 0 To dt.Rows.Count - 1
            cmd.CommandText = "UPDATE [StressTestsLiveDetails] SET [InternalCode]='INTERNAL GUARANTEE',[StressNewAmount]=0 Where [RiskDate]='" & rdsql & "'  and [Contract Collateral ID]='" & dt.Rows.Item(i).Item("ContractCollateralID") & "'"
            cmd.ExecuteScalar()
        Next
        '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        'CASH PLEDGE DEFINIEREN-SQL
        Me.BgwClientRun.ReportProgress(6, "Define Cashpledge in StressTestsLiveDetails Table")
        Me.QueryText = "select * from [CREDIT RISK CASH PLEDGE]  where [Valid]='Y'"
        da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        dt = New System.Data.DataTable()
        da.Fill(dt)
        For i = 0 To dt.Rows.Count - 1
            Dim CashPledgeAmount As Double = dt.Rows.Item(i).Item("CashpledgeAmount")
            cmd.CommandText = "UPDATE [StressTestsLiveDetails] SET [InternalCode]='CASHCOVER' Where [RiskDate]='" & rdsql & "'  and [Client No]='" & dt.Rows.Item(i).Item("CustomerNr") & "'"
            cmd.ExecuteScalar()
            Me.QueryText = "select * from [StressTestsLiveDetails]  Where [RiskDate]='" & rdsql & "' and [InternalCode]='CASHCOVER' and [Client No]='" & dt.Rows.Item(i).Item("CustomerNr") & "'"
            da1 = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt1 = New System.Data.DataTable()
            da1.Fill(dt1)
            For y = 0 To dt1.Rows.Count - 1
                Dim EuroEquivalent As Double = dt1.Rows.Item(y).Item("Euro Equivalent")
                If EuroEquivalent < CashPledgeAmount Then
                    cmd.CommandText = "UPDATE [StressTestsLiveDetails] SET [StressNewAmount]=0 Where [ID]='" & dt1.Rows.Item(y).Item("ID") & "'"
                    cmd.ExecuteScalar()
                    CashPledgeAmount = CashPledgeAmount - EuroEquivalent
                ElseIf EuroEquivalent > CashPledgeAmount Then
                    cmd.CommandText = "UPDATE [StressTestsLiveDetails] SET [StressNewAmount]='" & Str(EuroEquivalent - CashPledgeAmount) & "' Where [ID]='" & dt1.Rows.Item(y).Item("ID") & "'"
                    cmd.ExecuteScalar()
                    CashPledgeAmount = CashPledgeAmount - EuroEquivalent
                ElseIf EuroEquivalent = CashPledgeAmount Then
                    cmd.CommandText = "UPDATE [StressTestsLiveDetails] SET [StressNewAmount]=0 Where [ID]='" & dt1.Rows.Item(y).Item("ID") & "'"
                    cmd.ExecuteScalar()
                    CashPledgeAmount = 0
                End If
            Next
        Next
        '*************************************************************************************************
        'Update PDAmount
        Me.BgwClientRun.ReportProgress(7, "Calculate PDAmount in StressTestsLiveDetails Table")
        cmd.CommandText = "UPDATE [StressTestsLiveDetails] SET [PDAmount]=[StressNewAmount]*[StressPercent] Where [RiskDate]='" & rdsql & "'"
        cmd.ExecuteScalar()
        '*************************************************************************************************
        'Ausführen SQL Befehle für STRESS TESTS-SQL Business Type Amount
        Me.BgwClientRun.ReportProgress(8, "Execute SQL Commands for Sums in StressTestsLive Table")
        Me.QueryText = "select * from [StressTestsLive] where [DateMakCrTotals]='" & rdsql & "'"
        da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        dt = New System.Data.DataTable()
        da.Fill(dt)
        For i = 0 To dt.Rows.Count - 1
            If IsDBNull(dt.Rows.Item(i).Item("SQLBusinessTypeAmount")) = False And dt.Rows.Item(i).Item("BusinesType") <> "" Then
                cmd.CommandText = dt.Rows.Item(i).Item("SQLBusinessTypeAmount")
                Dim BusinessTypeAmount As Double = 0
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    BusinessTypeAmount = cmd.ExecuteScalar * 1
                Else
                    BusinessTypeAmount = 0
                End If
                cmd.CommandText = "UPDATE [StressTestsLive] SET [AmountBusinessType]='" & Str(BusinessTypeAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                cmd.ExecuteNonQuery()
            End If
        Next
        Me.BgwClientRun.ReportProgress(9, "Stress Tests execution finished")
        '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    End Sub 'NOT ACTIVE

    Private Sub RLDC_UPDATE()
        CurrentClientProcedure = "UPDATE RLDC"
        'ÜBERNAHME IN RISK LIMIT DAILY CONTROL
        Me.BgwClientRun.ReportProgress(50, "Start Updating RISK LIMIT DAILY CONTROL with the calculated values for " & rd)
        cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
        If cmd.ExecuteScalar IsNot DBNull.Value Then
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'INTEREST RATE RISK
            Dim irr As Double = 0
            Dim isr As Double = 0
            Dim da As New SqlDataAdapter
            Dim dt As New System.Data.DataTable
            Me.QueryText = "SELECT [Position/Capital],[SumAM2] FROM [RATERISK DATE] WHERE [RateRiskDate]='" & rdsql & "'"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            irr = dt.Rows.Item(0).Item("Position/Capital")
            isr = dt.Rows.Item(0).Item("SumAM2") 'wird nicht mehr in RISK LIMIT DAILY CONTROL Importiert
            'Übernahme der Summe AM3 (50%)
            'Dim SAM3 As Double = 0
            'cmd.CommandText = "SELECT ABS(Sum([AM3])) from [RATERISK TOTALS] where [RISK DATE]='" & rdsql & "'"
            'SAM3 = cmd.ExecuteScalar
            'Übernahme der Summe von Min. +/- 50 bps, HUMP,TWIST1 und TWIST2
            Dim SAM3 As Double = 0
            Me.BgwClientRun.ReportProgress(30, "Select Sum as Interest Rate Risk Amount from Minimum +/- 50 bps, HUMP,TWIST1,TWIST2 Grouped by Currency from RATERISK TOTALS")
            cmd.CommandText = "Select ABS(Sum(z.A)) from (SELECT [CURRENCY],MIN(x.a)A FROM (SELECT [CURRENCY],Sum([AM3]) a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' GROUP BY [CURRENCY] UNION SELECT [CURRENCY],Sum([AM3])*-1 a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' GROUP BY [CURRENCY] UNION SELECT [CURRENCY],sum([AMHUMP]) a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' GROUP BY [CURRENCY] UNION SELECT [CURRENCY],Sum([AM_TWIST1]) a from [RATERISK TOTALS] where [IdRateRiskDate]='" & rdsql & "' GROUP BY [CURRENCY] UNION SELECT [CURRENCY],Sum([AM_TWIST2]) a from [RATERISK TOTALS] where[IdRateRiskDate] ='" & rdsql & "' GROUP BY [CURRENCY]) x GROUP BY [CURRENCY])z"
            SAM3 = cmd.ExecuteScalar
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            'OBLIGO LIABILITY SURPLUS CALCULATION
            Me.BgwClientRun.ReportProgress(8, "Recalculating OBLIGO LIABILITY SURPLUS-Get Sum Principal+Interest (EUR) where Product Name is REFINANCE SOLD FUNDED and Client No in 67820185,67820386 from TIME DEP OUTST CLIENT DEALS ")
            If rd <= DateSerial(2013, 12, 31) Then
                cmd.CommandText = "SELECT Sum([PrincipalPlusInterestEUR]) from [TIME DEP OUTST CLIENT DEALS] where [Product Name]='REFINANCE SOLD FUNDED' and [Client No] in ('67820185','67820279','67820386') and [RepDate]='" & rdsql & "'"
            ElseIf rd > DateSerial(2013, 12, 31) And rd <= DateSerial(2014, 12, 31) Then
                cmd.CommandText = "SELECT Sum([PrincipalPlusInterestEUR]) from [TIME DEP OUTST CLIENT DEALS] where [Product Name]='REFINANCE SOLD FUNDED' and [Client No] in ('67820185','67820386') and [RepDate]='" & rdsql & "'"
            ElseIf rd > DateSerial(2014, 12, 31) Then
                cmd.CommandText = "SELECT Sum([PrincipalPlusInterestEUR]) from [TIME DEP OUTST CLIENT DEALS] where [Product Name]='REFINANCE SOLD FUNDED' and [Client No] in ('0') and [RepDate]='" & rdsql & "'"
            End If
            If cmd.ExecuteScalar IsNot DBNull.Value Then
                BadRefinaceSoldFounded = cmd.ExecuteScalar
            Else
                BadRefinaceSoldFounded = 0
            End If
            Me.BgwClientRun.ReportProgress(8, "Recalculating OBLIGO LIABILITY SURPLUS-Get Sum Principal+Interest (EUR) where Product Name is PLEDGED VARIABLE DEPOSITS-CUSTOMER from TIME DEP OUTST CLIENT DEALS ")
            cmd.CommandText = "SELECT Sum([PrincipalPlusInterestEUR]) from [TIME DEP OUTST CLIENT DEALS] where [Product Name]='PLEDGED VARIABLE DEPOSITS-CUSTOMER' and [RepDate]='" & rdsql & "'"
            If cmd.ExecuteScalar IsNot DBNull.Value Then
                SumPledgedVariableDepositsCustomer = cmd.ExecuteScalar
            Else
                SumPledgedVariableDepositsCustomer = 0
            End If
            '++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

            Me.BgwClientRun.ReportProgress(30, "Update RISK LIMIT DAILY CONTROL - Interest Rate Risk and Interest Risk Amount from RATERISK DATE")
            Me.BgwClientRun.ReportProgress(30, "Update RISK LIMIT DAILY CONTROL - CreditRiskCashpledge from BusinessTypesCreditPortfolioLive (Sum of NetCreditRiskAmountER2)")
            Me.BgwClientRun.ReportProgress(30, "Update RISK LIMIT DAILY CONTROL - Unexpected Loss , Granularity Approach (Concentration Risk Amount) and Operational Risk Incidents (Maximum Amount)")
            Me.BgwClientRun.ReportProgress(30, "Update RISK LIMIT DAILY CONTROL - BadRefinanceSoldFunded and SumPledgeVariableDepositsCustomer")
            Me.BgwClientRun.ReportProgress(30, "Update RISK LIMIT DAILY CONTROL - CCBINFO Obligo Liability surplus and CCBINFO Obligo Liability surplus Risk Subtotal")

            cmd.CommandText = "SELECT [RLDC Date] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
            Dim t As String = cmd.ExecuteScalar
            If IsNothing(t) = False Then
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET[Interest rate risk]=" & Str(irr) & ",[Interest risk]=" & Str(SAM3) & " WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE A SET A.[CreditRiskCashPledge]=B.S from [RISK LIMIT DAILY CONTROL] A INNER JOIN  (SELECT [DateMakCrTotals],Sum([NetCreditRiskAmountER2]) as S FROM [BusinessTypesCreditPortfolioLive] GROUP BY [DateMakCrTotals])B on A.[RLDC Date]=B.[DateMakCrTotals]  WHERE A.[RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'NOT RELEVANT ANYMORE+++CREDIT RISK WITHOUT CASH PLEDGE (and without FX) 20% ++++
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET[Credit Risk]=(SELECT Sum([Credit Risk Amount(EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "') WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET[UnexpectedLossAmount]=(SELECT Round([SumUL]/1000,0) FROM [UNEXPECTED_LOSS_DATE] WHERE [RiskDate]='" & rdsql & "'),[ConcentrationRiskAmount]=(SELECT Round([SumGA_Total]/1000,0) FROM [UNEXPECTED_LOSS_DATE] WHERE [RiskDate]='" & rdsql & "'),[OperationalRiskIncidents]=(SELECT Max([ExtentOfDamage]) FROM [SCHADENSFALL] where [EventDate]<='" & rdsql & "') WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'Obligo Liability Surplus
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [BadRefinanceSoldFunded]=" & Str(BadRefinaceSoldFounded) & ",[SumPledgeVariableDepositsCustomer]=" & Str(SumPledgedVariableDepositsCustomer) & " where [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [CCBINFO Obligo Liability surplus]=[CCBINFO Obligo Liability surplus Default]-[BadRefinanceSoldFunded]+[SumPledgeVariableDepositsCustomer]+[RetainedEarnings],[CCBINFO Obligo Liability surplus Risk Subtotal]=[CCBINFO Obligo Liability surplus Default]-[BadRefinanceSoldFunded]+[RetainedEarnings] where [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'Fx Revaluation Difference between OCBS and IDW
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [PLdifferenceOCBS_IDW]=(SELECT Sum([AmortizationToRiskDate])+Sum([IDW_Amount])-Sum([PL_inEUR_Equ]) FROM [FX DAILY REVALUATION] WHERE [RiskDate]='" & rdsql & "' and [OwnDeal]='Y' ) WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'PL recalculated
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [PLrecalculated]=[PL Result]+[PLdifferenceOCBS_IDW] WHERE [RLDC Date]='" & rdsql & "' and [PL Result] is not NULL"
                cmd.ExecuteNonQuery()
            End If
            If IsNothing(t) = True Then
                cmd.CommandText = "INSERT INTO [RISK LIMIT DAILY CONTROL]([RLDC Date]) Values('" & rdsql & "')"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [Interest rate risk]=" & Str(irr) & ",[Interest risk]=" & Str(SAM3) & ",[IdBank]='3' WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE A SET A.[CreditRiskCashPledge]=B.S from [RISK LIMIT DAILY CONTROL] A INNER JOIN  (SELECT [DateMakCrTotals],Sum([NetCreditRiskAmountER2]) as S FROM [BusinessTypesCreditPortfolioLive] GROUP BY [DateMakCrTotals])B on A.[RLDC Date]=B.[DateMakCrTotals]  WHERE A.[RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'NOT RELEVANT ANYMORE+++CREDIT RISK WITHOUT CASH PLEDGE (and without FX) 20% ++++
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [Credit Risk]=(SELECT Sum([Credit Risk Amount(EUR Equ)]) FROM [CREDIT RISK] WHERE [RiskDate]='" & rdsql & "'),[IdBank]='3' WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET[UnexpectedLossAmount]=(SELECT Round([SumUL]/1000,0) FROM [UNEXPECTED_LOSS_DATE] WHERE [RiskDate]='" & rdsql & "'),[ConcentrationRiskAmount]=(SELECT Round([SumGA_Total]/1000,0) FROM [UNEXPECTED_LOSS_DATE] WHERE [RiskDate]='" & rdsql & "'),[OperationalRiskIncidents]=(SELECT Max([ExtentOfDamage]) FROM [SCHADENSFALL] where [EventDate]<='" & rdsql & "') WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'Obligo Liability Surplus
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [BadRefinanceSoldFunded]=" & Str(BadRefinaceSoldFounded) & ",[SumPledgeVariableDepositsCustomer]=" & Str(SumPledgedVariableDepositsCustomer) & " where [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [CCBINFO Obligo Liability surplus]=[CCBINFO Obligo Liability surplus Default]-[BadRefinanceSoldFunded]+[SumPledgeVariableDepositsCustomer]+[RetainedEarnings],[CCBINFO Obligo Liability surplus Risk Subtotal]=[CCBINFO Obligo Liability surplus Default]-[BadRefinanceSoldFunded]+[RetainedEarnings] where [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'Fx Revaluation Difference between OCBS and IDW
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [PLdifferenceOCBS_IDW]=(SELECT Sum([AmortizationToRiskDate])+Sum([IDW_Amount])-Sum([PL_inEUR_Equ]) FROM [FX DAILY REVALUATION] WHERE [RiskDate]='" & rdsql & "' and [OwnDeal]='Y' ) WHERE [RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'PL recalculated
                cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [PLrecalculated]=[PL Result]+[PLdifferenceOCBS_IDW] WHERE [RLDC Date]='" & rdsql & "' and [PL Result] is not NULL"
                cmd.ExecuteNonQuery()
            End If

            'RECALCULATING RISK BEARING CAPACITY
            Me.BgwClientRun.ReportProgress(8, "Recalculating RISK BEARING CAPACITY for " & rd)
            Dim s1 As Double = 0
            Dim s2 As Double = 0
            Dim RBC As Double = 0
            Dim MaxOperationalRisk As Double = 0
            If rd < DateSerial(2014, 1, 1) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+[Market price risk of securities]+round([Interest risk]/1000,0)+[Currency risk]+[Operational risk]+[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "select sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement]+round([PL Result]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]="
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]="
                    cmd.ExecuteScalar()
                End If
            ElseIf rd >= DateSerial(2014, 1, 1) AndAlso rd <= DateSerial(2014, 6, 30) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "Select Max(OperationalRisk) from (Select [Operational risk] as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "' Union All Select Round([OperationalRiskIncidents]/1000,0) as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "')B"
                    MaxOperationalRisk = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+[Market price risk of securities]+round([Interest risk]/1000,0)+[Currency risk]+ " & MaxOperationalRisk & " +[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement]+round([PLdefault]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteScalar()
                End If
            ElseIf rd > DateSerial(2014, 6, 30) AndAlso rd <= DateSerial(2014, 12, 4) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "Select Max(OperationalRisk) from (Select [Operational risk] as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "' Union All Select Round([OperationalRiskIncidents]/1000,0) as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "')B"
                    MaxOperationalRisk = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+round([Interest risk]/1000,0)+[Currency risk]+ " & MaxOperationalRisk & " +[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement]+round([PLdefault]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteScalar()
                End If
            ElseIf rd > DateSerial(2014, 12, 4) AndAlso rd <= DateSerial(2015, 9, 29) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "Select Max(OperationalRisk) from (Select [Operational risk] as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "' Union All Select Round([OperationalRiskIncidents]/1000,0) as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "')B"
                    MaxOperationalRisk = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+round([Interest risk]/1000,0)+[Currency risk]+ " & MaxOperationalRisk & " +[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement] - ([Minimum capital requirement]*0.3)+round([PLdefault]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteScalar()
                End If
            ElseIf rd > DateSerial(2015, 9, 29) AndAlso rd <= DateSerial(2016, 3, 30) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "Select Max(OperationalRisk) from (Select [Operational risk] as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "' Union All Select Round([OperationalRiskIncidents]/1000,0) as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "')B"
                    MaxOperationalRisk = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+round([Interest risk]/1000,0)+[Currency risk] * 1.2 + " & MaxOperationalRisk & " +[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement] - ([Minimum capital requirement]*0.3)+round([PLdefault]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteScalar()
                End If
            ElseIf rd > DateSerial(2016, 3, 30) AndAlso rd <= DateSerial(2016, 7, 11) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "Select Max(OperationalRisk) from (Select [Operational risk] as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "' Union All Select Round([OperationalRiskIncidents]/1000,0) as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "')B"
                    MaxOperationalRisk = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+round([Interest risk]/1000,0)+[Currency risk] * 1.2 + " & MaxOperationalRisk & " +[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement] - ([Minimum capital requirement]*0.3) - Round([KapitalerhaltungsPuffer]/1000,0) - Round([AntizyklischerKapitalPuffer]/1000,0) +round([PLdefault]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteScalar()
                End If
            ElseIf rd > DateSerial(2016, 7, 11) AndAlso rd <= DateSerial(2016, 8, 7) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "Select Max(OperationalRisk) from (Select [Operational risk] as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "' Union All Select Round([OperationalRiskIncidents]/1000,0) as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "')B"
                    MaxOperationalRisk = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+round([Interest risk]/1000,0)+[Currency risk] + " & MaxOperationalRisk & " +[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement] - ([Minimum capital requirement]*0.3) - Round([KapitalerhaltungsPuffer]/1000,0) - Round([AntizyklischerKapitalPuffer]/1000,0) +round([PLdefault]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteScalar()
                End If
            ElseIf rd > DateSerial(2016, 8, 7) Then
                cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                If cmd.ExecuteScalar IsNot DBNull.Value Then
                    cmd.CommandText = "Select Max(OperationalRisk) from (Select [Operational risk] as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "' Union All Select Round([OperationalRiskIncidents]/1000,0) as OperationalRisk FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "')B"
                    MaxOperationalRisk = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(round([CreditRiskCashPledge]/1000,0)+[UnexpectedLossAmount]+[ConcentrationRiskAmount]+round([Interest risk]/1000,0)+[Currency risk] + " & MaxOperationalRisk & " +[Liquidity risk]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s1 = cmd.ExecuteScalar
                    cmd.CommandText = "Select sum(Round([CapitalForSolvV]/1000,0)+(Round((Round([RiskWeigthedAmount_Total]/1000,0)*0.1165*(1-0.0905/0.1165)),0))-[Minimum capital requirement] - ([Minimum capital requirement]*0.3) - Round([KapitalerhaltungsPuffer]/1000,0) - Round([AntizyklischerKapitalPuffer]/1000,0) +round([PLdefault]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
                    s2 = cmd.ExecuteScalar
                    RBC = (s1 / s2) * 100
                    cmd.CommandText = "UPDATE [RISK LIMIT DAILY CONTROL] SET [RiskBearingCapacityCashPledge]='" & Str(RBC) & "' WHERE [RLDC Date]='" & rdsql & "'"
                    cmd.ExecuteScalar()
                End If
            End If

            'TRAFFIC LIGHT SYSTEM
            cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
            If cmd.ExecuteScalar IsNot DBNull.Value Then
                Me.BgwClientRun.ReportProgress(8, "Recalculating TRAFFIC LIGHT SYSTEM for " & rd)
                cmd.CommandText = "Delete from [RBC_TRAFFIC_LIGHT_SYSTEM] where [RiskDate] ='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "INSERT INTO [RBC_TRAFFIC_LIGHT_SYSTEM]([RiskCategory],[RelativeAllocationPercent],[SQLCommand],[RiskDate])Select [SQL_Name_1],[SQL_Float_1],[SQL_Command_1],'" & rdsql & "' FROM [SQL_PARAMETER_DETAILS] where [Id_SQL_Parameters]='TRAFFIC LIGHTS SYSTEM'"
                cmd.ExecuteNonQuery()
                'Ersetzen der <Risk Date> mit gültigen Risk Datum
                cmd.CommandText = "UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [SQLCommand]= REPLACE([SQLCommand],'<RiskDate>','" & rdsql & "') where [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'Anwenden der SQL Befehle
                Me.BgwClientRun.ReportProgress(3, "Execute SQL Commands in RBC_TRAFFIC_LIGHT_SYSTEM")
                Me.QueryText = "select * from [RBC_TRAFFIC_LIGHT_SYSTEM] where [RiskDate] ='" & rdsql & "'"
                da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
                dt = New System.Data.DataTable()
                da.Fill(dt)
                For i = 0 To dt.Rows.Count - 1
                    cmd.CommandText = dt.Rows.Item(i).Item("SQLCommand")
                    Dim Amount As Double = cmd.ExecuteScalar
                    cmd.CommandText = "UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [RiskCategoryFullAmount]=' " & Str(Amount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                Next
                If rd < DateSerial(2016, 8, 8) Then
                    cmd.CommandText = "UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [PilarIamount]=(Select Round(sum(Round([OwnCapitalBAIS]/1000,0)-[Minimum capital requirement]-Round([Minimum capital requirement]*0.3,0)+round([PLdefault]/1000,0) - Round([KapitalerhaltungsPuffer]/1000,0) - round([AntizyklischerKapitalPuffer]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]),0) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "') where [RiskDate]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                Else
                    cmd.CommandText = "UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [PilarIamount]=(Select Round(sum(Round([CapitalForSolvV]/1000,0)+(Round((Round([RiskWeigthedAmount_Total]/1000,0)*0.1165*(1-0.0905/0.1165)),0))-[Minimum capital requirement]-Round([Minimum capital requirement]*0.3,0)+round([PLdefault]/1000,0) - Round([KapitalerhaltungsPuffer]/1000,0) - round([AntizyklischerKapitalPuffer]/1000,0)+[HGB340F]-[EssentialInquantifiableRisksBufferZone]),0) FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "') where [RiskDate]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                End If

                cmd.CommandText = "UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [RelativeAllocationAmount]=Round([PilarIamount]*[RelativeAllocationPercent],0) where [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "BEGIN UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [TrafficLightResult]='Less' where [RiskCategoryFullAmount]/[RelativeAllocationAmount]<=0.8 and [RiskDate]='" & rdsql & "' END BEGIN UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [TrafficLightResult]='Middle' where [RiskCategoryFullAmount]/[RelativeAllocationAmount]>0.8 and [RiskCategoryFullAmount]/[RelativeAllocationAmount]<=1  and [RiskDate]='" & rdsql & "' END BEGIN UPDATE [RBC_TRAFFIC_LIGHT_SYSTEM] SET [TrafficLightResult]='Over' where [RiskCategoryFullAmount]/[RelativeAllocationAmount]>1 and [RiskDate]='" & rdsql & "' END"
                cmd.ExecuteNonQuery()
            End If

            'CIC GROUP USED LIMIT
            cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
            If cmd.ExecuteScalar IsNot DBNull.Value Then
                Me.BgwClientRun.ReportProgress(8, "Calculated and Update CIC Group Limit from Table:Daily_Art13_Kwg_ChineseBanks for " & rd)
                cmd.CommandText = "UPDATE A SET A.[CIC_Group_Used_Limit]=B.S from [RISK LIMIT DAILY CONTROL] A INNER JOIN (Select RiskDate ,Sum([Euro Equivalent]) as S from [Daily_Art13_Kwg_ChineseBanks] where [CIC_Group]='Y' and [RiskDate]='" & rdsql & "' group by [RiskDate]) B on A.[RLDC Date]=B.[RiskDate] where A.[RLDC Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
            End If


        Else
            Me.BgwClientRun.ReportProgress(70, "Unable to Update - Key Data (Currency Risk) are missing for Risk Date: " & rd)
        End If

        Me.BgwClientRun.ReportProgress(100, "RISK LIMIT DAIYL CONTROL update finished for " & rd)

    End Sub

    Private Sub STRESS_TESTS_HEAD_OFFICE_CALCULATION()

        CurrentClientProcedure = "STRESS TEST HEAD OFFICE CALCULATION"

        cmd.CommandText = "SELECT [BSDate] FROM [DailyBalanceSheets] where [BSDate]='" & rdsql & "'"
        HasDataResult = cmd.ExecuteScalar
        If IsNothing(HasDataResult) = False Then
            cmd.CommandText = "DELETE  FROM [StressTestsLiquidHO] where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            'Checking Date definieren
            CheckingDate = DateAdd("m", 1, rd)

            CheckingDate = DateSerial(CheckingDate.Year, CheckingDate.Month, CheckingDate.Day + 1) 'Plus einen Tag im Checking Date
            CheckingDateSql = CheckingDate.ToString("yyyy-MM-dd")

            LastDayCurrentMonth = DateSerial(rd.Year, rd.Month, 1).AddMonths(1).AddDays(-1)
            FirstDayOverNextMonth = rd.AddDays((rd.Day - 1) * -1).AddMonths(2) ' Übernächstzer Monat
            'Wenn Tagesdatum gleich datum des letzten Monatstages
            If rd = LastDayCurrentMonth Then
                CheckingDate = FirstDayOverNextMonth
            End If

            'STRESS TEST LIQUIDITY HEAD OFFICE SCENARIO
            'Erstellen des Risk datums
            Me.BgwClientRun.ReportProgress(6, "Insert new Risk Date")
            cmd.CommandText = "INSERT INTO [StressTestsLiquidHO] ([StressDate]) Values ('" & rdsql & "')"
            cmd.ExecuteNonQuery()

            'Einfügen der Temp daten in die Live Tabelle
            Me.BgwClientRun.ReportProgress(7, "Insert Temp SQL Commands in the Live Table")
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [CashPlacementBUBA_ACCD_SQL]=B.[CashPlacementBUBA_ACCD_SQL],[CashPlacementBUBA_CFNM_SQL]=B.[CashPlacementBUBA_CFNM_SQL],[LossUnderStressCashPlacementBUBA]=B.[LossUnderStressCashPlacementBUBA],[PlacementToBanksInclIC_ACCD_SQL]=B.[PlacementToBanksInclIC_ACCD_SQL],[PlacementsToBanksInclIC_CFNM_SQL]=B.[PlacementsToBanksInclIC_CFNM_SQL],[LossUnderStressPlacementsToBanksInclIC]=B.[LossUnderStressPlacementsToBanksInclIC],[DebtClaimToCustomersInclCCB_ACCD_SQL]=B.[DebtClaimToCustomersInclCCB_ACCD_SQL],[DebtClaimToCustomersInclCCB_CFNM_SQL]=B.[DebtClaimToCustomersInclCCB_CFNM_SQL],[LossUnderStressDebtClaimToCustomersInclCCB]=B.[LossUnderStressDebtClaimToCustomersInclCCB],[Investments_Securities_ACCD_SQL]=B.[Investments_Securities_ACCD_SQL],[Investments_Securities_CFNM_SQL]=B.[Investments_Securities_CFNM_SQL],[LossUnderStressInvestments_Securities]=B.[LossUnderStressInvestments_Securities],[OtherAssets_ACCD_SQL]=B.[OtherAssets_ACCD_SQL],[OtherAssets_CFNM_SQL]=B.[OtherAssets_CFNM_SQL],[LossUnderStressInvestments_OtherAssets]=B.[LossUnderStressInvestments_OtherAssets],[BorrowFromBUBA_SQL]=B.[BorrowFromBUBA_SQL],[BorrowFromBUBA_CFNM_SQL]=B.[BorrowFromBUBA_CFNM_SQL],[LossUnderStressInvestments_BorrowFromBUBA]=B.[LossUnderStressInvestments_BorrowFromBUBA],[DepositFromBanksInclIC_SQL]=B.[DepositFromBanksInclIC_SQL],[DepositFromBanksInclIC_CFNM_SQL]=B.[DepositFromBanksInclIC_CFNM_SQL],[LossUnderStressInvestments_DepositFromBanksInclIC]=B.[LossUnderStressInvestments_DepositFromBanksInclIC],[DepositFromCustomers_SQL]=B.[DepositFromCustomers_SQL],[DepositFromCustomers_CFNM_SQL]=B.[DepositFromCustomers_CFNM_SQL],[LossUnderStressInvestments_DepositFromCustomers]=B.[LossUnderStressInvestments_DepositFromCustomers] from [StressTestsLiquidHO] A,[StressTestLiquid_Temp] B where A.[StressDate]='" & rdsql & "' and B.[ID]=1"
            cmd.ExecuteNonQuery()

            'Replace RiskDate and CheckingDate with Valid sql Date
            Me.BgwClientRun.ReportProgress(8, "Replace <RiskDate> and <CheckingDate> with the current Risk date in the Live Table")
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [CashPlacementBUBA_ACCD_SQL]= REPLACE([CashPlacementBUBA_ACCD_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [CashPlacementBUBA_ACCD_SQL]=REPLACE([CashPlacementBUBA_ACCD_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [CashPlacementBUBA_CFNM_SQL]= REPLACE([CashPlacementBUBA_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [CashPlacementBUBA_CFNM_SQL]=REPLACE([CashPlacementBUBA_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [PlacementToBanksInclIC_ACCD_SQL]= REPLACE([PlacementToBanksInclIC_ACCD_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [PlacementToBanksInclIC_ACCD_SQL]=REPLACE([PlacementToBanksInclIC_ACCD_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [PlacementsToBanksInclIC_CFNM_SQL]= REPLACE([PlacementsToBanksInclIC_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [PlacementsToBanksInclIC_CFNM_SQL]=REPLACE([PlacementsToBanksInclIC_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DebtClaimToCustomersInclCCB_ACCD_SQL]= REPLACE([DebtClaimToCustomersInclCCB_ACCD_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DebtClaimToCustomersInclCCB_ACCD_SQL]=REPLACE([DebtClaimToCustomersInclCCB_ACCD_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DebtClaimToCustomersInclCCB_CFNM_SQL]= REPLACE([DebtClaimToCustomersInclCCB_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DebtClaimToCustomersInclCCB_CFNM_SQL]=REPLACE([DebtClaimToCustomersInclCCB_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [Investments_Securities_ACCD_SQL]= REPLACE([Investments_Securities_ACCD_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [Investments_Securities_ACCD_SQL]=REPLACE([Investments_Securities_ACCD_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [Investments_Securities_CFNM_SQL]= REPLACE([Investments_Securities_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [Investments_Securities_CFNM_SQL]=REPLACE([Investments_Securities_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [OtherAssets_ACCD_SQL]= REPLACE([OtherAssets_ACCD_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [OtherAssets_ACCD_SQL]=REPLACE([OtherAssets_ACCD_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [OtherAssets_CFNM_SQL]= REPLACE([OtherAssets_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [OtherAssets_CFNM_SQL]=REPLACE([OtherAssets_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [BorrowFromBUBA_SQL]= REPLACE([BorrowFromBUBA_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [BorrowFromBUBA_SQL]=REPLACE([BorrowFromBUBA_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [BorrowFromBUBA_CFNM_SQL]= REPLACE([BorrowFromBUBA_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [BorrowFromBUBA_CFNM_SQL]=REPLACE([BorrowFromBUBA_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromBanksInclIC_SQL]= REPLACE([DepositFromBanksInclIC_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromBanksInclIC_SQL]=REPLACE([DepositFromBanksInclIC_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromBanksInclIC_CFNM_SQL]= REPLACE([DepositFromBanksInclIC_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromBanksInclIC_CFNM_SQL]=REPLACE([DepositFromBanksInclIC_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromCustomers_SQL]= REPLACE([DepositFromCustomers_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromCustomers_SQL]=REPLACE([DepositFromCustomers_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromCustomers_CFNM_SQL]= REPLACE([DepositFromCustomers_CFNM_SQL],'<RiskDate>','" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromCustomers_CFNM_SQL]=REPLACE([DepositFromCustomers_CFNM_SQL],'<CheckDate>','" & CheckingDateSql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

            'SQL Befehle ausführen
            Me.BgwClientRun.ReportProgress(9, "Execute SQL Commands in the Live Table")
            Me.QueryText = "select * from [StressTestsLiquidHO] where [StressDate]='" & rdsql & "'"
            da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
            dt = New System.Data.DataTable()
            da.Fill(dt)
            For i = 0 To dt.Rows.Count - 1
                If IsDBNull(dt.Rows.Item(i).Item("CashPlacementBUBA_ACCD_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute CashPlacementBUBA_ACCD_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("CashPlacementBUBA_ACCD_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [CashPlacementBUBA_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("CashPlacementBUBA_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute CashPlacementBUBA_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("CashPlacementBUBA_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [CashPlacementBUBA_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("PlacementToBanksInclIC_ACCD_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute PlacementToBanksInclIC_ACCD_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("PlacementToBanksInclIC_ACCD_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [PlacementToBanksInclIC_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("PlacementsToBanksInclIC_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute PlacementsToBanksInclIC_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("PlacementsToBanksInclIC_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [PlacementsToBanksInclIC_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("DebtClaimToCustomersInclCCB_ACCD_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute DebtClaimToCustomersInclCCB_ACCD_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("DebtClaimToCustomersInclCCB_ACCD_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DebtClaimToCustomersInclCCB_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("DebtClaimToCustomersInclCCB_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute DebtClaimToCustomersInclCCB_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("DebtClaimToCustomersInclCCB_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DebtClaimToCustomersInclCCB_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("Investments_Securities_ACCD_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute Investments_Securities_ACCD_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("Investments_Securities_ACCD_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [Investments_Securities_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("Investments_Securities_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute Investments_Securities_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("Investments_Securities_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [Investments_Securities_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("OtherAssets_ACCD_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute OtherAssets_ACCD_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("OtherAssets_ACCD_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [OtherAssets_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("OtherAssets_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute OtherAssets_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("OtherAssets_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [OtherAssets_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("BorrowFromBUBA_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute BorrowFromBUBA_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("BorrowFromBUBA_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [BorrowFromBUBA_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("BorrowFromBUBA_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute BorrowFromBUBA_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("BorrowFromBUBA_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [BorrowFromBUBA_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("DepositFromBanksInclIC_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute DepositFromBanksInclIC_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("DepositFromBanksInclIC_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromBanksInclIC_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("DepositFromBanksInclIC_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute DepositFromBanksInclIC_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("DepositFromBanksInclIC_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromBanksInclIC_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("DepositFromCustomers_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute DepositFromCustomers_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("DepositFromCustomers_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromCustomers_ACCD]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
                If IsDBNull(dt.Rows.Item(i).Item("DepositFromCustomers_CFNM_SQL")) = False Then
                    Me.BgwClientRun.ReportProgress(9, "Execute DepositFromCustomers_CFNM_SQL in the Live Table")
                    cmd.CommandText = dt.Rows.Item(i).Item("DepositFromCustomers_CFNM_SQL")
                    Dim SqlAmount As Double = 0
                    If cmd.ExecuteScalar IsNot DBNull.Value Then
                        SqlAmount = cmd.ExecuteScalar * 1
                    Else
                        SqlAmount = 0
                    End If
                    cmd.CommandText = "UPDATE [StressTestsLiquidHO] SET [DepositFromCustomers_CFNM]='" & Str(SqlAmount) & "' where [ID]='" & dt.Rows.Item(i).Item("ID") & "'"
                    cmd.ExecuteNonQuery()
                End If
            Next


            'Summen erstellen
            'CASH INFLOW-ACCOUNT BALANCE
            Me.BgwClientRun.ReportProgress(10, "Update CASH INFLOW-ACCOUNT BALANCE  in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [CASH_INFLOW_ACCD]=CASE when (Select Sum([CashPlacementBUBA_ACCD]+[PlacementToBanksInclIC_ACCD]+[DebtClaimToCustomersInclCCB_ACCD]+[Investments_Securities_ACCD]+[OtherAssets_ACCD])from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')<>0 then (Select Sum([CashPlacementBUBA_ACCD]+[PlacementToBanksInclIC_ACCD]+[DebtClaimToCustomersInclCCB_ACCD]+[Investments_Securities_ACCD]+[OtherAssets_ACCD])from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'CASH INFLOW-CASH FLOW WITHIN NEXT MONTH
            Me.BgwClientRun.ReportProgress(11, "Update CASH INFLOW-CASH FLOW WITHIN NEXT MONTH  in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [CASH_INFLOW_CFNM]=CASE when (Select Sum([CashPlacementBUBA_CFNM]+[PlacementsToBanksInclIC_CFNM]+[DebtClaimToCustomersInclCCB_CFNM]+[Investments_Securities_CFNM]+[OtherAssets_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')<>0 then (Select Sum([CashPlacementBUBA_CFNM]+[PlacementsToBanksInclIC_CFNM]+[DebtClaimToCustomersInclCCB_CFNM]+[Investments_Securities_CFNM]+[OtherAssets_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'CASH OUTFLOW-ACCOUNT BALANCE
            Me.BgwClientRun.ReportProgress(12, "Update CASH OUTFLOW-ACCOUNT BALANCE  in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [CASH_OUTFLOW_ACCD]=CASE when (Select Sum([BorrowFromBUBA_ACCD]+[DepositFromBanksInclIC_ACCD]+[DepositFromCustomers_ACCD]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')<>0 then (Select Sum([BorrowFromBUBA_ACCD]+[DepositFromBanksInclIC_ACCD]+[DepositFromCustomers_ACCD]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'CASH OUTFLOW-CASH FLOW WITHIN NEXT MONTH
            Me.BgwClientRun.ReportProgress(13, "Update CASH OUTFLOW-CASH FLOW WITHIN NEXT MONTH in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [CASH_OUTFLOW_CFNM]=CASE when (Select Sum([BorrowFromBUBA_CFNM]+[DepositFromBanksInclIC_CFNM]+[DepositFromCustomers_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')<>0 then (Select Sum([BorrowFromBUBA_CFNM]+[DepositFromBanksInclIC_CFNM]+[DepositFromCustomers_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'ADDITIONAL CASH FLOW UNDER STRESS
            Me.BgwClientRun.ReportProgress(14, "Update AddCashOutflowunderStress_CashPlacementBUBA in the Live Table")
            '1
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_CashPlacementBUBA]=Case when (Select [LossUnderStressCashPlacementBUBA]*[CashPlacementBUBA_CFNM]*(-1) where [StressDate]='" & rdsql & "')<>0 then (Select [LossUnderStressCashPlacementBUBA]*[CashPlacementBUBA_CFNM]*(-1) where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "' "
            cmd.ExecuteNonQuery()
            '2
            Me.BgwClientRun.ReportProgress(15, "Update AddCashOutflowunderStress_PlacementsToBanksInclIC in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_PlacementsToBanksInclIC]= Case when (Select [LossUnderStressPlacementsToBanksInclIC]*[PlacementsToBanksInclIC_CFNM]*(-1) where [StressDate]='" & rdsql & "')<>0 then (Select [LossUnderStressPlacementsToBanksInclIC]*[PlacementsToBanksInclIC_CFNM]*(-1) where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '3
            Me.BgwClientRun.ReportProgress(16, "Update AddCashOutflowunderStress_DebtClaimToCustomersInclCCB in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_DebtClaimToCustomersInclCCB]=Case when (Select [LossUnderStressDebtClaimToCustomersInclCCB]*[DebtClaimToCustomersInclCCB_CFNM]*(-1) where [StressDate]='" & rdsql & "')<>0 then (Select [LossUnderStressDebtClaimToCustomersInclCCB]*[DebtClaimToCustomersInclCCB_CFNM]*(-1) where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "' "
            cmd.ExecuteNonQuery()
            '4
            Me.BgwClientRun.ReportProgress(17, "Update AddCashOutflowunderStress_Investments_Securities in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_Investments_Securities]=Case when (Select [LossUnderStressInvestments_Securities]*[Investments_Securities_CFNM]*(-1) where [StressDate]='" & rdsql & "')<>0 then (Select [LossUnderStressInvestments_Securities]*[Investments_Securities_CFNM]*(-1) where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "' "
            cmd.ExecuteNonQuery()
            '5
            Me.BgwClientRun.ReportProgress(18, "Update AddCashOutflowunderStress_OtherAssets in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_OtherAssets]=Case when (Select [LossUnderStressInvestments_OtherAssets]*[OtherAssets_CFNM]*(-1) where [StressDate]='" & rdsql & "')<>0 then (Select [LossUnderStressInvestments_OtherAssets]*[OtherAssets_CFNM]*(-1) where [StressDate]='" & rdsql & "') else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '6
            Me.BgwClientRun.ReportProgress(19, "Update AddCashOutflowunderStress_BorrowFromBUBA in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_BorrowFromBUBA]=Case when ((Select Sum([BorrowFromBUBA_ACCD]*(-1)+[BorrowFromBUBA_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')* (select[LossUnderStressInvestments_BorrowFromBUBA]*(-1) where [StressDate]='" & rdsql & "'))<>0 then ((Select Sum([BorrowFromBUBA_ACCD]*(-1)+[BorrowFromBUBA_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')*(select [LossUnderStressInvestments_BorrowFromBUBA]*(-1) where [StressDate]='" & rdsql & "'))else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '7
            Me.BgwClientRun.ReportProgress(20, "Update AddCashOutflowunderStress_DepositFromBanksInclIC in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_DepositFromBanksInclIC]= Case when ((Select Sum([DepositFromBanksInclIC_ACCD]*(-1)+[DepositFromBanksInclIC_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')*(select [LossUnderStressInvestments_DepositFromBanksInclIC]*(-1) where [StressDate]='" & rdsql & "'))<>0 then ((Select Sum([DepositFromBanksInclIC_ACCD]*(-1)+[DepositFromBanksInclIC_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')*(select [LossUnderStressInvestments_DepositFromBanksInclIC]*(-1) where [StressDate]='" & rdsql & "')) else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            '8
            Me.BgwClientRun.ReportProgress(21, "Update AddCashOutflowunderStress_DepositFromCustomers in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [AddCashOutflowunderStress_DepositFromCustomers]= Case when ((Select Sum([DepositFromCustomers_ACCD]*(-1)+[DepositFromCustomers_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')*(Select [LossUnderStressInvestments_DepositFromCustomers]*(-1) where [StressDate]='" & rdsql & "'))<>0 then ((Select Sum([DepositFromCustomers_ACCD]*(-1)+[DepositFromCustomers_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')*(Select [LossUnderStressInvestments_DepositFromCustomers]*(-1) where [StressDate]='" & rdsql & "')) else 0 end where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()


            'Restliche Summen Berechnen
            Me.BgwClientRun.ReportProgress(22, "Update LIQUIDITY_DEMAND_OVERPLUS_CFNM in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [LIQUIDITY_DEMAND_OVERPLUS_CFNM]=Case when (Select Sum([CASH_INFLOW_CFNM]+[CASH_OUTFLOW_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "')<>0 then (Select Sum([CASH_INFLOW_CFNM]+[CASH_OUTFLOW_CFNM]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "') else 0 end  where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'Liquidity Demand/Liquidity Overplus ADD. CASH OUTFLOW
            Me.BgwClientRun.ReportProgress(23, "Update LIQUIDITY_DEMAND_OVERPLUS_AddCashOutflowunderStress in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [LIQUIDITY_DEMAND_OVERPLUS_AddCashOutflowunderStress]=(Select Sum([AddCashOutflowunderStress_CashPlacementBUBA]+[AddCashOutflowunderStress_PlacementsToBanksInclIC]+[AddCashOutflowunderStress_DebtClaimToCustomersInclCCB]+[AddCashOutflowunderStress_Investments_Securities]+[AddCashOutflowunderStress_OtherAssets]+[AddCashOutflowunderStress_BorrowFromBUBA]+[AddCashOutflowunderStress_DepositFromBanksInclIC]+[AddCashOutflowunderStress_DepositFromCustomers]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            'TOTAL LIQUIDITY
            Me.BgwClientRun.ReportProgress(24, "Update TOTAL_LIQUIDITY_DEMAND_OVERPLUS_UNDER_STRESS in the Live Table")
            cmd.CommandText = "UPDATE  [StressTestsLiquidHO] set [TOTAL_LIQUIDITY_DEMAND_OVERPLUS_UNDER_STRESS]=(Select Sum([LIQUIDITY_DEMAND_OVERPLUS_CFNM]+[LIQUIDITY_DEMAND_OVERPLUS_AddCashOutflowunderStress]) from [StressTestsLiquidHO]  where [StressDate]='" & rdsql & "') where [StressDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()

        ElseIf IsNothing(HasDataResult) = True Then
            Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
        End If


    End Sub

    Private Sub LOAN_EXPOSURE_CORPORATES()
        CurrentClientProcedure = "LOAN EXPOSURE CORPORATES"
        Me.BgwClientRun.ReportProgress(50, "Start calculate the Loan Exposures for Corporate Customers on " & rd)
        cmd.CommandText = "SELECT [CapitalForSolvV] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
        Dim CapitalForSolv As Double = cmd.ExecuteScalar
        If CapitalForSolv <> 0 Then
            Me.BgwClientRun.ReportProgress(50, "Delete previus Data in LARGE_LOANS_EXPOSURE for " & rd)
            cmd.CommandText = "DELETE from [LARGE_LOANS_EXPOSURE] where [RiskDate]='" & rdsql & "'"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(50, "Insert relevant Data from CREDIT RISK on " & rd)
            cmd.CommandText = "INSERT INTO [LARGE_LOANS_EXPOSURE]([Obligor Rate],[Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Name],[Client No],[Contract Collateral ID],[Maturity Date],[Remaining Year(s) to Maturity],[Org Ccy],[Credit Outstanding (Org Ccy)],[Credit Outstanding (EUR Equ)],[NetCreditOutstandingAmountEUR],[InternalInfo],[ClientGroup],[ClientGroupName],[BusinessType],[RiskDate]) Select [Obligor Rate],[Contract Type],[Product Type],[GL Master / Account Type],[Account Type],[Counterparty/Issuer/Collateral Name],[Client No],[Contract Collateral ID],[Maturity Date],[Remaining Year(s) to Maturity],[Org Ccy],[Credit Outstanding (Org Ccy)],[Credit Outstanding (EUR Equ)],[NetCreditOutstandingAmountEUR],[InternalInfo],[ClientGroup],[ClientGroupName],[BusinessType],[RiskDate] from [CREDIT RISK] where [RiskDate]='" & rdsql & "' and [Contract Type] not in ('SECUR') and [Client No] in (Select [ClientNo] from [CUSTOMER_INFO] where [ClientType] in ('C - COMPANY'))"
            cmd.ExecuteNonQuery()
            Me.BgwClientRun.ReportProgress(50, "Update Exchange Rates on " & rd)
            cmd.CommandText = "UPDATE A SET A.[ExchangeRateCurrent]=B.[MIDDLE RATE] from [LARGE_LOANS_EXPOSURE] A INNER JOIN [EXCHANGE RATES OCBS] B on A.[RiskDate]=B.[EXCHANGE RATE DATE] where A.[Org Ccy]=B.[CURRENCY CODE] and A.[RiskDate]='" & rdsql & "' "
            cmd.ExecuteNonQuery()
            If rd <= DateSerial(2016, 8, 7) Then
                Me.BgwClientRun.ReportProgress(50, "Get CapitalForSolv on " & rd)
                cmd.CommandText = "UPDATE A SET A.[CapitalForSolvV]=B.[CapitalForSolvV] from [LARGE_LOANS_EXPOSURE] A INNER JOIN [RISK LIMIT DAILY CONTROL] B on A.[RiskDate]=B.[RLDC Date] where A.[RiskDate]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(50, "Calculate Exposure Limits on " & rd)
                cmd.CommandText = "UPDATE [LARGE_LOANS_EXPOSURE] SET [ExposureAmountMAX]=[CapitalForSolvV]*0.25 where [RiskDate]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [LARGE_LOANS_EXPOSURE] SET [ExposureAmountMIN]=[ExposureAmountMAX]*0.9 where [RiskDate]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
            ElseIf rd > DateSerial(2016, 8, 7) Then
                Me.BgwClientRun.ReportProgress(50, "Get CapitalForSolv on " & rd)
                If rd <= DateSerial(2016, 12, 31) Then
                    cmd.CommandText = "UPDATE A SET A.[CapitalForSolvV]=(B.[CapitalForSolvV] + (B.[CapitalForSolvV]*0.5)) from [LARGE_LOANS_EXPOSURE] A INNER JOIN [RISK LIMIT DAILY CONTROL] B on A.[RiskDate]=B.[RLDC Date] where A.[RiskDate]='" & rdsql & "' "
                    cmd.ExecuteNonQuery()
                ElseIf rd > DateSerial(2016, 12, 31) Then
                    cmd.CommandText = "UPDATE A SET A.[CapitalForSolvV]=(B.[CapitalForSolvV] + (B.[CapitalForSolvV]*1/3)) from [LARGE_LOANS_EXPOSURE] A INNER JOIN [RISK LIMIT DAILY CONTROL] B on A.[RiskDate]=B.[RLDC Date] where A.[RiskDate]='" & rdsql & "' "
                    cmd.ExecuteNonQuery()
                End If

                Me.BgwClientRun.ReportProgress(50, "Calculate Exposure Limits on " & rd)
                cmd.CommandText = "UPDATE [LARGE_LOANS_EXPOSURE] SET [ExposureAmountMAX]=[CapitalForSolvV]*0.25 where [RiskDate]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [LARGE_LOANS_EXPOSURE] SET [ExposureAmountMIN]=[ExposureAmountMAX]*0.9 where [RiskDate]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
                End If

        Else
            Me.BgwClientRun.ReportProgress(70, "Unable to calculate the Loan Exposures for Corporate Customers - Key Data (CapitalForSolvV) are missing for Risk Date: " & rd)
        End If

    End Sub

    Private Sub FORMBLATT_BALANCE_CALCULATION()
        CurrentClientProcedure = "FORMBLATT BILANZ CALCULATION"
        cmd.CommandText = "SELECT [SQL_Parameter_Status] FROM [SQL_PARAMETER] where  [SQL_Parameter_Name]='FORMBLATT BILANZ'"
        Dim ParameterStatus As String = cmd.ExecuteScalar
        If ParameterStatus = "Y" Then
            Me.BgwClientRun.ReportProgress(1, "Start Formblatt Bilanz Calculation")
            cmd.CommandText = "SELECT [BSDate] FROM [DailyBalanceSheets] where [BSDate]='" & rdsql & "'"
            HasDataResult = cmd.ExecuteScalar
            If IsNothing(HasDataResult) = False Then
                'UPDATE RILIBI CODES AND NAMES
                Me.BgwClientRun.ReportProgress(8, "Update Rilibi Codes in DailyBalanceSheets")
                cmd.CommandText = "UPDATE A set A.[RilibiCode]=B.S from   [DailyBalanceSheets] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as S from [PARAMETER] where [IdABTEILUNGSPARAMETER]='RILIBI_MATCHING' and [PARAMETER STATUS] ='Y')B ON A.[GL_Item_Number]=B.[PARAMETER1]  where A.[BSDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(8, "Update Rilibi Names DailyBalanceSheets")
                cmd.CommandText = "UPDATE A set A.[RilibiName]=B.S from   [DailyBalanceSheets] A INNER JOIN (Select [PARAMETER1],[PARAMETER2] as S from [PARAMETER] where [IdABTEILUNGSPARAMETER]='RILIBI_CODES' and [PARAMETER STATUS] ='Y')B ON A.[RilibiCode]=B.[PARAMETER1] where A.[BSDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(8, "Update Rilibi Codes and Names DailyBalanceDetailSheet")
                cmd.CommandText = "UPDATE A set A.[IdBalanceSheets]=B.[ID],A.[RilibiCode]=B.[RilibiCode],A.[RilibiName]=B.[RilibiName] from [DailyBalanceDetailsSheets] A INNER JOIN [DailyBalanceSheets] B ON A.[GL_Item]=B.[GL_Item] where A.[BSDate]=B.[BSDate] and A.[BSDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(8, "Delete Current Data from Formblatt_BILANZ_Details ")
                cmd.CommandText = "DELETE  FROM [Formblatt_BILANZ_Details] where [BSDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(8, "Delete Current Data from Formblatt_BILANZ_TOTALS ")
                cmd.CommandText = "DELETE FROM [Formblatt_BILANZ_TOTALS] where [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Insert SQL Commands in Formblatt_BILANZ_TOTALS")
                '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                'FORMBLATT BILANZ - Einfügen der SQL Befehle am neuen Tag
                cmd.CommandText = "INSERT INTO [Formblatt_BILANZ_TOTALS]([Bilanzposition],[Bilanzposition_ID],[BilanzpositionArt],[SQLcommandCurrentDate],[SQLcommandLastYear],[RiskDate])Select [SQL_Name_1],[SQL_Float_1],[SQL_Name_2],[SQL_Command_1],[SQL_Command_2],'" & rdsql & "' FROM [SQL_PARAMETER_DETAILS] where [Id_SQL_Parameters]='FORMBLATT BILANZ' ORDER BY [SQL_Float_1] asc"
                cmd.ExecuteNonQuery()
                'Ersetzen der <Risk Date> mit gültigen Risk Datum
                cmd.CommandText = "UPDATE [Formblatt_BILANZ_TOTALS] SET [SQLcommandCurrentDate]= REPLACE([SQLcommandCurrentDate],'<RiskDate>','" & rdsql & "'),[SQLcommandLastYear]= REPLACE([SQLcommandLastYear],'<RiskDate>','" & rdsql & "') where [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                'Anwenden der SQL Befehle
                Me.BgwClientRun.ReportProgress(3, "Execute SQL Commands in Formblatt_BILANZ_TOTALS")
                Me.QueryText = "select * from [Formblatt_BILANZ_TOTALS] where [RiskDate]='" & rdsql & "'"
                da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
                dt = New System.Data.DataTable()
                da.Fill(dt)
                For i = 0 To dt.Rows.Count - 1
                    If IsDBNull(dt.Rows.Item(i).Item("SQLcommandCurrentDate")) = False Then
                        cmd.CommandText = dt.Rows.Item(i).Item("SQLcommandCurrentDate")
                        cmd.ExecuteNonQuery()
                    End If
                Next
                For i = 0 To dt.Rows.Count - 1
                    If IsDBNull(dt.Rows.Item(i).Item("SQLcommandLastYear")) = False Then
                        cmd.CommandText = dt.Rows.Item(i).Item("SQLcommandLastYear")
                        cmd.ExecuteNonQuery()
                    End If
                Next
                'Execute SQL Commands for Sum
                Me.BgwClientRun.ReportProgress(3, "Update Summary Unterpositionen")
                cmd.CommandText = "UPDATE A SET A.[AmountCurrentDate_UP]=B.ABT from [Formblatt_BILANZ_TOTALS] A INNER JOIN  (SELECT [IdFormblattBALANCE_TOTALS],Sum([Total_Balance]) as ABT  FROM [Formblatt_BILANZ_Details] GROUP BY [IdFormblattBALANCE_TOTALS])B on A.[ID]=B.[IdFormblattBALANCE_TOTALS]  WHERE A.[RiskDate]='" & rdsql & "' and A.[BilanzpositionArt] not in ('AKTIVA','PASSIVA')"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Update Summary Gesamtpositionen")
                cmd.CommandText = "UPDATE A SET A.[AmountCurrentDate]=B.ABT from [Formblatt_BILANZ_TOTALS] A INNER JOIN  (SELECT [IdFormblattBALANCE_TOTALS],Sum([Total_Balance]) as ABT  FROM [Formblatt_BILANZ_Details] GROUP BY [IdFormblattBALANCE_TOTALS])B on A.[ID]=B.[IdFormblattBALANCE_TOTALS]  WHERE A.[RiskDate]='" & rdsql & "' and A.[BilanzpositionArt] in ('AKTIVA','PASSIVA')"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "UPDATE [Formblatt_BILANZ_TOTALS] SET [AmountCurrentDate_UP]=NULL where [AmountCurrentDate_UP]=0 and [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [Formblatt_BILANZ_TOTALS] SET [AmountCurrentDate]=NULL where [AmountCurrentDate]=0 and [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()


            ElseIf IsNothing(HasDataResult) = True Then
                Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
            End If
            Me.BgwClientRun.ReportProgress(5, "FORMBLATT BILANZ CALCULATION finished")
        Else
            Me.BgwClientRun.ReportProgress(5, "FORMBLATT BILANZ SQL PARAMETER STATUS is Invalid")
        End If

    End Sub

    Private Sub CURRENCY_RISK_CALCULATION()
        CurrentClientProcedure = "CURRENCY RISK CALCULATION"
        cmd.CommandText = "SELECT [SQL_Parameter_Status] FROM [SQL_PARAMETER] where  [SQL_Parameter_Name]='CURRENCY RISK CALCULATION'"
        Dim ParameterStatus As String = cmd.ExecuteScalar
        If ParameterStatus = "Y" Then
            Me.BgwClientRun.ReportProgress(1, "Check if related Data are present")
            cmd.CommandText = "SELECT [BSDate] FROM [DailyBalanceSheets] where [BSDate]='" & rdsql & "'"
            HasDataResult = cmd.ExecuteScalar
            If IsNothing(HasDataResult) = False Then
                'UPDATE RILIBI CODES AND NAMES
                Me.BgwClientRun.ReportProgress(8, "Delete Current Data in CURRENCY RISK Tables for " & rd)
                cmd.CommandText = "DELETE FROM [CurrencyRisk_Date] where [CR_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "DELETE FROM [CurrencyRisk_PositionsTotals] where [CR_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "DELETE FROM [CurrencyRisk_PositionsDetails] where [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Insert current Date in CurrencyRisk_Date")
                cmd.CommandText = "INSERT INTO [CurrencyRisk_Date]([CR_Date]) Values ('" & rdsql & "')"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Insert SQL Commands in CurrencyRisk_PositionsTotals")
                cmd.CommandText = "INSERT INTO [CurrencyRisk_PositionsTotals]([CR_Position_Date],[CR_CURRENCY],[CR_Sql_Command],[CR_Sql_Command1]) SELECT '" & rdsql & "',[SQL_Name_1],[SQL_Command_1],[SQL_Command_2] FROM [SQL_PARAMETER_DETAILS] where [Id_SQL_Parameters]='CURRENCY RISK CALCULATION'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Update ID and Risk Date in Currency Risk Details Tables")
                cmd.CommandText = "UPDATE A SET A.[IdCurrencyRiskDate]=B.[ID] from [CurrencyRisk_PositionsTotals] A INNER JOIN [CurrencyRisk_Date] B ON A.[CR_Position_Date]=B.[CR_Date] where A.[CR_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [CurrencyRisk_PositionsTotals] SET [CR_Sql_Command]= REPLACE([CR_Sql_Command],'<RiskDate>','" & rdsql & "'),[CR_Sql_Command1]= REPLACE([CR_Sql_Command1],'<RiskDate>','" & rdsql & "') where [CR_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Execute SQL Commands for Currency Risk")
                Me.QueryText = "select * from [CurrencyRisk_PositionsTotals] where [CR_Position_Date]='" & rdsql & "'"
                da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
                dt = New System.Data.DataTable()
                da.Fill(dt)
                For i = 0 To dt.Rows.Count - 1
                    If IsDBNull(dt.Rows.Item(i).Item("CR_Sql_Command")) = False Then
                        cmd.CommandText = dt.Rows.Item(i).Item("CR_Sql_Command")
                        cmd.ExecuteNonQuery()
                    End If
                Next
                For i = 0 To dt.Rows.Count - 1
                    If IsDBNull(dt.Rows.Item(i).Item("CR_Sql_Command1")) = False Then
                        cmd.CommandText = dt.Rows.Item(i).Item("CR_Sql_Command1")
                        cmd.ExecuteNonQuery()
                    End If
                Next
                Me.BgwClientRun.ReportProgress(3, "Update Long and Short positions in CURRENCY RISK")
                cmd.CommandText = "UPDATE A SET A.[CR_LongPosition]=B.S from [CurrencyRisk_PositionsTotals] A INNER JOIN  (SELECT [IdCurrencyRiskTotals],Sum([Position_Amount_EUR]) as S FROM [CurrencyRisk_PositionsDetails] where [Position_Type]='LONG' GROUP BY [IdCurrencyRiskTotals])B on A.[ID]=B.[IdCurrencyRiskTotals]  WHERE A.[CR_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE A SET A.[CR_ShortPosition]=B.S from [CurrencyRisk_PositionsTotals] A INNER JOIN  (SELECT [IdCurrencyRiskTotals],Sum([Position_Amount_EUR]) as S FROM [CurrencyRisk_PositionsDetails] where [Position_Type]='SHORT' GROUP BY [IdCurrencyRiskTotals])B on A.[ID]=B.[IdCurrencyRiskTotals]  WHERE A.[CR_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "Select [CR_LongPosition],[CR_ShortPosition] from [CurrencyRisk_PositionsTotals] where  [CR_Position_Date]='" & rdsql & "' begin update [CurrencyRisk_PositionsTotals] set [CR_LongPosition]=0 where [CR_LongPosition] is NULL end begin update [CurrencyRisk_PositionsTotals] set [CR_ShortPosition]=0 where [CR_ShortPosition] is NULL end "
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Update Difference in CurrencyRisk_PositionsTotals")
                cmd.CommandText = "UPDATE [CurrencyRisk_PositionsTotals] Set [CR_Difference]=[CR_LongPosition]-[CR_ShortPosition] where [CR_Position_Date]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [CurrencyRisk_Date] set [LONG_Position]=(Select Sum([CR_Difference]) from [CurrencyRisk_PositionsTotals] where [CR_Difference]>0 and [CR_CURRENCY] not in ('EUR') and [CR_Position_Date]='" & rdsql & "') where [CR_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [CurrencyRisk_Date] set [SHORT_Position]=(Select Sum([CR_Difference]) from [CurrencyRisk_PositionsTotals] where [CR_Difference]<0 and [CR_CURRENCY] not in ('EUR') and [CR_Position_Date]='" & rdsql & "') where [CR_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [CurrencyRisk_Date] set [RiskCapitalCharge]=(Select [NPARAMETER1] from [PARAMETER] where [PARAMETER1]='Currency Risk Calculation Percent' and [IdABTEILUNGSPARAMETER]='CURRENCY_RISK_PERCENT')  where [CR_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [CurrencyRisk_Date] set [LONG_Position]=0 where [LONG_Position] is NULL and [CR_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [CurrencyRisk_Date] set [SHORT_Position]=0 where [SHORT_Position] is NULL and [CR_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Currency Risk Amount calculation based on Parameter RISK CONTROLLING\CURRENCY_RISK_PERCENT\Currency Risk Calculation Percent")
                'cmd.CommandText = "Select [LONG_Position],[SHORT_Position] from [CurrencyRisk_Date]  where [CR_Date]='" & rdsql & "' begin Update [CurrencyRisk_Date] set [CurrencyRiskAmount]=Round([LONG_Position]*(Select [NPARAMETER1] from [PARAMETER] where [PARAMETER1]='Currency Risk Calculation Percent' and [IdABTEILUNGSPARAMETER]='CURRENCY_RISK_PERCENT'),2) where [LONG_Position]>[SHORT_Position]end begin Update [CurrencyRisk_Date] set [CurrencyRiskAmount]=Round([SHORT_Position]*(Select [NPARAMETER1] from [PARAMETER] where [PARAMETER1]='Currency Risk Calculation Percent' and [IdABTEILUNGSPARAMETER]='CURRENCY_RISK_PERCENT'),2) where [LONG_Position]<=[SHORT_Position]end"
                'cmd.ExecuteNonQuery()
                'cmd.CommandText = "UPDATE [CurrencyRisk_Date] set [CurrencyRiskAmount]=CASE when [LONG_Position]<=[SHORT_Position] then ABS([LONG_Position])*[RiskCapitalCharge] when [LONG_Position]>[SHORT_Position] then ABS([SHORT_Position])*[RiskCapitalCharge] end where [CR_Date]='" & rdsql & "'"
                'cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [CurrencyRisk_Date] set [CurrencyRiskAmount]=CASE when ABS([LONG_Position])<=ABS([SHORT_Position]) then ABS([SHORT_Position])*[RiskCapitalCharge] when ABS([LONG_Position])>ABS([SHORT_Position]) then ABS([LONG_Position])*[RiskCapitalCharge] end where [CR_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                
            ElseIf IsNothing(HasDataResult) = True Then
                Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
            End If
            Me.BgwClientRun.ReportProgress(5, "CURRENCY RISK CALCULATION finished")
        Else
            Me.BgwClientRun.ReportProgress(5, "CURRENCY RISK CALCULATION SQL PARAMETER STATUS is Invalid")
        End If
    End Sub

    Private Sub CAR_CALCULATION()
        CurrentClientProcedure = "CAR-Solva CALCULATION"
        cmd.CommandText = "SELECT [SQL_Parameter_Status] FROM [SQL_PARAMETER] where  [SQL_Parameter_Name]='CAR CALCULATION'"
        Dim ParameterStatus As String = cmd.ExecuteScalar
        If ParameterStatus = "Y" Then
            Me.BgwClientRun.ReportProgress(1, "Check if related Data are present")
            cmd.CommandText = "SELECT [Currency risk] FROM [RISK LIMIT DAILY CONTROL] WHERE [RLDC Date]='" & rdsql & "'"
           If cmd.ExecuteScalar IsNot DBNull.Value Then

                Me.BgwClientRun.ReportProgress(8, "Delete Current Data in SOLVV Tables for " & rd)
                cmd.CommandText = "DELETE FROM [SOLVV_PositionsDetails] where [RiskDate]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "DELETE FROM [SOLVV_PositionsTotals] where [CRSA_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "DELETE FROM [SOLVV_Date] where [Solvv_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Insert current Date in SOLVV_Date")
                cmd.CommandText = "INSERT INTO [SOLVV_Date]([Solvv_Date]) Values ('" & rdsql & "')"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Insert SQL Commands in SOLVV_PositionsTotals")
                cmd.CommandText = "INSERT INTO [SOLVV_PositionsTotals]([CRSA_Position_Date],[CRSA_Position],[Indiv_MultipleFactor],[CRSA_Name_Position_DE],[CRSA_Name_Position_GB],[CRSA_Weighting_Factor],[CRSA_MultipleFactor],[CRSA_SQL_Command]) SELECT '" & rdsql & "',[SQL_Name_1],[SQL_Float_1],[SQL_Name_2],[SQL_Name_3],[SQL_Float_2],[SQL_Float_3],[SQL_Command_1] FROM [SQL_PARAMETER_DETAILS] where [Id_SQL_Parameters]='CAR CALCULATION'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE A SET A.[IdSolvvDate]=B.[ID] from [SOLVV_PositionsTotals] A INNER JOIN [SOLVV_Date] B ON A.[CRSA_Position_Date]=B.[Solvv_Date] where A.[CRSA_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                cmd.CommandText = "UPDATE [SOLVV_PositionsTotals] SET [CRSA_SQL_Command]= REPLACE([CRSA_SQL_Command],'<RiskDate>','" & rdsql & "') where [CRSA_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(2, "Execute SQL Commands for CAR-Solva Calculation")
                Me.QueryText = "select * from [SOLVV_PositionsTotals] where [CRSA_Position_Date]='" & rdsql & "'"
                da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
                dt = New System.Data.DataTable()
                da.Fill(dt)
                For i = 0 To dt.Rows.Count - 1
                    If IsDBNull(dt.Rows.Item(i).Item("CRSA_SQL_Command")) = False Then
                        cmd.CommandText = dt.Rows.Item(i).Item("CRSA_SQL_Command")
                        cmd.ExecuteNonQuery()
                    End If
                Next
                Me.BgwClientRun.ReportProgress(3, "Calculate Sum CRSA_Position_OrigAmount in Table: SOLVV_PositionsTotals")
                cmd.CommandText = "UPDATE A SET A.[CRSA_Position_OrigAmount]=B.S from [SOLVV_PositionsTotals] A INNER JOIN  (SELECT [IdSolvvTotals],Sum([CRSA_Position_Amount]) as S FROM [SOLVV_PositionsDetails] GROUP BY [IdSolvvTotals])B on A.[ID]=B.[IdSolvvTotals]  WHERE A.[CRSA_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Calculate Sum CRSA_Position_NetOrigAmount in Table: SOLVV_PositionsTotals")
                cmd.CommandText = "UPDATE A SET A.[CRSA_Position_NetOrigAmount]=B.S from [SOLVV_PositionsTotals] A INNER JOIN  (SELECT [IdSolvvTotals],Sum([CRSA_Position_NetAmount]) as S FROM [SOLVV_PositionsDetails] GROUP BY [IdSolvvTotals])B on A.[ID]=B.[IdSolvvTotals]  WHERE A.[CRSA_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Calculate Sum CRSA_Position_AmountWF in Table: SOLVV_PositionsTotals")
                cmd.CommandText = "UPDATE A SET A.[CRSA_Position_AmountWF]=B.S from [SOLVV_PositionsTotals] A INNER JOIN  (SELECT [IdSolvvTotals],Sum([CRSA_Weighted_Amount]) as S FROM [SOLVV_PositionsDetails] GROUP BY [IdSolvvTotals])B on A.[ID]=B.[IdSolvvTotals]  WHERE A.[CRSA_Position_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Update CRSA_Position_AmountMF in Table: SOLVV_PositionsTotals (CRSA_Position_AmountWF * CRSA_MultipleFactor)")
                cmd.CommandText = "UPDATE [SOLVV_PositionsTotals] Set [CRSA_Position_AmountMF]=Round([CRSA_Position_AmountWF]*[CRSA_MultipleFactor],2) where [CRSA_Position_Date]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Get DOTATION CAPITAL, RETAINED EARNINGS and ASSETS RECONCILE from RISK LIMIT DAILY CONTROL")
                cmd.CommandText = "UPDATE A SET A.[Dotation_Capital]=B.[DotationCapitalFull], A.[SpecificRetainedEarnings]=B.[RetainedEarningsBAIS],A.[Intang_Assets_Reconcile]=B.[OtherIntagibleAssetsBAIS] from [SOLVV_Date] A INNER JOIN [RISK LIMIT DAILY CONTROL] B ON A.[Solvv_Date]=B.[RLDC Date] where A.[Solvv_Date]='" & rdsql & "' "
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Calculate Intagible Assets (PS TOOL)")
                cmd.CommandText = "UPDATE [SOLVV_Date] set [IntangibleAssets_BS]=(Select ABS(Sum([Total_Balance])) from [DailyBalanceDetailsSheets] where [GL_Account_Nr] in ('19530000','19531000') and BSDate='" & rdsql & "') where [Solvv_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Calculate CapitalForSolva")
                If rd <= DateSerial(2016, 8, 7) Then
                    cmd.CommandText = "UPDATE [SOLVV_Date] set [CapitalForSolvv]=[Dotation_Capital]+[SpecificRetainedEarnings]-[Intang_Assets_Reconcile] where [Solvv_Date]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                ElseIf rd > DateSerial(2016, 8, 7) Then
                    cmd.CommandText = "UPDATE [SOLVV_Date] set [CapitalForSolvv]=[Dotation_Capital]+[SpecificRetainedEarnings]-[Intang_Assets_Reconcile]+100000000 where [Solvv_Date]='" & rdsql & "'"
                    cmd.ExecuteNonQuery()
                End If

                Me.BgwClientRun.ReportProgress(3, "Calculate Maximum Lending Limit")
                cmd.CommandText = "UPDATE [SOLVV_Date] set [MaxLendingLimit]=[CapitalForSolvv]*[Solvv_Factor] where [Solvv_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Calculate CapitalSurplus")
                cmd.CommandText = "UPDATE [SOLVV_Date] set [CapitalSurplus]=[CapitalForSolvv]- (Select Sum([CRSA_Position_AmountMF]) from [SOLVV_PositionsTotals] where [CRSA_Position_Date]='" & rdsql & "') where [Solvv_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()
                Me.BgwClientRun.ReportProgress(3, "Calculate SolvV (CAR) Key figure")
                cmd.CommandText = "UPDATE [SOLVV_Date] set [SOLVV_Value]=([CapitalForSolvv]/(Select Sum([CRSA_Position_AmountMF]) from [SOLVV_PositionsTotals] where [CRSA_Position_Date]='" & rdsql & "'))*8 where [Solvv_Date]='" & rdsql & "'"
                cmd.ExecuteNonQuery()

            ElseIf IsNothing(HasDataResult) = True Then
                Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
            End If
            Me.BgwClientRun.ReportProgress(5, "CAR CALCULATION finished")
        Else
            Me.BgwClientRun.ReportProgress(5, "CAR CALCULATION SQL PARAMETER STATUS is Invalid")
        End If
    End Sub

    Private Sub LiqV_CALCULATION()
        CurrentClientProcedure = "LIQUIDITY RATIO CALCULATION"
        cmd.CommandText = "SELECT [SQL_Parameter_Status] FROM [SQL_PARAMETER] where  [SQL_Parameter_Name]='LIQV_CALCULATION_PARAMETERS'"
        Dim ParameterStatus As String = cmd.ExecuteScalar
        If ParameterStatus = "Y" Then
            Me.BgwClientRun.ReportProgress(1, "Check if related Data are present")
            cmd.CommandText = "SELECT [RiskDate] FROM [MAK REPORT] where [RiskDate]='" & rdsql & "'"
            If cmd.ExecuteScalar IsNot DBNull.Value Then
                'UPDATE RILIBI CODES AND NAMES
                Me.BgwClientRun.ReportProgress(8, "Calculate Liquidity Ratio (Stored procedure:LiqV_CALCULATION) for " & rd)
                cmd.CommandText = "Exec [LiqV_CALCULATION] @RISKDATE='" & rdsql & "'"
                cmd.ExecuteNonQuery()

            ElseIf IsNothing(HasDataResult) = True Then
                Me.BgwClientRun.ReportProgress(70, "There are no Data for Risk Date: " & rd)
            End If
            Me.BgwClientRun.ReportProgress(5, "LIQUIDITY RATIO CALCULATION finished")
        Else
            Me.BgwClientRun.ReportProgress(5, "LIQV_CALCULATION_PARAMETERS STATUS is Invalid")
        End If
    End Sub

    Private Sub LIQUIDITY_OVERVIEW_DATA_COLLECTION()
        CurrentClientProcedure = "LIQUIDITY OVERVIEW DATA COLLECTION"
        Me.BgwClientRun.ReportProgress(8, "Update ContractClear in RATERISK DETAILS")
        cmd.CommandText = "Update [RATERISK DETAILS] set ContractClear=dbo.fn_StripCharacters([Contract/Account],'^0-9') where [RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(8, "Update ClientNr,StartDate in ALL_CONTRACTS_ACCOUNTS from SSIS (NOSTROS)")
        cmd.CommandText = "Update A Set A.ClientNr=B.ClientNo, A.StartDate=B.Open_Date from [ALL_CONTRACTS_ACCOUNTS] A INNER JOIN SSIS B on A.[Contract_Account]=B.[INTERNAL ACCOUNT] where A.ClientNr is NULL"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(18, "Update ClientNr,StartDate in ALL_CONTRACTS_ACCOUNTS from CUSTOMER ACCOUNTS")
        cmd.CommandText = "Update A Set A.ClientNr=B.ClientNo,A.StartDate=B.OPEN_DATE from [ALL_CONTRACTS_ACCOUNTS] A INNER JOIN CUSTOMER_ACCOUNTS B on A.[Contract_Account]=B.[Client Account] where A.ClientNr is NULL"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(28, "Update ClientNr,StartDate in ALL_CONTRACTS_ACCOUNTS from MAK REPORT ALL DATA")
        cmd.CommandText = "Update A Set A.ClientNr=B.[Client No],A.StartDate=B.[Start Date] from [ALL_CONTRACTS_ACCOUNTS] A INNER JOIN [MAK REPORT ALL DATA] B on A.[Contract_Account]=B.[Contract Collateral ID] where A.ClientNr is NULL and B.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(38, "Update ClientNr,StartDate in ALL_CONTRACTS_ACCOUNTS from FRISTEN")
        cmd.CommandText = "Update A Set A.ClientNr=B.Counterparty_No,A.StartDate=B.StartDate from [ALL_CONTRACTS_ACCOUNTS] A INNER JOIN FRISTEN B on A.[Contract_Account]=B.Contract where A.ClientNr is NULL and B.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(78, "Update missing Field Data in RATERISK DETAILS for related PIVOT GRIDS")
        cmd.CommandText = "Update A Set A.ClientNr=B.ClientNr,A.StartDate=B.StartDate from [RATERISK DETAILS] A INNER JOIN [ALL_CONTRACTS_ACCOUNTS] B on A.[ContractClear]=B.[Contract_Account] where A.[RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Update Interest Rate in RATERISK DETAILS
        Me.BgwClientRun.ReportProgress(80, "Update InterestRate and Amounts in RATERISK DETAILS")
        cmd.CommandText = "UPDATE [RATERISK DETAILS] SET InterestRate=0,InterestAmountOrigCur=0,InterestAmountEuro=0 where [RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE A SET A.InterestRate=B.Current_Interest_Rate from [RATERISK DETAILS] A INNER JOIN FRISTEN B on A.[ContractClear]=B.[Contract] and A.[RISK DATE]=B.RiskDate and A.[Next EventDate]=B.EventDate where A.[RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE A SET A.InterestAmountOrigCur=B.OrgCcyAmount, A.InterestAmountEuro=B.EURequ from [RATERISK DETAILS] A INNER JOIN FRISTEN B on A.[ContractClear]=B.[Contract] and A.[RISK DATE]=B.RiskDate and A.[Next EventDate]=B.EventDate where A.[RISK DATE]='" & rdsql & "' and B.[AmountType] in ('Interest')"
        cmd.ExecuteNonQuery()
        'Update Business Types
        cmd.CommandText = "Update [RATERISK DETAILS] SET [BusinessType]=NULL where [RISK DATE]='" & rdsql & "' "
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Update A set A.[BusinessType]=B.BusinessTypeName from [RATERISK DETAILS] A INNER JOIN BusinessTypesCreditPortfolioDetails B on A.[ContractClear]=B.[Contract Collateral ID] and A.[RISK DATE]=B.RiskDate where A.[RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Update A set A.[BusinessType]=B.BusinessTypeName from [RATERISK DETAILS] A INNER JOIN BusinessTypesCreditPortfolioDetails B on A.[ContractClear]=B.[GL Master / Account Type] and A.[RISK DATE]=B.RiskDate where A.[BusinessType] is NULL and  A.[RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Update [RATERISK DETAILS] set [BusinessType]='CUSTOMER ACCOUNT - DEBIT BALANCE' where [Contract Type] in ('CAAC') and Type in ('Assets') and [BusinessType] is NULL and [RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Update A set A.[BusinessType]=B.BusinessTypeName from [RATERISK DETAILS] A INNER JOIN BusinessTypesLiabilitiesDetails B on A.[ContractClear]=B.[Contract Collateral ID] and A.[RISK DATE]=B.RiskDate where A.[RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Update [RATERISK DETAILS] set [BusinessType]='FX TRANSACTIONS' where [Contract Type] in ('FXD','FXMK') and [BusinessType] is NULL and [RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE [RATERISK DETAILS] set BusinessType='BANK NOSTRO ACCOUNTS' where [Contract Type] in ('NOSTRO') and BusinessType is NULL and [RISK DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(8, "LIQUIDITY OVERVIEW DATA COLLECTION finished ")
    End Sub

    Private Sub UPDATE_AWVz14z15() 'ONLY IN SCHEDULE TASK
        CurrentClientProcedure = "UPDATE AWVz14z15 RELEVANT DATA"

        Me.BgwClientRun.ReportProgress(8, "Update Exhange Rates in AWVz1415Relevant Data - Exchange Rate Data = Current Interest Coupon Period End Date ")
        cmd.CommandText = "Update A set A.[ExchangeRate]=B.[MIDDLE RATE] from [AWVz1415RelevantData] A INNER JOIN [EXCHANGE RATES OCBS] B on A.[OrigCCY]=B.[CURRENCY CODE] and A.[Current Interest Coupon Period End Date]=B.[EXCHANGE RATE DATE] where  A.[IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0) "
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(8, "Update Interest Amounts in AWVz1415RelevantData only for Foreign Currencies Contracts")
        cmd.CommandText = "Update [AWVz1415RelevantData] set [Interest Coupon Amount EUR Equ]=Round([Interest Coupon Amount OrigCCY]/[ExchangeRate],2) where [OrigCCY] not in ('EUR') and [Interest Coupon Amount OrigCCY]<>0 and [ExchangeRate]<>1 and [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0) "
        cmd.ExecuteNonQuery()
        'Summen für AZW Z14 und Z15 auf NULL Stellen
        Me.BgwClientRun.ReportProgress(12, "Set CountrySumAmount to zero")
        cmd.CommandText = "UPDATE [AWVz14] SET [CountrySumAmount]=0 where [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0) "
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE [AWVz15] SET [CountrySumAmount]=0 where [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(12, "Recalculate Country Sums for AWVz14")
        cmd.CommandText = "UPDATE A SET A.[CountrySumAmount]=B.S from [AWVz14] A INNER JOIN (Select [CountryCode],SUM([Interest Coupon Amount EUR Equ]) as S from [AWVz1415RelevantData] where [Class]='Assets' and [IdZ14Z15Meldemonat]= DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0) GROUP BY [CountryCode])B on A.[COUNTRY CODE]=B.CountryCode where A.[IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE [AWVz14] set [CountrySumAmount]=0 where [CountrySumAmount] is NULL and [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(12, "Recalculate Country Sums for AWVz15")
        cmd.CommandText = "UPDATE A SET A.[CountrySumAmount]=B.S from [AWVz15] A INNER JOIN (Select [CountryCode],SUM([Interest Coupon Amount EUR Equ]) as S from [AWVz1415RelevantData] where [Class]='Liabilities' and [IdZ14Z15Meldemonat]= DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0) GROUP BY [CountryCode])B on A.[COUNTRY CODE]=B.CountryCode where A.[IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE [AWVz15] set [CountrySumAmount]=0 where [CountrySumAmount] is NULL and [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
        cmd.ExecuteNonQuery()
        'Handling of Negative Interest at the last day of month
        cmd.CommandText = "SELECT DATEADD(d,-1,DATEADD(mm, DATEDIFF(m,0,'" & rdsql & "')+1,0))"
        Dim MeldeMonatLastDay As Date = cmd.ExecuteScalar
        If IsLastDay(rd) = True Then
            Me.BgwClientRun.ReportProgress(15, "Handling Negative Interests - If Country Sum <0 then insert country to Z4 and delete negative amount in AWV Z14 and AWV Z15")
            cmd.CommandText = "INSERT INTO [AWVz4DIKAPPOSTEN]([DIKA_BELEGART],[DIKA_KENNZAHL],[DIKA_ZAHLUNGSZWECK],[DIKA_ISOLAND],[DIKA_ISOLAND_NAME],[DIKA_VERRKZ],[DIKA_BETRAG],[DIKA_MeldeMonat]) Select '2','533','NEGATIV ZINSEN',[COUNTRY CODE],[COUNTRY NAME],'V',ABS([CountrySumAmount]),[IdZ14Z15Meldemonat] from [AWVz14] where [CountrySumAmount]<0 and [COUNTRY CODE] not in ('DE') and [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "INSERT INTO [AWVz4DIKAPPOSTEN]([DIKA_BELEGART],[DIKA_KENNZAHL],[DIKA_ZAHLUNGSZWECK],[DIKA_ISOLAND],[DIKA_ISOLAND_NAME],[DIKA_VERRKZ],[DIKA_BETRAG],[DIKA_MeldeMonat]) Select '1','533','NEGATIV ZINSEN',[COUNTRY CODE],[COUNTRY NAME],'V',ABS([CountrySumAmount]),[IdZ14Z15Meldemonat] from [AWVz15] where [CountrySumAmount]<0 and [COUNTRY CODE] not in ('DE') and [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE from [AWVz14]  where [CountrySumAmount]<0 and [COUNTRY CODE] not in ('DE') and [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "DELETE from [AWVz15]  where [CountrySumAmount]<0 and [COUNTRY CODE] not in ('DE') and [IdZ14Z15Meldemonat]=DATEADD(m, DATEDIFF(m, 0, '" & rdsql & "'), 0)"
            cmd.ExecuteNonQuery()
        End If
        If MeldeMonatLastDay = rd Then
        End If
        Me.BgwClientRun.ReportProgress(5, "UPDATE AWVz14z15 RELEVANT DATA finished")

    End Sub 'ONLY IN SCHEDULE TASK

    Private Sub LOAD_LOANS_TRANSACTIONS()
        CurrentClientProcedure = "LOAD ALL LOANS TRANSACTIONS"
        Me.BgwClientRun.ReportProgress(8, "Run SQL Stored Procedure:LOANS_TRANSACTIONS_ALL ")
        cmd.CommandText = "exec [LOANS_TRANSACTIONS_ALL] "
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(8, "LOAD ALL LOANS TRANSACTIONS finished ")
    End Sub 'ONLY IN SCHEDULE TASK

    Private Sub NOSTRO_RECONCILIATION()
        CurrentClientProcedure = "NOSTRO ACCOUNT RECONCILIATION"
        Me.BgwClientRun.ReportProgress(10, "Starting Nostro reconciliation")
        'cmd.CommandText = "exec [RECONCILE_NOSTRO_ACCOUNTS_CREATE_TEMP_TABLES]"
        'cmd.ExecuteNonQuery()
        Me.QueryText = "Select [INTERNAL ACCOUNT] from [SSIS] where [INTERNAL ACCOUNT] is not NULL and [VALID]='Y' ORDER BY ID asc"
        da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        dt = New System.Data.DataTable()
        da.Fill(dt)
        For i = 0 To dt.Rows.Count - 1
            If dt.Rows.Count > 0 Then
                Dim InternalNostroAccount As String = dt.Rows.Item(i).Item("INTERNAL ACCOUNT")
                Me.BgwClientRun.ReportProgress(20 + i, "Starting Nostro reconciliation for Internal Account: " & InternalNostroAccount)
                cmd.CommandText = "exec [RECONCILE_NOSTRO_ACCOUNTS] @RISKDATE='" & rdsql & "', @INTERNAL_NOSTRO_ACCOUNT='" & InternalNostroAccount & "' "
                cmd.ExecuteNonQuery()
            End If
        Next
        'cmd.CommandText = "DROP TABLE [NOSTRO_ACC_RECONCILIATIONS_Temp]"
        'cmd.ExecuteNonQuery()
        'cmd.CommandText = "DROP TABLE [NOSTRO_ACC_RECONCILIATIONS_INTERNAL_Temp]"
        'cmd.ExecuteNonQuery()
        'cmd.CommandText = "DROP TABLE SWIFT_ACC_STATEMENTS_Temp"
        'cmd.ExecuteNonQuery()

        'Me.QueryText = "Select * from [NOSTRO_ACC_RECONCILIATIONS] where Reconciled='N' and ABS([Amount_IB]) in (Select ABS(Amount) from SWIFT_ACC_STATEMENTS where BookingDate='" & rdsql & "' and Reconciled='N') and ValueDate_IB in (Select ValueDate from SWIFT_ACC_STATEMENTS where BookingDate='" & rdsql & "' and Reconciled='N') and [AccountNr_Internal]='9000902011' and [BookingDate_IB]='" & rdsql & "' order by ABS([Amount_IB]) asc"
        'da = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        'dt = New System.Data.DataTable()
        'da.Fill(dt)

        'Me.QueryText = "Select * from SWIFT_ACC_STATEMENTS where Reconciled='N' and ABS([Amount]) in (Select ABS(Amount_IB) from [NOSTRO_ACC_RECONCILIATIONS] where [BookingDate_IB]='" & rdsql & "' and Reconciled='N') and ValueDate in (Select ValueDate_IB from [NOSTRO_ACC_RECONCILIATIONS] where [BookingDate_IB]='" & rdsql & "' and Reconciled='N') and InternalAccount='9000902011' and [BookingDate]='" & rdsql & "' order by ABS([Amount]) asc"
        'da1 = New SqlDataAdapter(Me.QueryText.Trim(), conn)
        'dt1 = New System.Data.DataTable()
        'da1.Fill(dt1)

        'If dt.Rows.Count > 0 AndAlso dt1.Rows.Count > 0 AndAlso dt.Rows.Count = dt1.Rows.Count Then
        'For i = 0 To dt.Rows.Count - 1
        'cmd.CommandText = "UPDATE [NOSTRO_ACC_RECONCILIATIONS] SET Reconciled='N'+ '" & i & "' where ID='" & dt.Rows.Item(i).Item("ID") & "'"
        'cmd.ExecuteNonQuery()
        'Next
        'For y = 0 To dt1.Rows.Count - 1
        'cmd.CommandText = "UPDATE SWIFT_ACC_STATEMENTS  Set Reconciled='N'+ '" & y & "' where ID='" & dt1.Rows.Item(y).Item("ID") & "'"
        'cmd.ExecuteNonQuery()
        'Next
        'End If
        'cmd.CommandText = "UPDATE A set A.ID_EB=B.ID,A.AccountNr_External=B.AccountIdentification,A.BookingDate_EB=B.BookingDate,A.ValueDate_EB=B.ValueDate,A.CCY_EB=B.CUR,A.Amount_EB=B.Amount,A.ReferenceServiInstitution_EB=B.ReferenceServiInstitution,A.SupplementaryDetails_EB=B.SupplementaryDetails,A.Reconciled='Y' ,A.Reconciled_Tag='A' from [NOSTRO_ACC_RECONCILIATIONS] A INNER JOIN SWIFT_ACC_STATEMENTS B on A.Reconciled=B.Reconciled  where A.Reconciled not in ('Y','N') and B.Reconciled not in ('Y','N')"
        'cmd.ExecuteNonQuery()
        'cmd.CommandText = "UPDATE A Set A.Reconciled='Y' from SWIFT_ACC_STATEMENTS  A INNER JOIN [NOSTRO_ACC_RECONCILIATIONS] B on A.ID=B.ID_EB"
        'cmd.ExecuteNonQuery()

    End Sub 'TEST

    Private Sub releaseObject(ByVal obj As Object)
        Try
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj)
            obj = Nothing
        Catch ex As Exception
            obj = Nothing
        Finally
            GC.Collect()
        End Try
    End Sub

    Function IsLastDay(ByVal myDate As Date) As Boolean
        Return myDate.Day = Date.DaysInMonth(myDate.Year, myDate.Month)
    End Function

    Private Sub TEST_FX_CREDIT_EQUIV_INPUT_DATE()

        'TREASURY FX CREDIT EQUIVALENT CALCULATION- Based on Input Date
        cmd.CommandText = "DELETE  FROM [FX CREDIT EQUIVALENT Details REAL TIME] where [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "DELETE  FROM [FX CREDIT EQUIVALENT Basic REAL TIME] where [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Import Data in details
        Me.BgwClientRun.ReportProgress(2, "Insert Data in FX CREDIT EQUIVALENT Details REAL TIME from FX DAILY REVALUATION where DealType in (FW,SW) and MaturityDate > RiskDate for " & rd)
        cmd.CommandText = "INSERT INTO [FX CREDIT EQUIVALENT Details REAL TIME]([ContractType],[Contract],[Client_Name],[Client_No],[TradeDate],[StartDate],[Final_Maturity_Date],[AmountType],[OrgCcy],[OrgCcyAmount],[RiskDate])SELECT [ContractType],[ContractNr],[ClientName],[ClientNo],[InputDate],[ValueDate],[MaturityDate],'Bank Buy Amount',[BuyCCY],[BuyAmount],[RiskDate] from [FX DAILY REVALUATION] where [DealType] in ('FW','SW') and [MaturityDate]>[RiskDate] and [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Update Client Group in Details
        Me.BgwClientRun.ReportProgress(3, "Update Client Group Nr. and client Group Name in FX CREDIT EQUIVALENT Details REAL TIME from CUSTOMER_RATING")
        cmd.CommandText = "UPDATE A SET A.[ClientGroup]=B.[ClientGroup],A.[ClientGroupName]=B.[ClientGroupName] from [FX CREDIT EQUIVALENT Details REAL TIME] A INNER JOIN [CUSTOMER_RATING] B ON A.[Client_No]=B.[ClientNo] where A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Update Client Group in Details
        Me.BgwClientRun.ReportProgress(4, "Set Client Group and Name to UNDEFINED if Client Nr is NULL")
        cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details REAL TIME] SET [ClientGroup]=999999,[ClientGroupName]='UNDEFINED GROUP' where [Client_No] is NULL and [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(5, "Set Client Group=Client Nr in FX CREDIT EQUIVALENT Details REAL TIME where Client Group is NULL")
        cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details REAL TIME] SET [ClientGroup]=[Client_No],[ClientGroupName]=[Client_Name]  where [ClientGroup] is NULL and [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Update OCBS Exchange Rates-Last working day
        Me.BgwClientRun.ReportProgress(6, "Update Exchange Rates in FX CREDIT EQUIVALENT Details REAL TIME")
        cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details REAL TIME] set [ExchangeRate]=1 where [OrgCcy]='EUR' and [ExchangeRate] is NULL and [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE A SET A.[ExchangeRate]=B.[MIDDLE RATE] from [FX CREDIT EQUIVALENT Details REAL TIME] A INNER JOIN [EXCHANGE RATES OCBS] B ON A.[OrgCcy]=B.[CURRENCY CODE] where A.[ExchangeRate] is NULL and B.[EXCHANGE RATE DATE]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Calculate EuroEquivelant
        Me.BgwClientRun.ReportProgress(7, "Calculate Euro Equivalent nominal amount in FX CREDIT EQUIVALENT Details REAL TIME")
        cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details REAL TIME] set [EURequ]=Round([OrgCcyAmount]/[ExchangeRate],2) where [RiskDate]='" & rdsql & "'"
        cmd.ExecuteScalar()
        'Import Data in Basic
        Me.BgwClientRun.ReportProgress(8, "Import Data in FX CREDIT EQUIVALENT Basic")
        cmd.CommandText = "INSERT INTO [FX CREDIT EQUIVALENT Basic REAL TIME]([RiskDate],[ClientGroup])select [RiskDate],[ClientGroup] from [FX CREDIT EQUIVALENT Details REAL TIME] where [RiskDate]='" & rdsql & "' group by [RiskDate],[ClientGroup]"
        cmd.ExecuteNonQuery()
        'Update Client Group Name
        Me.BgwClientRun.ReportProgress(9, "Update Client Group Name in FX CREDIT EQUIVALENT Basic REAL TIME")
        cmd.CommandText = "UPDATE A SET A.[ClientGroupName]=B.[ClientGroupName] from [FX CREDIT EQUIVALENT Basic REAL TIME] A INNER JOIN [FX CREDIT EQUIVALENT Details REAL TIME] B ON A.[ClientGroup]=B.[ClientGroup] where A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Update IdFX_CRED_EQU_BASIC in FX CREDIT EQUIVALENT Details
        Me.BgwClientRun.ReportProgress(10, "Update IdFX_CRED_EQU_BASIC in FX CREDIT EQUIVALENT Details REAL TIME")
        cmd.CommandText = "UPDATE A set A.[IdFX_CRED_EQU_BASIC]=B.[ID] from [FX CREDIT EQUIVALENT Details REAL TIME] A INNER JOIN [FX CREDIT EQUIVALENT Basic REAL TIME] B ON A.[ClientGroup]=B.[ClientGroup] where A.[RiskDate]=B.[RiskDate] and A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(12, "Update Modified_FinalMaturityDate=If Final_Maturity_Date is MONDAY then - 3 Days else Final_Maturity_Date")
        cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details REAL TIME] set [Modified_Final_Maturity_Date]=(Case when DATENAME(dw,[Final_Maturity_Date]) in ('Monday') then [Final_Maturity_Date]-3 else [Final_Maturity_Date] end)  where  [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        Me.BgwClientRun.ReportProgress(12, "Update MonthToEventStartDate to Years(NOT CONSIDERING LEAP YEARS)")
        cmd.CommandText = "Update [FX CREDIT EQUIVALENT Details REAL TIME] set [MonthToEventStartDate]=dbo.yearDiff([Modified_Final_Maturity_Date],[TradeDate]) where  [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "SELECT * FROM [FX CREDIT EQUIVALENT Details REAL TIME] where [RiskDate]='" & rdsql & "' begin update [FX CREDIT EQUIVALENT Details REAL TIME] set [PercentCalculation]=0.02 where [MonthToEventStartDate]<=1 and [TradeDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details REAL TIME] set [PercentCalculation]=0.05 where [MonthToEventStartDate]>1 and [MonthToEventStartDate]<=2 and [TradeDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "'end begin update [FX CREDIT EQUIVALENT Details REAL TIME] set [PercentCalculation]=0.08 where [MonthToEventStartDate]>2 and [MonthToEventStartDate]<=3 and [TradeDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details REAL TIME] set [PercentCalculation]=0.11 where [MonthToEventStartDate]>3 and [MonthToEventStartDate]<=4 and [TradeDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details REAL TIME] set [PercentCalculation]=0.14 where [MonthToEventStartDate]>4 and [MonthToEventStartDate]<=5 and [TradeDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details REAL TIME] set [PercentCalculation]=0.17 where [MonthToEventStartDate]>5 and [MonthToEventStartDate]<=6 and [Modified_Final_Maturity_Date]<> '" & rdsql & "' and [TradeDate]<= '" & rdsql & "' and [RiskDate]='" & rdsql & "' end begin update [FX CREDIT EQUIVALENT Details REAL TIME] set [PercentCalculation]=0.20 where [MonthToEventStartDate]>6 and [MonthToEventStartDate]<=7 and [TradeDate]<= '" & rdsql & "' and [Modified_Final_Maturity_Date]<> '" & rdsql & "'  and [RiskDate]='" & rdsql & "' end"
        cmd.ExecuteNonQuery()
        'Update EURequCalculated in FX CREDIT EQUIVALENT Details and CreditRiskAmountER
        Me.BgwClientRun.ReportProgress(14, "Update EURequCalculated  and CreditRiskAmountER in FX CREDIT EQUIVALENT Details REAL TIME")
        cmd.CommandText = "UPDATE [FX CREDIT EQUIVALENT Details REAL TIME] set [EURequCalculated]=[EURequ]*[PercentCalculation] where [RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        'Update Sum Fields in FX CREDIT EQUIVALENT Basic
        Me.BgwClientRun.ReportProgress(15, "Update Sum Fields in FX CREDIT EQUIVALENT Basic REAL TIME")
        cmd.CommandText = "UPDATE A SET A.[SumEURequ]=B.S from [FX CREDIT EQUIVALENT Basic REAL TIME] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequ]) as S from [FX CREDIT EQUIVALENT Details REAL TIME] where [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmount]=B.S from [FX CREDIT EQUIVALENT Basic REAL TIME] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details REAL TIME] where [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountTill1Jear]=B.S from [FX CREDIT EQUIVALENT Basic REAL TIME] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details REAL TIME] where [PercentCalculation]=0.02 and [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountOver1Till2Years]=B.S from [FX CREDIT EQUIVALENT Basic REAL TIME] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details REAL TIME] where [PercentCalculation]=0.05 and [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "UPDATE A SET A.[CreditEquivelantAmountOver2Years]=B.S from [FX CREDIT EQUIVALENT Basic REAL TIME] A INNER JOIN (Select [IdFX_CRED_EQU_BASIC],Sum([EURequCalculated]) as S from [FX CREDIT EQUIVALENT Details REAL TIME] where [PercentCalculation]=0.08 and [RiskDate]='" & rdsql & "' group by [IdFX_CRED_EQU_BASIC]) B on A.[ID]=B.[IdFX_CRED_EQU_BASIC] where A.[RiskDate]='" & rdsql & "'"
        cmd.ExecuteNonQuery()
    End Sub

End Class