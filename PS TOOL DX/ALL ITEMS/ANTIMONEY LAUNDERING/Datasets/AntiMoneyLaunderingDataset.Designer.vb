'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("AntiMoneyLaunderingDataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class AntiMoneyLaunderingDataset
    Inherits Global.System.Data.DataSet
    
    Private tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable
    
    Private tableANTIMONEY_LAUND_PAYMENTS_ITEMS As ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ANTIMONEY_LAUND_PAYMENTS_AMOUNTS")) Is Nothing) Then
                MyBase.Tables.Add(New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable(ds.Tables("ANTIMONEY_LAUND_PAYMENTS_AMOUNTS")))
            End If
            If (Not (ds.Tables("ANTIMONEY_LAUND_PAYMENTS_ITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable(ds.Tables("ANTIMONEY_LAUND_PAYMENTS_ITEMS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ANTIMONEY_LAUND_PAYMENTS_AMOUNTS() As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable
        Get
            Return Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ANTIMONEY_LAUND_PAYMENTS_ITEMS() As ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable
        Get
            Return Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As AntiMoneyLaunderingDataset = CType(MyBase.Clone,AntiMoneyLaunderingDataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ANTIMONEY_LAUND_PAYMENTS_AMOUNTS")) Is Nothing) Then
                MyBase.Tables.Add(New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable(ds.Tables("ANTIMONEY_LAUND_PAYMENTS_AMOUNTS")))
            End If
            If (Not (ds.Tables("ANTIMONEY_LAUND_PAYMENTS_ITEMS")) Is Nothing) Then
                MyBase.Tables.Add(New ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable(ds.Tables("ANTIMONEY_LAUND_PAYMENTS_ITEMS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS = CType(MyBase.Tables("ANTIMONEY_LAUND_PAYMENTS_AMOUNTS"),ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS) Is Nothing) Then
                Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.InitVars
            End If
        End If
        Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS = CType(MyBase.Tables("ANTIMONEY_LAUND_PAYMENTS_ITEMS"),ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS) Is Nothing) Then
                Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "AntiMoneyLaunderingDataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/AntiMoneyLaunderingDataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS = New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable()
        MyBase.Tables.Add(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS)
        Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS = New ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable()
        MyBase.Tables.Add(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeANTIMONEY_LAUND_PAYMENTS_AMOUNTS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeANTIMONEY_LAUND_PAYMENTS_ITEMS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As AntiMoneyLaunderingDataset = New AntiMoneyLaunderingDataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEventHandler(ByVal sender As Object, ByVal e As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEventHandler(ByVal sender As Object, ByVal e As ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable
        Inherits Global.System.Data.TypedTableBase(Of ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnEM00KEY0 As Global.System.Data.DataColumn
        
        Private columnClient_Account As Global.System.Data.DataColumn
        
        Private columnEM00KEY1 As Global.System.Data.DataColumn
        
        Private columnEM00KEY2 As Global.System.Data.DataColumn
        
        Private columnOURTRANREFNO As Global.System.Data.DataColumn
        
        Private columnINWARDOUTWARD As Global.System.Data.DataColumn
        
        Private columnMETHOD As Global.System.Data.DataColumn
        
        Private columnRECEIVERBRANCH As Global.System.Data.DataColumn
        
        Private columnRECEIVERID As Global.System.Data.DataColumn
        
        Private columnRECEIVERNAME As Global.System.Data.DataColumn
        
        Private columnRECEIVERSWIFT As Global.System.Data.DataColumn
        
        Private columnSENDERCORBKID As Global.System.Data.DataColumn
        
        Private columnSENDERCORRNAME As Global.System.Data.DataColumn
        
        Private columnSENDERCORRBR As Global.System.Data.DataColumn
        
        Private columnSENDERCORRST As Global.System.Data.DataColumn
        
        Private columnRECRCORRID As Global.System.Data.DataColumn
        
        Private columnRECRCORRNAME As Global.System.Data.DataColumn
        
        Private columnRECRCORRBR As Global.System.Data.DataColumn
        
        Private columnRECRCORRSWIFT As Global.System.Data.DataColumn
        
        Private columnACWITHINSTID As Global.System.Data.DataColumn
        
        Private columnACWITHINSTNA As Global.System.Data.DataColumn
        
        Private columnACWITHINSTBR As Global.System.Data.DataColumn
        
        Private columnACWITHINSTST As Global.System.Data.DataColumn
        
        Private columnBENEFACNO As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTBR As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTID As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTNAME As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTADR1 As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTADR2 As Global.System.Data.DataColumn
        
        Private columnDETOFCHARGE As Global.System.Data.DataColumn
        
        Private columnSETOREINFO As Global.System.Data.DataColumn
        
        Private columnCURRENCYCODE As Global.System.Data.DataColumn
        
        Private columnTRANSACTIONDATE As Global.System.Data.DataColumn
        
        Private columnVALUEDATE As Global.System.Data.DataColumn
        
        Private columnDeal_Amount As Global.System.Data.DataColumn
        
        Private columnEXCHANGE_RATE As Global.System.Data.DataColumn
        
        Private columnDeal_Amount_Euro As Global.System.Data.DataColumn
        
        Private columnHANDLINGFEE As Global.System.Data.DataColumn
        
        Private columnORDERCUSTBR As Global.System.Data.DataColumn
        
        Private columnORDERCUSTID As Global.System.Data.DataColumn
        
        Private columnORDERCUSTNAME As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD1 As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD2 As Global.System.Data.DataColumn
        
        Private columnHOLDFUNC As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD3 As Global.System.Data.DataColumn
        
        Private columnSWIFTINREF As Global.System.Data.DataColumn
        
        Private columnBEMERKUNGEN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ANTIMONEY_LAUND_PAYMENTS_AMOUNTS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EM00KEY0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Client_AccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_Account
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EM00KEY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EM00KEY2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OURTRANREFNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOURTRANREFNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INWARDOUTWARDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINWARDOUTWARD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property METHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMETHOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERBRANCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERBRANCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERSWIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERSWIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORBKIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORBKID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORRBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORRSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRSWIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRSWIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTNAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTNA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFACNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFACNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTADR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTADR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTADR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTADR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DETOFCHARGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETOFCHARGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SETOREINFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETOREINFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURRENCYCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENCYCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSACTIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALUEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALUEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deal_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeal_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXCHANGE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCHANGE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deal_Amount_EuroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeal_Amount_Euro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HANDLINGFEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHANDLINGFEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HOLDFUNCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOLDFUNC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SWIFTINREFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSWIFTINREF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEMERKUNGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEMERKUNGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow
            Get
                Return CType(Me.Rows(index),ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChanging As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChanged As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowDeleting As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowDeleted As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow(ByVal row As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow( _
                    ByVal EM00KEY0 As String,  _
                    ByVal Client_Account As String,  _
                    ByVal EM00KEY1 As String,  _
                    ByVal EM00KEY2 As String,  _
                    ByVal OURTRANREFNO As String,  _
                    ByVal INWARDOUTWARD As String,  _
                    ByVal METHOD As String,  _
                    ByVal RECEIVERBRANCH As String,  _
                    ByVal RECEIVERID As String,  _
                    ByVal RECEIVERNAME As String,  _
                    ByVal RECEIVERSWIFT As String,  _
                    ByVal SENDERCORBKID As String,  _
                    ByVal SENDERCORRNAME As String,  _
                    ByVal SENDERCORRBR As String,  _
                    ByVal SENDERCORRST As String,  _
                    ByVal RECRCORRID As String,  _
                    ByVal RECRCORRNAME As String,  _
                    ByVal RECRCORRBR As String,  _
                    ByVal RECRCORRSWIFT As String,  _
                    ByVal ACWITHINSTID As String,  _
                    ByVal ACWITHINSTNA As String,  _
                    ByVal ACWITHINSTBR As String,  _
                    ByVal ACWITHINSTST As String,  _
                    ByVal BENEFACNO As String,  _
                    ByVal BENEFCUSTBR As String,  _
                    ByVal BENEFCUSTID As String,  _
                    ByVal BENEFCUSTNAME As String,  _
                    ByVal BENEFCUSTADR1 As String,  _
                    ByVal BENEFCUSTADR2 As String,  _
                    ByVal DETOFCHARGE As String,  _
                    ByVal SETOREINFO As String,  _
                    ByVal CURRENCYCODE As String,  _
                    ByVal TRANSACTIONDATE As Date,  _
                    ByVal VALUEDATE As Date,  _
                    ByVal Deal_Amount As Double,  _
                    ByVal EXCHANGE_RATE As Double,  _
                    ByVal Deal_Amount_Euro As Double,  _
                    ByVal HANDLINGFEE As Double,  _
                    ByVal ORDERCUSTBR As String,  _
                    ByVal ORDERCUSTID As String,  _
                    ByVal ORDERCUSTNAME As String,  _
                    ByVal ORDERCUSTADD1 As String,  _
                    ByVal ORDERCUSTADD2 As String,  _
                    ByVal HOLDFUNC As String,  _
                    ByVal ORDERCUSTADD3 As String,  _
                    ByVal SWIFTINREF As String,  _
                    ByVal BEMERKUNGEN As String) As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow
            Dim rowANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow = CType(Me.NewRow,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, EM00KEY0, Client_Account, EM00KEY1, EM00KEY2, OURTRANREFNO, INWARDOUTWARD, METHOD, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME, RECEIVERSWIFT, SENDERCORBKID, SENDERCORRNAME, SENDERCORRBR, SENDERCORRST, RECRCORRID, RECRCORRNAME, RECRCORRBR, RECRCORRSWIFT, ACWITHINSTID, ACWITHINSTNA, ACWITHINSTBR, ACWITHINSTST, BENEFACNO, BENEFCUSTBR, BENEFCUSTID, BENEFCUSTNAME, BENEFCUSTADR1, BENEFCUSTADR2, DETOFCHARGE, SETOREINFO, CURRENCYCODE, TRANSACTIONDATE, VALUEDATE, Deal_Amount, EXCHANGE_RATE, Deal_Amount_Euro, HANDLINGFEE, ORDERCUSTBR, ORDERCUSTID, ORDERCUSTNAME, ORDERCUSTADD1, ORDERCUSTADD2, HOLDFUNC, ORDERCUSTADD3, SWIFTINREF, BEMERKUNGEN}
            rowANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
            Return rowANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable = CType(MyBase.Clone,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnEM00KEY0 = MyBase.Columns("EM00KEY0")
            Me.columnClient_Account = MyBase.Columns("Client Account")
            Me.columnEM00KEY1 = MyBase.Columns("EM00KEY1")
            Me.columnEM00KEY2 = MyBase.Columns("EM00KEY2")
            Me.columnOURTRANREFNO = MyBase.Columns("OURTRANREFNO")
            Me.columnINWARDOUTWARD = MyBase.Columns("INWARDOUTWARD")
            Me.columnMETHOD = MyBase.Columns("METHOD")
            Me.columnRECEIVERBRANCH = MyBase.Columns("RECEIVERBRANCH")
            Me.columnRECEIVERID = MyBase.Columns("RECEIVERID")
            Me.columnRECEIVERNAME = MyBase.Columns("RECEIVERNAME")
            Me.columnRECEIVERSWIFT = MyBase.Columns("RECEIVERSWIFT")
            Me.columnSENDERCORBKID = MyBase.Columns("SENDERCORBKID")
            Me.columnSENDERCORRNAME = MyBase.Columns("SENDERCORRNAME")
            Me.columnSENDERCORRBR = MyBase.Columns("SENDERCORRBR")
            Me.columnSENDERCORRST = MyBase.Columns("SENDERCORRST")
            Me.columnRECRCORRID = MyBase.Columns("RECRCORRID")
            Me.columnRECRCORRNAME = MyBase.Columns("RECRCORRNAME")
            Me.columnRECRCORRBR = MyBase.Columns("RECRCORRBR")
            Me.columnRECRCORRSWIFT = MyBase.Columns("RECRCORRSWIFT")
            Me.columnACWITHINSTID = MyBase.Columns("ACWITHINSTID")
            Me.columnACWITHINSTNA = MyBase.Columns("ACWITHINSTNA")
            Me.columnACWITHINSTBR = MyBase.Columns("ACWITHINSTBR")
            Me.columnACWITHINSTST = MyBase.Columns("ACWITHINSTST")
            Me.columnBENEFACNO = MyBase.Columns("BENEFACNO")
            Me.columnBENEFCUSTBR = MyBase.Columns("BENEFCUSTBR")
            Me.columnBENEFCUSTID = MyBase.Columns("BENEFCUSTID")
            Me.columnBENEFCUSTNAME = MyBase.Columns("BENEFCUSTNAME")
            Me.columnBENEFCUSTADR1 = MyBase.Columns("BENEFCUSTADR1")
            Me.columnBENEFCUSTADR2 = MyBase.Columns("BENEFCUSTADR2")
            Me.columnDETOFCHARGE = MyBase.Columns("DETOFCHARGE")
            Me.columnSETOREINFO = MyBase.Columns("SETOREINFO")
            Me.columnCURRENCYCODE = MyBase.Columns("CURRENCYCODE")
            Me.columnTRANSACTIONDATE = MyBase.Columns("TRANSACTIONDATE")
            Me.columnVALUEDATE = MyBase.Columns("VALUEDATE")
            Me.columnDeal_Amount = MyBase.Columns("Deal Amount")
            Me.columnEXCHANGE_RATE = MyBase.Columns("EXCHANGE_RATE")
            Me.columnDeal_Amount_Euro = MyBase.Columns("Deal Amount Euro")
            Me.columnHANDLINGFEE = MyBase.Columns("HANDLINGFEE")
            Me.columnORDERCUSTBR = MyBase.Columns("ORDERCUSTBR")
            Me.columnORDERCUSTID = MyBase.Columns("ORDERCUSTID")
            Me.columnORDERCUSTNAME = MyBase.Columns("ORDERCUSTNAME")
            Me.columnORDERCUSTADD1 = MyBase.Columns("ORDERCUSTADD1")
            Me.columnORDERCUSTADD2 = MyBase.Columns("ORDERCUSTADD2")
            Me.columnHOLDFUNC = MyBase.Columns("HOLDFUNC")
            Me.columnORDERCUSTADD3 = MyBase.Columns("ORDERCUSTADD3")
            Me.columnSWIFTINREF = MyBase.Columns("SWIFTINREF")
            Me.columnBEMERKUNGEN = MyBase.Columns("BEMERKUNGEN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnEM00KEY0 = New Global.System.Data.DataColumn("EM00KEY0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY0)
            Me.columnClient_Account = New Global.System.Data.DataColumn("Client Account", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_Account)
            Me.columnEM00KEY1 = New Global.System.Data.DataColumn("EM00KEY1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY1)
            Me.columnEM00KEY2 = New Global.System.Data.DataColumn("EM00KEY2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY2)
            Me.columnOURTRANREFNO = New Global.System.Data.DataColumn("OURTRANREFNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOURTRANREFNO)
            Me.columnINWARDOUTWARD = New Global.System.Data.DataColumn("INWARDOUTWARD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINWARDOUTWARD)
            Me.columnMETHOD = New Global.System.Data.DataColumn("METHOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMETHOD)
            Me.columnRECEIVERBRANCH = New Global.System.Data.DataColumn("RECEIVERBRANCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERBRANCH)
            Me.columnRECEIVERID = New Global.System.Data.DataColumn("RECEIVERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERID)
            Me.columnRECEIVERNAME = New Global.System.Data.DataColumn("RECEIVERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERNAME)
            Me.columnRECEIVERSWIFT = New Global.System.Data.DataColumn("RECEIVERSWIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERSWIFT)
            Me.columnSENDERCORBKID = New Global.System.Data.DataColumn("SENDERCORBKID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORBKID)
            Me.columnSENDERCORRNAME = New Global.System.Data.DataColumn("SENDERCORRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRNAME)
            Me.columnSENDERCORRBR = New Global.System.Data.DataColumn("SENDERCORRBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRBR)
            Me.columnSENDERCORRST = New Global.System.Data.DataColumn("SENDERCORRST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRST)
            Me.columnRECRCORRID = New Global.System.Data.DataColumn("RECRCORRID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRID)
            Me.columnRECRCORRNAME = New Global.System.Data.DataColumn("RECRCORRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRNAME)
            Me.columnRECRCORRBR = New Global.System.Data.DataColumn("RECRCORRBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRBR)
            Me.columnRECRCORRSWIFT = New Global.System.Data.DataColumn("RECRCORRSWIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRSWIFT)
            Me.columnACWITHINSTID = New Global.System.Data.DataColumn("ACWITHINSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTID)
            Me.columnACWITHINSTNA = New Global.System.Data.DataColumn("ACWITHINSTNA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTNA)
            Me.columnACWITHINSTBR = New Global.System.Data.DataColumn("ACWITHINSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTBR)
            Me.columnACWITHINSTST = New Global.System.Data.DataColumn("ACWITHINSTST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTST)
            Me.columnBENEFACNO = New Global.System.Data.DataColumn("BENEFACNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFACNO)
            Me.columnBENEFCUSTBR = New Global.System.Data.DataColumn("BENEFCUSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTBR)
            Me.columnBENEFCUSTID = New Global.System.Data.DataColumn("BENEFCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTID)
            Me.columnBENEFCUSTNAME = New Global.System.Data.DataColumn("BENEFCUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTNAME)
            Me.columnBENEFCUSTADR1 = New Global.System.Data.DataColumn("BENEFCUSTADR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTADR1)
            Me.columnBENEFCUSTADR2 = New Global.System.Data.DataColumn("BENEFCUSTADR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTADR2)
            Me.columnDETOFCHARGE = New Global.System.Data.DataColumn("DETOFCHARGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETOFCHARGE)
            Me.columnSETOREINFO = New Global.System.Data.DataColumn("SETOREINFO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETOREINFO)
            Me.columnCURRENCYCODE = New Global.System.Data.DataColumn("CURRENCYCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENCYCODE)
            Me.columnTRANSACTIONDATE = New Global.System.Data.DataColumn("TRANSACTIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSACTIONDATE)
            Me.columnVALUEDATE = New Global.System.Data.DataColumn("VALUEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALUEDATE)
            Me.columnDeal_Amount = New Global.System.Data.DataColumn("Deal Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeal_Amount)
            Me.columnEXCHANGE_RATE = New Global.System.Data.DataColumn("EXCHANGE_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCHANGE_RATE)
            Me.columnDeal_Amount_Euro = New Global.System.Data.DataColumn("Deal Amount Euro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeal_Amount_Euro)
            Me.columnHANDLINGFEE = New Global.System.Data.DataColumn("HANDLINGFEE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHANDLINGFEE)
            Me.columnORDERCUSTBR = New Global.System.Data.DataColumn("ORDERCUSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTBR)
            Me.columnORDERCUSTID = New Global.System.Data.DataColumn("ORDERCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTID)
            Me.columnORDERCUSTNAME = New Global.System.Data.DataColumn("ORDERCUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTNAME)
            Me.columnORDERCUSTADD1 = New Global.System.Data.DataColumn("ORDERCUSTADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD1)
            Me.columnORDERCUSTADD2 = New Global.System.Data.DataColumn("ORDERCUSTADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD2)
            Me.columnHOLDFUNC = New Global.System.Data.DataColumn("HOLDFUNC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOLDFUNC)
            Me.columnORDERCUSTADD3 = New Global.System.Data.DataColumn("ORDERCUSTADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD3)
            Me.columnSWIFTINREF = New Global.System.Data.DataColumn("SWIFTINREF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSWIFTINREF)
            Me.columnBEMERKUNGEN = New Global.System.Data.DataColumn("BEMERKUNGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEMERKUNGEN)
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnEM00KEY0.MaxLength = 255
            Me.columnClient_Account.MaxLength = 255
            Me.columnEM00KEY1.MaxLength = 255
            Me.columnEM00KEY2.MaxLength = 255
            Me.columnOURTRANREFNO.MaxLength = 255
            Me.columnINWARDOUTWARD.MaxLength = 255
            Me.columnMETHOD.MaxLength = 255
            Me.columnRECEIVERBRANCH.MaxLength = 255
            Me.columnRECEIVERID.MaxLength = 255
            Me.columnRECEIVERNAME.MaxLength = 255
            Me.columnRECEIVERSWIFT.MaxLength = 255
            Me.columnSENDERCORBKID.MaxLength = 255
            Me.columnSENDERCORRNAME.MaxLength = 255
            Me.columnSENDERCORRBR.MaxLength = 255
            Me.columnSENDERCORRST.MaxLength = 255
            Me.columnRECRCORRID.MaxLength = 255
            Me.columnRECRCORRNAME.MaxLength = 255
            Me.columnRECRCORRBR.MaxLength = 255
            Me.columnRECRCORRSWIFT.MaxLength = 255
            Me.columnACWITHINSTID.MaxLength = 255
            Me.columnACWITHINSTNA.MaxLength = 255
            Me.columnACWITHINSTBR.MaxLength = 255
            Me.columnACWITHINSTST.MaxLength = 255
            Me.columnBENEFACNO.MaxLength = 255
            Me.columnBENEFCUSTBR.MaxLength = 255
            Me.columnBENEFCUSTID.MaxLength = 255
            Me.columnBENEFCUSTNAME.MaxLength = 255
            Me.columnBENEFCUSTADR1.MaxLength = 255
            Me.columnBENEFCUSTADR2.MaxLength = 255
            Me.columnDETOFCHARGE.MaxLength = 255
            Me.columnSETOREINFO.MaxLength = 255
            Me.columnCURRENCYCODE.MaxLength = 255
            Me.columnORDERCUSTBR.MaxLength = 255
            Me.columnORDERCUSTID.MaxLength = 255
            Me.columnORDERCUSTNAME.MaxLength = 255
            Me.columnORDERCUSTADD1.MaxLength = 255
            Me.columnORDERCUSTADD2.MaxLength = 255
            Me.columnHOLDFUNC.MaxLength = 255
            Me.columnORDERCUSTADD3.MaxLength = 255
            Me.columnSWIFTINREF.MaxLength = 255
            Me.columnBEMERKUNGEN.MaxLength = 1073741823
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow() As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow
            Return CType(Me.NewRow,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangedEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChanged(Me, New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangingEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChanging(Me, New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowDeletedEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowDeleted(Me, New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowDeletingEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowDeleting(Me, New ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow(ByVal row As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As AntiMoneyLaunderingDataset = New AntiMoneyLaunderingDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable
        Inherits Global.System.Data.TypedTableBase(Of ANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnEM00KEY0 As Global.System.Data.DataColumn
        
        Private columnClient_Account As Global.System.Data.DataColumn
        
        Private columnEM00KEY1 As Global.System.Data.DataColumn
        
        Private columnEM00KEY2 As Global.System.Data.DataColumn
        
        Private columnOURTRANREFNO As Global.System.Data.DataColumn
        
        Private columnINWARDOUTWARD As Global.System.Data.DataColumn
        
        Private columnMETHOD As Global.System.Data.DataColumn
        
        Private columnRECEIVERBRANCH As Global.System.Data.DataColumn
        
        Private columnRECEIVERID As Global.System.Data.DataColumn
        
        Private columnRECEIVERNAME As Global.System.Data.DataColumn
        
        Private columnRECEIVERSWIFT As Global.System.Data.DataColumn
        
        Private columnSENDERCORBKID As Global.System.Data.DataColumn
        
        Private columnSENDERCORRNAME As Global.System.Data.DataColumn
        
        Private columnSENDERCORRBR As Global.System.Data.DataColumn
        
        Private columnSENDERCORRST As Global.System.Data.DataColumn
        
        Private columnRECRCORRID As Global.System.Data.DataColumn
        
        Private columnRECRCORRNAME As Global.System.Data.DataColumn
        
        Private columnRECRCORRBR As Global.System.Data.DataColumn
        
        Private columnRECRCORRSWIFT As Global.System.Data.DataColumn
        
        Private columnACWITHINSTID As Global.System.Data.DataColumn
        
        Private columnACWITHINSTNA As Global.System.Data.DataColumn
        
        Private columnACWITHINSTBR As Global.System.Data.DataColumn
        
        Private columnACWITHINSTST As Global.System.Data.DataColumn
        
        Private columnBENEFACNO As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTBR As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTID As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTNAME As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTADR1 As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTADR2 As Global.System.Data.DataColumn
        
        Private columnDETOFCHARGE As Global.System.Data.DataColumn
        
        Private columnSETOREINFO As Global.System.Data.DataColumn
        
        Private columnCURRENCYCODE As Global.System.Data.DataColumn
        
        Private columnTRANSACTIONDATE As Global.System.Data.DataColumn
        
        Private columnVALUEDATE As Global.System.Data.DataColumn
        
        Private columnDeal_Amount As Global.System.Data.DataColumn
        
        Private columnEXCHANGE_RATE As Global.System.Data.DataColumn
        
        Private columnDeal_Amount_Euro As Global.System.Data.DataColumn
        
        Private columnHANDLINGFEE As Global.System.Data.DataColumn
        
        Private columnORDERCUSTBR As Global.System.Data.DataColumn
        
        Private columnORDERCUSTID As Global.System.Data.DataColumn
        
        Private columnORDERCUSTNAME As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD1 As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD2 As Global.System.Data.DataColumn
        
        Private columnHOLDFUNC As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD3 As Global.System.Data.DataColumn
        
        Private columnSWIFTINREF As Global.System.Data.DataColumn
        
        Private columnBEMERKUNGEN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ANTIMONEY_LAUND_PAYMENTS_ITEMS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EM00KEY0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Client_AccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_Account
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EM00KEY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EM00KEY2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OURTRANREFNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOURTRANREFNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INWARDOUTWARDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINWARDOUTWARD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property METHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMETHOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERBRANCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERBRANCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECEIVERSWIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERSWIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORBKIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORBKID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORRBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SENDERCORRSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RECRCORRSWIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRSWIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTNAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTNA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFACNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFACNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTADR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTADR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTADR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTADR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DETOFCHARGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETOFCHARGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SETOREINFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETOREINFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURRENCYCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENCYCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSACTIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALUEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALUEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deal_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeal_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXCHANGE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCHANGE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deal_Amount_EuroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeal_Amount_Euro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HANDLINGFEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHANDLINGFEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HOLDFUNCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOLDFUNC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SWIFTINREFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSWIFTINREF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEMERKUNGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEMERKUNGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow
            Get
                Return CType(Me.Rows(index),ANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChanging As ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChanged As ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_ITEMSRowDeleting As ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ANTIMONEY_LAUND_PAYMENTS_ITEMSRowDeleted As ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddANTIMONEY_LAUND_PAYMENTS_ITEMSRow(ByVal row As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddANTIMONEY_LAUND_PAYMENTS_ITEMSRow( _
                    ByVal EM00KEY0 As String,  _
                    ByVal Client_Account As String,  _
                    ByVal EM00KEY1 As String,  _
                    ByVal EM00KEY2 As String,  _
                    ByVal OURTRANREFNO As String,  _
                    ByVal INWARDOUTWARD As String,  _
                    ByVal METHOD As String,  _
                    ByVal RECEIVERBRANCH As String,  _
                    ByVal RECEIVERID As String,  _
                    ByVal RECEIVERNAME As String,  _
                    ByVal RECEIVERSWIFT As String,  _
                    ByVal SENDERCORBKID As String,  _
                    ByVal SENDERCORRNAME As String,  _
                    ByVal SENDERCORRBR As String,  _
                    ByVal SENDERCORRST As String,  _
                    ByVal RECRCORRID As String,  _
                    ByVal RECRCORRNAME As String,  _
                    ByVal RECRCORRBR As String,  _
                    ByVal RECRCORRSWIFT As String,  _
                    ByVal ACWITHINSTID As String,  _
                    ByVal ACWITHINSTNA As String,  _
                    ByVal ACWITHINSTBR As String,  _
                    ByVal ACWITHINSTST As String,  _
                    ByVal BENEFACNO As String,  _
                    ByVal BENEFCUSTBR As String,  _
                    ByVal BENEFCUSTID As String,  _
                    ByVal BENEFCUSTNAME As String,  _
                    ByVal BENEFCUSTADR1 As String,  _
                    ByVal BENEFCUSTADR2 As String,  _
                    ByVal DETOFCHARGE As String,  _
                    ByVal SETOREINFO As String,  _
                    ByVal CURRENCYCODE As String,  _
                    ByVal TRANSACTIONDATE As Date,  _
                    ByVal VALUEDATE As Date,  _
                    ByVal Deal_Amount As Double,  _
                    ByVal EXCHANGE_RATE As Double,  _
                    ByVal Deal_Amount_Euro As Double,  _
                    ByVal HANDLINGFEE As Double,  _
                    ByVal ORDERCUSTBR As String,  _
                    ByVal ORDERCUSTID As String,  _
                    ByVal ORDERCUSTNAME As String,  _
                    ByVal ORDERCUSTADD1 As String,  _
                    ByVal ORDERCUSTADD2 As String,  _
                    ByVal HOLDFUNC As String,  _
                    ByVal ORDERCUSTADD3 As String,  _
                    ByVal SWIFTINREF As String,  _
                    ByVal BEMERKUNGEN As String) As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow
            Dim rowANTIMONEY_LAUND_PAYMENTS_ITEMSRow As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow = CType(Me.NewRow,ANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, EM00KEY0, Client_Account, EM00KEY1, EM00KEY2, OURTRANREFNO, INWARDOUTWARD, METHOD, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME, RECEIVERSWIFT, SENDERCORBKID, SENDERCORRNAME, SENDERCORRBR, SENDERCORRST, RECRCORRID, RECRCORRNAME, RECRCORRBR, RECRCORRSWIFT, ACWITHINSTID, ACWITHINSTNA, ACWITHINSTBR, ACWITHINSTST, BENEFACNO, BENEFCUSTBR, BENEFCUSTID, BENEFCUSTNAME, BENEFCUSTADR1, BENEFCUSTADR2, DETOFCHARGE, SETOREINFO, CURRENCYCODE, TRANSACTIONDATE, VALUEDATE, Deal_Amount, EXCHANGE_RATE, Deal_Amount_Euro, HANDLINGFEE, ORDERCUSTBR, ORDERCUSTID, ORDERCUSTNAME, ORDERCUSTADD1, ORDERCUSTADD2, HOLDFUNC, ORDERCUSTADD3, SWIFTINREF, BEMERKUNGEN}
            rowANTIMONEY_LAUND_PAYMENTS_ITEMSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
            Return rowANTIMONEY_LAUND_PAYMENTS_ITEMSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable = CType(MyBase.Clone,ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnEM00KEY0 = MyBase.Columns("EM00KEY0")
            Me.columnClient_Account = MyBase.Columns("Client Account")
            Me.columnEM00KEY1 = MyBase.Columns("EM00KEY1")
            Me.columnEM00KEY2 = MyBase.Columns("EM00KEY2")
            Me.columnOURTRANREFNO = MyBase.Columns("OURTRANREFNO")
            Me.columnINWARDOUTWARD = MyBase.Columns("INWARDOUTWARD")
            Me.columnMETHOD = MyBase.Columns("METHOD")
            Me.columnRECEIVERBRANCH = MyBase.Columns("RECEIVERBRANCH")
            Me.columnRECEIVERID = MyBase.Columns("RECEIVERID")
            Me.columnRECEIVERNAME = MyBase.Columns("RECEIVERNAME")
            Me.columnRECEIVERSWIFT = MyBase.Columns("RECEIVERSWIFT")
            Me.columnSENDERCORBKID = MyBase.Columns("SENDERCORBKID")
            Me.columnSENDERCORRNAME = MyBase.Columns("SENDERCORRNAME")
            Me.columnSENDERCORRBR = MyBase.Columns("SENDERCORRBR")
            Me.columnSENDERCORRST = MyBase.Columns("SENDERCORRST")
            Me.columnRECRCORRID = MyBase.Columns("RECRCORRID")
            Me.columnRECRCORRNAME = MyBase.Columns("RECRCORRNAME")
            Me.columnRECRCORRBR = MyBase.Columns("RECRCORRBR")
            Me.columnRECRCORRSWIFT = MyBase.Columns("RECRCORRSWIFT")
            Me.columnACWITHINSTID = MyBase.Columns("ACWITHINSTID")
            Me.columnACWITHINSTNA = MyBase.Columns("ACWITHINSTNA")
            Me.columnACWITHINSTBR = MyBase.Columns("ACWITHINSTBR")
            Me.columnACWITHINSTST = MyBase.Columns("ACWITHINSTST")
            Me.columnBENEFACNO = MyBase.Columns("BENEFACNO")
            Me.columnBENEFCUSTBR = MyBase.Columns("BENEFCUSTBR")
            Me.columnBENEFCUSTID = MyBase.Columns("BENEFCUSTID")
            Me.columnBENEFCUSTNAME = MyBase.Columns("BENEFCUSTNAME")
            Me.columnBENEFCUSTADR1 = MyBase.Columns("BENEFCUSTADR1")
            Me.columnBENEFCUSTADR2 = MyBase.Columns("BENEFCUSTADR2")
            Me.columnDETOFCHARGE = MyBase.Columns("DETOFCHARGE")
            Me.columnSETOREINFO = MyBase.Columns("SETOREINFO")
            Me.columnCURRENCYCODE = MyBase.Columns("CURRENCYCODE")
            Me.columnTRANSACTIONDATE = MyBase.Columns("TRANSACTIONDATE")
            Me.columnVALUEDATE = MyBase.Columns("VALUEDATE")
            Me.columnDeal_Amount = MyBase.Columns("Deal Amount")
            Me.columnEXCHANGE_RATE = MyBase.Columns("EXCHANGE_RATE")
            Me.columnDeal_Amount_Euro = MyBase.Columns("Deal Amount Euro")
            Me.columnHANDLINGFEE = MyBase.Columns("HANDLINGFEE")
            Me.columnORDERCUSTBR = MyBase.Columns("ORDERCUSTBR")
            Me.columnORDERCUSTID = MyBase.Columns("ORDERCUSTID")
            Me.columnORDERCUSTNAME = MyBase.Columns("ORDERCUSTNAME")
            Me.columnORDERCUSTADD1 = MyBase.Columns("ORDERCUSTADD1")
            Me.columnORDERCUSTADD2 = MyBase.Columns("ORDERCUSTADD2")
            Me.columnHOLDFUNC = MyBase.Columns("HOLDFUNC")
            Me.columnORDERCUSTADD3 = MyBase.Columns("ORDERCUSTADD3")
            Me.columnSWIFTINREF = MyBase.Columns("SWIFTINREF")
            Me.columnBEMERKUNGEN = MyBase.Columns("BEMERKUNGEN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnEM00KEY0 = New Global.System.Data.DataColumn("EM00KEY0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY0)
            Me.columnClient_Account = New Global.System.Data.DataColumn("Client Account", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_Account)
            Me.columnEM00KEY1 = New Global.System.Data.DataColumn("EM00KEY1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY1)
            Me.columnEM00KEY2 = New Global.System.Data.DataColumn("EM00KEY2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY2)
            Me.columnOURTRANREFNO = New Global.System.Data.DataColumn("OURTRANREFNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOURTRANREFNO)
            Me.columnINWARDOUTWARD = New Global.System.Data.DataColumn("INWARDOUTWARD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINWARDOUTWARD)
            Me.columnMETHOD = New Global.System.Data.DataColumn("METHOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMETHOD)
            Me.columnRECEIVERBRANCH = New Global.System.Data.DataColumn("RECEIVERBRANCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERBRANCH)
            Me.columnRECEIVERID = New Global.System.Data.DataColumn("RECEIVERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERID)
            Me.columnRECEIVERNAME = New Global.System.Data.DataColumn("RECEIVERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERNAME)
            Me.columnRECEIVERSWIFT = New Global.System.Data.DataColumn("RECEIVERSWIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERSWIFT)
            Me.columnSENDERCORBKID = New Global.System.Data.DataColumn("SENDERCORBKID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORBKID)
            Me.columnSENDERCORRNAME = New Global.System.Data.DataColumn("SENDERCORRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRNAME)
            Me.columnSENDERCORRBR = New Global.System.Data.DataColumn("SENDERCORRBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRBR)
            Me.columnSENDERCORRST = New Global.System.Data.DataColumn("SENDERCORRST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRST)
            Me.columnRECRCORRID = New Global.System.Data.DataColumn("RECRCORRID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRID)
            Me.columnRECRCORRNAME = New Global.System.Data.DataColumn("RECRCORRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRNAME)
            Me.columnRECRCORRBR = New Global.System.Data.DataColumn("RECRCORRBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRBR)
            Me.columnRECRCORRSWIFT = New Global.System.Data.DataColumn("RECRCORRSWIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRSWIFT)
            Me.columnACWITHINSTID = New Global.System.Data.DataColumn("ACWITHINSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTID)
            Me.columnACWITHINSTNA = New Global.System.Data.DataColumn("ACWITHINSTNA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTNA)
            Me.columnACWITHINSTBR = New Global.System.Data.DataColumn("ACWITHINSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTBR)
            Me.columnACWITHINSTST = New Global.System.Data.DataColumn("ACWITHINSTST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTST)
            Me.columnBENEFACNO = New Global.System.Data.DataColumn("BENEFACNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFACNO)
            Me.columnBENEFCUSTBR = New Global.System.Data.DataColumn("BENEFCUSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTBR)
            Me.columnBENEFCUSTID = New Global.System.Data.DataColumn("BENEFCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTID)
            Me.columnBENEFCUSTNAME = New Global.System.Data.DataColumn("BENEFCUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTNAME)
            Me.columnBENEFCUSTADR1 = New Global.System.Data.DataColumn("BENEFCUSTADR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTADR1)
            Me.columnBENEFCUSTADR2 = New Global.System.Data.DataColumn("BENEFCUSTADR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTADR2)
            Me.columnDETOFCHARGE = New Global.System.Data.DataColumn("DETOFCHARGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETOFCHARGE)
            Me.columnSETOREINFO = New Global.System.Data.DataColumn("SETOREINFO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETOREINFO)
            Me.columnCURRENCYCODE = New Global.System.Data.DataColumn("CURRENCYCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENCYCODE)
            Me.columnTRANSACTIONDATE = New Global.System.Data.DataColumn("TRANSACTIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSACTIONDATE)
            Me.columnVALUEDATE = New Global.System.Data.DataColumn("VALUEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALUEDATE)
            Me.columnDeal_Amount = New Global.System.Data.DataColumn("Deal Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeal_Amount)
            Me.columnEXCHANGE_RATE = New Global.System.Data.DataColumn("EXCHANGE_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCHANGE_RATE)
            Me.columnDeal_Amount_Euro = New Global.System.Data.DataColumn("Deal Amount Euro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeal_Amount_Euro)
            Me.columnHANDLINGFEE = New Global.System.Data.DataColumn("HANDLINGFEE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHANDLINGFEE)
            Me.columnORDERCUSTBR = New Global.System.Data.DataColumn("ORDERCUSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTBR)
            Me.columnORDERCUSTID = New Global.System.Data.DataColumn("ORDERCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTID)
            Me.columnORDERCUSTNAME = New Global.System.Data.DataColumn("ORDERCUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTNAME)
            Me.columnORDERCUSTADD1 = New Global.System.Data.DataColumn("ORDERCUSTADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD1)
            Me.columnORDERCUSTADD2 = New Global.System.Data.DataColumn("ORDERCUSTADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD2)
            Me.columnHOLDFUNC = New Global.System.Data.DataColumn("HOLDFUNC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOLDFUNC)
            Me.columnORDERCUSTADD3 = New Global.System.Data.DataColumn("ORDERCUSTADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD3)
            Me.columnSWIFTINREF = New Global.System.Data.DataColumn("SWIFTINREF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSWIFTINREF)
            Me.columnBEMERKUNGEN = New Global.System.Data.DataColumn("BEMERKUNGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEMERKUNGEN)
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnEM00KEY0.MaxLength = 255
            Me.columnClient_Account.MaxLength = 255
            Me.columnEM00KEY1.MaxLength = 255
            Me.columnEM00KEY2.MaxLength = 255
            Me.columnOURTRANREFNO.MaxLength = 255
            Me.columnINWARDOUTWARD.MaxLength = 255
            Me.columnMETHOD.MaxLength = 255
            Me.columnRECEIVERBRANCH.MaxLength = 255
            Me.columnRECEIVERID.MaxLength = 255
            Me.columnRECEIVERNAME.MaxLength = 255
            Me.columnRECEIVERSWIFT.MaxLength = 255
            Me.columnSENDERCORBKID.MaxLength = 255
            Me.columnSENDERCORRNAME.MaxLength = 255
            Me.columnSENDERCORRBR.MaxLength = 255
            Me.columnSENDERCORRST.MaxLength = 255
            Me.columnRECRCORRID.MaxLength = 255
            Me.columnRECRCORRNAME.MaxLength = 255
            Me.columnRECRCORRBR.MaxLength = 255
            Me.columnRECRCORRSWIFT.MaxLength = 255
            Me.columnACWITHINSTID.MaxLength = 255
            Me.columnACWITHINSTNA.MaxLength = 255
            Me.columnACWITHINSTBR.MaxLength = 255
            Me.columnACWITHINSTST.MaxLength = 255
            Me.columnBENEFACNO.MaxLength = 255
            Me.columnBENEFCUSTBR.MaxLength = 255
            Me.columnBENEFCUSTID.MaxLength = 255
            Me.columnBENEFCUSTNAME.MaxLength = 255
            Me.columnBENEFCUSTADR1.MaxLength = 255
            Me.columnBENEFCUSTADR2.MaxLength = 255
            Me.columnDETOFCHARGE.MaxLength = 255
            Me.columnSETOREINFO.MaxLength = 255
            Me.columnCURRENCYCODE.MaxLength = 255
            Me.columnORDERCUSTBR.MaxLength = 255
            Me.columnORDERCUSTID.MaxLength = 255
            Me.columnORDERCUSTNAME.MaxLength = 255
            Me.columnORDERCUSTADD1.MaxLength = 255
            Me.columnORDERCUSTADD2.MaxLength = 255
            Me.columnHOLDFUNC.MaxLength = 255
            Me.columnORDERCUSTADD3.MaxLength = 255
            Me.columnSWIFTINREF.MaxLength = 255
            Me.columnBEMERKUNGEN.MaxLength = 1073741823
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewANTIMONEY_LAUND_PAYMENTS_ITEMSRow() As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow
            Return CType(Me.NewRow,ANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ANTIMONEY_LAUND_PAYMENTS_ITEMSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangedEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChanged(Me, New ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangingEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChanging(Me, New ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_ITEMSRowDeletedEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_ITEMSRowDeleted(Me, New ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ANTIMONEY_LAUND_PAYMENTS_ITEMSRowDeletingEvent) Is Nothing) Then
                RaiseEvent ANTIMONEY_LAUND_PAYMENTS_ITEMSRowDeleting(Me, New ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEvent(CType(e.Row,ANTIMONEY_LAUND_PAYMENTS_ITEMSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveANTIMONEY_LAUND_PAYMENTS_ITEMSRow(ByVal row As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As AntiMoneyLaunderingDataset = New AntiMoneyLaunderingDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow
        Inherits Global.System.Data.DataRow
        
        Private tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS = CType(Me.Table,ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EM00KEY0() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY0Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY0' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Client_Account() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Client_AccountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client Account' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Client_AccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EM00KEY1() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY1' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EM00KEY2() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY2' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OURTRANREFNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.OURTRANREFNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OURTRANREFNO' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.OURTRANREFNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INWARDOUTWARD() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.INWARDOUTWARDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INWARDOUTWARD' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.INWARDOUTWARDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property METHOD() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.METHODColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'METHOD' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.METHODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERBRANCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERBRANCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERBRANCH' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERBRANCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERID' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERSWIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERSWIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERSWIFT' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERSWIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORBKID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORBKIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORBKID' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORBKIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORRBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRBR' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORRST() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRST' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRID' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRBR' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRSWIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRSWIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRSWIFT' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRSWIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTID' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTNA() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTNAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTNA' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTNAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTBR' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTST() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTST' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFACNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFACNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFACNO' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFACNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTBR' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTID' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTADR1() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTADR1' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTADR2() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTADR2' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DETOFCHARGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.DETOFCHARGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DETOFCHARGE' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.DETOFCHARGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETOREINFO() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SETOREINFOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SETOREINFO' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SETOREINFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURRENCYCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.CURRENCYCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENCYCODE' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.CURRENCYCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSACTIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.TRANSACTIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSACTIONDATE' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.TRANSACTIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VALUEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.VALUEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VALUEDATE' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.VALUEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deal_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deal Amount' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXCHANGE_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EXCHANGE_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXCHANGE_RATE' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EXCHANGE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deal_Amount_Euro() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_Amount_EuroColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deal Amount Euro' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNT"& _ 
                            "S' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_Amount_EuroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HANDLINGFEE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HANDLINGFEEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HANDLINGFEE' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HANDLINGFEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTBR' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTID' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD1' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD2' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HOLDFUNC() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HOLDFUNCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HOLDFUNC' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HOLDFUNCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD3' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SWIFTINREF() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SWIFTINREFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SWIFTINREF' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SWIFTINREFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEMERKUNGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BEMERKUNGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEMERKUNGEN' in table 'ANTIMONEY_LAUND_PAYMENTS_AMOUNTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BEMERKUNGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEM00KEY0Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEM00KEY0Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClient_AccountNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Client_AccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClient_AccountNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Client_AccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEM00KEY1Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEM00KEY1Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEM00KEY2Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEM00KEY2Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EM00KEY2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOURTRANREFNONull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.OURTRANREFNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOURTRANREFNONull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.OURTRANREFNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINWARDOUTWARDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.INWARDOUTWARDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINWARDOUTWARDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.INWARDOUTWARDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMETHODNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.METHODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMETHODNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.METHODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERBRANCHNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERBRANCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERBRANCHNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERBRANCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERSWIFTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERSWIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERSWIFTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECEIVERSWIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORBKIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORBKIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORBKIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORBKIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORRNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORRNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORRBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORRBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORRSTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORRSTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SENDERCORRSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRSWIFTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRSWIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRSWIFTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.RECRCORRSWIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTNANull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTNAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTNANull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTNAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTSTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTSTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ACWITHINSTSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFACNONull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFACNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFACNONull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFACNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTADR1Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTADR1Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTADR2Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTADR2Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BENEFCUSTADR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDETOFCHARGENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.DETOFCHARGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDETOFCHARGENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.DETOFCHARGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSETOREINFONull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SETOREINFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSETOREINFONull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SETOREINFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURRENCYCODENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.CURRENCYCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURRENCYCODENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.CURRENCYCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSACTIONDATENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.TRANSACTIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSACTIONDATENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.TRANSACTIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVALUEDATENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.VALUEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVALUEDATENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.VALUEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeal_AmountNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeal_AmountNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXCHANGE_RATENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EXCHANGE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXCHANGE_RATENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.EXCHANGE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeal_Amount_EuroNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_Amount_EuroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeal_Amount_EuroNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Deal_Amount_EuroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHANDLINGFEENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HANDLINGFEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHANDLINGFEENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HANDLINGFEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTADD1Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTADD1Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTADD2Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTADD2Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHOLDFUNCNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HOLDFUNCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHOLDFUNCNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.HOLDFUNCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTADD3Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTADD3Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.ORDERCUSTADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSWIFTINREFNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SWIFTINREFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSWIFTINREFNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.SWIFTINREFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEMERKUNGENNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BEMERKUNGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEMERKUNGENNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_AMOUNTS.BEMERKUNGENColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ANTIMONEY_LAUND_PAYMENTS_ITEMSRow
        Inherits Global.System.Data.DataRow
        
        Private tableANTIMONEY_LAUND_PAYMENTS_ITEMS As ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS = CType(Me.Table,ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EM00KEY0() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY0Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY0' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Client_Account() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Client_AccountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client Account' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Client_AccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EM00KEY1() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY1' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EM00KEY2() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY2' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OURTRANREFNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.OURTRANREFNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OURTRANREFNO' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.OURTRANREFNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INWARDOUTWARD() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.INWARDOUTWARDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INWARDOUTWARD' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.INWARDOUTWARDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property METHOD() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.METHODColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'METHOD' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.METHODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERBRANCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERBRANCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERBRANCH' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERBRANCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERID' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECEIVERSWIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERSWIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERSWIFT' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERSWIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORBKID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORBKIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORBKID' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORBKIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORRBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRBR' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SENDERCORRST() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRST' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRID' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRBR' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RECRCORRSWIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRSWIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRSWIFT' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRSWIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTID' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTNA() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTNAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTNA' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTNAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTBR' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACWITHINSTST() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTST' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFACNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFACNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFACNO' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFACNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTBR' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTID' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTADR1() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTADR1' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BENEFCUSTADR2() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTADR2' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DETOFCHARGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.DETOFCHARGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DETOFCHARGE' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.DETOFCHARGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SETOREINFO() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SETOREINFOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SETOREINFO' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SETOREINFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURRENCYCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.CURRENCYCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENCYCODE' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.CURRENCYCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSACTIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.TRANSACTIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSACTIONDATE' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.TRANSACTIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VALUEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.VALUEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VALUEDATE' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.VALUEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deal_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deal Amount' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXCHANGE_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EXCHANGE_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXCHANGE_RATE' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EXCHANGE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deal_Amount_Euro() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_Amount_EuroColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deal Amount Euro' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_Amount_EuroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HANDLINGFEE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HANDLINGFEEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HANDLINGFEE' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HANDLINGFEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTBR' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTID' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTNAME' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD1' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD2' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HOLDFUNC() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HOLDFUNCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HOLDFUNC' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HOLDFUNCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDERCUSTADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD3' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SWIFTINREF() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SWIFTINREFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SWIFTINREF' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SWIFTINREFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEMERKUNGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BEMERKUNGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEMERKUNGEN' in table 'ANTIMONEY_LAUND_PAYMENTS_ITEMS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BEMERKUNGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEM00KEY0Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEM00KEY0Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClient_AccountNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Client_AccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClient_AccountNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Client_AccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEM00KEY1Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEM00KEY1Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEM00KEY2Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEM00KEY2Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EM00KEY2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOURTRANREFNONull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.OURTRANREFNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOURTRANREFNONull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.OURTRANREFNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINWARDOUTWARDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.INWARDOUTWARDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINWARDOUTWARDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.INWARDOUTWARDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMETHODNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.METHODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMETHODNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.METHODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERBRANCHNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERBRANCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERBRANCHNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERBRANCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECEIVERSWIFTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERSWIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECEIVERSWIFTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECEIVERSWIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORBKIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORBKIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORBKIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORBKIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORRNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORRNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORRBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORRBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSENDERCORRSTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSENDERCORRSTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SENDERCORRSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRECRCORRSWIFTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRSWIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRECRCORRSWIFTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.RECRCORRSWIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTNANull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTNAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTNANull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTNAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACWITHINSTSTNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACWITHINSTSTNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ACWITHINSTSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFACNONull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFACNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFACNONull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFACNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTADR1Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTADR1Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBENEFCUSTADR2Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBENEFCUSTADR2Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BENEFCUSTADR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDETOFCHARGENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.DETOFCHARGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDETOFCHARGENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.DETOFCHARGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSETOREINFONull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SETOREINFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSETOREINFONull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SETOREINFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURRENCYCODENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.CURRENCYCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURRENCYCODENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.CURRENCYCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSACTIONDATENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.TRANSACTIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSACTIONDATENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.TRANSACTIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVALUEDATENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.VALUEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVALUEDATENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.VALUEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeal_AmountNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeal_AmountNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXCHANGE_RATENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EXCHANGE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXCHANGE_RATENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.EXCHANGE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeal_Amount_EuroNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_Amount_EuroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeal_Amount_EuroNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.Deal_Amount_EuroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHANDLINGFEENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HANDLINGFEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHANDLINGFEENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HANDLINGFEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTBRNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTBRNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTIDNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTNAMENull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTADD1Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTADD1Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTADD2Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTADD2Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHOLDFUNCNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HOLDFUNCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHOLDFUNCNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.HOLDFUNCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDERCUSTADD3Null() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDERCUSTADD3Null()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.ORDERCUSTADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSWIFTINREFNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SWIFTINREFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSWIFTINREFNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.SWIFTINREFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEMERKUNGENNull() As Boolean
            Return Me.IsNull(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BEMERKUNGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEMERKUNGENNull()
            Me(Me.tableANTIMONEY_LAUND_PAYMENTS_ITEMS.BEMERKUNGENColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ANTIMONEY_LAUND_PAYMENTS_ITEMSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ANTIMONEY_LAUND_PAYMENTS_ITEMSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace AntiMoneyLaunderingDatasetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ANTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ANTIMONEY_LAUND_PAYMENTS_AMOUNTS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("EM00KEY0", "EM00KEY0")
            tableMapping.ColumnMappings.Add("Client Account", "Client Account")
            tableMapping.ColumnMappings.Add("EM00KEY1", "EM00KEY1")
            tableMapping.ColumnMappings.Add("EM00KEY2", "EM00KEY2")
            tableMapping.ColumnMappings.Add("OURTRANREFNO", "OURTRANREFNO")
            tableMapping.ColumnMappings.Add("INWARDOUTWARD", "INWARDOUTWARD")
            tableMapping.ColumnMappings.Add("METHOD", "METHOD")
            tableMapping.ColumnMappings.Add("RECEIVERBRANCH", "RECEIVERBRANCH")
            tableMapping.ColumnMappings.Add("RECEIVERID", "RECEIVERID")
            tableMapping.ColumnMappings.Add("RECEIVERNAME", "RECEIVERNAME")
            tableMapping.ColumnMappings.Add("RECEIVERSWIFT", "RECEIVERSWIFT")
            tableMapping.ColumnMappings.Add("SENDERCORBKID", "SENDERCORBKID")
            tableMapping.ColumnMappings.Add("SENDERCORRNAME", "SENDERCORRNAME")
            tableMapping.ColumnMappings.Add("SENDERCORRBR", "SENDERCORRBR")
            tableMapping.ColumnMappings.Add("SENDERCORRST", "SENDERCORRST")
            tableMapping.ColumnMappings.Add("RECRCORRID", "RECRCORRID")
            tableMapping.ColumnMappings.Add("RECRCORRNAME", "RECRCORRNAME")
            tableMapping.ColumnMappings.Add("RECRCORRBR", "RECRCORRBR")
            tableMapping.ColumnMappings.Add("RECRCORRSWIFT", "RECRCORRSWIFT")
            tableMapping.ColumnMappings.Add("ACWITHINSTID", "ACWITHINSTID")
            tableMapping.ColumnMappings.Add("ACWITHINSTNA", "ACWITHINSTNA")
            tableMapping.ColumnMappings.Add("ACWITHINSTBR", "ACWITHINSTBR")
            tableMapping.ColumnMappings.Add("ACWITHINSTST", "ACWITHINSTST")
            tableMapping.ColumnMappings.Add("BENEFACNO", "BENEFACNO")
            tableMapping.ColumnMappings.Add("BENEFCUSTBR", "BENEFCUSTBR")
            tableMapping.ColumnMappings.Add("BENEFCUSTID", "BENEFCUSTID")
            tableMapping.ColumnMappings.Add("BENEFCUSTNAME", "BENEFCUSTNAME")
            tableMapping.ColumnMappings.Add("BENEFCUSTADR1", "BENEFCUSTADR1")
            tableMapping.ColumnMappings.Add("BENEFCUSTADR2", "BENEFCUSTADR2")
            tableMapping.ColumnMappings.Add("DETOFCHARGE", "DETOFCHARGE")
            tableMapping.ColumnMappings.Add("SETOREINFO", "SETOREINFO")
            tableMapping.ColumnMappings.Add("CURRENCYCODE", "CURRENCYCODE")
            tableMapping.ColumnMappings.Add("TRANSACTIONDATE", "TRANSACTIONDATE")
            tableMapping.ColumnMappings.Add("VALUEDATE", "VALUEDATE")
            tableMapping.ColumnMappings.Add("Deal Amount", "Deal Amount")
            tableMapping.ColumnMappings.Add("EXCHANGE_RATE", "EXCHANGE_RATE")
            tableMapping.ColumnMappings.Add("Deal Amount Euro", "Deal Amount Euro")
            tableMapping.ColumnMappings.Add("HANDLINGFEE", "HANDLINGFEE")
            tableMapping.ColumnMappings.Add("ORDERCUSTBR", "ORDERCUSTBR")
            tableMapping.ColumnMappings.Add("ORDERCUSTID", "ORDERCUSTID")
            tableMapping.ColumnMappings.Add("ORDERCUSTNAME", "ORDERCUSTNAME")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD1", "ORDERCUSTADD1")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD2", "ORDERCUSTADD2")
            tableMapping.ColumnMappings.Add("HOLDFUNC", "HOLDFUNC")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD3", "ORDERCUSTADD3")
            tableMapping.ColumnMappings.Add("SWIFTINREF", "SWIFTINREF")
            tableMapping.ColumnMappings.Add("BEMERKUNGEN", "BEMERKUNGEN")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [PS TOOL DX Live].[dbo].[ANTIMONEY_LAUND_PAYMENTS_AMOUNTS] ([EM00KEY0"& _ 
                "], [Client Account], [EM00KEY1], [EM00KEY2], [OURTRANREFNO], [INWARDOUTWARD], [M"& _ 
                "ETHOD], [RECEIVERBRANCH], [RECEIVERID], [RECEIVERNAME], [RECEIVERSWIFT], [SENDER"& _ 
                "CORBKID], [SENDERCORRNAME], [SENDERCORRBR], [SENDERCORRST], [RECRCORRID], [RECRC"& _ 
                "ORRNAME], [RECRCORRBR], [RECRCORRSWIFT], [ACWITHINSTID], [ACWITHINSTNA], [ACWITH"& _ 
                "INSTBR], [ACWITHINSTST], [BENEFACNO], [BENEFCUSTBR], [BENEFCUSTID], [BENEFCUSTNA"& _ 
                "ME], [BENEFCUSTADR1], [BENEFCUSTADR2], [DETOFCHARGE], [SETOREINFO], [CURRENCYCOD"& _ 
                "E], [TRANSACTIONDATE], [VALUEDATE], [Deal Amount], [EXCHANGE_RATE], [Deal Amount"& _ 
                " Euro], [HANDLINGFEE], [ORDERCUSTBR], [ORDERCUSTID], [ORDERCUSTNAME], [ORDERCUST"& _ 
                "ADD1], [ORDERCUSTADD2], [HOLDFUNC], [ORDERCUSTADD3], [SWIFTINREF], [BEMERKUNGEN]"& _ 
                ") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EM00KEY0", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EM00KEY0", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Client_Account", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Client Account", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EM00KEY1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EM00KEY1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EM00KEY2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EM00KEY2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OURTRANREFNO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OURTRANREFNO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("INWARDOUTWARD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "INWARDOUTWARD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("METHOD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "METHOD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECEIVERBRANCH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECEIVERID", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECEIVERID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECEIVERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECEIVERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECEIVERSWIFT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENDERCORBKID", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENDERCORBKID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENDERCORRNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENDERCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENDERCORRBR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENDERCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENDERCORRST", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENDERCORRST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECRCORRID", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECRCORRID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECRCORRNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECRCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECRCORRBR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECRCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECRCORRSWIFT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACWITHINSTID", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACWITHINSTID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACWITHINSTNA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACWITHINSTNA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACWITHINSTBR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACWITHINSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACWITHINSTST", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACWITHINSTST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BENEFACNO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BENEFACNO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BENEFCUSTBR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BENEFCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BENEFCUSTID", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BENEFCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BENEFCUSTNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BENEFCUSTADR1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BENEFCUSTADR2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DETOFCHARGE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DETOFCHARGE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SETOREINFO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SETOREINFO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CURRENCYCODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CURRENCYCODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRANSACTIONDATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VALUEDATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VALUEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Deal_Amount", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Deal Amount", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXCHANGE_RATE", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Deal_Amount_Euro", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Deal Amount Euro", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HANDLINGFEE", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HANDLINGFEE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ORDERCUSTBR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ORDERCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ORDERCUSTID", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ORDERCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ORDERCUSTNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ORDERCUSTADD1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ORDERCUSTADD2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HOLDFUNC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HOLDFUNC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ORDERCUSTADD3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SWIFTINREF", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SWIFTINREF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BEMERKUNGEN", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BEMERKUNGEN", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, EM00KEY0, [Client Account], EM00KEY1, EM00KEY2, OURTRANREFNO, INWARDOU"& _ 
                "TWARD, METHOD, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME, RECEIVERSWIFT, SENDERCO"& _ 
                "RBKID, SENDERCORRNAME, SENDERCORRBR, SENDERCORRST, RECRCORRID, RECRCORRNAME, REC"& _ 
                "RCORRBR, RECRCORRSWIFT, ACWITHINSTID, ACWITHINSTNA, ACWITHINSTBR, ACWITHINSTST, "& _ 
                "BENEFACNO, BENEFCUSTBR, BENEFCUSTID, BENEFCUSTNAME, BENEFCUSTADR1, BENEFCUSTADR2"& _ 
                ", DETOFCHARGE, SETOREINFO, CURRENCYCODE, TRANSACTIONDATE, VALUEDATE, [Deal Amoun"& _ 
                "t], EXCHANGE_RATE, [Deal Amount Euro], HANDLINGFEE, ORDERCUSTBR, ORDERCUSTID, OR"& _ 
                "DERCUSTNAME, ORDERCUSTADD1, ORDERCUSTADD2, HOLDFUNC, ORDERCUSTADD3, SWIFTINREF, "& _ 
                "BEMERKUNGEN FROM dbo.ANTIMONEY_LAUND_PAYMENTS_AMOUNTS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ACWITHINSTBR, ACWITHINSTID, ACWITHINSTNA, ACWITHINSTST, BEMERKUNGEN"& _ 
                ", BENEFACNO, BENEFCUSTADR1, BENEFCUSTADR2, BENEFCUSTBR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   BENEFCUSTID, BENEFCUSTNAME, CURRENCYCODE, [Client Account], DETOFCHARGE, [Dea"& _ 
                "l Amount], [Deal Amount Euro], EM00KEY0, EM00KEY1, EM00KEY2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        EXCHANGE_RATE, HANDLINGFEE, HOLDFUNC, ID, INWARDOUTWARD, METHOD, ORDERCU"& _ 
                "STADD1, ORDERCUSTADD2, ORDERCUSTADD3, ORDERCUSTBR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         OR"& _ 
                "DERCUSTID, ORDERCUSTNAME, OURTRANREFNO, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME"& _ 
                ", RECEIVERSWIFT, RECRCORRBR, RECRCORRID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RECRCORRNAME"& _ 
                ", RECRCORRSWIFT, SENDERCORBKID, SENDERCORRBR, SENDERCORRNAME, SENDERCORRST, SETO"& _ 
                "REINFO, SWIFTINREF, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TRANSACTIONDATE, VALUEDATE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM "& _ 
                "           ANTIMONEY_LAUND_PAYMENTS_AMOUNTS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (TRANSACTIONDATE >= ?)"& _ 
                " AND (TRANSACTIONDATE <= ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRANSACTIONDATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRANSACTIONDATE1", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable = New AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTransactionDate(ByVal dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable, ByVal TRANSACTIONDATE As Global.System.Nullable(Of Date), ByVal TRANSACTIONDATE1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (TRANSACTIONDATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRANSACTIONDATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTransactionDate(ByVal TRANSACTIONDATE As Global.System.Nullable(Of Date), ByVal TRANSACTIONDATE1 As Global.System.Nullable(Of Date)) As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (TRANSACTIONDATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(TRANSACTIONDATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable = New AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_AMOUNTSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As AntiMoneyLaunderingDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ANTIMONEY_LAUND_PAYMENTS_AMOUNTS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal EM00KEY0 As String,  _
                    ByVal Client_Account As String,  _
                    ByVal EM00KEY1 As String,  _
                    ByVal EM00KEY2 As String,  _
                    ByVal OURTRANREFNO As String,  _
                    ByVal INWARDOUTWARD As String,  _
                    ByVal METHOD As String,  _
                    ByVal RECEIVERBRANCH As String,  _
                    ByVal RECEIVERID As String,  _
                    ByVal RECEIVERNAME As String,  _
                    ByVal RECEIVERSWIFT As String,  _
                    ByVal SENDERCORBKID As String,  _
                    ByVal SENDERCORRNAME As String,  _
                    ByVal SENDERCORRBR As String,  _
                    ByVal SENDERCORRST As String,  _
                    ByVal RECRCORRID As String,  _
                    ByVal RECRCORRNAME As String,  _
                    ByVal RECRCORRBR As String,  _
                    ByVal RECRCORRSWIFT As String,  _
                    ByVal ACWITHINSTID As String,  _
                    ByVal ACWITHINSTNA As String,  _
                    ByVal ACWITHINSTBR As String,  _
                    ByVal ACWITHINSTST As String,  _
                    ByVal BENEFACNO As String,  _
                    ByVal BENEFCUSTBR As String,  _
                    ByVal BENEFCUSTID As String,  _
                    ByVal BENEFCUSTNAME As String,  _
                    ByVal BENEFCUSTADR1 As String,  _
                    ByVal BENEFCUSTADR2 As String,  _
                    ByVal DETOFCHARGE As String,  _
                    ByVal SETOREINFO As String,  _
                    ByVal CURRENCYCODE As String,  _
                    ByVal TRANSACTIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal VALUEDATE As Global.System.Nullable(Of Date),  _
                    ByVal Deal_Amount As Global.System.Nullable(Of Double),  _
                    ByVal EXCHANGE_RATE As Global.System.Nullable(Of Double),  _
                    ByVal Deal_Amount_Euro As Global.System.Nullable(Of Double),  _
                    ByVal HANDLINGFEE As Global.System.Nullable(Of Double),  _
                    ByVal ORDERCUSTBR As String,  _
                    ByVal ORDERCUSTID As String,  _
                    ByVal ORDERCUSTNAME As String,  _
                    ByVal ORDERCUSTADD1 As String,  _
                    ByVal ORDERCUSTADD2 As String,  _
                    ByVal HOLDFUNC As String,  _
                    ByVal ORDERCUSTADD3 As String,  _
                    ByVal SWIFTINREF As String,  _
                    ByVal BEMERKUNGEN As String) As Integer
            If (EM00KEY0 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(EM00KEY0,String)
            End If
            If (Client_Account Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Client_Account,String)
            End If
            If (EM00KEY1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EM00KEY1,String)
            End If
            If (EM00KEY2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EM00KEY2,String)
            End If
            If (OURTRANREFNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OURTRANREFNO,String)
            End If
            If (INWARDOUTWARD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(INWARDOUTWARD,String)
            End If
            If (METHOD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(METHOD,String)
            End If
            If (RECEIVERBRANCH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(RECEIVERBRANCH,String)
            End If
            If (RECEIVERID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(RECEIVERID,String)
            End If
            If (RECEIVERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(RECEIVERNAME,String)
            End If
            If (RECEIVERSWIFT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RECEIVERSWIFT,String)
            End If
            If (SENDERCORBKID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SENDERCORBKID,String)
            End If
            If (SENDERCORRNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SENDERCORRNAME,String)
            End If
            If (SENDERCORRBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SENDERCORRBR,String)
            End If
            If (SENDERCORRST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SENDERCORRST,String)
            End If
            If (RECRCORRID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RECRCORRID,String)
            End If
            If (RECRCORRNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(RECRCORRNAME,String)
            End If
            If (RECRCORRBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RECRCORRBR,String)
            End If
            If (RECRCORRSWIFT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RECRCORRSWIFT,String)
            End If
            If (ACWITHINSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ACWITHINSTID,String)
            End If
            If (ACWITHINSTNA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ACWITHINSTNA,String)
            End If
            If (ACWITHINSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ACWITHINSTBR,String)
            End If
            If (ACWITHINSTST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ACWITHINSTST,String)
            End If
            If (BENEFACNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(BENEFACNO,String)
            End If
            If (BENEFCUSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(BENEFCUSTBR,String)
            End If
            If (BENEFCUSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(BENEFCUSTID,String)
            End If
            If (BENEFCUSTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(BENEFCUSTNAME,String)
            End If
            If (BENEFCUSTADR1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(BENEFCUSTADR1,String)
            End If
            If (BENEFCUSTADR2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BENEFCUSTADR2,String)
            End If
            If (DETOFCHARGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DETOFCHARGE,String)
            End If
            If (SETOREINFO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(SETOREINFO,String)
            End If
            If (CURRENCYCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CURRENCYCODE,String)
            End If
            If (TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (VALUEDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(VALUEDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Deal_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (EXCHANGE_RATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(EXCHANGE_RATE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount_Euro.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Deal_Amount_Euro.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HANDLINGFEE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(HANDLINGFEE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (ORDERCUSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ORDERCUSTBR,String)
            End If
            If (ORDERCUSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ORDERCUSTID,String)
            End If
            If (ORDERCUSTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ORDERCUSTNAME,String)
            End If
            If (ORDERCUSTADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ORDERCUSTADD1,String)
            End If
            If (ORDERCUSTADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ORDERCUSTADD2,String)
            End If
            If (HOLDFUNC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(HOLDFUNC,String)
            End If
            If (ORDERCUSTADD3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(ORDERCUSTADD3,String)
            End If
            If (SWIFTINREF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(SWIFTINREF,String)
            End If
            If (BEMERKUNGEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(BEMERKUNGEN,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ANTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ANTIMONEY_LAUND_PAYMENTS_ITEMS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("EM00KEY0", "EM00KEY0")
            tableMapping.ColumnMappings.Add("Client Account", "Client Account")
            tableMapping.ColumnMappings.Add("EM00KEY1", "EM00KEY1")
            tableMapping.ColumnMappings.Add("EM00KEY2", "EM00KEY2")
            tableMapping.ColumnMappings.Add("OURTRANREFNO", "OURTRANREFNO")
            tableMapping.ColumnMappings.Add("INWARDOUTWARD", "INWARDOUTWARD")
            tableMapping.ColumnMappings.Add("METHOD", "METHOD")
            tableMapping.ColumnMappings.Add("RECEIVERBRANCH", "RECEIVERBRANCH")
            tableMapping.ColumnMappings.Add("RECEIVERID", "RECEIVERID")
            tableMapping.ColumnMappings.Add("RECEIVERNAME", "RECEIVERNAME")
            tableMapping.ColumnMappings.Add("RECEIVERSWIFT", "RECEIVERSWIFT")
            tableMapping.ColumnMappings.Add("SENDERCORBKID", "SENDERCORBKID")
            tableMapping.ColumnMappings.Add("SENDERCORRNAME", "SENDERCORRNAME")
            tableMapping.ColumnMappings.Add("SENDERCORRBR", "SENDERCORRBR")
            tableMapping.ColumnMappings.Add("SENDERCORRST", "SENDERCORRST")
            tableMapping.ColumnMappings.Add("RECRCORRID", "RECRCORRID")
            tableMapping.ColumnMappings.Add("RECRCORRNAME", "RECRCORRNAME")
            tableMapping.ColumnMappings.Add("RECRCORRBR", "RECRCORRBR")
            tableMapping.ColumnMappings.Add("RECRCORRSWIFT", "RECRCORRSWIFT")
            tableMapping.ColumnMappings.Add("ACWITHINSTID", "ACWITHINSTID")
            tableMapping.ColumnMappings.Add("ACWITHINSTNA", "ACWITHINSTNA")
            tableMapping.ColumnMappings.Add("ACWITHINSTBR", "ACWITHINSTBR")
            tableMapping.ColumnMappings.Add("ACWITHINSTST", "ACWITHINSTST")
            tableMapping.ColumnMappings.Add("BENEFACNO", "BENEFACNO")
            tableMapping.ColumnMappings.Add("BENEFCUSTBR", "BENEFCUSTBR")
            tableMapping.ColumnMappings.Add("BENEFCUSTID", "BENEFCUSTID")
            tableMapping.ColumnMappings.Add("BENEFCUSTNAME", "BENEFCUSTNAME")
            tableMapping.ColumnMappings.Add("BENEFCUSTADR1", "BENEFCUSTADR1")
            tableMapping.ColumnMappings.Add("BENEFCUSTADR2", "BENEFCUSTADR2")
            tableMapping.ColumnMappings.Add("DETOFCHARGE", "DETOFCHARGE")
            tableMapping.ColumnMappings.Add("SETOREINFO", "SETOREINFO")
            tableMapping.ColumnMappings.Add("CURRENCYCODE", "CURRENCYCODE")
            tableMapping.ColumnMappings.Add("TRANSACTIONDATE", "TRANSACTIONDATE")
            tableMapping.ColumnMappings.Add("VALUEDATE", "VALUEDATE")
            tableMapping.ColumnMappings.Add("Deal Amount", "Deal Amount")
            tableMapping.ColumnMappings.Add("EXCHANGE_RATE", "EXCHANGE_RATE")
            tableMapping.ColumnMappings.Add("Deal Amount Euro", "Deal Amount Euro")
            tableMapping.ColumnMappings.Add("HANDLINGFEE", "HANDLINGFEE")
            tableMapping.ColumnMappings.Add("ORDERCUSTBR", "ORDERCUSTBR")
            tableMapping.ColumnMappings.Add("ORDERCUSTID", "ORDERCUSTID")
            tableMapping.ColumnMappings.Add("ORDERCUSTNAME", "ORDERCUSTNAME")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD1", "ORDERCUSTADD1")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD2", "ORDERCUSTADD2")
            tableMapping.ColumnMappings.Add("HOLDFUNC", "HOLDFUNC")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD3", "ORDERCUSTADD3")
            tableMapping.ColumnMappings.Add("SWIFTINREF", "SWIFTINREF")
            tableMapping.ColumnMappings.Add("BEMERKUNGEN", "BEMERKUNGEN")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ANTIMONEY_LAUND_PAYMENTS_ITEMS] ([EM00KEY0], [Client Account], [EM00"& _ 
                "KEY1], [EM00KEY2], [OURTRANREFNO], [INWARDOUTWARD], [METHOD], [RECEIVERBRANCH], "& _ 
                "[RECEIVERID], [RECEIVERNAME], [RECEIVERSWIFT], [SENDERCORBKID], [SENDERCORRNAME]"& _ 
                ", [SENDERCORRBR], [SENDERCORRST], [RECRCORRID], [RECRCORRNAME], [RECRCORRBR], [R"& _ 
                "ECRCORRSWIFT], [ACWITHINSTID], [ACWITHINSTNA], [ACWITHINSTBR], [ACWITHINSTST], ["& _ 
                "BENEFACNO], [BENEFCUSTBR], [BENEFCUSTID], [BENEFCUSTNAME], [BENEFCUSTADR1], [BEN"& _ 
                "EFCUSTADR2], [DETOFCHARGE], [SETOREINFO], [CURRENCYCODE], [TRANSACTIONDATE], [VA"& _ 
                "LUEDATE], [Deal Amount], [EXCHANGE_RATE], [Deal Amount Euro], [HANDLINGFEE], [OR"& _ 
                "DERCUSTBR], [ORDERCUSTID], [ORDERCUSTNAME], [ORDERCUSTADD1], [ORDERCUSTADD2], [H"& _ 
                "OLDFUNC], [ORDERCUSTADD3], [SWIFTINREF], [BEMERKUNGEN]) VALUES (@EM00KEY0, @Clie"& _ 
                "nt_Account, @EM00KEY1, @EM00KEY2, @OURTRANREFNO, @INWARDOUTWARD, @METHOD, @RECEI"& _ 
                "VERBRANCH, @RECEIVERID, @RECEIVERNAME, @RECEIVERSWIFT, @SENDERCORBKID, @SENDERCO"& _ 
                "RRNAME, @SENDERCORRBR, @SENDERCORRST, @RECRCORRID, @RECRCORRNAME, @RECRCORRBR, @"& _ 
                "RECRCORRSWIFT, @ACWITHINSTID, @ACWITHINSTNA, @ACWITHINSTBR, @ACWITHINSTST, @BENE"& _ 
                "FACNO, @BENEFCUSTBR, @BENEFCUSTID, @BENEFCUSTNAME, @BENEFCUSTADR1, @BENEFCUSTADR"& _ 
                "2, @DETOFCHARGE, @SETOREINFO, @CURRENCYCODE, @TRANSACTIONDATE, @VALUEDATE, @Deal"& _ 
                "_Amount, @EXCHANGE_RATE, @Deal_Amount_Euro, @HANDLINGFEE, @ORDERCUSTBR, @ORDERCU"& _ 
                "STID, @ORDERCUSTNAME, @ORDERCUSTADD1, @ORDERCUSTADD2, @HOLDFUNC, @ORDERCUSTADD3,"& _ 
                " @SWIFTINREF, @BEMERKUNGEN)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_Account", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client Account", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OURTRANREFNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OURTRANREFNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INWARDOUTWARD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INWARDOUTWARD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@METHOD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METHOD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERBRANCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORBKID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORBKID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTNA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTNA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFACNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFACNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTADR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTADR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETOFCHARGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETOFCHARGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SETOREINFO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SETOREINFO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CURRENCYCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURRENCYCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANSACTIONDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALUEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXCHANGE_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_Amount_Euro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount Euro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HANDLINGFEE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HANDLINGFEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HOLDFUNC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOLDFUNC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SWIFTINREF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SWIFTINREF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BEMERKUNGEN", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BEMERKUNGEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, EM00KEY0, [Client Account], EM00KEY1, EM00KEY2, OURTRANREFNO, I"& _ 
                "NWARDOUTWARD, METHOD, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           RECEIVERSWIFT, SENDERCORBKID, SENDERCORRNAME, SENDERCORRBR, SENDERCOR"& _ 
                "RST, RECRCORRID, RECRCORRNAME, RECRCORRBR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RECRCORRSW"& _ 
                "IFT, ACWITHINSTID, ACWITHINSTNA, ACWITHINSTBR, ACWITHINSTST, BENEFACNO, BENEFCUS"& _ 
                "TBR, BENEFCUSTID, BENEFCUSTNAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         BENEFCUSTADR1, BENEF"& _ 
                "CUSTADR2, DETOFCHARGE, SETOREINFO, CURRENCYCODE, TRANSACTIONDATE, VALUEDATE, [De"& _ 
                "al Amount], EXCHANGE_RATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Deal Amount Euro], HANDLI"& _ 
                "NGFEE, ORDERCUSTBR, ORDERCUSTID, ORDERCUSTNAME, ORDERCUSTADD1, ORDERCUSTADD2, HO"& _ 
                "LDFUNC, ORDERCUSTADD3, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SWIFTINREF, BEMERKUNGEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM "& _ 
                "           ANTIMONEY_LAUND_PAYMENTS_ITEMS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ACWITHINSTBR, ACWITHINSTID, ACWITHINSTNA, ACWITHINSTST, BEMERKUNGEN, BENEF"& _ 
                "ACNO, BENEFCUSTADR1, BENEFCUSTADR2, BENEFCUSTBR, BENEFCUSTID, BENEFCUSTNAME, CUR"& _ 
                "RENCYCODE, [Client Account], DETOFCHARGE, [Deal Amount], [Deal Amount Euro], EM0"& _ 
                "0KEY0, EM00KEY1, EM00KEY2, EXCHANGE_RATE, HANDLINGFEE, HOLDFUNC, ID, INWARDOUTWA"& _ 
                "RD, METHOD, ORDERCUSTADD1, ORDERCUSTADD2, ORDERCUSTADD3, ORDERCUSTBR, ORDERCUSTI"& _ 
                "D, ORDERCUSTNAME, OURTRANREFNO, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME, RECEIV"& _ 
                "ERSWIFT, RECRCORRBR, RECRCORRID, RECRCORRNAME, RECRCORRSWIFT, SENDERCORBKID, SEN"& _ 
                "DERCORRBR, SENDERCORRNAME, SENDERCORRST, SETOREINFO, SWIFTINREF, TRANSACTIONDATE"& _ 
                ", VALUEDATE FROM ANTIMONEY_LAUND_PAYMENTS_ITEMS WHERE (TRANSACTIONDATE >= @Param"& _ 
                "1) AND (TRANSACTIONDATE <= @Param2)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable = New AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTransactionDate(ByVal dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable, ByVal Param1 As Global.System.Nullable(Of Date), ByVal Param2 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Param2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTransactionDate(ByVal Param1 As Global.System.Nullable(Of Date), ByVal Param2 As Global.System.Nullable(Of Date)) As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Param2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable = New AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As AntiMoneyLaunderingDataset.ANTIMONEY_LAUND_PAYMENTS_ITEMSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As AntiMoneyLaunderingDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ANTIMONEY_LAUND_PAYMENTS_ITEMS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal EM00KEY0 As String,  _
                    ByVal Client_Account As String,  _
                    ByVal EM00KEY1 As String,  _
                    ByVal EM00KEY2 As String,  _
                    ByVal OURTRANREFNO As String,  _
                    ByVal INWARDOUTWARD As String,  _
                    ByVal METHOD As String,  _
                    ByVal RECEIVERBRANCH As String,  _
                    ByVal RECEIVERID As String,  _
                    ByVal RECEIVERNAME As String,  _
                    ByVal RECEIVERSWIFT As String,  _
                    ByVal SENDERCORBKID As String,  _
                    ByVal SENDERCORRNAME As String,  _
                    ByVal SENDERCORRBR As String,  _
                    ByVal SENDERCORRST As String,  _
                    ByVal RECRCORRID As String,  _
                    ByVal RECRCORRNAME As String,  _
                    ByVal RECRCORRBR As String,  _
                    ByVal RECRCORRSWIFT As String,  _
                    ByVal ACWITHINSTID As String,  _
                    ByVal ACWITHINSTNA As String,  _
                    ByVal ACWITHINSTBR As String,  _
                    ByVal ACWITHINSTST As String,  _
                    ByVal BENEFACNO As String,  _
                    ByVal BENEFCUSTBR As String,  _
                    ByVal BENEFCUSTID As String,  _
                    ByVal BENEFCUSTNAME As String,  _
                    ByVal BENEFCUSTADR1 As String,  _
                    ByVal BENEFCUSTADR2 As String,  _
                    ByVal DETOFCHARGE As String,  _
                    ByVal SETOREINFO As String,  _
                    ByVal CURRENCYCODE As String,  _
                    ByVal TRANSACTIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal VALUEDATE As Global.System.Nullable(Of Date),  _
                    ByVal Deal_Amount As Global.System.Nullable(Of Double),  _
                    ByVal EXCHANGE_RATE As Global.System.Nullable(Of Double),  _
                    ByVal Deal_Amount_Euro As Global.System.Nullable(Of Double),  _
                    ByVal HANDLINGFEE As Global.System.Nullable(Of Double),  _
                    ByVal ORDERCUSTBR As String,  _
                    ByVal ORDERCUSTID As String,  _
                    ByVal ORDERCUSTNAME As String,  _
                    ByVal ORDERCUSTADD1 As String,  _
                    ByVal ORDERCUSTADD2 As String,  _
                    ByVal HOLDFUNC As String,  _
                    ByVal ORDERCUSTADD3 As String,  _
                    ByVal SWIFTINREF As String,  _
                    ByVal BEMERKUNGEN As String) As Integer
            If (EM00KEY0 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(EM00KEY0,String)
            End If
            If (Client_Account Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Client_Account,String)
            End If
            If (EM00KEY1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EM00KEY1,String)
            End If
            If (EM00KEY2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EM00KEY2,String)
            End If
            If (OURTRANREFNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OURTRANREFNO,String)
            End If
            If (INWARDOUTWARD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(INWARDOUTWARD,String)
            End If
            If (METHOD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(METHOD,String)
            End If
            If (RECEIVERBRANCH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(RECEIVERBRANCH,String)
            End If
            If (RECEIVERID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(RECEIVERID,String)
            End If
            If (RECEIVERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(RECEIVERNAME,String)
            End If
            If (RECEIVERSWIFT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RECEIVERSWIFT,String)
            End If
            If (SENDERCORBKID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SENDERCORBKID,String)
            End If
            If (SENDERCORRNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SENDERCORRNAME,String)
            End If
            If (SENDERCORRBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SENDERCORRBR,String)
            End If
            If (SENDERCORRST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SENDERCORRST,String)
            End If
            If (RECRCORRID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RECRCORRID,String)
            End If
            If (RECRCORRNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(RECRCORRNAME,String)
            End If
            If (RECRCORRBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RECRCORRBR,String)
            End If
            If (RECRCORRSWIFT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RECRCORRSWIFT,String)
            End If
            If (ACWITHINSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ACWITHINSTID,String)
            End If
            If (ACWITHINSTNA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ACWITHINSTNA,String)
            End If
            If (ACWITHINSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ACWITHINSTBR,String)
            End If
            If (ACWITHINSTST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ACWITHINSTST,String)
            End If
            If (BENEFACNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(BENEFACNO,String)
            End If
            If (BENEFCUSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(BENEFCUSTBR,String)
            End If
            If (BENEFCUSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(BENEFCUSTID,String)
            End If
            If (BENEFCUSTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(BENEFCUSTNAME,String)
            End If
            If (BENEFCUSTADR1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(BENEFCUSTADR1,String)
            End If
            If (BENEFCUSTADR2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BENEFCUSTADR2,String)
            End If
            If (DETOFCHARGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DETOFCHARGE,String)
            End If
            If (SETOREINFO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(SETOREINFO,String)
            End If
            If (CURRENCYCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CURRENCYCODE,String)
            End If
            If (TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (VALUEDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(VALUEDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Deal_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (EXCHANGE_RATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(EXCHANGE_RATE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount_Euro.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Deal_Amount_Euro.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HANDLINGFEE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(HANDLINGFEE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (ORDERCUSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ORDERCUSTBR,String)
            End If
            If (ORDERCUSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ORDERCUSTID,String)
            End If
            If (ORDERCUSTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ORDERCUSTNAME,String)
            End If
            If (ORDERCUSTADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ORDERCUSTADD1,String)
            End If
            If (ORDERCUSTADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ORDERCUSTADD2,String)
            End If
            If (HOLDFUNC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(HOLDFUNC,String)
            End If
            If (ORDERCUSTADD3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(ORDERCUSTADD3,String)
            End If
            If (SWIFTINREF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(SWIFTINREF,String)
            End If
            If (BEMERKUNGEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(BEMERKUNGEN,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter
        
        Private _aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter As ANTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ANTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter() As ANTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter
            Get
                Return Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter
            End Get
            Set
                Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ANTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter() As ANTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter
            Get
                Return Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter
            End Get
            Set
                Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Connection
                End If
                If ((Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As AntiMoneyLaunderingDataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ANTIMONEY_LAUND_PAYMENTS_ITEMS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As AntiMoneyLaunderingDataset, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ANTIMONEY_LAUND_PAYMENTS_ITEMS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As AntiMoneyLaunderingDataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ANTIMONEY_LAUND_PAYMENTS_ITEMS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ANTIMONEY_LAUND_PAYMENTS_AMOUNTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As AntiMoneyLaunderingDataset) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter, Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Connection)
                    Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter, Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Connection)
                    Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter) Is Nothing) Then
                    Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Connection = CType(revertConnections(Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._aNTIMONEY_LAUND_PAYMENTS_AMOUNTSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter) Is Nothing) Then
                    Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Connection = CType(revertConnections(Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aNTIMONEY_LAUND_PAYMENTS_ITEMSTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
