'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ClearingDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ClearingDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableCHEQUE_COLLECTIONS As CHEQUE_COLLECTIONSDataTable
    
    Private tableGMPS_PAYMENTS_IN As GMPS_PAYMENTS_INDataTable
    
    Private tableGMPS_PAYMENTS_OUT As GMPS_PAYMENTS_OUTDataTable
    
    Private tableODAS_REMMITANCES As ODAS_REMMITANCESDataTable
    
    Private tableALL_SWIFT_CHARGES_MESSAGES As ALL_SWIFT_CHARGES_MESSAGESDataTable
    
    Private tableALL_SWIFT_CHARGES_MESSAGES_Details As ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable
    
    Private relationALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CHEQUE_COLLECTIONS")) Is Nothing) Then
                MyBase.Tables.Add(New CHEQUE_COLLECTIONSDataTable(ds.Tables("CHEQUE_COLLECTIONS")))
            End If
            If (Not (ds.Tables("GMPS PAYMENTS IN")) Is Nothing) Then
                MyBase.Tables.Add(New GMPS_PAYMENTS_INDataTable(ds.Tables("GMPS PAYMENTS IN")))
            End If
            If (Not (ds.Tables("GMPS PAYMENTS OUT")) Is Nothing) Then
                MyBase.Tables.Add(New GMPS_PAYMENTS_OUTDataTable(ds.Tables("GMPS PAYMENTS OUT")))
            End If
            If (Not (ds.Tables("ODAS REMMITANCES")) Is Nothing) Then
                MyBase.Tables.Add(New ODAS_REMMITANCESDataTable(ds.Tables("ODAS REMMITANCES")))
            End If
            If (Not (ds.Tables("ALL_SWIFT_CHARGES_MESSAGES")) Is Nothing) Then
                MyBase.Tables.Add(New ALL_SWIFT_CHARGES_MESSAGESDataTable(ds.Tables("ALL_SWIFT_CHARGES_MESSAGES")))
            End If
            If (Not (ds.Tables("ALL_SWIFT_CHARGES_MESSAGES_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable(ds.Tables("ALL_SWIFT_CHARGES_MESSAGES_Details")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CHEQUE_COLLECTIONS() As CHEQUE_COLLECTIONSDataTable
        Get
            Return Me.tableCHEQUE_COLLECTIONS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GMPS_PAYMENTS_IN() As GMPS_PAYMENTS_INDataTable
        Get
            Return Me.tableGMPS_PAYMENTS_IN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GMPS_PAYMENTS_OUT() As GMPS_PAYMENTS_OUTDataTable
        Get
            Return Me.tableGMPS_PAYMENTS_OUT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ODAS_REMMITANCES() As ODAS_REMMITANCESDataTable
        Get
            Return Me.tableODAS_REMMITANCES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ALL_SWIFT_CHARGES_MESSAGES() As ALL_SWIFT_CHARGES_MESSAGESDataTable
        Get
            Return Me.tableALL_SWIFT_CHARGES_MESSAGES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ALL_SWIFT_CHARGES_MESSAGES_Details() As ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable
        Get
            Return Me.tableALL_SWIFT_CHARGES_MESSAGES_Details
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ClearingDataSet = CType(MyBase.Clone,ClearingDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CHEQUE_COLLECTIONS")) Is Nothing) Then
                MyBase.Tables.Add(New CHEQUE_COLLECTIONSDataTable(ds.Tables("CHEQUE_COLLECTIONS")))
            End If
            If (Not (ds.Tables("GMPS PAYMENTS IN")) Is Nothing) Then
                MyBase.Tables.Add(New GMPS_PAYMENTS_INDataTable(ds.Tables("GMPS PAYMENTS IN")))
            End If
            If (Not (ds.Tables("GMPS PAYMENTS OUT")) Is Nothing) Then
                MyBase.Tables.Add(New GMPS_PAYMENTS_OUTDataTable(ds.Tables("GMPS PAYMENTS OUT")))
            End If
            If (Not (ds.Tables("ODAS REMMITANCES")) Is Nothing) Then
                MyBase.Tables.Add(New ODAS_REMMITANCESDataTable(ds.Tables("ODAS REMMITANCES")))
            End If
            If (Not (ds.Tables("ALL_SWIFT_CHARGES_MESSAGES")) Is Nothing) Then
                MyBase.Tables.Add(New ALL_SWIFT_CHARGES_MESSAGESDataTable(ds.Tables("ALL_SWIFT_CHARGES_MESSAGES")))
            End If
            If (Not (ds.Tables("ALL_SWIFT_CHARGES_MESSAGES_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable(ds.Tables("ALL_SWIFT_CHARGES_MESSAGES_Details")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCHEQUE_COLLECTIONS = CType(MyBase.Tables("CHEQUE_COLLECTIONS"),CHEQUE_COLLECTIONSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCHEQUE_COLLECTIONS) Is Nothing) Then
                Me.tableCHEQUE_COLLECTIONS.InitVars
            End If
        End If
        Me.tableGMPS_PAYMENTS_IN = CType(MyBase.Tables("GMPS PAYMENTS IN"),GMPS_PAYMENTS_INDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGMPS_PAYMENTS_IN) Is Nothing) Then
                Me.tableGMPS_PAYMENTS_IN.InitVars
            End If
        End If
        Me.tableGMPS_PAYMENTS_OUT = CType(MyBase.Tables("GMPS PAYMENTS OUT"),GMPS_PAYMENTS_OUTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGMPS_PAYMENTS_OUT) Is Nothing) Then
                Me.tableGMPS_PAYMENTS_OUT.InitVars
            End If
        End If
        Me.tableODAS_REMMITANCES = CType(MyBase.Tables("ODAS REMMITANCES"),ODAS_REMMITANCESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableODAS_REMMITANCES) Is Nothing) Then
                Me.tableODAS_REMMITANCES.InitVars
            End If
        End If
        Me.tableALL_SWIFT_CHARGES_MESSAGES = CType(MyBase.Tables("ALL_SWIFT_CHARGES_MESSAGES"),ALL_SWIFT_CHARGES_MESSAGESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableALL_SWIFT_CHARGES_MESSAGES) Is Nothing) Then
                Me.tableALL_SWIFT_CHARGES_MESSAGES.InitVars
            End If
        End If
        Me.tableALL_SWIFT_CHARGES_MESSAGES_Details = CType(MyBase.Tables("ALL_SWIFT_CHARGES_MESSAGES_Details"),ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableALL_SWIFT_CHARGES_MESSAGES_Details) Is Nothing) Then
                Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.InitVars
            End If
        End If
        Me.relationALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details = Me.Relations("ALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ClearingDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ClearingDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCHEQUE_COLLECTIONS = New CHEQUE_COLLECTIONSDataTable()
        MyBase.Tables.Add(Me.tableCHEQUE_COLLECTIONS)
        Me.tableGMPS_PAYMENTS_IN = New GMPS_PAYMENTS_INDataTable()
        MyBase.Tables.Add(Me.tableGMPS_PAYMENTS_IN)
        Me.tableGMPS_PAYMENTS_OUT = New GMPS_PAYMENTS_OUTDataTable()
        MyBase.Tables.Add(Me.tableGMPS_PAYMENTS_OUT)
        Me.tableODAS_REMMITANCES = New ODAS_REMMITANCESDataTable()
        MyBase.Tables.Add(Me.tableODAS_REMMITANCES)
        Me.tableALL_SWIFT_CHARGES_MESSAGES = New ALL_SWIFT_CHARGES_MESSAGESDataTable()
        MyBase.Tables.Add(Me.tableALL_SWIFT_CHARGES_MESSAGES)
        Me.tableALL_SWIFT_CHARGES_MESSAGES_Details = New ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable()
        MyBase.Tables.Add(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details)
        Me.relationALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details = New Global.System.Data.DataRelation("ALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details", New Global.System.Data.DataColumn() {Me.tableALL_SWIFT_CHARGES_MESSAGES.IDColumn}, New Global.System.Data.DataColumn() {Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.Id_ChargesColumn}, false)
        Me.Relations.Add(Me.relationALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeCHEQUE_COLLECTIONS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGMPS_PAYMENTS_IN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGMPS_PAYMENTS_OUT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeODAS_REMMITANCES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeALL_SWIFT_CHARGES_MESSAGES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeALL_SWIFT_CHARGES_MESSAGES_Details() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ClearingDataSet = New ClearingDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub CHEQUE_COLLECTIONSRowChangeEventHandler(ByVal sender As Object, ByVal e As CHEQUE_COLLECTIONSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GMPS_PAYMENTS_INRowChangeEventHandler(ByVal sender As Object, ByVal e As GMPS_PAYMENTS_INRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GMPS_PAYMENTS_OUTRowChangeEventHandler(ByVal sender As Object, ByVal e As GMPS_PAYMENTS_OUTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ODAS_REMMITANCESRowChangeEventHandler(ByVal sender As Object, ByVal e As ODAS_REMMITANCESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ALL_SWIFT_CHARGES_MESSAGESRowChangeEventHandler(ByVal sender As Object, ByVal e As ALL_SWIFT_CHARGES_MESSAGESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CHEQUE_COLLECTIONSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CHEQUE_COLLECTIONSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIncomingDate As Global.System.Data.DataColumn
        
        Private columnImport_Export_Cheque As Global.System.Data.DataColumn
        
        Private columnChequeCurrency As Global.System.Data.DataColumn
        
        Private columnChequeAmount As Global.System.Data.DataColumn
        
        Private columnExchange_Rate As Global.System.Data.DataColumn
        
        Private columnChequeAmountEURO As Global.System.Data.DataColumn
        
        Private columnChequeNo As Global.System.Data.DataColumn
        
        Private columnDrawerBank As Global.System.Data.DataColumn
        
        Private columnCountryDrawerBank As Global.System.Data.DataColumn
        
        Private columnDraweeBank As Global.System.Data.DataColumn
        
        Private columnCountryDraweeBank As Global.System.Data.DataColumn
        
        Private columnChequeSettlement As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CHEQUE_COLLECTIONS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IncomingDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncomingDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Import_Export_ChequeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImport_Export_Cheque
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChequeCurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChequeCurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChequeAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChequeAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Exchange_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExchange_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChequeAmountEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChequeAmountEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChequeNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChequeNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DrawerBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrawerBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CountryDrawerBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountryDrawerBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DraweeBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDraweeBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CountryDraweeBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountryDraweeBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ChequeSettlementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChequeSettlement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CHEQUE_COLLECTIONSRow
            Get
                Return CType(Me.Rows(index),CHEQUE_COLLECTIONSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event CHEQUE_COLLECTIONSRowChanging As CHEQUE_COLLECTIONSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event CHEQUE_COLLECTIONSRowChanged As CHEQUE_COLLECTIONSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event CHEQUE_COLLECTIONSRowDeleting As CHEQUE_COLLECTIONSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event CHEQUE_COLLECTIONSRowDeleted As CHEQUE_COLLECTIONSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddCHEQUE_COLLECTIONSRow(ByVal row As CHEQUE_COLLECTIONSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddCHEQUE_COLLECTIONSRow(ByVal IncomingDate As Date, ByVal Import_Export_Cheque As String, ByVal ChequeCurrency As String, ByVal ChequeAmount As Double, ByVal Exchange_Rate As Double, ByVal ChequeAmountEURO As Double, ByVal ChequeNo As String, ByVal DrawerBank As String, ByVal CountryDrawerBank As String, ByVal DraweeBank As String, ByVal CountryDraweeBank As String, ByVal ChequeSettlement As String) As CHEQUE_COLLECTIONSRow
            Dim rowCHEQUE_COLLECTIONSRow As CHEQUE_COLLECTIONSRow = CType(Me.NewRow,CHEQUE_COLLECTIONSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, IncomingDate, Import_Export_Cheque, ChequeCurrency, ChequeAmount, Exchange_Rate, ChequeAmountEURO, ChequeNo, DrawerBank, CountryDrawerBank, DraweeBank, CountryDraweeBank, ChequeSettlement}
            rowCHEQUE_COLLECTIONSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCHEQUE_COLLECTIONSRow)
            Return rowCHEQUE_COLLECTIONSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As CHEQUE_COLLECTIONSRow
            Return CType(Me.Rows.Find(New Object() {ID}),CHEQUE_COLLECTIONSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CHEQUE_COLLECTIONSDataTable = CType(MyBase.Clone,CHEQUE_COLLECTIONSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CHEQUE_COLLECTIONSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIncomingDate = MyBase.Columns("IncomingDate")
            Me.columnImport_Export_Cheque = MyBase.Columns("Import_Export_Cheque")
            Me.columnChequeCurrency = MyBase.Columns("ChequeCurrency")
            Me.columnChequeAmount = MyBase.Columns("ChequeAmount")
            Me.columnExchange_Rate = MyBase.Columns("Exchange_Rate")
            Me.columnChequeAmountEURO = MyBase.Columns("ChequeAmountEURO")
            Me.columnChequeNo = MyBase.Columns("ChequeNo")
            Me.columnDrawerBank = MyBase.Columns("DrawerBank")
            Me.columnCountryDrawerBank = MyBase.Columns("CountryDrawerBank")
            Me.columnDraweeBank = MyBase.Columns("DraweeBank")
            Me.columnCountryDraweeBank = MyBase.Columns("CountryDraweeBank")
            Me.columnChequeSettlement = MyBase.Columns("ChequeSettlement")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIncomingDate = New Global.System.Data.DataColumn("IncomingDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncomingDate)
            Me.columnImport_Export_Cheque = New Global.System.Data.DataColumn("Import_Export_Cheque", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImport_Export_Cheque)
            Me.columnChequeCurrency = New Global.System.Data.DataColumn("ChequeCurrency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChequeCurrency)
            Me.columnChequeAmount = New Global.System.Data.DataColumn("ChequeAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChequeAmount)
            Me.columnExchange_Rate = New Global.System.Data.DataColumn("Exchange_Rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExchange_Rate)
            Me.columnChequeAmountEURO = New Global.System.Data.DataColumn("ChequeAmountEURO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChequeAmountEURO)
            Me.columnChequeNo = New Global.System.Data.DataColumn("ChequeNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChequeNo)
            Me.columnDrawerBank = New Global.System.Data.DataColumn("DrawerBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrawerBank)
            Me.columnCountryDrawerBank = New Global.System.Data.DataColumn("CountryDrawerBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountryDrawerBank)
            Me.columnDraweeBank = New Global.System.Data.DataColumn("DraweeBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDraweeBank)
            Me.columnCountryDraweeBank = New Global.System.Data.DataColumn("CountryDraweeBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountryDraweeBank)
            Me.columnChequeSettlement = New Global.System.Data.DataColumn("ChequeSettlement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChequeSettlement)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnImport_Export_Cheque.MaxLength = 255
            Me.columnChequeCurrency.MaxLength = 255
            Me.columnChequeNo.MaxLength = 255
            Me.columnDrawerBank.MaxLength = 255
            Me.columnCountryDrawerBank.MaxLength = 255
            Me.columnDraweeBank.MaxLength = 255
            Me.columnCountryDraweeBank.MaxLength = 255
            Me.columnChequeSettlement.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewCHEQUE_COLLECTIONSRow() As CHEQUE_COLLECTIONSRow
            Return CType(Me.NewRow,CHEQUE_COLLECTIONSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CHEQUE_COLLECTIONSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CHEQUE_COLLECTIONSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CHEQUE_COLLECTIONSRowChangedEvent) Is Nothing) Then
                RaiseEvent CHEQUE_COLLECTIONSRowChanged(Me, New CHEQUE_COLLECTIONSRowChangeEvent(CType(e.Row,CHEQUE_COLLECTIONSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CHEQUE_COLLECTIONSRowChangingEvent) Is Nothing) Then
                RaiseEvent CHEQUE_COLLECTIONSRowChanging(Me, New CHEQUE_COLLECTIONSRowChangeEvent(CType(e.Row,CHEQUE_COLLECTIONSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CHEQUE_COLLECTIONSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CHEQUE_COLLECTIONSRowDeleted(Me, New CHEQUE_COLLECTIONSRowChangeEvent(CType(e.Row,CHEQUE_COLLECTIONSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CHEQUE_COLLECTIONSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CHEQUE_COLLECTIONSRowDeleting(Me, New CHEQUE_COLLECTIONSRowChangeEvent(CType(e.Row,CHEQUE_COLLECTIONSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveCHEQUE_COLLECTIONSRow(ByVal row As CHEQUE_COLLECTIONSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ClearingDataSet = New ClearingDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CHEQUE_COLLECTIONSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GMPS_PAYMENTS_INDataTable
        Inherits Global.System.Data.TypedTableBase(Of GMPS_PAYMENTS_INRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIncomingDate As Global.System.Data.DataColumn
        
        Private columnOurReference As Global.System.Data.DataColumn
        
        Private columnValueDate As Global.System.Data.DataColumn
        
        Private columnMessageSender As Global.System.Data.DataColumn
        
        Private columnMessageSenderName As Global.System.Data.DataColumn
        
        Private columnMessageSenderCity As Global.System.Data.DataColumn
        
        Private columnCurrency As Global.System.Data.DataColumn
        
        Private columnReferenceNo As Global.System.Data.DataColumn
        
        Private columnAccountOfInstitution As Global.System.Data.DataColumn
        
        Private columnAccountOfInstitutionName As Global.System.Data.DataColumn
        
        Private columnAccountOfInstitutionCity As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnExchangeRate As Global.System.Data.DataColumn
        
        Private columnAmountEuro As Global.System.Data.DataColumn
        
        Private columnOriginalOrderingCustomer As Global.System.Data.DataColumn
        
        Private columnOriginalOrderingInstitution As Global.System.Data.DataColumn
        
        Private columnOriginalOrderingInstitutionName As Global.System.Data.DataColumn
        
        Private columnOriginalOrderingInstitutionCity As Global.System.Data.DataColumn
        
        Private columnBeneficiaryCustomer As Global.System.Data.DataColumn
        
        Private columnCommission As Global.System.Data.DataColumn
        
        Private columnDetailsOfCharges As Global.System.Data.DataColumn
        
        Private columnPAYMENT_CODE As Global.System.Data.DataColumn
        
        Private columnReceiverBICofConstructMessage As Global.System.Data.DataColumn
        
        Private columnReceiverBICofConstructMessageName As Global.System.Data.DataColumn
        
        Private columnReceiverBICofConstructMessageCity As Global.System.Data.DataColumn
        
        Private columnPaymentYear As Global.System.Data.DataColumn
        
        Private columnProcessedBy As Global.System.Data.DataColumn
        
        Private columnMsgSenderCountry As Global.System.Data.DataColumn
        
        Private columnMTTYPE As Global.System.Data.DataColumn
        
        Private columnBeneficiaryBank As Global.System.Data.DataColumn
        
        Private columnBeneficiaryBankName As Global.System.Data.DataColumn
        
        Private columnBeneficiaryBankCity As Global.System.Data.DataColumn
        
        Private columnMsgBenefCountry As Global.System.Data.DataColumn
        
        Private columnSenderToReceiverInformation As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GMPS PAYMENTS IN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IncomingDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncomingDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OurReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOurReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ValueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MessageSenderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessageSender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MessageSenderNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessageSenderName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MessageSenderCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessageSenderCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReferenceNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AccountOfInstitutionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountOfInstitution
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AccountOfInstitutionNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountOfInstitutionName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AccountOfInstitutionCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountOfInstitutionCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ExchangeRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExchangeRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AmountEuroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountEuro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OriginalOrderingCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalOrderingCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OriginalOrderingInstitutionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalOrderingInstitution
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OriginalOrderingInstitutionNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalOrderingInstitutionName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OriginalOrderingInstitutionCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalOrderingInstitutionCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CommissionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommission
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DetailsOfChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetailsOfCharges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAYMENT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceiverBICofConstructMessageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiverBICofConstructMessage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceiverBICofConstructMessageNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiverBICofConstructMessageName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceiverBICofConstructMessageCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiverBICofConstructMessageCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PaymentYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProcessedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcessedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MsgSenderCountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMsgSenderCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MTTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryBankNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryBankName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryBankCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryBankCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MsgBenefCountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMsgBenefCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderToReceiverInformationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderToReceiverInformation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GMPS_PAYMENTS_INRow
            Get
                Return CType(Me.Rows(index),GMPS_PAYMENTS_INRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_INRowChanging As GMPS_PAYMENTS_INRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_INRowChanged As GMPS_PAYMENTS_INRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_INRowDeleting As GMPS_PAYMENTS_INRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_INRowDeleted As GMPS_PAYMENTS_INRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGMPS_PAYMENTS_INRow(ByVal row As GMPS_PAYMENTS_INRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGMPS_PAYMENTS_INRow( _
                    ByVal IncomingDate As Date,  _
                    ByVal OurReference As String,  _
                    ByVal ValueDate As Date,  _
                    ByVal MessageSender As String,  _
                    ByVal MessageSenderName As String,  _
                    ByVal MessageSenderCity As String,  _
                    ByVal Currency As String,  _
                    ByVal ReferenceNo As String,  _
                    ByVal AccountOfInstitution As String,  _
                    ByVal AccountOfInstitutionName As String,  _
                    ByVal AccountOfInstitutionCity As String,  _
                    ByVal Amount As Double,  _
                    ByVal ExchangeRate As Double,  _
                    ByVal AmountEuro As Double,  _
                    ByVal OriginalOrderingCustomer As String,  _
                    ByVal OriginalOrderingInstitution As String,  _
                    ByVal OriginalOrderingInstitutionName As String,  _
                    ByVal OriginalOrderingInstitutionCity As String,  _
                    ByVal BeneficiaryCustomer As String,  _
                    ByVal Commission As Double,  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal PAYMENT_CODE As String,  _
                    ByVal ReceiverBICofConstructMessage As String,  _
                    ByVal ReceiverBICofConstructMessageName As String,  _
                    ByVal ReceiverBICofConstructMessageCity As String,  _
                    ByVal PaymentYear As Double,  _
                    ByVal ProcessedBy As String,  _
                    ByVal MsgSenderCountry As String,  _
                    ByVal MTTYPE As String,  _
                    ByVal BeneficiaryBank As String,  _
                    ByVal BeneficiaryBankName As String,  _
                    ByVal BeneficiaryBankCity As String,  _
                    ByVal MsgBenefCountry As String,  _
                    ByVal SenderToReceiverInformation As String) As GMPS_PAYMENTS_INRow
            Dim rowGMPS_PAYMENTS_INRow As GMPS_PAYMENTS_INRow = CType(Me.NewRow,GMPS_PAYMENTS_INRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, IncomingDate, OurReference, ValueDate, MessageSender, MessageSenderName, MessageSenderCity, Currency, ReferenceNo, AccountOfInstitution, AccountOfInstitutionName, AccountOfInstitutionCity, Amount, ExchangeRate, AmountEuro, OriginalOrderingCustomer, OriginalOrderingInstitution, OriginalOrderingInstitutionName, OriginalOrderingInstitutionCity, BeneficiaryCustomer, Commission, DetailsOfCharges, PAYMENT_CODE, ReceiverBICofConstructMessage, ReceiverBICofConstructMessageName, ReceiverBICofConstructMessageCity, PaymentYear, ProcessedBy, MsgSenderCountry, MTTYPE, BeneficiaryBank, BeneficiaryBankName, BeneficiaryBankCity, MsgBenefCountry, SenderToReceiverInformation}
            rowGMPS_PAYMENTS_INRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGMPS_PAYMENTS_INRow)
            Return rowGMPS_PAYMENTS_INRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As GMPS_PAYMENTS_INRow
            Return CType(Me.Rows.Find(New Object() {ID}),GMPS_PAYMENTS_INRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GMPS_PAYMENTS_INDataTable = CType(MyBase.Clone,GMPS_PAYMENTS_INDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GMPS_PAYMENTS_INDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIncomingDate = MyBase.Columns("IncomingDate")
            Me.columnOurReference = MyBase.Columns("OurReference")
            Me.columnValueDate = MyBase.Columns("ValueDate")
            Me.columnMessageSender = MyBase.Columns("MessageSender")
            Me.columnMessageSenderName = MyBase.Columns("MessageSenderName")
            Me.columnMessageSenderCity = MyBase.Columns("MessageSenderCity")
            Me.columnCurrency = MyBase.Columns("Currency")
            Me.columnReferenceNo = MyBase.Columns("ReferenceNo")
            Me.columnAccountOfInstitution = MyBase.Columns("AccountOfInstitution")
            Me.columnAccountOfInstitutionName = MyBase.Columns("AccountOfInstitutionName")
            Me.columnAccountOfInstitutionCity = MyBase.Columns("AccountOfInstitutionCity")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnExchangeRate = MyBase.Columns("ExchangeRate")
            Me.columnAmountEuro = MyBase.Columns("AmountEuro")
            Me.columnOriginalOrderingCustomer = MyBase.Columns("OriginalOrderingCustomer")
            Me.columnOriginalOrderingInstitution = MyBase.Columns("OriginalOrderingInstitution")
            Me.columnOriginalOrderingInstitutionName = MyBase.Columns("OriginalOrderingInstitutionName")
            Me.columnOriginalOrderingInstitutionCity = MyBase.Columns("OriginalOrderingInstitutionCity")
            Me.columnBeneficiaryCustomer = MyBase.Columns("BeneficiaryCustomer")
            Me.columnCommission = MyBase.Columns("Commission")
            Me.columnDetailsOfCharges = MyBase.Columns("DetailsOfCharges")
            Me.columnPAYMENT_CODE = MyBase.Columns("PAYMENT_CODE")
            Me.columnReceiverBICofConstructMessage = MyBase.Columns("ReceiverBICofConstructMessage")
            Me.columnReceiverBICofConstructMessageName = MyBase.Columns("ReceiverBICofConstructMessageName")
            Me.columnReceiverBICofConstructMessageCity = MyBase.Columns("ReceiverBICofConstructMessageCity")
            Me.columnPaymentYear = MyBase.Columns("PaymentYear")
            Me.columnProcessedBy = MyBase.Columns("ProcessedBy")
            Me.columnMsgSenderCountry = MyBase.Columns("MsgSenderCountry")
            Me.columnMTTYPE = MyBase.Columns("MTTYPE")
            Me.columnBeneficiaryBank = MyBase.Columns("BeneficiaryBank")
            Me.columnBeneficiaryBankName = MyBase.Columns("BeneficiaryBankName")
            Me.columnBeneficiaryBankCity = MyBase.Columns("BeneficiaryBankCity")
            Me.columnMsgBenefCountry = MyBase.Columns("MsgBenefCountry")
            Me.columnSenderToReceiverInformation = MyBase.Columns("SenderToReceiverInformation")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIncomingDate = New Global.System.Data.DataColumn("IncomingDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncomingDate)
            Me.columnOurReference = New Global.System.Data.DataColumn("OurReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOurReference)
            Me.columnValueDate = New Global.System.Data.DataColumn("ValueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValueDate)
            Me.columnMessageSender = New Global.System.Data.DataColumn("MessageSender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessageSender)
            Me.columnMessageSenderName = New Global.System.Data.DataColumn("MessageSenderName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessageSenderName)
            Me.columnMessageSenderCity = New Global.System.Data.DataColumn("MessageSenderCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessageSenderCity)
            Me.columnCurrency = New Global.System.Data.DataColumn("Currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrency)
            Me.columnReferenceNo = New Global.System.Data.DataColumn("ReferenceNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceNo)
            Me.columnAccountOfInstitution = New Global.System.Data.DataColumn("AccountOfInstitution", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountOfInstitution)
            Me.columnAccountOfInstitutionName = New Global.System.Data.DataColumn("AccountOfInstitutionName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountOfInstitutionName)
            Me.columnAccountOfInstitutionCity = New Global.System.Data.DataColumn("AccountOfInstitutionCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountOfInstitutionCity)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnExchangeRate = New Global.System.Data.DataColumn("ExchangeRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExchangeRate)
            Me.columnAmountEuro = New Global.System.Data.DataColumn("AmountEuro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountEuro)
            Me.columnOriginalOrderingCustomer = New Global.System.Data.DataColumn("OriginalOrderingCustomer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalOrderingCustomer)
            Me.columnOriginalOrderingInstitution = New Global.System.Data.DataColumn("OriginalOrderingInstitution", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalOrderingInstitution)
            Me.columnOriginalOrderingInstitutionName = New Global.System.Data.DataColumn("OriginalOrderingInstitutionName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalOrderingInstitutionName)
            Me.columnOriginalOrderingInstitutionCity = New Global.System.Data.DataColumn("OriginalOrderingInstitutionCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalOrderingInstitutionCity)
            Me.columnBeneficiaryCustomer = New Global.System.Data.DataColumn("BeneficiaryCustomer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryCustomer)
            Me.columnCommission = New Global.System.Data.DataColumn("Commission", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommission)
            Me.columnDetailsOfCharges = New Global.System.Data.DataColumn("DetailsOfCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetailsOfCharges)
            Me.columnPAYMENT_CODE = New Global.System.Data.DataColumn("PAYMENT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENT_CODE)
            Me.columnReceiverBICofConstructMessage = New Global.System.Data.DataColumn("ReceiverBICofConstructMessage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiverBICofConstructMessage)
            Me.columnReceiverBICofConstructMessageName = New Global.System.Data.DataColumn("ReceiverBICofConstructMessageName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiverBICofConstructMessageName)
            Me.columnReceiverBICofConstructMessageCity = New Global.System.Data.DataColumn("ReceiverBICofConstructMessageCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiverBICofConstructMessageCity)
            Me.columnPaymentYear = New Global.System.Data.DataColumn("PaymentYear", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentYear)
            Me.columnProcessedBy = New Global.System.Data.DataColumn("ProcessedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcessedBy)
            Me.columnMsgSenderCountry = New Global.System.Data.DataColumn("MsgSenderCountry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMsgSenderCountry)
            Me.columnMTTYPE = New Global.System.Data.DataColumn("MTTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTTYPE)
            Me.columnBeneficiaryBank = New Global.System.Data.DataColumn("BeneficiaryBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryBank)
            Me.columnBeneficiaryBankName = New Global.System.Data.DataColumn("BeneficiaryBankName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryBankName)
            Me.columnBeneficiaryBankCity = New Global.System.Data.DataColumn("BeneficiaryBankCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryBankCity)
            Me.columnMsgBenefCountry = New Global.System.Data.DataColumn("MsgBenefCountry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMsgBenefCountry)
            Me.columnSenderToReceiverInformation = New Global.System.Data.DataColumn("SenderToReceiverInformation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderToReceiverInformation)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnOurReference.MaxLength = 255
            Me.columnMessageSender.MaxLength = 255
            Me.columnMessageSenderName.MaxLength = 255
            Me.columnMessageSenderCity.MaxLength = 255
            Me.columnCurrency.MaxLength = 255
            Me.columnReferenceNo.MaxLength = 255
            Me.columnAccountOfInstitution.MaxLength = 255
            Me.columnAccountOfInstitutionName.MaxLength = 255
            Me.columnAccountOfInstitutionCity.MaxLength = 255
            Me.columnOriginalOrderingCustomer.MaxLength = 255
            Me.columnOriginalOrderingInstitution.MaxLength = 255
            Me.columnOriginalOrderingInstitutionName.MaxLength = 255
            Me.columnOriginalOrderingInstitutionCity.MaxLength = 255
            Me.columnBeneficiaryCustomer.MaxLength = 255
            Me.columnDetailsOfCharges.MaxLength = 255
            Me.columnPAYMENT_CODE.MaxLength = 255
            Me.columnReceiverBICofConstructMessage.MaxLength = 255
            Me.columnReceiverBICofConstructMessageName.MaxLength = 255
            Me.columnReceiverBICofConstructMessageCity.MaxLength = 255
            Me.columnProcessedBy.MaxLength = 255
            Me.columnMsgSenderCountry.MaxLength = 255
            Me.columnMTTYPE.MaxLength = 255
            Me.columnBeneficiaryBank.MaxLength = 255
            Me.columnBeneficiaryBankName.MaxLength = 255
            Me.columnBeneficiaryBankCity.MaxLength = 255
            Me.columnMsgBenefCountry.MaxLength = 255
            Me.columnSenderToReceiverInformation.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGMPS_PAYMENTS_INRow() As GMPS_PAYMENTS_INRow
            Return CType(Me.NewRow,GMPS_PAYMENTS_INRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GMPS_PAYMENTS_INRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GMPS_PAYMENTS_INRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GMPS_PAYMENTS_INRowChangedEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_INRowChanged(Me, New GMPS_PAYMENTS_INRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_INRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GMPS_PAYMENTS_INRowChangingEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_INRowChanging(Me, New GMPS_PAYMENTS_INRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_INRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GMPS_PAYMENTS_INRowDeletedEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_INRowDeleted(Me, New GMPS_PAYMENTS_INRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_INRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GMPS_PAYMENTS_INRowDeletingEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_INRowDeleting(Me, New GMPS_PAYMENTS_INRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_INRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGMPS_PAYMENTS_INRow(ByVal row As GMPS_PAYMENTS_INRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ClearingDataSet = New ClearingDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GMPS_PAYMENTS_INDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GMPS_PAYMENTS_OUTDataTable
        Inherits Global.System.Data.TypedTableBase(Of GMPS_PAYMENTS_OUTRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMTTYPE As Global.System.Data.DataColumn
        
        Private columnRegisterDate As Global.System.Data.DataColumn
        
        Private columnOurReference As Global.System.Data.DataColumn
        
        Private columnSenderReference As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnCurrency As Global.System.Data.DataColumn
        
        Private columnExchangeRate As Global.System.Data.DataColumn
        
        Private columnAmountEuro As Global.System.Data.DataColumn
        
        Private columnSenderBIC As Global.System.Data.DataColumn
        
        Private columnSenderName As Global.System.Data.DataColumn
        
        Private columnSenderCity As Global.System.Data.DataColumn
        
        Private columnValueDate As Global.System.Data.DataColumn
        
        Private columnReceivingBankBIC As Global.System.Data.DataColumn
        
        Private columnReceivingBankCountryCode As Global.System.Data.DataColumn
        
        Private columnReceivingBankName As Global.System.Data.DataColumn
        
        Private columnReceivingBankCity As Global.System.Data.DataColumn
        
        Private columnOrderingCustomersAccountServicingInstitution As Global.System.Data.DataColumn
        
        Private columnTransactionType As Global.System.Data.DataColumn
        
        Private columnOrderingCustomer As Global.System.Data.DataColumn
        
        Private columnOrderingCustomersAccNo As Global.System.Data.DataColumn
        
        Private columnIntermediaryInstitutionBIC As Global.System.Data.DataColumn
        
        Private columnIntermediaryInstitutionName As Global.System.Data.DataColumn
        
        Private columnIntermediaryInstitutionCity As Global.System.Data.DataColumn
        
        Private columnIntermediaryInstitutionAccNo As Global.System.Data.DataColumn
        
        Private columnAccountPayeeBIC As Global.System.Data.DataColumn
        
        Private columnAccountPayeeNameAddress As Global.System.Data.DataColumn
        
        Private columnAccountPayeeCity As Global.System.Data.DataColumn
        
        Private columnAccountOfInstitutionAccNo As Global.System.Data.DataColumn
        
        Private columnBeneficiaryBankBIC As Global.System.Data.DataColumn
        
        Private columnBeneficiaryBankName As Global.System.Data.DataColumn
        
        Private columnBeneficiaryBankCity As Global.System.Data.DataColumn
        
        Private columnBeneficiaryBankAccNo As Global.System.Data.DataColumn
        
        Private columnBeneficiaryCustomerBIC As Global.System.Data.DataColumn
        
        Private columnBeneficiaryCustomerAccNo As Global.System.Data.DataColumn
        
        Private columnBeneficiaryCustomerNameAddress As Global.System.Data.DataColumn
        
        Private columnDetailsOfCharges As Global.System.Data.DataColumn
        
        Private columnPayStartTime As Global.System.Data.DataColumn
        
        Private columnSenderToReceiverInformation As Global.System.Data.DataColumn
        
        Private columnDebitTransactionsSigns As Global.System.Data.DataColumn
        
        Private columnProcessingQueue As Global.System.Data.DataColumn
        
        Private columnACK_State As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnPaymentYear As Global.System.Data.DataColumn
        
        Private columnProcessedBy As Global.System.Data.DataColumn
        
        Private columnMsgSenderCountry As Global.System.Data.DataColumn
        
        Private columnRemittanceInformation As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GMPS PAYMENTS OUT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MTTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RegisterDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegisterDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OurReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOurReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ExchangeRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExchangeRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AmountEuroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountEuro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ValueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceivingBankBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivingBankBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceivingBankCountryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivingBankCountryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceivingBankNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivingBankName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceivingBankCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivingBankCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OrderingCustomersAccountServicingInstitutionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderingCustomersAccountServicingInstitution
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OrderingCustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderingCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OrderingCustomersAccNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderingCustomersAccNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IntermediaryInstitutionBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntermediaryInstitutionBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IntermediaryInstitutionNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntermediaryInstitutionName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IntermediaryInstitutionCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntermediaryInstitutionCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IntermediaryInstitutionAccNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntermediaryInstitutionAccNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AccountPayeeBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountPayeeBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AccountPayeeNameAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountPayeeNameAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AccountPayeeCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountPayeeCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AccountOfInstitutionAccNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountOfInstitutionAccNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryBankBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryBankBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryBankNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryBankName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryBankCityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryBankCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryBankAccNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryBankAccNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryCustomerBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryCustomerBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryCustomerAccNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryCustomerAccNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BeneficiaryCustomerNameAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBeneficiaryCustomerNameAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DetailsOfChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetailsOfCharges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PayStartTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayStartTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderToReceiverInformationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderToReceiverInformation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DebitTransactionsSignsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDebitTransactionsSigns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProcessingQueueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcessingQueue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACK_StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACK_State
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PaymentYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProcessedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcessedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MsgSenderCountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMsgSenderCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RemittanceInformationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemittanceInformation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GMPS_PAYMENTS_OUTRow
            Get
                Return CType(Me.Rows(index),GMPS_PAYMENTS_OUTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_OUTRowChanging As GMPS_PAYMENTS_OUTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_OUTRowChanged As GMPS_PAYMENTS_OUTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_OUTRowDeleting As GMPS_PAYMENTS_OUTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GMPS_PAYMENTS_OUTRowDeleted As GMPS_PAYMENTS_OUTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGMPS_PAYMENTS_OUTRow(ByVal row As GMPS_PAYMENTS_OUTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGMPS_PAYMENTS_OUTRow( _
                    ByVal MTTYPE As String,  _
                    ByVal RegisterDate As Date,  _
                    ByVal OurReference As String,  _
                    ByVal SenderReference As String,  _
                    ByVal Amount As Double,  _
                    ByVal Currency As String,  _
                    ByVal ExchangeRate As Double,  _
                    ByVal AmountEuro As Double,  _
                    ByVal SenderBIC As String,  _
                    ByVal SenderName As String,  _
                    ByVal SenderCity As String,  _
                    ByVal ValueDate As Date,  _
                    ByVal ReceivingBankBIC As String,  _
                    ByVal ReceivingBankCountryCode As String,  _
                    ByVal ReceivingBankName As String,  _
                    ByVal ReceivingBankCity As String,  _
                    ByVal OrderingCustomersAccountServicingInstitution As String,  _
                    ByVal TransactionType As String,  _
                    ByVal OrderingCustomer As String,  _
                    ByVal OrderingCustomersAccNo As String,  _
                    ByVal IntermediaryInstitutionBIC As String,  _
                    ByVal IntermediaryInstitutionName As String,  _
                    ByVal IntermediaryInstitutionCity As String,  _
                    ByVal IntermediaryInstitutionAccNo As String,  _
                    ByVal AccountPayeeBIC As String,  _
                    ByVal AccountPayeeNameAddress As String,  _
                    ByVal AccountPayeeCity As String,  _
                    ByVal AccountOfInstitutionAccNo As String,  _
                    ByVal BeneficiaryBankBIC As String,  _
                    ByVal BeneficiaryBankName As String,  _
                    ByVal BeneficiaryBankCity As String,  _
                    ByVal BeneficiaryBankAccNo As String,  _
                    ByVal BeneficiaryCustomerBIC As String,  _
                    ByVal BeneficiaryCustomerAccNo As String,  _
                    ByVal BeneficiaryCustomerNameAddress As String,  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal PayStartTime As Double,  _
                    ByVal SenderToReceiverInformation As String,  _
                    ByVal DebitTransactionsSigns As String,  _
                    ByVal ProcessingQueue As String,  _
                    ByVal ACK_State As String,  _
                    ByVal Status As String,  _
                    ByVal PaymentYear As Double,  _
                    ByVal ProcessedBy As String,  _
                    ByVal MsgSenderCountry As String,  _
                    ByVal RemittanceInformation As String) As GMPS_PAYMENTS_OUTRow
            Dim rowGMPS_PAYMENTS_OUTRow As GMPS_PAYMENTS_OUTRow = CType(Me.NewRow,GMPS_PAYMENTS_OUTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, MTTYPE, RegisterDate, OurReference, SenderReference, Amount, Currency, ExchangeRate, AmountEuro, SenderBIC, SenderName, SenderCity, ValueDate, ReceivingBankBIC, ReceivingBankCountryCode, ReceivingBankName, ReceivingBankCity, OrderingCustomersAccountServicingInstitution, TransactionType, OrderingCustomer, OrderingCustomersAccNo, IntermediaryInstitutionBIC, IntermediaryInstitutionName, IntermediaryInstitutionCity, IntermediaryInstitutionAccNo, AccountPayeeBIC, AccountPayeeNameAddress, AccountPayeeCity, AccountOfInstitutionAccNo, BeneficiaryBankBIC, BeneficiaryBankName, BeneficiaryBankCity, BeneficiaryBankAccNo, BeneficiaryCustomerBIC, BeneficiaryCustomerAccNo, BeneficiaryCustomerNameAddress, DetailsOfCharges, PayStartTime, SenderToReceiverInformation, DebitTransactionsSigns, ProcessingQueue, ACK_State, Status, PaymentYear, ProcessedBy, MsgSenderCountry, RemittanceInformation}
            rowGMPS_PAYMENTS_OUTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGMPS_PAYMENTS_OUTRow)
            Return rowGMPS_PAYMENTS_OUTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As GMPS_PAYMENTS_OUTRow
            Return CType(Me.Rows.Find(New Object() {ID}),GMPS_PAYMENTS_OUTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GMPS_PAYMENTS_OUTDataTable = CType(MyBase.Clone,GMPS_PAYMENTS_OUTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GMPS_PAYMENTS_OUTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnMTTYPE = MyBase.Columns("MTTYPE")
            Me.columnRegisterDate = MyBase.Columns("RegisterDate")
            Me.columnOurReference = MyBase.Columns("OurReference")
            Me.columnSenderReference = MyBase.Columns("SenderReference")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnCurrency = MyBase.Columns("Currency")
            Me.columnExchangeRate = MyBase.Columns("ExchangeRate")
            Me.columnAmountEuro = MyBase.Columns("AmountEuro")
            Me.columnSenderBIC = MyBase.Columns("SenderBIC")
            Me.columnSenderName = MyBase.Columns("SenderName")
            Me.columnSenderCity = MyBase.Columns("SenderCity")
            Me.columnValueDate = MyBase.Columns("ValueDate")
            Me.columnReceivingBankBIC = MyBase.Columns("ReceivingBankBIC")
            Me.columnReceivingBankCountryCode = MyBase.Columns("ReceivingBankCountryCode")
            Me.columnReceivingBankName = MyBase.Columns("ReceivingBankName")
            Me.columnReceivingBankCity = MyBase.Columns("ReceivingBankCity")
            Me.columnOrderingCustomersAccountServicingInstitution = MyBase.Columns("OrderingCustomersAccountServicingInstitution")
            Me.columnTransactionType = MyBase.Columns("TransactionType")
            Me.columnOrderingCustomer = MyBase.Columns("OrderingCustomer")
            Me.columnOrderingCustomersAccNo = MyBase.Columns("OrderingCustomersAccNo")
            Me.columnIntermediaryInstitutionBIC = MyBase.Columns("IntermediaryInstitutionBIC")
            Me.columnIntermediaryInstitutionName = MyBase.Columns("IntermediaryInstitutionName")
            Me.columnIntermediaryInstitutionCity = MyBase.Columns("IntermediaryInstitutionCity")
            Me.columnIntermediaryInstitutionAccNo = MyBase.Columns("IntermediaryInstitutionAccNo")
            Me.columnAccountPayeeBIC = MyBase.Columns("AccountPayeeBIC")
            Me.columnAccountPayeeNameAddress = MyBase.Columns("AccountPayeeNameAddress")
            Me.columnAccountPayeeCity = MyBase.Columns("AccountPayeeCity")
            Me.columnAccountOfInstitutionAccNo = MyBase.Columns("AccountOfInstitutionAccNo")
            Me.columnBeneficiaryBankBIC = MyBase.Columns("BeneficiaryBankBIC")
            Me.columnBeneficiaryBankName = MyBase.Columns("BeneficiaryBankName")
            Me.columnBeneficiaryBankCity = MyBase.Columns("BeneficiaryBankCity")
            Me.columnBeneficiaryBankAccNo = MyBase.Columns("BeneficiaryBankAccNo")
            Me.columnBeneficiaryCustomerBIC = MyBase.Columns("BeneficiaryCustomerBIC")
            Me.columnBeneficiaryCustomerAccNo = MyBase.Columns("BeneficiaryCustomerAccNo")
            Me.columnBeneficiaryCustomerNameAddress = MyBase.Columns("BeneficiaryCustomerNameAddress")
            Me.columnDetailsOfCharges = MyBase.Columns("DetailsOfCharges")
            Me.columnPayStartTime = MyBase.Columns("PayStartTime")
            Me.columnSenderToReceiverInformation = MyBase.Columns("SenderToReceiverInformation")
            Me.columnDebitTransactionsSigns = MyBase.Columns("DebitTransactionsSigns")
            Me.columnProcessingQueue = MyBase.Columns("ProcessingQueue")
            Me.columnACK_State = MyBase.Columns("ACK_State")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnPaymentYear = MyBase.Columns("PaymentYear")
            Me.columnProcessedBy = MyBase.Columns("ProcessedBy")
            Me.columnMsgSenderCountry = MyBase.Columns("MsgSenderCountry")
            Me.columnRemittanceInformation = MyBase.Columns("RemittanceInformation")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMTTYPE = New Global.System.Data.DataColumn("MTTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTTYPE)
            Me.columnRegisterDate = New Global.System.Data.DataColumn("RegisterDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegisterDate)
            Me.columnOurReference = New Global.System.Data.DataColumn("OurReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOurReference)
            Me.columnSenderReference = New Global.System.Data.DataColumn("SenderReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderReference)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnCurrency = New Global.System.Data.DataColumn("Currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrency)
            Me.columnExchangeRate = New Global.System.Data.DataColumn("ExchangeRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExchangeRate)
            Me.columnAmountEuro = New Global.System.Data.DataColumn("AmountEuro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountEuro)
            Me.columnSenderBIC = New Global.System.Data.DataColumn("SenderBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderBIC)
            Me.columnSenderName = New Global.System.Data.DataColumn("SenderName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderName)
            Me.columnSenderCity = New Global.System.Data.DataColumn("SenderCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderCity)
            Me.columnValueDate = New Global.System.Data.DataColumn("ValueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValueDate)
            Me.columnReceivingBankBIC = New Global.System.Data.DataColumn("ReceivingBankBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivingBankBIC)
            Me.columnReceivingBankCountryCode = New Global.System.Data.DataColumn("ReceivingBankCountryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivingBankCountryCode)
            Me.columnReceivingBankName = New Global.System.Data.DataColumn("ReceivingBankName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivingBankName)
            Me.columnReceivingBankCity = New Global.System.Data.DataColumn("ReceivingBankCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivingBankCity)
            Me.columnOrderingCustomersAccountServicingInstitution = New Global.System.Data.DataColumn("OrderingCustomersAccountServicingInstitution", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderingCustomersAccountServicingInstitution)
            Me.columnTransactionType = New Global.System.Data.DataColumn("TransactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionType)
            Me.columnOrderingCustomer = New Global.System.Data.DataColumn("OrderingCustomer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderingCustomer)
            Me.columnOrderingCustomersAccNo = New Global.System.Data.DataColumn("OrderingCustomersAccNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderingCustomersAccNo)
            Me.columnIntermediaryInstitutionBIC = New Global.System.Data.DataColumn("IntermediaryInstitutionBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntermediaryInstitutionBIC)
            Me.columnIntermediaryInstitutionName = New Global.System.Data.DataColumn("IntermediaryInstitutionName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntermediaryInstitutionName)
            Me.columnIntermediaryInstitutionCity = New Global.System.Data.DataColumn("IntermediaryInstitutionCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntermediaryInstitutionCity)
            Me.columnIntermediaryInstitutionAccNo = New Global.System.Data.DataColumn("IntermediaryInstitutionAccNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntermediaryInstitutionAccNo)
            Me.columnAccountPayeeBIC = New Global.System.Data.DataColumn("AccountPayeeBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountPayeeBIC)
            Me.columnAccountPayeeNameAddress = New Global.System.Data.DataColumn("AccountPayeeNameAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountPayeeNameAddress)
            Me.columnAccountPayeeCity = New Global.System.Data.DataColumn("AccountPayeeCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountPayeeCity)
            Me.columnAccountOfInstitutionAccNo = New Global.System.Data.DataColumn("AccountOfInstitutionAccNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountOfInstitutionAccNo)
            Me.columnBeneficiaryBankBIC = New Global.System.Data.DataColumn("BeneficiaryBankBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryBankBIC)
            Me.columnBeneficiaryBankName = New Global.System.Data.DataColumn("BeneficiaryBankName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryBankName)
            Me.columnBeneficiaryBankCity = New Global.System.Data.DataColumn("BeneficiaryBankCity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryBankCity)
            Me.columnBeneficiaryBankAccNo = New Global.System.Data.DataColumn("BeneficiaryBankAccNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryBankAccNo)
            Me.columnBeneficiaryCustomerBIC = New Global.System.Data.DataColumn("BeneficiaryCustomerBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryCustomerBIC)
            Me.columnBeneficiaryCustomerAccNo = New Global.System.Data.DataColumn("BeneficiaryCustomerAccNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryCustomerAccNo)
            Me.columnBeneficiaryCustomerNameAddress = New Global.System.Data.DataColumn("BeneficiaryCustomerNameAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBeneficiaryCustomerNameAddress)
            Me.columnDetailsOfCharges = New Global.System.Data.DataColumn("DetailsOfCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetailsOfCharges)
            Me.columnPayStartTime = New Global.System.Data.DataColumn("PayStartTime", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayStartTime)
            Me.columnSenderToReceiverInformation = New Global.System.Data.DataColumn("SenderToReceiverInformation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderToReceiverInformation)
            Me.columnDebitTransactionsSigns = New Global.System.Data.DataColumn("DebitTransactionsSigns", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDebitTransactionsSigns)
            Me.columnProcessingQueue = New Global.System.Data.DataColumn("ProcessingQueue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcessingQueue)
            Me.columnACK_State = New Global.System.Data.DataColumn("ACK_State", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACK_State)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnPaymentYear = New Global.System.Data.DataColumn("PaymentYear", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentYear)
            Me.columnProcessedBy = New Global.System.Data.DataColumn("ProcessedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcessedBy)
            Me.columnMsgSenderCountry = New Global.System.Data.DataColumn("MsgSenderCountry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMsgSenderCountry)
            Me.columnRemittanceInformation = New Global.System.Data.DataColumn("RemittanceInformation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemittanceInformation)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnMTTYPE.MaxLength = 255
            Me.columnOurReference.MaxLength = 255
            Me.columnSenderReference.MaxLength = 255
            Me.columnCurrency.MaxLength = 255
            Me.columnSenderBIC.MaxLength = 255
            Me.columnSenderName.MaxLength = 255
            Me.columnSenderCity.MaxLength = 255
            Me.columnReceivingBankBIC.MaxLength = 255
            Me.columnReceivingBankCountryCode.MaxLength = 255
            Me.columnReceivingBankName.MaxLength = 255
            Me.columnReceivingBankCity.MaxLength = 255
            Me.columnOrderingCustomersAccountServicingInstitution.MaxLength = 255
            Me.columnTransactionType.MaxLength = 255
            Me.columnOrderingCustomer.MaxLength = 255
            Me.columnOrderingCustomersAccNo.MaxLength = 255
            Me.columnIntermediaryInstitutionBIC.MaxLength = 255
            Me.columnIntermediaryInstitutionName.MaxLength = 255
            Me.columnIntermediaryInstitutionCity.MaxLength = 255
            Me.columnIntermediaryInstitutionAccNo.MaxLength = 255
            Me.columnAccountPayeeBIC.MaxLength = 255
            Me.columnAccountPayeeNameAddress.MaxLength = 255
            Me.columnAccountPayeeCity.MaxLength = 255
            Me.columnAccountOfInstitutionAccNo.MaxLength = 255
            Me.columnBeneficiaryBankBIC.MaxLength = 255
            Me.columnBeneficiaryBankName.MaxLength = 255
            Me.columnBeneficiaryBankCity.MaxLength = 255
            Me.columnBeneficiaryBankAccNo.MaxLength = 255
            Me.columnBeneficiaryCustomerBIC.MaxLength = 255
            Me.columnBeneficiaryCustomerAccNo.MaxLength = 255
            Me.columnBeneficiaryCustomerNameAddress.MaxLength = 255
            Me.columnDetailsOfCharges.MaxLength = 255
            Me.columnSenderToReceiverInformation.MaxLength = 255
            Me.columnDebitTransactionsSigns.MaxLength = 255
            Me.columnProcessingQueue.MaxLength = 255
            Me.columnACK_State.MaxLength = 255
            Me.columnStatus.MaxLength = 255
            Me.columnProcessedBy.MaxLength = 255
            Me.columnMsgSenderCountry.MaxLength = 255
            Me.columnRemittanceInformation.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGMPS_PAYMENTS_OUTRow() As GMPS_PAYMENTS_OUTRow
            Return CType(Me.NewRow,GMPS_PAYMENTS_OUTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GMPS_PAYMENTS_OUTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GMPS_PAYMENTS_OUTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GMPS_PAYMENTS_OUTRowChangedEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_OUTRowChanged(Me, New GMPS_PAYMENTS_OUTRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_OUTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GMPS_PAYMENTS_OUTRowChangingEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_OUTRowChanging(Me, New GMPS_PAYMENTS_OUTRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_OUTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GMPS_PAYMENTS_OUTRowDeletedEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_OUTRowDeleted(Me, New GMPS_PAYMENTS_OUTRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_OUTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GMPS_PAYMENTS_OUTRowDeletingEvent) Is Nothing) Then
                RaiseEvent GMPS_PAYMENTS_OUTRowDeleting(Me, New GMPS_PAYMENTS_OUTRowChangeEvent(CType(e.Row,GMPS_PAYMENTS_OUTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGMPS_PAYMENTS_OUTRow(ByVal row As GMPS_PAYMENTS_OUTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ClearingDataSet = New ClearingDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GMPS_PAYMENTS_OUTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ODAS_REMMITANCESDataTable
        Inherits Global.System.Data.TypedTableBase(Of ODAS_REMMITANCESRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnEM00KEY0 As Global.System.Data.DataColumn
        
        Private columnClient_Account As Global.System.Data.DataColumn
        
        Private columnEM00KEY1 As Global.System.Data.DataColumn
        
        Private columnEM00KEY2 As Global.System.Data.DataColumn
        
        Private columnOURTRANREFNO As Global.System.Data.DataColumn
        
        Private columnINWARDOUTWARD As Global.System.Data.DataColumn
        
        Private columnMETHOD As Global.System.Data.DataColumn
        
        Private columnRECEIVERBRANCH As Global.System.Data.DataColumn
        
        Private columnRECEIVERID As Global.System.Data.DataColumn
        
        Private columnRECEIVERNAME As Global.System.Data.DataColumn
        
        Private columnRECEIVERSWIFT As Global.System.Data.DataColumn
        
        Private columnSENDERCORBKID As Global.System.Data.DataColumn
        
        Private columnSENDERCORRNAME As Global.System.Data.DataColumn
        
        Private columnSENDERCORRBR As Global.System.Data.DataColumn
        
        Private columnSENDERCORRST As Global.System.Data.DataColumn
        
        Private columnRECRCORRID As Global.System.Data.DataColumn
        
        Private columnRECRCORRNAME As Global.System.Data.DataColumn
        
        Private columnRECRCORRBR As Global.System.Data.DataColumn
        
        Private columnRECRCORRSWIFT As Global.System.Data.DataColumn
        
        Private columnACWITHINSTID As Global.System.Data.DataColumn
        
        Private columnACWITHINSTNA As Global.System.Data.DataColumn
        
        Private columnACWITHINSTBR As Global.System.Data.DataColumn
        
        Private columnACWITHINSTST As Global.System.Data.DataColumn
        
        Private columnBENEFACNO As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTBR As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTID As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTNAME As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTADR1 As Global.System.Data.DataColumn
        
        Private columnBENEFCUSTADR2 As Global.System.Data.DataColumn
        
        Private columnDETOFCHARGE As Global.System.Data.DataColumn
        
        Private columnSETOREINFO As Global.System.Data.DataColumn
        
        Private columnCURRENCYCODE As Global.System.Data.DataColumn
        
        Private columnTRANSACTIONDATE As Global.System.Data.DataColumn
        
        Private columnVALUEDATE As Global.System.Data.DataColumn
        
        Private columnDeal_Amount As Global.System.Data.DataColumn
        
        Private columnEXCHANGE_RATE As Global.System.Data.DataColumn
        
        Private columnDeal_Amount_Euro As Global.System.Data.DataColumn
        
        Private columnHANDLINGFEE As Global.System.Data.DataColumn
        
        Private columnORDERCUSTBR As Global.System.Data.DataColumn
        
        Private columnORDERCUSTID As Global.System.Data.DataColumn
        
        Private columnORDERCUSTNAME As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD1 As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD2 As Global.System.Data.DataColumn
        
        Private columnHOLDFUNC As Global.System.Data.DataColumn
        
        Private columnORDERCUSTADD3 As Global.System.Data.DataColumn
        
        Private columnSWIFTINREF As Global.System.Data.DataColumn
        
        Private columnBEMERKUNGEN As Global.System.Data.DataColumn
        
        Private columnPAYMENTDETAILS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ODAS REMMITANCES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EM00KEY0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Client_AccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_Account
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EM00KEY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EM00KEY2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEM00KEY2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OURTRANREFNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOURTRANREFNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property INWARDOUTWARDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINWARDOUTWARD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property METHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMETHOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECEIVERBRANCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERBRANCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECEIVERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECEIVERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECEIVERSWIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECEIVERSWIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SENDERCORBKIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORBKID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SENDERCORRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SENDERCORRBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SENDERCORRSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENDERCORRST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECRCORRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECRCORRNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECRCORRBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RECRCORRSWIFTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECRCORRSWIFT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTNAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTNA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACWITHINSTSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACWITHINSTST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BENEFACNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFACNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTADR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTADR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BENEFCUSTADR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFCUSTADR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETOFCHARGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETOFCHARGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SETOREINFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSETOREINFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CURRENCYCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENCYCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TRANSACTIONDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSACTIONDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VALUEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALUEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Deal_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeal_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EXCHANGE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCHANGE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Deal_Amount_EuroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeal_Amount_Euro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HANDLINGFEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHANDLINGFEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTBRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTBR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HOLDFUNCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOLDFUNC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORDERCUSTADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERCUSTADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SWIFTINREFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSWIFTINREF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BEMERKUNGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEMERKUNGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PAYMENTDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAYMENTDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ODAS_REMMITANCESRow
            Get
                Return CType(Me.Rows(index),ODAS_REMMITANCESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ODAS_REMMITANCESRowChanging As ODAS_REMMITANCESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ODAS_REMMITANCESRowChanged As ODAS_REMMITANCESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ODAS_REMMITANCESRowDeleting As ODAS_REMMITANCESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ODAS_REMMITANCESRowDeleted As ODAS_REMMITANCESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddODAS_REMMITANCESRow(ByVal row As ODAS_REMMITANCESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddODAS_REMMITANCESRow( _
                    ByVal EM00KEY0 As String,  _
                    ByVal Client_Account As String,  _
                    ByVal EM00KEY1 As String,  _
                    ByVal EM00KEY2 As String,  _
                    ByVal OURTRANREFNO As String,  _
                    ByVal INWARDOUTWARD As String,  _
                    ByVal METHOD As String,  _
                    ByVal RECEIVERBRANCH As String,  _
                    ByVal RECEIVERID As String,  _
                    ByVal RECEIVERNAME As String,  _
                    ByVal RECEIVERSWIFT As String,  _
                    ByVal SENDERCORBKID As String,  _
                    ByVal SENDERCORRNAME As String,  _
                    ByVal SENDERCORRBR As String,  _
                    ByVal SENDERCORRST As String,  _
                    ByVal RECRCORRID As String,  _
                    ByVal RECRCORRNAME As String,  _
                    ByVal RECRCORRBR As String,  _
                    ByVal RECRCORRSWIFT As String,  _
                    ByVal ACWITHINSTID As String,  _
                    ByVal ACWITHINSTNA As String,  _
                    ByVal ACWITHINSTBR As String,  _
                    ByVal ACWITHINSTST As String,  _
                    ByVal BENEFACNO As String,  _
                    ByVal BENEFCUSTBR As String,  _
                    ByVal BENEFCUSTID As String,  _
                    ByVal BENEFCUSTNAME As String,  _
                    ByVal BENEFCUSTADR1 As String,  _
                    ByVal BENEFCUSTADR2 As String,  _
                    ByVal DETOFCHARGE As String,  _
                    ByVal SETOREINFO As String,  _
                    ByVal CURRENCYCODE As String,  _
                    ByVal TRANSACTIONDATE As Date,  _
                    ByVal VALUEDATE As Date,  _
                    ByVal Deal_Amount As Double,  _
                    ByVal EXCHANGE_RATE As Double,  _
                    ByVal Deal_Amount_Euro As Double,  _
                    ByVal HANDLINGFEE As Double,  _
                    ByVal ORDERCUSTBR As String,  _
                    ByVal ORDERCUSTID As String,  _
                    ByVal ORDERCUSTNAME As String,  _
                    ByVal ORDERCUSTADD1 As String,  _
                    ByVal ORDERCUSTADD2 As String,  _
                    ByVal HOLDFUNC As String,  _
                    ByVal ORDERCUSTADD3 As String,  _
                    ByVal SWIFTINREF As String,  _
                    ByVal BEMERKUNGEN As String,  _
                    ByVal PAYMENTDETAILS As String) As ODAS_REMMITANCESRow
            Dim rowODAS_REMMITANCESRow As ODAS_REMMITANCESRow = CType(Me.NewRow,ODAS_REMMITANCESRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, EM00KEY0, Client_Account, EM00KEY1, EM00KEY2, OURTRANREFNO, INWARDOUTWARD, METHOD, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME, RECEIVERSWIFT, SENDERCORBKID, SENDERCORRNAME, SENDERCORRBR, SENDERCORRST, RECRCORRID, RECRCORRNAME, RECRCORRBR, RECRCORRSWIFT, ACWITHINSTID, ACWITHINSTNA, ACWITHINSTBR, ACWITHINSTST, BENEFACNO, BENEFCUSTBR, BENEFCUSTID, BENEFCUSTNAME, BENEFCUSTADR1, BENEFCUSTADR2, DETOFCHARGE, SETOREINFO, CURRENCYCODE, TRANSACTIONDATE, VALUEDATE, Deal_Amount, EXCHANGE_RATE, Deal_Amount_Euro, HANDLINGFEE, ORDERCUSTBR, ORDERCUSTID, ORDERCUSTNAME, ORDERCUSTADD1, ORDERCUSTADD2, HOLDFUNC, ORDERCUSTADD3, SWIFTINREF, BEMERKUNGEN, PAYMENTDETAILS}
            rowODAS_REMMITANCESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowODAS_REMMITANCESRow)
            Return rowODAS_REMMITANCESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ODAS_REMMITANCESRow
            Return CType(Me.Rows.Find(New Object() {ID}),ODAS_REMMITANCESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ODAS_REMMITANCESDataTable = CType(MyBase.Clone,ODAS_REMMITANCESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ODAS_REMMITANCESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnEM00KEY0 = MyBase.Columns("EM00KEY0")
            Me.columnClient_Account = MyBase.Columns("Client Account")
            Me.columnEM00KEY1 = MyBase.Columns("EM00KEY1")
            Me.columnEM00KEY2 = MyBase.Columns("EM00KEY2")
            Me.columnOURTRANREFNO = MyBase.Columns("OURTRANREFNO")
            Me.columnINWARDOUTWARD = MyBase.Columns("INWARDOUTWARD")
            Me.columnMETHOD = MyBase.Columns("METHOD")
            Me.columnRECEIVERBRANCH = MyBase.Columns("RECEIVERBRANCH")
            Me.columnRECEIVERID = MyBase.Columns("RECEIVERID")
            Me.columnRECEIVERNAME = MyBase.Columns("RECEIVERNAME")
            Me.columnRECEIVERSWIFT = MyBase.Columns("RECEIVERSWIFT")
            Me.columnSENDERCORBKID = MyBase.Columns("SENDERCORBKID")
            Me.columnSENDERCORRNAME = MyBase.Columns("SENDERCORRNAME")
            Me.columnSENDERCORRBR = MyBase.Columns("SENDERCORRBR")
            Me.columnSENDERCORRST = MyBase.Columns("SENDERCORRST")
            Me.columnRECRCORRID = MyBase.Columns("RECRCORRID")
            Me.columnRECRCORRNAME = MyBase.Columns("RECRCORRNAME")
            Me.columnRECRCORRBR = MyBase.Columns("RECRCORRBR")
            Me.columnRECRCORRSWIFT = MyBase.Columns("RECRCORRSWIFT")
            Me.columnACWITHINSTID = MyBase.Columns("ACWITHINSTID")
            Me.columnACWITHINSTNA = MyBase.Columns("ACWITHINSTNA")
            Me.columnACWITHINSTBR = MyBase.Columns("ACWITHINSTBR")
            Me.columnACWITHINSTST = MyBase.Columns("ACWITHINSTST")
            Me.columnBENEFACNO = MyBase.Columns("BENEFACNO")
            Me.columnBENEFCUSTBR = MyBase.Columns("BENEFCUSTBR")
            Me.columnBENEFCUSTID = MyBase.Columns("BENEFCUSTID")
            Me.columnBENEFCUSTNAME = MyBase.Columns("BENEFCUSTNAME")
            Me.columnBENEFCUSTADR1 = MyBase.Columns("BENEFCUSTADR1")
            Me.columnBENEFCUSTADR2 = MyBase.Columns("BENEFCUSTADR2")
            Me.columnDETOFCHARGE = MyBase.Columns("DETOFCHARGE")
            Me.columnSETOREINFO = MyBase.Columns("SETOREINFO")
            Me.columnCURRENCYCODE = MyBase.Columns("CURRENCYCODE")
            Me.columnTRANSACTIONDATE = MyBase.Columns("TRANSACTIONDATE")
            Me.columnVALUEDATE = MyBase.Columns("VALUEDATE")
            Me.columnDeal_Amount = MyBase.Columns("Deal Amount")
            Me.columnEXCHANGE_RATE = MyBase.Columns("EXCHANGE_RATE")
            Me.columnDeal_Amount_Euro = MyBase.Columns("Deal Amount Euro")
            Me.columnHANDLINGFEE = MyBase.Columns("HANDLINGFEE")
            Me.columnORDERCUSTBR = MyBase.Columns("ORDERCUSTBR")
            Me.columnORDERCUSTID = MyBase.Columns("ORDERCUSTID")
            Me.columnORDERCUSTNAME = MyBase.Columns("ORDERCUSTNAME")
            Me.columnORDERCUSTADD1 = MyBase.Columns("ORDERCUSTADD1")
            Me.columnORDERCUSTADD2 = MyBase.Columns("ORDERCUSTADD2")
            Me.columnHOLDFUNC = MyBase.Columns("HOLDFUNC")
            Me.columnORDERCUSTADD3 = MyBase.Columns("ORDERCUSTADD3")
            Me.columnSWIFTINREF = MyBase.Columns("SWIFTINREF")
            Me.columnBEMERKUNGEN = MyBase.Columns("BEMERKUNGEN")
            Me.columnPAYMENTDETAILS = MyBase.Columns("PAYMENTDETAILS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnEM00KEY0 = New Global.System.Data.DataColumn("EM00KEY0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY0)
            Me.columnClient_Account = New Global.System.Data.DataColumn("Client Account", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_Account)
            Me.columnEM00KEY1 = New Global.System.Data.DataColumn("EM00KEY1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY1)
            Me.columnEM00KEY2 = New Global.System.Data.DataColumn("EM00KEY2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEM00KEY2)
            Me.columnOURTRANREFNO = New Global.System.Data.DataColumn("OURTRANREFNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOURTRANREFNO)
            Me.columnINWARDOUTWARD = New Global.System.Data.DataColumn("INWARDOUTWARD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINWARDOUTWARD)
            Me.columnMETHOD = New Global.System.Data.DataColumn("METHOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMETHOD)
            Me.columnRECEIVERBRANCH = New Global.System.Data.DataColumn("RECEIVERBRANCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERBRANCH)
            Me.columnRECEIVERID = New Global.System.Data.DataColumn("RECEIVERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERID)
            Me.columnRECEIVERNAME = New Global.System.Data.DataColumn("RECEIVERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERNAME)
            Me.columnRECEIVERSWIFT = New Global.System.Data.DataColumn("RECEIVERSWIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECEIVERSWIFT)
            Me.columnSENDERCORBKID = New Global.System.Data.DataColumn("SENDERCORBKID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORBKID)
            Me.columnSENDERCORRNAME = New Global.System.Data.DataColumn("SENDERCORRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRNAME)
            Me.columnSENDERCORRBR = New Global.System.Data.DataColumn("SENDERCORRBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRBR)
            Me.columnSENDERCORRST = New Global.System.Data.DataColumn("SENDERCORRST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENDERCORRST)
            Me.columnRECRCORRID = New Global.System.Data.DataColumn("RECRCORRID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRID)
            Me.columnRECRCORRNAME = New Global.System.Data.DataColumn("RECRCORRNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRNAME)
            Me.columnRECRCORRBR = New Global.System.Data.DataColumn("RECRCORRBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRBR)
            Me.columnRECRCORRSWIFT = New Global.System.Data.DataColumn("RECRCORRSWIFT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECRCORRSWIFT)
            Me.columnACWITHINSTID = New Global.System.Data.DataColumn("ACWITHINSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTID)
            Me.columnACWITHINSTNA = New Global.System.Data.DataColumn("ACWITHINSTNA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTNA)
            Me.columnACWITHINSTBR = New Global.System.Data.DataColumn("ACWITHINSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTBR)
            Me.columnACWITHINSTST = New Global.System.Data.DataColumn("ACWITHINSTST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACWITHINSTST)
            Me.columnBENEFACNO = New Global.System.Data.DataColumn("BENEFACNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFACNO)
            Me.columnBENEFCUSTBR = New Global.System.Data.DataColumn("BENEFCUSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTBR)
            Me.columnBENEFCUSTID = New Global.System.Data.DataColumn("BENEFCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTID)
            Me.columnBENEFCUSTNAME = New Global.System.Data.DataColumn("BENEFCUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTNAME)
            Me.columnBENEFCUSTADR1 = New Global.System.Data.DataColumn("BENEFCUSTADR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTADR1)
            Me.columnBENEFCUSTADR2 = New Global.System.Data.DataColumn("BENEFCUSTADR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFCUSTADR2)
            Me.columnDETOFCHARGE = New Global.System.Data.DataColumn("DETOFCHARGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETOFCHARGE)
            Me.columnSETOREINFO = New Global.System.Data.DataColumn("SETOREINFO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSETOREINFO)
            Me.columnCURRENCYCODE = New Global.System.Data.DataColumn("CURRENCYCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENCYCODE)
            Me.columnTRANSACTIONDATE = New Global.System.Data.DataColumn("TRANSACTIONDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSACTIONDATE)
            Me.columnVALUEDATE = New Global.System.Data.DataColumn("VALUEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALUEDATE)
            Me.columnDeal_Amount = New Global.System.Data.DataColumn("Deal Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeal_Amount)
            Me.columnEXCHANGE_RATE = New Global.System.Data.DataColumn("EXCHANGE_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCHANGE_RATE)
            Me.columnDeal_Amount_Euro = New Global.System.Data.DataColumn("Deal Amount Euro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeal_Amount_Euro)
            Me.columnHANDLINGFEE = New Global.System.Data.DataColumn("HANDLINGFEE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHANDLINGFEE)
            Me.columnORDERCUSTBR = New Global.System.Data.DataColumn("ORDERCUSTBR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTBR)
            Me.columnORDERCUSTID = New Global.System.Data.DataColumn("ORDERCUSTID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTID)
            Me.columnORDERCUSTNAME = New Global.System.Data.DataColumn("ORDERCUSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTNAME)
            Me.columnORDERCUSTADD1 = New Global.System.Data.DataColumn("ORDERCUSTADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD1)
            Me.columnORDERCUSTADD2 = New Global.System.Data.DataColumn("ORDERCUSTADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD2)
            Me.columnHOLDFUNC = New Global.System.Data.DataColumn("HOLDFUNC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOLDFUNC)
            Me.columnORDERCUSTADD3 = New Global.System.Data.DataColumn("ORDERCUSTADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERCUSTADD3)
            Me.columnSWIFTINREF = New Global.System.Data.DataColumn("SWIFTINREF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSWIFTINREF)
            Me.columnBEMERKUNGEN = New Global.System.Data.DataColumn("BEMERKUNGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEMERKUNGEN)
            Me.columnPAYMENTDETAILS = New Global.System.Data.DataColumn("PAYMENTDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAYMENTDETAILS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnEM00KEY0.MaxLength = 255
            Me.columnClient_Account.MaxLength = 255
            Me.columnEM00KEY1.MaxLength = 255
            Me.columnEM00KEY2.MaxLength = 255
            Me.columnOURTRANREFNO.MaxLength = 255
            Me.columnINWARDOUTWARD.MaxLength = 255
            Me.columnMETHOD.MaxLength = 255
            Me.columnRECEIVERBRANCH.MaxLength = 255
            Me.columnRECEIVERID.MaxLength = 255
            Me.columnRECEIVERNAME.MaxLength = 255
            Me.columnRECEIVERSWIFT.MaxLength = 255
            Me.columnSENDERCORBKID.MaxLength = 255
            Me.columnSENDERCORRNAME.MaxLength = 255
            Me.columnSENDERCORRBR.MaxLength = 255
            Me.columnSENDERCORRST.MaxLength = 255
            Me.columnRECRCORRID.MaxLength = 255
            Me.columnRECRCORRNAME.MaxLength = 255
            Me.columnRECRCORRBR.MaxLength = 255
            Me.columnRECRCORRSWIFT.MaxLength = 255
            Me.columnACWITHINSTID.MaxLength = 255
            Me.columnACWITHINSTNA.MaxLength = 255
            Me.columnACWITHINSTBR.MaxLength = 255
            Me.columnACWITHINSTST.MaxLength = 255
            Me.columnBENEFACNO.MaxLength = 255
            Me.columnBENEFCUSTBR.MaxLength = 255
            Me.columnBENEFCUSTID.MaxLength = 255
            Me.columnBENEFCUSTNAME.MaxLength = 255
            Me.columnBENEFCUSTADR1.MaxLength = 255
            Me.columnBENEFCUSTADR2.MaxLength = 255
            Me.columnDETOFCHARGE.MaxLength = 255
            Me.columnSETOREINFO.MaxLength = 255
            Me.columnCURRENCYCODE.MaxLength = 255
            Me.columnORDERCUSTBR.MaxLength = 255
            Me.columnORDERCUSTID.MaxLength = 255
            Me.columnORDERCUSTNAME.MaxLength = 255
            Me.columnORDERCUSTADD1.MaxLength = 255
            Me.columnORDERCUSTADD2.MaxLength = 255
            Me.columnHOLDFUNC.MaxLength = 255
            Me.columnORDERCUSTADD3.MaxLength = 255
            Me.columnSWIFTINREF.MaxLength = 255
            Me.columnBEMERKUNGEN.MaxLength = 1073741823
            Me.columnPAYMENTDETAILS.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewODAS_REMMITANCESRow() As ODAS_REMMITANCESRow
            Return CType(Me.NewRow,ODAS_REMMITANCESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ODAS_REMMITANCESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ODAS_REMMITANCESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ODAS_REMMITANCESRowChangedEvent) Is Nothing) Then
                RaiseEvent ODAS_REMMITANCESRowChanged(Me, New ODAS_REMMITANCESRowChangeEvent(CType(e.Row,ODAS_REMMITANCESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ODAS_REMMITANCESRowChangingEvent) Is Nothing) Then
                RaiseEvent ODAS_REMMITANCESRowChanging(Me, New ODAS_REMMITANCESRowChangeEvent(CType(e.Row,ODAS_REMMITANCESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ODAS_REMMITANCESRowDeletedEvent) Is Nothing) Then
                RaiseEvent ODAS_REMMITANCESRowDeleted(Me, New ODAS_REMMITANCESRowChangeEvent(CType(e.Row,ODAS_REMMITANCESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ODAS_REMMITANCESRowDeletingEvent) Is Nothing) Then
                RaiseEvent ODAS_REMMITANCESRowDeleting(Me, New ODAS_REMMITANCESRowChangeEvent(CType(e.Row,ODAS_REMMITANCESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveODAS_REMMITANCESRow(ByVal row As ODAS_REMMITANCESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ClearingDataSet = New ClearingDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ODAS_REMMITANCESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ALL_SWIFT_CHARGES_MESSAGESDataTable
        Inherits Global.System.Data.TypedTableBase(Of ALL_SWIFT_CHARGES_MESSAGESRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnSwiftFileName As Global.System.Data.DataColumn
        
        Private columnRef20 As Global.System.Data.DataColumn
        
        Private columnRef21 As Global.System.Data.DataColumn
        
        Private columnCCY As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnDetailsOfCharges As Global.System.Data.DataColumn
        
        Private columnMessageType As Global.System.Data.DataColumn
        
        Private columnMessageTypeName As Global.System.Data.DataColumn
        
        Private columnSenderBIC As Global.System.Data.DataColumn
        
        Private columnSenderName As Global.System.Data.DataColumn
        
        Private columnSenderBranch As Global.System.Data.DataColumn
        
        Private columnReceivedDate As Global.System.Data.DataColumn
        
        Private columnOSN As Global.System.Data.DataColumn
        
        Private columnOSN_ReceivedDate As Global.System.Data.DataColumn
        
        Private columnSwift_Message As Global.System.Data.DataColumn
        
        Private columnSwift_Message_Formated As Global.System.Data.DataColumn
        
        Private columnMatchedStatus As Global.System.Data.DataColumn
        
        Private columnReceiverCorrespondent As Global.System.Data.DataColumn
        
        Private columnPayedStatus As Global.System.Data.DataColumn
        
        Private columnPayedReference As Global.System.Data.DataColumn
        
        Private columnPayedDate As Global.System.Data.DataColumn
        
        Private columnNotes As Global.System.Data.DataColumn
        
        Private columnLastUpdate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ALL_SWIFT_CHARGES_MESSAGES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SwiftFileNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwiftFileName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Ref20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Ref21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRef21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DetailsOfChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetailsOfCharges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MessageTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessageType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MessageTypeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMessageTypeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SenderBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceivedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OSNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OSN_ReceivedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSN_ReceivedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Swift_MessageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwift_Message
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Swift_Message_FormatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwift_Message_Formated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MatchedStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMatchedStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceiverCorrespondentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiverCorrespondent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PayedStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayedStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PayedReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayedReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PayedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LastUpdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastUpdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ALL_SWIFT_CHARGES_MESSAGESRow
            Get
                Return CType(Me.Rows(index),ALL_SWIFT_CHARGES_MESSAGESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGESRowChanging As ALL_SWIFT_CHARGES_MESSAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGESRowChanged As ALL_SWIFT_CHARGES_MESSAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGESRowDeleting As ALL_SWIFT_CHARGES_MESSAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGESRowDeleted As ALL_SWIFT_CHARGES_MESSAGESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddALL_SWIFT_CHARGES_MESSAGESRow(ByVal row As ALL_SWIFT_CHARGES_MESSAGESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddALL_SWIFT_CHARGES_MESSAGESRow( _
                    ByVal SwiftFileName As String,  _
                    ByVal Ref20 As String,  _
                    ByVal Ref21 As String,  _
                    ByVal CCY As String,  _
                    ByVal Amount As Double,  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal MessageType As String,  _
                    ByVal MessageTypeName As String,  _
                    ByVal SenderBIC As String,  _
                    ByVal SenderName As String,  _
                    ByVal SenderBranch As String,  _
                    ByVal ReceivedDate As Date,  _
                    ByVal OSN As Double,  _
                    ByVal OSN_ReceivedDate As String,  _
                    ByVal Swift_Message As String,  _
                    ByVal Swift_Message_Formated As String,  _
                    ByVal MatchedStatus As String,  _
                    ByVal ReceiverCorrespondent As String,  _
                    ByVal PayedStatus As String,  _
                    ByVal PayedReference As String,  _
                    ByVal PayedDate As Date,  _
                    ByVal Notes As String,  _
                    ByVal LastUpdate As String) As ALL_SWIFT_CHARGES_MESSAGESRow
            Dim rowALL_SWIFT_CHARGES_MESSAGESRow As ALL_SWIFT_CHARGES_MESSAGESRow = CType(Me.NewRow,ALL_SWIFT_CHARGES_MESSAGESRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SwiftFileName, Ref20, Ref21, CCY, Amount, DetailsOfCharges, MessageType, MessageTypeName, SenderBIC, SenderName, SenderBranch, ReceivedDate, OSN, OSN_ReceivedDate, Swift_Message, Swift_Message_Formated, MatchedStatus, ReceiverCorrespondent, PayedStatus, PayedReference, PayedDate, Notes, LastUpdate}
            rowALL_SWIFT_CHARGES_MESSAGESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowALL_SWIFT_CHARGES_MESSAGESRow)
            Return rowALL_SWIFT_CHARGES_MESSAGESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ALL_SWIFT_CHARGES_MESSAGESRow
            Return CType(Me.Rows.Find(New Object() {ID}),ALL_SWIFT_CHARGES_MESSAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ALL_SWIFT_CHARGES_MESSAGESDataTable = CType(MyBase.Clone,ALL_SWIFT_CHARGES_MESSAGESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ALL_SWIFT_CHARGES_MESSAGESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSwiftFileName = MyBase.Columns("SwiftFileName")
            Me.columnRef20 = MyBase.Columns("Ref20")
            Me.columnRef21 = MyBase.Columns("Ref21")
            Me.columnCCY = MyBase.Columns("CCY")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnDetailsOfCharges = MyBase.Columns("DetailsOfCharges")
            Me.columnMessageType = MyBase.Columns("MessageType")
            Me.columnMessageTypeName = MyBase.Columns("MessageTypeName")
            Me.columnSenderBIC = MyBase.Columns("SenderBIC")
            Me.columnSenderName = MyBase.Columns("SenderName")
            Me.columnSenderBranch = MyBase.Columns("SenderBranch")
            Me.columnReceivedDate = MyBase.Columns("ReceivedDate")
            Me.columnOSN = MyBase.Columns("OSN")
            Me.columnOSN_ReceivedDate = MyBase.Columns("OSN_ReceivedDate")
            Me.columnSwift_Message = MyBase.Columns("Swift_Message")
            Me.columnSwift_Message_Formated = MyBase.Columns("Swift_Message_Formated")
            Me.columnMatchedStatus = MyBase.Columns("MatchedStatus")
            Me.columnReceiverCorrespondent = MyBase.Columns("ReceiverCorrespondent")
            Me.columnPayedStatus = MyBase.Columns("PayedStatus")
            Me.columnPayedReference = MyBase.Columns("PayedReference")
            Me.columnPayedDate = MyBase.Columns("PayedDate")
            Me.columnNotes = MyBase.Columns("Notes")
            Me.columnLastUpdate = MyBase.Columns("LastUpdate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSwiftFileName = New Global.System.Data.DataColumn("SwiftFileName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwiftFileName)
            Me.columnRef20 = New Global.System.Data.DataColumn("Ref20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef20)
            Me.columnRef21 = New Global.System.Data.DataColumn("Ref21", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRef21)
            Me.columnCCY = New Global.System.Data.DataColumn("CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnDetailsOfCharges = New Global.System.Data.DataColumn("DetailsOfCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetailsOfCharges)
            Me.columnMessageType = New Global.System.Data.DataColumn("MessageType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessageType)
            Me.columnMessageTypeName = New Global.System.Data.DataColumn("MessageTypeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMessageTypeName)
            Me.columnSenderBIC = New Global.System.Data.DataColumn("SenderBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderBIC)
            Me.columnSenderName = New Global.System.Data.DataColumn("SenderName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderName)
            Me.columnSenderBranch = New Global.System.Data.DataColumn("SenderBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderBranch)
            Me.columnReceivedDate = New Global.System.Data.DataColumn("ReceivedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivedDate)
            Me.columnOSN = New Global.System.Data.DataColumn("OSN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSN)
            Me.columnOSN_ReceivedDate = New Global.System.Data.DataColumn("OSN_ReceivedDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSN_ReceivedDate)
            Me.columnSwift_Message = New Global.System.Data.DataColumn("Swift_Message", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwift_Message)
            Me.columnSwift_Message_Formated = New Global.System.Data.DataColumn("Swift_Message_Formated", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwift_Message_Formated)
            Me.columnMatchedStatus = New Global.System.Data.DataColumn("MatchedStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMatchedStatus)
            Me.columnReceiverCorrespondent = New Global.System.Data.DataColumn("ReceiverCorrespondent", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiverCorrespondent)
            Me.columnPayedStatus = New Global.System.Data.DataColumn("PayedStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayedStatus)
            Me.columnPayedReference = New Global.System.Data.DataColumn("PayedReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayedReference)
            Me.columnPayedDate = New Global.System.Data.DataColumn("PayedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayedDate)
            Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotes)
            Me.columnLastUpdate = New Global.System.Data.DataColumn("LastUpdate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastUpdate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnSwiftFileName.MaxLength = 100
            Me.columnRef20.MaxLength = 50
            Me.columnRef21.MaxLength = 50
            Me.columnCCY.MaxLength = 3
            Me.columnDetailsOfCharges.MaxLength = 255
            Me.columnMessageType.MaxLength = 50
            Me.columnMessageTypeName.MaxLength = 255
            Me.columnSenderBIC.MaxLength = 11
            Me.columnSenderName.MaxLength = 255
            Me.columnSenderBranch.MaxLength = 255
            Me.columnOSN_ReceivedDate.MaxLength = 50
            Me.columnSwift_Message.MaxLength = 1073741823
            Me.columnSwift_Message_Formated.MaxLength = 1073741823
            Me.columnMatchedStatus.MaxLength = 1
            Me.columnReceiverCorrespondent.MaxLength = 50
            Me.columnPayedStatus.MaxLength = 1
            Me.columnPayedReference.MaxLength = 50
            Me.columnNotes.MaxLength = 255
            Me.columnLastUpdate.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewALL_SWIFT_CHARGES_MESSAGESRow() As ALL_SWIFT_CHARGES_MESSAGESRow
            Return CType(Me.NewRow,ALL_SWIFT_CHARGES_MESSAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ALL_SWIFT_CHARGES_MESSAGESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ALL_SWIFT_CHARGES_MESSAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGESRowChangedEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGESRowChanged(Me, New ALL_SWIFT_CHARGES_MESSAGESRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGESRowChangingEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGESRowChanging(Me, New ALL_SWIFT_CHARGES_MESSAGESRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGESRowDeletedEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGESRowDeleted(Me, New ALL_SWIFT_CHARGES_MESSAGESRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGESRowDeletingEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGESRowDeleting(Me, New ALL_SWIFT_CHARGES_MESSAGESRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveALL_SWIFT_CHARGES_MESSAGESRow(ByVal row As ALL_SWIFT_CHARGES_MESSAGESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ClearingDataSet = New ClearingDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ALL_SWIFT_CHARGES_MESSAGESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnOurReference As Global.System.Data.DataColumn
        
        Private columnRelatedPayment As Global.System.Data.DataColumn
        
        Private columnPaymentType As Global.System.Data.DataColumn
        
        Private columnReceiverBIC As Global.System.Data.DataColumn
        
        Private columnValueDate As Global.System.Data.DataColumn
        
        Private columnCCY As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnDetailsOfCharges As Global.System.Data.DataColumn
        
        Private columnPayedStatus As Global.System.Data.DataColumn
        
        Private columnId_Charges As Global.System.Data.DataColumn
        
        Private columnRequestedChargesCurrency As Global.System.Data.DataColumn
        
        Private columnRequestedChargesAmount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ALL_SWIFT_CHARGES_MESSAGES_Details"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OurReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOurReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RelatedPaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelatedPayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PaymentTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaymentType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReceiverBICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiverBIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ValueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DetailsOfChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetailsOfCharges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PayedStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayedStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_ChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Charges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestedChargesCurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestedChargesCurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RequestedChargesAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequestedChargesAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow
            Get
                Return CType(Me.Rows(index),ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChanging As ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChanged As ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGES_DetailsRowDeleting As ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ALL_SWIFT_CHARGES_MESSAGES_DetailsRowDeleted As ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddALL_SWIFT_CHARGES_MESSAGES_DetailsRow(ByVal row As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddALL_SWIFT_CHARGES_MESSAGES_DetailsRow(ByVal OurReference As String, ByVal RelatedPayment As String, ByVal PaymentType As String, ByVal ReceiverBIC As String, ByVal ValueDate As Date, ByVal CCY As String, ByVal Amount As Double, ByVal DetailsOfCharges As String, ByVal PayedStatus As String, ByVal parentALL_SWIFT_CHARGES_MESSAGESRowByALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details As ALL_SWIFT_CHARGES_MESSAGESRow, ByVal RequestedChargesCurrency As String, ByVal RequestedChargesAmount As Double) As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow
            Dim rowALL_SWIFT_CHARGES_MESSAGES_DetailsRow As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow = CType(Me.NewRow,ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, OurReference, RelatedPayment, PaymentType, ReceiverBIC, ValueDate, CCY, Amount, DetailsOfCharges, PayedStatus, Nothing, RequestedChargesCurrency, RequestedChargesAmount}
            If (Not (parentALL_SWIFT_CHARGES_MESSAGESRowByALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details) Is Nothing) Then
                columnValuesArray(10) = parentALL_SWIFT_CHARGES_MESSAGESRowByALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details(0)
            End If
            rowALL_SWIFT_CHARGES_MESSAGES_DetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
            Return rowALL_SWIFT_CHARGES_MESSAGES_DetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow
            Return CType(Me.Rows.Find(New Object() {ID}),ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable = CType(MyBase.Clone,ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnOurReference = MyBase.Columns("OurReference")
            Me.columnRelatedPayment = MyBase.Columns("RelatedPayment")
            Me.columnPaymentType = MyBase.Columns("PaymentType")
            Me.columnReceiverBIC = MyBase.Columns("ReceiverBIC")
            Me.columnValueDate = MyBase.Columns("ValueDate")
            Me.columnCCY = MyBase.Columns("CCY")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnDetailsOfCharges = MyBase.Columns("DetailsOfCharges")
            Me.columnPayedStatus = MyBase.Columns("PayedStatus")
            Me.columnId_Charges = MyBase.Columns("Id_Charges")
            Me.columnRequestedChargesCurrency = MyBase.Columns("RequestedChargesCurrency")
            Me.columnRequestedChargesAmount = MyBase.Columns("RequestedChargesAmount")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnOurReference = New Global.System.Data.DataColumn("OurReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOurReference)
            Me.columnRelatedPayment = New Global.System.Data.DataColumn("RelatedPayment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelatedPayment)
            Me.columnPaymentType = New Global.System.Data.DataColumn("PaymentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaymentType)
            Me.columnReceiverBIC = New Global.System.Data.DataColumn("ReceiverBIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiverBIC)
            Me.columnValueDate = New Global.System.Data.DataColumn("ValueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValueDate)
            Me.columnCCY = New Global.System.Data.DataColumn("CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnDetailsOfCharges = New Global.System.Data.DataColumn("DetailsOfCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetailsOfCharges)
            Me.columnPayedStatus = New Global.System.Data.DataColumn("PayedStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayedStatus)
            Me.columnId_Charges = New Global.System.Data.DataColumn("Id_Charges", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Charges)
            Me.columnRequestedChargesCurrency = New Global.System.Data.DataColumn("RequestedChargesCurrency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestedChargesCurrency)
            Me.columnRequestedChargesAmount = New Global.System.Data.DataColumn("RequestedChargesAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequestedChargesAmount)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnOurReference.MaxLength = 50
            Me.columnRelatedPayment.MaxLength = 50
            Me.columnPaymentType.MaxLength = 50
            Me.columnReceiverBIC.MaxLength = 11
            Me.columnCCY.MaxLength = 3
            Me.columnDetailsOfCharges.MaxLength = 255
            Me.columnPayedStatus.MaxLength = 1
            Me.columnRequestedChargesCurrency.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewALL_SWIFT_CHARGES_MESSAGES_DetailsRow() As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow
            Return CType(Me.NewRow,ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ALL_SWIFT_CHARGES_MESSAGES_DetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChanged(Me, New ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGES_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChanging(Me, New ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGES_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGES_DetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGES_DetailsRowDeleted(Me, New ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGES_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ALL_SWIFT_CHARGES_MESSAGES_DetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ALL_SWIFT_CHARGES_MESSAGES_DetailsRowDeleting(Me, New ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEvent(CType(e.Row,ALL_SWIFT_CHARGES_MESSAGES_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveALL_SWIFT_CHARGES_MESSAGES_DetailsRow(ByVal row As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ClearingDataSet = New ClearingDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CHEQUE_COLLECTIONSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCHEQUE_COLLECTIONS As CHEQUE_COLLECTIONSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCHEQUE_COLLECTIONS = CType(Me.Table,CHEQUE_COLLECTIONSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableCHEQUE_COLLECTIONS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IncomingDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.IncomingDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncomingDate' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.IncomingDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Import_Export_Cheque() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.Import_Export_ChequeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Import_Export_Cheque' in table 'CHEQUE_COLLECTIONS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.Import_Export_ChequeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChequeCurrency() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.ChequeCurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChequeCurrency' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.ChequeCurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChequeAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.ChequeAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChequeAmount' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.ChequeAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Exchange_Rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.Exchange_RateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Exchange_Rate' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.Exchange_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChequeAmountEURO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.ChequeAmountEUROColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChequeAmountEURO' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.ChequeAmountEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChequeNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.ChequeNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChequeNo' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.ChequeNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DrawerBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.DrawerBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DrawerBank' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.DrawerBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CountryDrawerBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.CountryDrawerBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CountryDrawerBank' in table 'CHEQUE_COLLECTIONS' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.CountryDrawerBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DraweeBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.DraweeBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DraweeBank' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.DraweeBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CountryDraweeBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.CountryDraweeBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CountryDraweeBank' in table 'CHEQUE_COLLECTIONS' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.CountryDraweeBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ChequeSettlement() As String
            Get
                Try 
                    Return CType(Me(Me.tableCHEQUE_COLLECTIONS.ChequeSettlementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChequeSettlement' in table 'CHEQUE_COLLECTIONS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCHEQUE_COLLECTIONS.ChequeSettlementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIncomingDateNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.IncomingDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIncomingDateNull()
            Me(Me.tableCHEQUE_COLLECTIONS.IncomingDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsImport_Export_ChequeNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.Import_Export_ChequeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetImport_Export_ChequeNull()
            Me(Me.tableCHEQUE_COLLECTIONS.Import_Export_ChequeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChequeCurrencyNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.ChequeCurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChequeCurrencyNull()
            Me(Me.tableCHEQUE_COLLECTIONS.ChequeCurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChequeAmountNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.ChequeAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChequeAmountNull()
            Me(Me.tableCHEQUE_COLLECTIONS.ChequeAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsExchange_RateNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.Exchange_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetExchange_RateNull()
            Me(Me.tableCHEQUE_COLLECTIONS.Exchange_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChequeAmountEURONull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.ChequeAmountEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChequeAmountEURONull()
            Me(Me.tableCHEQUE_COLLECTIONS.ChequeAmountEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChequeNoNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.ChequeNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChequeNoNull()
            Me(Me.tableCHEQUE_COLLECTIONS.ChequeNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDrawerBankNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.DrawerBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDrawerBankNull()
            Me(Me.tableCHEQUE_COLLECTIONS.DrawerBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCountryDrawerBankNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.CountryDrawerBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCountryDrawerBankNull()
            Me(Me.tableCHEQUE_COLLECTIONS.CountryDrawerBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDraweeBankNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.DraweeBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDraweeBankNull()
            Me(Me.tableCHEQUE_COLLECTIONS.DraweeBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCountryDraweeBankNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.CountryDraweeBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCountryDraweeBankNull()
            Me(Me.tableCHEQUE_COLLECTIONS.CountryDraweeBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsChequeSettlementNull() As Boolean
            Return Me.IsNull(Me.tableCHEQUE_COLLECTIONS.ChequeSettlementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetChequeSettlementNull()
            Me(Me.tableCHEQUE_COLLECTIONS.ChequeSettlementColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GMPS_PAYMENTS_INRow
        Inherits Global.System.Data.DataRow
        
        Private tableGMPS_PAYMENTS_IN As GMPS_PAYMENTS_INDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGMPS_PAYMENTS_IN = CType(Me.Table,GMPS_PAYMENTS_INDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGMPS_PAYMENTS_IN.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IncomingDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.IncomingDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncomingDate' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.IncomingDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OurReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.OurReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OurReference' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.OurReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ValueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.ValueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValueDate' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.ValueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MessageSender() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MessageSender' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MessageSenderName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MessageSenderName' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MessageSenderCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MessageSenderCity' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Currency() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.CurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Currency' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.CurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReferenceNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.ReferenceNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceNo' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.ReferenceNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AccountOfInstitution() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountOfInstitution' in table 'GMPS PAYMENTS IN' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AccountOfInstitutionName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountOfInstitutionName' in table 'GMPS PAYMENTS IN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AccountOfInstitutionCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountOfInstitutionCity' in table 'GMPS PAYMENTS IN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ExchangeRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.ExchangeRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExchangeRate' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.ExchangeRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AmountEuro() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.AmountEuroColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountEuro' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.AmountEuroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OriginalOrderingCustomer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingCustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalOrderingCustomer' in table 'GMPS PAYMENTS IN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OriginalOrderingInstitution() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalOrderingInstitution' in table 'GMPS PAYMENTS IN' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OriginalOrderingInstitutionName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalOrderingInstitutionName' in table 'GMPS PAYMENTS IN"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OriginalOrderingInstitutionCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalOrderingInstitutionCity' in table 'GMPS PAYMENTS IN"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryCustomer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryCustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryCustomer' in table 'GMPS PAYMENTS IN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Commission() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.CommissionColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Commission' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.CommissionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DetailsOfCharges() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.DetailsOfChargesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DetailsOfCharges' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.DetailsOfChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAYMENT_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.PAYMENT_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAYMENT_CODE' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.PAYMENT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceiverBICofConstructMessage() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiverBICofConstructMessage' in table 'GMPS PAYMENTS IN' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceiverBICofConstructMessageName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiverBICofConstructMessageName' in table 'GMPS PAYMENTS "& _ 
                            "IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceiverBICofConstructMessageCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiverBICofConstructMessageCity' in table 'GMPS PAYMENTS "& _ 
                            "IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PaymentYear() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.PaymentYearColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaymentYear' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.PaymentYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProcessedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.ProcessedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProcessedBy' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.ProcessedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MsgSenderCountry() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.MsgSenderCountryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MsgSenderCountry' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.MsgSenderCountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MTTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.MTTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTTYPE' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.MTTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryBank' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryBankName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryBankName' in table 'GMPS PAYMENTS IN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryBankCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryBankCity' in table 'GMPS PAYMENTS IN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MsgBenefCountry() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.MsgBenefCountryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MsgBenefCountry' in table 'GMPS PAYMENTS IN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.MsgBenefCountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderToReceiverInformation() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_IN.SenderToReceiverInformationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderToReceiverInformation' in table 'GMPS PAYMENTS IN' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_IN.SenderToReceiverInformationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIncomingDateNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.IncomingDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIncomingDateNull()
            Me(Me.tableGMPS_PAYMENTS_IN.IncomingDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOurReferenceNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.OurReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOurReferenceNull()
            Me(Me.tableGMPS_PAYMENTS_IN.OurReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsValueDateNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.ValueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetValueDateNull()
            Me(Me.tableGMPS_PAYMENTS_IN.ValueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMessageSenderNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.MessageSenderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMessageSenderNull()
            Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMessageSenderNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.MessageSenderNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMessageSenderNameNull()
            Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMessageSenderCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.MessageSenderCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMessageSenderCityNull()
            Me(Me.tableGMPS_PAYMENTS_IN.MessageSenderCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCurrencyNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.CurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCurrencyNull()
            Me(Me.tableGMPS_PAYMENTS_IN.CurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReferenceNoNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.ReferenceNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReferenceNoNull()
            Me(Me.tableGMPS_PAYMENTS_IN.ReferenceNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAccountOfInstitutionNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAccountOfInstitutionNull()
            Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAccountOfInstitutionNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAccountOfInstitutionNameNull()
            Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAccountOfInstitutionCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAccountOfInstitutionCityNull()
            Me(Me.tableGMPS_PAYMENTS_IN.AccountOfInstitutionCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableGMPS_PAYMENTS_IN.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsExchangeRateNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.ExchangeRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetExchangeRateNull()
            Me(Me.tableGMPS_PAYMENTS_IN.ExchangeRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAmountEuroNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.AmountEuroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAmountEuroNull()
            Me(Me.tableGMPS_PAYMENTS_IN.AmountEuroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOriginalOrderingCustomerNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOriginalOrderingCustomerNull()
            Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOriginalOrderingInstitutionNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOriginalOrderingInstitutionNull()
            Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOriginalOrderingInstitutionNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOriginalOrderingInstitutionNameNull()
            Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOriginalOrderingInstitutionCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOriginalOrderingInstitutionCityNull()
            Me(Me.tableGMPS_PAYMENTS_IN.OriginalOrderingInstitutionCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryCustomerNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.BeneficiaryCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryCustomerNull()
            Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCommissionNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.CommissionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCommissionNull()
            Me(Me.tableGMPS_PAYMENTS_IN.CommissionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDetailsOfChargesNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.DetailsOfChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDetailsOfChargesNull()
            Me(Me.tableGMPS_PAYMENTS_IN.DetailsOfChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAYMENT_CODENull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.PAYMENT_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAYMENT_CODENull()
            Me(Me.tableGMPS_PAYMENTS_IN.PAYMENT_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceiverBICofConstructMessageNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceiverBICofConstructMessageNull()
            Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceiverBICofConstructMessageNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceiverBICofConstructMessageNameNull()
            Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceiverBICofConstructMessageCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceiverBICofConstructMessageCityNull()
            Me(Me.tableGMPS_PAYMENTS_IN.ReceiverBICofConstructMessageCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPaymentYearNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.PaymentYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPaymentYearNull()
            Me(Me.tableGMPS_PAYMENTS_IN.PaymentYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProcessedByNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.ProcessedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProcessedByNull()
            Me(Me.tableGMPS_PAYMENTS_IN.ProcessedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMsgSenderCountryNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.MsgSenderCountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMsgSenderCountryNull()
            Me(Me.tableGMPS_PAYMENTS_IN.MsgSenderCountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMTTYPENull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.MTTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMTTYPENull()
            Me(Me.tableGMPS_PAYMENTS_IN.MTTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryBankNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryBankNull()
            Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryBankNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryBankNameNull()
            Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryBankCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryBankCityNull()
            Me(Me.tableGMPS_PAYMENTS_IN.BeneficiaryBankCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMsgBenefCountryNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.MsgBenefCountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMsgBenefCountryNull()
            Me(Me.tableGMPS_PAYMENTS_IN.MsgBenefCountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderToReceiverInformationNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_IN.SenderToReceiverInformationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderToReceiverInformationNull()
            Me(Me.tableGMPS_PAYMENTS_IN.SenderToReceiverInformationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GMPS_PAYMENTS_OUTRow
        Inherits Global.System.Data.DataRow
        
        Private tableGMPS_PAYMENTS_OUT As GMPS_PAYMENTS_OUTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGMPS_PAYMENTS_OUT = CType(Me.Table,GMPS_PAYMENTS_OUTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MTTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.MTTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTTYPE' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.MTTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RegisterDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.RegisterDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegisterDate' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.RegisterDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OurReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.OurReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OurReference' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.OurReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.SenderReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderReference' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.SenderReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Currency() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.CurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Currency' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.CurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ExchangeRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ExchangeRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExchangeRate' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ExchangeRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AmountEuro() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.AmountEuroColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountEuro' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.AmountEuroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.SenderBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderBIC' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.SenderBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.SenderNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderName' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.SenderNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.SenderCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderCity' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.SenderCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ValueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ValueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValueDate' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ValueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceivingBankBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivingBankBIC' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceivingBankCountryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCountryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivingBankCountryCode' in table 'GMPS PAYMENTS OUT' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCountryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceivingBankName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivingBankName' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceivingBankCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivingBankCity' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OrderingCustomersAccountServicingInstitution() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccountServicingInstitutionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderingCustomersAccountServicingInstitution' in table 'GMP"& _ 
                            "S PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccountServicingInstitutionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.TransactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionType' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.TransactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OrderingCustomer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderingCustomer' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OrderingCustomersAccNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderingCustomersAccNo' in table 'GMPS PAYMENTS OUT' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IntermediaryInstitutionBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IntermediaryInstitutionBIC' in table 'GMPS PAYMENTS OUT' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IntermediaryInstitutionName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IntermediaryInstitutionName' in table 'GMPS PAYMENTS OUT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IntermediaryInstitutionCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IntermediaryInstitutionCity' in table 'GMPS PAYMENTS OUT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IntermediaryInstitutionAccNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionAccNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IntermediaryInstitutionAccNo' in table 'GMPS PAYMENTS OUT' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionAccNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AccountPayeeBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountPayeeBIC' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AccountPayeeNameAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeNameAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountPayeeNameAddress' in table 'GMPS PAYMENTS OUT' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeNameAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AccountPayeeCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountPayeeCity' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AccountOfInstitutionAccNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.AccountOfInstitutionAccNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountOfInstitutionAccNo' in table 'GMPS PAYMENTS OUT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.AccountOfInstitutionAccNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryBankBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryBankBIC' in table 'GMPS PAYMENTS OUT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryBankName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryBankName' in table 'GMPS PAYMENTS OUT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryBankCity() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankCityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryBankCity' in table 'GMPS PAYMENTS OUT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankCityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryBankAccNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankAccNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryBankAccNo' in table 'GMPS PAYMENTS OUT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankAccNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryCustomerBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryCustomerBIC' in table 'GMPS PAYMENTS OUT' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryCustomerAccNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerAccNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryCustomerAccNo' in table 'GMPS PAYMENTS OUT' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerAccNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BeneficiaryCustomerNameAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerNameAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BeneficiaryCustomerNameAddress' in table 'GMPS PAYMENTS OUT"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerNameAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DetailsOfCharges() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.DetailsOfChargesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DetailsOfCharges' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.DetailsOfChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PayStartTime() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.PayStartTimeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayStartTime' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.PayStartTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderToReceiverInformation() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.SenderToReceiverInformationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderToReceiverInformation' in table 'GMPS PAYMENTS OUT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.SenderToReceiverInformationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DebitTransactionsSigns() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.DebitTransactionsSignsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DebitTransactionsSigns' in table 'GMPS PAYMENTS OUT' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.DebitTransactionsSignsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProcessingQueue() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ProcessingQueueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProcessingQueue' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ProcessingQueueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACK_State() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ACK_StateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACK_State' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ACK_StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PaymentYear() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.PaymentYearColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaymentYear' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.PaymentYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProcessedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.ProcessedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProcessedBy' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.ProcessedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MsgSenderCountry() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.MsgSenderCountryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MsgSenderCountry' in table 'GMPS PAYMENTS OUT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.MsgSenderCountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RemittanceInformation() As String
            Get
                Try 
                    Return CType(Me(Me.tableGMPS_PAYMENTS_OUT.RemittanceInformationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RemittanceInformation' in table 'GMPS PAYMENTS OUT' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableGMPS_PAYMENTS_OUT.RemittanceInformationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMTTYPENull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.MTTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMTTYPENull()
            Me(Me.tableGMPS_PAYMENTS_OUT.MTTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRegisterDateNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.RegisterDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRegisterDateNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.RegisterDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOurReferenceNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.OurReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOurReferenceNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.OurReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderReferenceNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.SenderReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderReferenceNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.SenderReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCurrencyNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.CurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCurrencyNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.CurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsExchangeRateNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ExchangeRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetExchangeRateNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ExchangeRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAmountEuroNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.AmountEuroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAmountEuroNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.AmountEuroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderBICNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.SenderBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderBICNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.SenderBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.SenderNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderNameNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.SenderNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.SenderCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderCityNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.SenderCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsValueDateNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ValueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetValueDateNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ValueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceivingBankBICNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceivingBankBICNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceivingBankCountryCodeNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCountryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceivingBankCountryCodeNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCountryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceivingBankNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceivingBankNameNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceivingBankCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceivingBankCityNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ReceivingBankCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrderingCustomersAccountServicingInstitutionNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccountServicingInstitutionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrderingCustomersAccountServicingInstitutionNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccountServicingInstitutionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionTypeNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.TransactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionTypeNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.TransactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrderingCustomerNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrderingCustomerNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrderingCustomersAccNoNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrderingCustomersAccNoNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.OrderingCustomersAccNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIntermediaryInstitutionBICNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIntermediaryInstitutionBICNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIntermediaryInstitutionNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIntermediaryInstitutionNameNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIntermediaryInstitutionCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIntermediaryInstitutionCityNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIntermediaryInstitutionAccNoNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionAccNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIntermediaryInstitutionAccNoNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.IntermediaryInstitutionAccNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAccountPayeeBICNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAccountPayeeBICNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAccountPayeeNameAddressNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeNameAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAccountPayeeNameAddressNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeNameAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAccountPayeeCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAccountPayeeCityNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.AccountPayeeCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAccountOfInstitutionAccNoNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.AccountOfInstitutionAccNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAccountOfInstitutionAccNoNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.AccountOfInstitutionAccNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryBankBICNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryBankBICNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryBankNameNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryBankNameNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryBankCityNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankCityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryBankCityNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankCityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryBankAccNoNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankAccNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryBankAccNoNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryBankAccNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryCustomerBICNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryCustomerBICNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryCustomerAccNoNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerAccNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryCustomerAccNoNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerAccNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBeneficiaryCustomerNameAddressNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerNameAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBeneficiaryCustomerNameAddressNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.BeneficiaryCustomerNameAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDetailsOfChargesNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.DetailsOfChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDetailsOfChargesNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.DetailsOfChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPayStartTimeNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.PayStartTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPayStartTimeNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.PayStartTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderToReceiverInformationNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.SenderToReceiverInformationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderToReceiverInformationNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.SenderToReceiverInformationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDebitTransactionsSignsNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.DebitTransactionsSignsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDebitTransactionsSignsNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.DebitTransactionsSignsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProcessingQueueNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ProcessingQueueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProcessingQueueNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ProcessingQueueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACK_StateNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ACK_StateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACK_StateNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ACK_StateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPaymentYearNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.PaymentYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPaymentYearNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.PaymentYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProcessedByNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.ProcessedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProcessedByNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.ProcessedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMsgSenderCountryNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.MsgSenderCountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMsgSenderCountryNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.MsgSenderCountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRemittanceInformationNull() As Boolean
            Return Me.IsNull(Me.tableGMPS_PAYMENTS_OUT.RemittanceInformationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRemittanceInformationNull()
            Me(Me.tableGMPS_PAYMENTS_OUT.RemittanceInformationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ODAS_REMMITANCESRow
        Inherits Global.System.Data.DataRow
        
        Private tableODAS_REMMITANCES As ODAS_REMMITANCESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableODAS_REMMITANCES = CType(Me.Table,ODAS_REMMITANCESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableODAS_REMMITANCES.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EM00KEY0() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.EM00KEY0Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY0' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.EM00KEY0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Client_Account() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.Client_AccountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client Account' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.Client_AccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EM00KEY1() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.EM00KEY1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY1' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.EM00KEY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EM00KEY2() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.EM00KEY2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EM00KEY2' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.EM00KEY2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OURTRANREFNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.OURTRANREFNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OURTRANREFNO' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.OURTRANREFNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property INWARDOUTWARD() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.INWARDOUTWARDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INWARDOUTWARD' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.INWARDOUTWARDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property METHOD() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.METHODColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'METHOD' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.METHODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECEIVERBRANCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECEIVERBRANCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERBRANCH' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECEIVERBRANCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECEIVERID() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECEIVERIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERID' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECEIVERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECEIVERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECEIVERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERNAME' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECEIVERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECEIVERSWIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECEIVERSWIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECEIVERSWIFT' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECEIVERSWIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SENDERCORBKID() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.SENDERCORBKIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORBKID' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.SENDERCORBKIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SENDERCORRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.SENDERCORRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRNAME' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.SENDERCORRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SENDERCORRBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.SENDERCORRBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRBR' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.SENDERCORRBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SENDERCORRST() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.SENDERCORRSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SENDERCORRST' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.SENDERCORRSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECRCORRID() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECRCORRIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRID' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECRCORRIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECRCORRNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECRCORRNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRNAME' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECRCORRNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECRCORRBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECRCORRBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRBR' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECRCORRBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RECRCORRSWIFT() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.RECRCORRSWIFTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RECRCORRSWIFT' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.RECRCORRSWIFTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACWITHINSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ACWITHINSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTID' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ACWITHINSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACWITHINSTNA() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ACWITHINSTNAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTNA' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ACWITHINSTNAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACWITHINSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ACWITHINSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTBR' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ACWITHINSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACWITHINSTST() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ACWITHINSTSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACWITHINSTST' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ACWITHINSTSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BENEFACNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.BENEFACNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFACNO' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.BENEFACNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BENEFCUSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.BENEFCUSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTBR' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.BENEFCUSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BENEFCUSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.BENEFCUSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTID' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.BENEFCUSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BENEFCUSTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.BENEFCUSTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTNAME' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.BENEFCUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BENEFCUSTADR1() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.BENEFCUSTADR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTADR1' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.BENEFCUSTADR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BENEFCUSTADR2() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.BENEFCUSTADR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFCUSTADR2' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.BENEFCUSTADR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETOFCHARGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.DETOFCHARGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DETOFCHARGE' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.DETOFCHARGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SETOREINFO() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.SETOREINFOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SETOREINFO' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.SETOREINFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CURRENCYCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.CURRENCYCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENCYCODE' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.CURRENCYCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TRANSACTIONDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.TRANSACTIONDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSACTIONDATE' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.TRANSACTIONDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VALUEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.VALUEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VALUEDATE' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.VALUEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Deal_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.Deal_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deal Amount' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.Deal_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EXCHANGE_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.EXCHANGE_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXCHANGE_RATE' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.EXCHANGE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Deal_Amount_Euro() As Double
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.Deal_Amount_EuroColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deal Amount Euro' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.Deal_Amount_EuroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HANDLINGFEE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.HANDLINGFEEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HANDLINGFEE' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.HANDLINGFEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORDERCUSTBR() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ORDERCUSTBRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTBR' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ORDERCUSTBRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORDERCUSTID() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ORDERCUSTIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTID' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ORDERCUSTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORDERCUSTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ORDERCUSTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTNAME' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ORDERCUSTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORDERCUSTADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD1' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORDERCUSTADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD2' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HOLDFUNC() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.HOLDFUNCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HOLDFUNC' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.HOLDFUNCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORDERCUSTADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERCUSTADD3' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SWIFTINREF() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.SWIFTINREFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SWIFTINREF' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.SWIFTINREFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BEMERKUNGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.BEMERKUNGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEMERKUNGEN' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.BEMERKUNGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PAYMENTDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableODAS_REMMITANCES.PAYMENTDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAYMENTDETAILS' in table 'ODAS REMMITANCES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODAS_REMMITANCES.PAYMENTDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEM00KEY0Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.EM00KEY0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEM00KEY0Null()
            Me(Me.tableODAS_REMMITANCES.EM00KEY0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClient_AccountNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.Client_AccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClient_AccountNull()
            Me(Me.tableODAS_REMMITANCES.Client_AccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEM00KEY1Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.EM00KEY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEM00KEY1Null()
            Me(Me.tableODAS_REMMITANCES.EM00KEY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEM00KEY2Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.EM00KEY2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEM00KEY2Null()
            Me(Me.tableODAS_REMMITANCES.EM00KEY2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOURTRANREFNONull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.OURTRANREFNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOURTRANREFNONull()
            Me(Me.tableODAS_REMMITANCES.OURTRANREFNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsINWARDOUTWARDNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.INWARDOUTWARDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetINWARDOUTWARDNull()
            Me(Me.tableODAS_REMMITANCES.INWARDOUTWARDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMETHODNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.METHODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMETHODNull()
            Me(Me.tableODAS_REMMITANCES.METHODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECEIVERBRANCHNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECEIVERBRANCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECEIVERBRANCHNull()
            Me(Me.tableODAS_REMMITANCES.RECEIVERBRANCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECEIVERIDNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECEIVERIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECEIVERIDNull()
            Me(Me.tableODAS_REMMITANCES.RECEIVERIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECEIVERNAMENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECEIVERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECEIVERNAMENull()
            Me(Me.tableODAS_REMMITANCES.RECEIVERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECEIVERSWIFTNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECEIVERSWIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECEIVERSWIFTNull()
            Me(Me.tableODAS_REMMITANCES.RECEIVERSWIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSENDERCORBKIDNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.SENDERCORBKIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSENDERCORBKIDNull()
            Me(Me.tableODAS_REMMITANCES.SENDERCORBKIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSENDERCORRNAMENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.SENDERCORRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSENDERCORRNAMENull()
            Me(Me.tableODAS_REMMITANCES.SENDERCORRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSENDERCORRBRNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.SENDERCORRBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSENDERCORRBRNull()
            Me(Me.tableODAS_REMMITANCES.SENDERCORRBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSENDERCORRSTNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.SENDERCORRSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSENDERCORRSTNull()
            Me(Me.tableODAS_REMMITANCES.SENDERCORRSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECRCORRIDNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECRCORRIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECRCORRIDNull()
            Me(Me.tableODAS_REMMITANCES.RECRCORRIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECRCORRNAMENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECRCORRNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECRCORRNAMENull()
            Me(Me.tableODAS_REMMITANCES.RECRCORRNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECRCORRBRNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECRCORRBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECRCORRBRNull()
            Me(Me.tableODAS_REMMITANCES.RECRCORRBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRECRCORRSWIFTNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.RECRCORRSWIFTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRECRCORRSWIFTNull()
            Me(Me.tableODAS_REMMITANCES.RECRCORRSWIFTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACWITHINSTIDNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ACWITHINSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACWITHINSTIDNull()
            Me(Me.tableODAS_REMMITANCES.ACWITHINSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACWITHINSTNANull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ACWITHINSTNAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACWITHINSTNANull()
            Me(Me.tableODAS_REMMITANCES.ACWITHINSTNAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACWITHINSTBRNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ACWITHINSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACWITHINSTBRNull()
            Me(Me.tableODAS_REMMITANCES.ACWITHINSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACWITHINSTSTNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ACWITHINSTSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACWITHINSTSTNull()
            Me(Me.tableODAS_REMMITANCES.ACWITHINSTSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBENEFACNONull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.BENEFACNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBENEFACNONull()
            Me(Me.tableODAS_REMMITANCES.BENEFACNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBENEFCUSTBRNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.BENEFCUSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBENEFCUSTBRNull()
            Me(Me.tableODAS_REMMITANCES.BENEFCUSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBENEFCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.BENEFCUSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBENEFCUSTIDNull()
            Me(Me.tableODAS_REMMITANCES.BENEFCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBENEFCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.BENEFCUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBENEFCUSTNAMENull()
            Me(Me.tableODAS_REMMITANCES.BENEFCUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBENEFCUSTADR1Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.BENEFCUSTADR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBENEFCUSTADR1Null()
            Me(Me.tableODAS_REMMITANCES.BENEFCUSTADR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBENEFCUSTADR2Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.BENEFCUSTADR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBENEFCUSTADR2Null()
            Me(Me.tableODAS_REMMITANCES.BENEFCUSTADR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETOFCHARGENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.DETOFCHARGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETOFCHARGENull()
            Me(Me.tableODAS_REMMITANCES.DETOFCHARGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSETOREINFONull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.SETOREINFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSETOREINFONull()
            Me(Me.tableODAS_REMMITANCES.SETOREINFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCURRENCYCODENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.CURRENCYCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCURRENCYCODENull()
            Me(Me.tableODAS_REMMITANCES.CURRENCYCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTRANSACTIONDATENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.TRANSACTIONDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTRANSACTIONDATENull()
            Me(Me.tableODAS_REMMITANCES.TRANSACTIONDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVALUEDATENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.VALUEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVALUEDATENull()
            Me(Me.tableODAS_REMMITANCES.VALUEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeal_AmountNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.Deal_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeal_AmountNull()
            Me(Me.tableODAS_REMMITANCES.Deal_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEXCHANGE_RATENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.EXCHANGE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEXCHANGE_RATENull()
            Me(Me.tableODAS_REMMITANCES.EXCHANGE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeal_Amount_EuroNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.Deal_Amount_EuroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeal_Amount_EuroNull()
            Me(Me.tableODAS_REMMITANCES.Deal_Amount_EuroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHANDLINGFEENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.HANDLINGFEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHANDLINGFEENull()
            Me(Me.tableODAS_REMMITANCES.HANDLINGFEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORDERCUSTBRNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ORDERCUSTBRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORDERCUSTBRNull()
            Me(Me.tableODAS_REMMITANCES.ORDERCUSTBRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORDERCUSTIDNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ORDERCUSTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORDERCUSTIDNull()
            Me(Me.tableODAS_REMMITANCES.ORDERCUSTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORDERCUSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ORDERCUSTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORDERCUSTNAMENull()
            Me(Me.tableODAS_REMMITANCES.ORDERCUSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORDERCUSTADD1Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ORDERCUSTADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORDERCUSTADD1Null()
            Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORDERCUSTADD2Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ORDERCUSTADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORDERCUSTADD2Null()
            Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHOLDFUNCNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.HOLDFUNCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHOLDFUNCNull()
            Me(Me.tableODAS_REMMITANCES.HOLDFUNCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORDERCUSTADD3Null() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.ORDERCUSTADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORDERCUSTADD3Null()
            Me(Me.tableODAS_REMMITANCES.ORDERCUSTADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSWIFTINREFNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.SWIFTINREFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSWIFTINREFNull()
            Me(Me.tableODAS_REMMITANCES.SWIFTINREFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBEMERKUNGENNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.BEMERKUNGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBEMERKUNGENNull()
            Me(Me.tableODAS_REMMITANCES.BEMERKUNGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPAYMENTDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableODAS_REMMITANCES.PAYMENTDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPAYMENTDETAILSNull()
            Me(Me.tableODAS_REMMITANCES.PAYMENTDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ALL_SWIFT_CHARGES_MESSAGESRow
        Inherits Global.System.Data.DataRow
        
        Private tableALL_SWIFT_CHARGES_MESSAGES As ALL_SWIFT_CHARGES_MESSAGESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableALL_SWIFT_CHARGES_MESSAGES = CType(Me.Table,ALL_SWIFT_CHARGES_MESSAGESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SwiftFileName() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SwiftFileNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SwiftFileName' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SwiftFileNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Ref20() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref20' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Ref21() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref21Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ref21' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DetailsOfCharges() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.DetailsOfChargesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DetailsOfCharges' in table 'ALL_SWIFT_CHARGES_MESSAGES' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.DetailsOfChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MessageType() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MessageType' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MessageTypeName() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MessageTypeName' in table 'ALL_SWIFT_CHARGES_MESSAGES' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderBIC' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderName() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderName' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SenderBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderBranch' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceivedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceivedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivedDate' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceivedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OSN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSNColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSN' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OSN_ReceivedDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSN_ReceivedDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSN_ReceivedDate' in table 'ALL_SWIFT_CHARGES_MESSAGES' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSN_ReceivedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Swift_Message() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_MessageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Swift_Message' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_MessageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Swift_Message_Formated() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_Message_FormatedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Swift_Message_Formated' in table 'ALL_SWIFT_CHARGES_MESSAGE"& _ 
                            "S' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_Message_FormatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MatchedStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MatchedStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MatchedStatus' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MatchedStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceiverCorrespondent() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceiverCorrespondentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiverCorrespondent' in table 'ALL_SWIFT_CHARGES_MESSAGES"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceiverCorrespondentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PayedStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayedStatus' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PayedReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayedReference' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PayedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayedDate' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LastUpdate() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.LastUpdateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastUpdate' in table 'ALL_SWIFT_CHARGES_MESSAGES' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.LastUpdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwiftFileNameNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.SwiftFileNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwiftFileNameNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SwiftFileNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRef20Null() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRef20Null()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRef21Null() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRef21Null()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Ref21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCYNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCYNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDetailsOfChargesNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.DetailsOfChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDetailsOfChargesNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.DetailsOfChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMessageTypeNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMessageTypeNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMessageTypeNameNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMessageTypeNameNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MessageTypeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderBICNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderBICNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderNameNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderNameNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSenderBranchNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSenderBranchNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.SenderBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceivedDateNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceivedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceivedDateNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceivedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOSNNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOSNNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOSN_ReceivedDateNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSN_ReceivedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOSN_ReceivedDateNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.OSN_ReceivedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwift_MessageNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_MessageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwift_MessageNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_MessageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwift_Message_FormatedNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_Message_FormatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwift_Message_FormatedNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.Swift_Message_FormatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMatchedStatusNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.MatchedStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMatchedStatusNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.MatchedStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceiverCorrespondentNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceiverCorrespondentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceiverCorrespondentNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.ReceiverCorrespondentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPayedStatusNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPayedStatusNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPayedReferenceNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPayedReferenceNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPayedDateNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPayedDateNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.PayedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNotesNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNotesNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.NotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLastUpdateNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES.LastUpdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLastUpdateNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES.LastUpdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetALL_SWIFT_CHARGES_MESSAGES_DetailsRows() As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow()
            If (Me.Table.ChildRelations("ALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details") Is Nothing) Then
                Return New ALL_SWIFT_CHARGES_MESSAGES_DetailsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details")),ALL_SWIFT_CHARGES_MESSAGES_DetailsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ALL_SWIFT_CHARGES_MESSAGES_DetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tableALL_SWIFT_CHARGES_MESSAGES_Details As ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableALL_SWIFT_CHARGES_MESSAGES_Details = CType(Me.Table,ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OurReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.OurReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OurReference' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.OurReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RelatedPayment() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RelatedPaymentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelatedPayment' in table 'ALL_SWIFT_CHARGES_MESSAGES_Detail"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RelatedPaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PaymentType() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PaymentTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaymentType' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PaymentTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReceiverBIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ReceiverBICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiverBIC' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ReceiverBICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ValueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ValueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValueDate' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ValueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DetailsOfCharges() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.DetailsOfChargesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DetailsOfCharges' in table 'ALL_SWIFT_CHARGES_MESSAGES_Deta"& _ 
                            "ils' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.DetailsOfChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PayedStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PayedStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayedStatus' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PayedStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_Charges() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.Id_ChargesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_Charges' in table 'ALL_SWIFT_CHARGES_MESSAGES_Details' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.Id_ChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestedChargesCurrency() As String
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesCurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestedChargesCurrency' in table 'ALL_SWIFT_CHARGES_MESSA"& _ 
                            "GES_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesCurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RequestedChargesAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RequestedChargesAmount' in table 'ALL_SWIFT_CHARGES_MESSAGE"& _ 
                            "S_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ALL_SWIFT_CHARGES_MESSAGESRow() As ALL_SWIFT_CHARGES_MESSAGESRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details")),ALL_SWIFT_CHARGES_MESSAGESRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("ALL_SWIFT_CHARGES_MESSAGES_ALL_SWIFT_CHARGES_MESSAGES_Details"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOurReferenceNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.OurReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOurReferenceNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.OurReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRelatedPaymentNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RelatedPaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRelatedPaymentNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RelatedPaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPaymentTypeNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PaymentTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPaymentTypeNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PaymentTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReceiverBICNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ReceiverBICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReceiverBICNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ReceiverBICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsValueDateNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ValueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetValueDateNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.ValueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCYNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCYNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDetailsOfChargesNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.DetailsOfChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDetailsOfChargesNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.DetailsOfChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPayedStatusNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PayedStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPayedStatusNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.PayedStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_ChargesNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.Id_ChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_ChargesNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.Id_ChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestedChargesCurrencyNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesCurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestedChargesCurrencyNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesCurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRequestedChargesAmountNull() As Boolean
            Return Me.IsNull(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRequestedChargesAmountNull()
            Me(Me.tableALL_SWIFT_CHARGES_MESSAGES_Details.RequestedChargesAmountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class CHEQUE_COLLECTIONSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CHEQUE_COLLECTIONSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As CHEQUE_COLLECTIONSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As CHEQUE_COLLECTIONSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GMPS_PAYMENTS_INRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GMPS_PAYMENTS_INRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GMPS_PAYMENTS_INRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GMPS_PAYMENTS_INRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GMPS_PAYMENTS_OUTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GMPS_PAYMENTS_OUTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GMPS_PAYMENTS_OUTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GMPS_PAYMENTS_OUTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ODAS_REMMITANCESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ODAS_REMMITANCESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ODAS_REMMITANCESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ODAS_REMMITANCESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ALL_SWIFT_CHARGES_MESSAGESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ALL_SWIFT_CHARGES_MESSAGESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ALL_SWIFT_CHARGES_MESSAGESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ALL_SWIFT_CHARGES_MESSAGESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ALL_SWIFT_CHARGES_MESSAGES_DetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ALL_SWIFT_CHARGES_MESSAGES_DetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ClearingDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CHEQUE_COLLECTIONSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CHEQUE_COLLECTIONS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("IncomingDate", "IncomingDate")
            tableMapping.ColumnMappings.Add("Import_Export_Cheque", "Import_Export_Cheque")
            tableMapping.ColumnMappings.Add("ChequeCurrency", "ChequeCurrency")
            tableMapping.ColumnMappings.Add("ChequeAmount", "ChequeAmount")
            tableMapping.ColumnMappings.Add("Exchange_Rate", "Exchange_Rate")
            tableMapping.ColumnMappings.Add("ChequeAmountEURO", "ChequeAmountEURO")
            tableMapping.ColumnMappings.Add("ChequeNo", "ChequeNo")
            tableMapping.ColumnMappings.Add("DrawerBank", "DrawerBank")
            tableMapping.ColumnMappings.Add("CountryDrawerBank", "CountryDrawerBank")
            tableMapping.ColumnMappings.Add("DraweeBank", "DraweeBank")
            tableMapping.ColumnMappings.Add("CountryDraweeBank", "CountryDraweeBank")
            tableMapping.ColumnMappings.Add("ChequeSettlement", "ChequeSettlement")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CHEQUE_COLLECTIONS] WHERE (([ID] = @Original_ID) AND ((@IsNull_Incom"& _ 
                "ingDate = 1 AND [IncomingDate] IS NULL) OR ([IncomingDate] = @Original_IncomingD"& _ 
                "ate)) AND ((@IsNull_Import_Export_Cheque = 1 AND [Import_Export_Cheque] IS NULL)"& _ 
                " OR ([Import_Export_Cheque] = @Original_Import_Export_Cheque)) AND ((@IsNull_Che"& _ 
                "queCurrency = 1 AND [ChequeCurrency] IS NULL) OR ([ChequeCurrency] = @Original_C"& _ 
                "hequeCurrency)) AND ((@IsNull_ChequeAmount = 1 AND [ChequeAmount] IS NULL) OR (["& _ 
                "ChequeAmount] = @Original_ChequeAmount)) AND ((@IsNull_Exchange_Rate = 1 AND [Ex"& _ 
                "change_Rate] IS NULL) OR ([Exchange_Rate] = @Original_Exchange_Rate)) AND ((@IsN"& _ 
                "ull_ChequeAmountEURO = 1 AND [ChequeAmountEURO] IS NULL) OR ([ChequeAmountEURO] "& _ 
                "= @Original_ChequeAmountEURO)) AND ((@IsNull_ChequeNo = 1 AND [ChequeNo] IS NULL"& _ 
                ") OR ([ChequeNo] = @Original_ChequeNo)) AND ((@IsNull_DrawerBank = 1 AND [Drawer"& _ 
                "Bank] IS NULL) OR ([DrawerBank] = @Original_DrawerBank)) AND ((@IsNull_CountryDr"& _ 
                "awerBank = 1 AND [CountryDrawerBank] IS NULL) OR ([CountryDrawerBank] = @Origina"& _ 
                "l_CountryDrawerBank)) AND ((@IsNull_DraweeBank = 1 AND [DraweeBank] IS NULL) OR "& _ 
                "([DraweeBank] = @Original_DraweeBank)) AND ((@IsNull_CountryDraweeBank = 1 AND ["& _ 
                "CountryDraweeBank] IS NULL) OR ([CountryDraweeBank] = @Original_CountryDraweeBan"& _ 
                "k)) AND ((@IsNull_ChequeSettlement = 1 AND [ChequeSettlement] IS NULL) OR ([Cheq"& _ 
                "ueSettlement] = @Original_ChequeSettlement)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IncomingDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Import_Export_Cheque", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Import_Export_Cheque", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Import_Export_Cheque", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Import_Export_Cheque", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeCurrency", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeCurrency", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeCurrency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeCurrency", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeAmount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Exchange_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exchange_Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Exchange_Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exchange_Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeAmountEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmountEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeAmountEURO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmountEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DrawerBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrawerBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrawerBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CountryDrawerBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDrawerBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CountryDrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDrawerBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DraweeBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraweeBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraweeBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CountryDraweeBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDraweeBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CountryDraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDraweeBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeSettlement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeSettlement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeSettlement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeSettlement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CHEQUE_COLLECTIONS] ([IncomingDate], [Import_Export_Cheque], [Cheque"& _ 
                "Currency], [ChequeAmount], [Exchange_Rate], [ChequeAmountEURO], [ChequeNo], [Dra"& _ 
                "werBank], [CountryDrawerBank], [DraweeBank], [CountryDraweeBank], [ChequeSettlem"& _ 
                "ent]) VALUES (@IncomingDate, @Import_Export_Cheque, @ChequeCurrency, @ChequeAmou"& _ 
                "nt, @Exchange_Rate, @ChequeAmountEURO, @ChequeNo, @DrawerBank, @CountryDrawerBan"& _ 
                "k, @DraweeBank, @CountryDraweeBank, @ChequeSettlement)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Import_Export_Cheque", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Import_Export_Cheque", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeCurrency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeCurrency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Exchange_Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exchange_Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeAmountEURO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmountEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrawerBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryDrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDrawerBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraweeBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryDraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDraweeBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeSettlement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeSettlement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CHEQUE_COLLECTIONS] SET [IncomingDate] = @IncomingDate, [Import_Export_Ch"& _ 
                "eque] = @Import_Export_Cheque, [ChequeCurrency] = @ChequeCurrency, [ChequeAmount"& _ 
                "] = @ChequeAmount, [Exchange_Rate] = @Exchange_Rate, [ChequeAmountEURO] = @Chequ"& _ 
                "eAmountEURO, [ChequeNo] = @ChequeNo, [DrawerBank] = @DrawerBank, [CountryDrawerB"& _ 
                "ank] = @CountryDrawerBank, [DraweeBank] = @DraweeBank, [CountryDraweeBank] = @Co"& _ 
                "untryDraweeBank, [ChequeSettlement] = @ChequeSettlement WHERE (([ID] = @Original"& _ 
                "_ID) AND ((@IsNull_IncomingDate = 1 AND [IncomingDate] IS NULL) OR ([IncomingDat"& _ 
                "e] = @Original_IncomingDate)) AND ((@IsNull_Import_Export_Cheque = 1 AND [Import"& _ 
                "_Export_Cheque] IS NULL) OR ([Import_Export_Cheque] = @Original_Import_Export_Ch"& _ 
                "eque)) AND ((@IsNull_ChequeCurrency = 1 AND [ChequeCurrency] IS NULL) OR ([Chequ"& _ 
                "eCurrency] = @Original_ChequeCurrency)) AND ((@IsNull_ChequeAmount = 1 AND [Cheq"& _ 
                "ueAmount] IS NULL) OR ([ChequeAmount] = @Original_ChequeAmount)) AND ((@IsNull_E"& _ 
                "xchange_Rate = 1 AND [Exchange_Rate] IS NULL) OR ([Exchange_Rate] = @Original_Ex"& _ 
                "change_Rate)) AND ((@IsNull_ChequeAmountEURO = 1 AND [ChequeAmountEURO] IS NULL)"& _ 
                " OR ([ChequeAmountEURO] = @Original_ChequeAmountEURO)) AND ((@IsNull_ChequeNo = "& _ 
                "1 AND [ChequeNo] IS NULL) OR ([ChequeNo] = @Original_ChequeNo)) AND ((@IsNull_Dr"& _ 
                "awerBank = 1 AND [DrawerBank] IS NULL) OR ([DrawerBank] = @Original_DrawerBank))"& _ 
                " AND ((@IsNull_CountryDrawerBank = 1 AND [CountryDrawerBank] IS NULL) OR ([Count"& _ 
                "ryDrawerBank] = @Original_CountryDrawerBank)) AND ((@IsNull_DraweeBank = 1 AND ["& _ 
                "DraweeBank] IS NULL) OR ([DraweeBank] = @Original_DraweeBank)) AND ((@IsNull_Cou"& _ 
                "ntryDraweeBank = 1 AND [CountryDraweeBank] IS NULL) OR ([CountryDraweeBank] = @O"& _ 
                "riginal_CountryDraweeBank)) AND ((@IsNull_ChequeSettlement = 1 AND [ChequeSettle"& _ 
                "ment] IS NULL) OR ([ChequeSettlement] = @Original_ChequeSettlement)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Import_Export_Cheque", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Import_Export_Cheque", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeCurrency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeCurrency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Exchange_Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exchange_Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeAmountEURO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmountEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrawerBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryDrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDrawerBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraweeBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryDraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDraweeBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChequeSettlement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeSettlement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IncomingDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Import_Export_Cheque", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Import_Export_Cheque", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Import_Export_Cheque", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Import_Export_Cheque", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeCurrency", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeCurrency", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeCurrency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeCurrency", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeAmount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Exchange_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exchange_Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Exchange_Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exchange_Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeAmountEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmountEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeAmountEURO", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeAmountEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DrawerBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrawerBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DrawerBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CountryDrawerBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDrawerBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CountryDrawerBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDrawerBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DraweeBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraweeBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraweeBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CountryDraweeBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDraweeBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CountryDraweeBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryDraweeBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ChequeSettlement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeSettlement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ChequeSettlement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChequeSettlement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, IncomingDate, Import_Export_Cheque, ChequeCurrency, ChequeAmoun"& _ 
                "t, Exchange_Rate, ChequeAmountEURO, ChequeNo, DrawerBank, CountryDrawerBank, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        DraweeBank, CountryDraweeBank, ChequeSettlement"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   "& _ 
                "         CHEQUE_COLLECTIONS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY IncomingDate DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ClearingDataSet.CHEQUE_COLLECTIONSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ClearingDataSet.CHEQUE_COLLECTIONSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ClearingDataSet.CHEQUE_COLLECTIONSDataTable = New ClearingDataSet.CHEQUE_COLLECTIONSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ClearingDataSet.CHEQUE_COLLECTIONSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ClearingDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "CHEQUE_COLLECTIONS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_IncomingDate As Global.System.Nullable(Of Date), ByVal Original_Import_Export_Cheque As String, ByVal Original_ChequeCurrency As String, ByVal Original_ChequeAmount As Global.System.Nullable(Of Double), ByVal Original_Exchange_Rate As Global.System.Nullable(Of Double), ByVal Original_ChequeAmountEURO As Global.System.Nullable(Of Double), ByVal Original_ChequeNo As String, ByVal Original_DrawerBank As String, ByVal Original_CountryDrawerBank As String, ByVal Original_DraweeBank As String, ByVal Original_CountryDraweeBank As String, ByVal Original_ChequeSettlement As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_IncomingDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_IncomingDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_Import_Export_Cheque Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Import_Export_Cheque,String)
            End If
            If (Original_ChequeCurrency Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ChequeCurrency,String)
            End If
            If (Original_ChequeAmount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_ChequeAmount.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_Exchange_Rate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Exchange_Rate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_ChequeAmountEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ChequeAmountEURO.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_ChequeNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ChequeNo,String)
            End If
            If (Original_DrawerBank Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DrawerBank,String)
            End If
            If (Original_CountryDrawerBank Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CountryDrawerBank,String)
            End If
            If (Original_DraweeBank Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_DraweeBank,String)
            End If
            If (Original_CountryDraweeBank Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_CountryDraweeBank,String)
            End If
            If (Original_ChequeSettlement Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_ChequeSettlement,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IncomingDate As Global.System.Nullable(Of Date), ByVal Import_Export_Cheque As String, ByVal ChequeCurrency As String, ByVal ChequeAmount As Global.System.Nullable(Of Double), ByVal Exchange_Rate As Global.System.Nullable(Of Double), ByVal ChequeAmountEURO As Global.System.Nullable(Of Double), ByVal ChequeNo As String, ByVal DrawerBank As String, ByVal CountryDrawerBank As String, ByVal DraweeBank As String, ByVal CountryDraweeBank As String, ByVal ChequeSettlement As String) As Integer
            If (IncomingDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IncomingDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Import_Export_Cheque Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Import_Export_Cheque,String)
            End If
            If (ChequeCurrency Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ChequeCurrency,String)
            End If
            If (ChequeAmount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ChequeAmount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Exchange_Rate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Exchange_Rate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ChequeAmountEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ChequeAmountEURO.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ChequeNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ChequeNo,String)
            End If
            If (DrawerBank Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DrawerBank,String)
            End If
            If (CountryDrawerBank Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CountryDrawerBank,String)
            End If
            If (DraweeBank Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DraweeBank,String)
            End If
            If (CountryDraweeBank Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CountryDraweeBank,String)
            End If
            If (ChequeSettlement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ChequeSettlement,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal IncomingDate As Global.System.Nullable(Of Date),  _
                    ByVal Import_Export_Cheque As String,  _
                    ByVal ChequeCurrency As String,  _
                    ByVal ChequeAmount As Global.System.Nullable(Of Double),  _
                    ByVal Exchange_Rate As Global.System.Nullable(Of Double),  _
                    ByVal ChequeAmountEURO As Global.System.Nullable(Of Double),  _
                    ByVal ChequeNo As String,  _
                    ByVal DrawerBank As String,  _
                    ByVal CountryDrawerBank As String,  _
                    ByVal DraweeBank As String,  _
                    ByVal CountryDraweeBank As String,  _
                    ByVal ChequeSettlement As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_IncomingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Import_Export_Cheque As String,  _
                    ByVal Original_ChequeCurrency As String,  _
                    ByVal Original_ChequeAmount As Global.System.Nullable(Of Double),  _
                    ByVal Original_Exchange_Rate As Global.System.Nullable(Of Double),  _
                    ByVal Original_ChequeAmountEURO As Global.System.Nullable(Of Double),  _
                    ByVal Original_ChequeNo As String,  _
                    ByVal Original_DrawerBank As String,  _
                    ByVal Original_CountryDrawerBank As String,  _
                    ByVal Original_DraweeBank As String,  _
                    ByVal Original_CountryDraweeBank As String,  _
                    ByVal Original_ChequeSettlement As String) As Integer
            If (IncomingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(IncomingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Import_Export_Cheque Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Import_Export_Cheque,String)
            End If
            If (ChequeCurrency Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ChequeCurrency,String)
            End If
            If (ChequeAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ChequeAmount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Exchange_Rate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Exchange_Rate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ChequeAmountEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ChequeAmountEURO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ChequeNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ChequeNo,String)
            End If
            If (DrawerBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DrawerBank,String)
            End If
            If (CountryDrawerBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CountryDrawerBank,String)
            End If
            If (DraweeBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DraweeBank,String)
            End If
            If (CountryDraweeBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CountryDraweeBank,String)
            End If
            If (ChequeSettlement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ChequeSettlement,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ID,Integer)
            If (Original_IncomingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_IncomingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_Import_Export_Cheque Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_Import_Export_Cheque,String)
            End If
            If (Original_ChequeCurrency Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ChequeCurrency,String)
            End If
            If (Original_ChequeAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_ChequeAmount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_Exchange_Rate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_Exchange_Rate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_ChequeAmountEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_ChequeAmountEURO.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_ChequeNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_ChequeNo,String)
            End If
            If (Original_DrawerBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_DrawerBank,String)
            End If
            If (Original_CountryDrawerBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_CountryDrawerBank,String)
            End If
            If (Original_DraweeBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_DraweeBank,String)
            End If
            If (Original_CountryDraweeBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_CountryDraweeBank,String)
            End If
            If (Original_ChequeSettlement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_ChequeSettlement,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GMPS_PAYMENTS_INTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GMPS PAYMENTS IN"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("IncomingDate", "IncomingDate")
            tableMapping.ColumnMappings.Add("OurReference", "OurReference")
            tableMapping.ColumnMappings.Add("ValueDate", "ValueDate")
            tableMapping.ColumnMappings.Add("MessageSender", "MessageSender")
            tableMapping.ColumnMappings.Add("MessageSenderName", "MessageSenderName")
            tableMapping.ColumnMappings.Add("MessageSenderCity", "MessageSenderCity")
            tableMapping.ColumnMappings.Add("Currency", "Currency")
            tableMapping.ColumnMappings.Add("ReferenceNo", "ReferenceNo")
            tableMapping.ColumnMappings.Add("AccountOfInstitution", "AccountOfInstitution")
            tableMapping.ColumnMappings.Add("AccountOfInstitutionName", "AccountOfInstitutionName")
            tableMapping.ColumnMappings.Add("AccountOfInstitutionCity", "AccountOfInstitutionCity")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate")
            tableMapping.ColumnMappings.Add("AmountEuro", "AmountEuro")
            tableMapping.ColumnMappings.Add("OriginalOrderingCustomer", "OriginalOrderingCustomer")
            tableMapping.ColumnMappings.Add("OriginalOrderingInstitution", "OriginalOrderingInstitution")
            tableMapping.ColumnMappings.Add("OriginalOrderingInstitutionName", "OriginalOrderingInstitutionName")
            tableMapping.ColumnMappings.Add("OriginalOrderingInstitutionCity", "OriginalOrderingInstitutionCity")
            tableMapping.ColumnMappings.Add("BeneficiaryCustomer", "BeneficiaryCustomer")
            tableMapping.ColumnMappings.Add("Commission", "Commission")
            tableMapping.ColumnMappings.Add("DetailsOfCharges", "DetailsOfCharges")
            tableMapping.ColumnMappings.Add("PAYMENT_CODE", "PAYMENT_CODE")
            tableMapping.ColumnMappings.Add("ReceiverBICofConstructMessage", "ReceiverBICofConstructMessage")
            tableMapping.ColumnMappings.Add("ReceiverBICofConstructMessageName", "ReceiverBICofConstructMessageName")
            tableMapping.ColumnMappings.Add("ReceiverBICofConstructMessageCity", "ReceiverBICofConstructMessageCity")
            tableMapping.ColumnMappings.Add("PaymentYear", "PaymentYear")
            tableMapping.ColumnMappings.Add("ProcessedBy", "ProcessedBy")
            tableMapping.ColumnMappings.Add("MsgSenderCountry", "MsgSenderCountry")
            tableMapping.ColumnMappings.Add("MTTYPE", "MTTYPE")
            tableMapping.ColumnMappings.Add("BeneficiaryBank", "BeneficiaryBank")
            tableMapping.ColumnMappings.Add("BeneficiaryBankName", "BeneficiaryBankName")
            tableMapping.ColumnMappings.Add("BeneficiaryBankCity", "BeneficiaryBankCity")
            tableMapping.ColumnMappings.Add("MsgBenefCountry", "MsgBenefCountry")
            tableMapping.ColumnMappings.Add("SenderToReceiverInformation", "SenderToReceiverInformation")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [GMPS PAYMENTS IN] WHERE (([ID] = @Original_ID) AND ((@IsNull_Incomin"& _ 
                "gDate = 1 AND [IncomingDate] IS NULL) OR ([IncomingDate] = @Original_IncomingDat"& _ 
                "e)) AND ((@IsNull_OurReference = 1 AND [OurReference] IS NULL) OR ([OurReference"& _ 
                "] = @Original_OurReference)) AND ((@IsNull_ValueDate = 1 AND [ValueDate] IS NULL"& _ 
                ") OR ([ValueDate] = @Original_ValueDate)) AND ((@IsNull_MessageSender = 1 AND [M"& _ 
                "essageSender] IS NULL) OR ([MessageSender] = @Original_MessageSender)) AND ((@Is"& _ 
                "Null_MessageSenderName = 1 AND [MessageSenderName] IS NULL) OR ([MessageSenderNa"& _ 
                "me] = @Original_MessageSenderName)) AND ((@IsNull_MessageSenderCity = 1 AND [Mes"& _ 
                "sageSenderCity] IS NULL) OR ([MessageSenderCity] = @Original_MessageSenderCity))"& _ 
                " AND ((@IsNull_Currency = 1 AND [Currency] IS NULL) OR ([Currency] = @Original_C"& _ 
                "urrency)) AND ((@IsNull_ReferenceNo = 1 AND [ReferenceNo] IS NULL) OR ([Referenc"& _ 
                "eNo] = @Original_ReferenceNo)) AND ((@IsNull_AccountOfInstitution = 1 AND [Accou"& _ 
                "ntOfInstitution] IS NULL) OR ([AccountOfInstitution] = @Original_AccountOfInstit"& _ 
                "ution)) AND ((@IsNull_AccountOfInstitutionName = 1 AND [AccountOfInstitutionName"& _ 
                "] IS NULL) OR ([AccountOfInstitutionName] = @Original_AccountOfInstitutionName))"& _ 
                " AND ((@IsNull_AccountOfInstitutionCity = 1 AND [AccountOfInstitutionCity] IS NU"& _ 
                "LL) OR ([AccountOfInstitutionCity] = @Original_AccountOfInstitutionCity)) AND (("& _ 
                "@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)) AND ("& _ 
                "(@IsNull_ExchangeRate = 1 AND [ExchangeRate] IS NULL) OR ([ExchangeRate] = @Orig"& _ 
                "inal_ExchangeRate)) AND ((@IsNull_AmountEuro = 1 AND [AmountEuro] IS NULL) OR (["& _ 
                "AmountEuro] = @Original_AmountEuro)) AND ((@IsNull_OriginalOrderingCustomer = 1 "& _ 
                "AND [OriginalOrderingCustomer] IS NULL) OR ([OriginalOrderingCustomer] = @Origin"& _ 
                "al_OriginalOrderingCustomer)) AND ((@IsNull_OriginalOrderingInstitution = 1 AND "& _ 
                "[OriginalOrderingInstitution] IS NULL) OR ([OriginalOrderingInstitution] = @Orig"& _ 
                "inal_OriginalOrderingInstitution)) AND ((@IsNull_OriginalOrderingInstitutionName"& _ 
                " = 1 AND [OriginalOrderingInstitutionName] IS NULL) OR ([OriginalOrderingInstitu"& _ 
                "tionName] = @Original_OriginalOrderingInstitutionName)) AND ((@IsNull_OriginalOr"& _ 
                "deringInstitutionCity = 1 AND [OriginalOrderingInstitutionCity] IS NULL) OR ([Or"& _ 
                "iginalOrderingInstitutionCity] = @Original_OriginalOrderingInstitutionCity)) AND"& _ 
                " ((@IsNull_BeneficiaryCustomer = 1 AND [BeneficiaryCustomer] IS NULL) OR ([Benef"& _ 
                "iciaryCustomer] = @Original_BeneficiaryCustomer)) AND ((@IsNull_Commission = 1 A"& _ 
                "ND [Commission] IS NULL) OR ([Commission] = @Original_Commission)) AND ((@IsNull"& _ 
                "_DetailsOfCharges = 1 AND [DetailsOfCharges] IS NULL) OR ([DetailsOfCharges] = @"& _ 
                "Original_DetailsOfCharges)) AND ((@IsNull_PAYMENT_CODE = 1 AND [PAYMENT_CODE] IS"& _ 
                " NULL) OR ([PAYMENT_CODE] = @Original_PAYMENT_CODE)) AND ((@IsNull_ReceiverBICof"& _ 
                "ConstructMessage = 1 AND [ReceiverBICofConstructMessage] IS NULL) OR ([ReceiverB"& _ 
                "ICofConstructMessage] = @Original_ReceiverBICofConstructMessage)) AND ((@IsNull_"& _ 
                "ReceiverBICofConstructMessageName = 1 AND [ReceiverBICofConstructMessageName] IS"& _ 
                " NULL) OR ([ReceiverBICofConstructMessageName] = @Original_ReceiverBICofConstruc"& _ 
                "tMessageName)) AND ((@IsNull_ReceiverBICofConstructMessageCity = 1 AND [Receiver"& _ 
                "BICofConstructMessageCity] IS NULL) OR ([ReceiverBICofConstructMessageCity] = @O"& _ 
                "riginal_ReceiverBICofConstructMessageCity)) AND ((@IsNull_PaymentYear = 1 AND [P"& _ 
                "aymentYear] IS NULL) OR ([PaymentYear] = @Original_PaymentYear)) AND ((@IsNull_P"& _ 
                "rocessedBy = 1 AND [ProcessedBy] IS NULL) OR ([ProcessedBy] = @Original_Processe"& _ 
                "dBy)) AND ((@IsNull_MsgSenderCountry = 1 AND [MsgSenderCountry] IS NULL) OR ([Ms"& _ 
                "gSenderCountry] = @Original_MsgSenderCountry)) AND ((@IsNull_MTTYPE = 1 AND [MTT"& _ 
                "YPE] IS NULL) OR ([MTTYPE] = @Original_MTTYPE)) AND ((@IsNull_BeneficiaryBank = "& _ 
                "1 AND [BeneficiaryBank] IS NULL) OR ([BeneficiaryBank] = @Original_BeneficiaryBa"& _ 
                "nk)) AND ((@IsNull_BeneficiaryBankName = 1 AND [BeneficiaryBankName] IS NULL) OR"& _ 
                " ([BeneficiaryBankName] = @Original_BeneficiaryBankName)) AND ((@IsNull_Benefici"& _ 
                "aryBankCity = 1 AND [BeneficiaryBankCity] IS NULL) OR ([BeneficiaryBankCity] = @"& _ 
                "Original_BeneficiaryBankCity)) AND ((@IsNull_MsgBenefCountry = 1 AND [MsgBenefCo"& _ 
                "untry] IS NULL) OR ([MsgBenefCountry] = @Original_MsgBenefCountry)) AND ((@IsNul"& _ 
                "l_SenderToReceiverInformation = 1 AND [SenderToReceiverInformation] IS NULL) OR "& _ 
                "([SenderToReceiverInformation] = @Original_SenderToReceiverInformation)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IncomingDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OurReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ValueDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageSender", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSender", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageSender", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSender", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageSenderName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageSenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageSenderCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageSenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Currency", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReferenceNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReferenceNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitution", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitution", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitution", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitutionName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitutionCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ExchangeRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AmountEuro", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingCustomer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingCustomer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingCustomer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingInstitution", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitution", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitution", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingInstitutionName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingInstitutionCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Commission", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commission", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Commission", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commission", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DetailsOfCharges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAYMENT_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAYMENT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverBICofConstructMessage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverBICofConstructMessage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverBICofConstructMessageName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverBICofConstructMessageName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverBICofConstructMessageCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverBICofConstructMessageCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PaymentYear", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProcessedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MsgSenderCountry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MsgBenefCountry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgBenefCountry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MsgBenefCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgBenefCountry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderToReceiverInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GMPS PAYMENTS IN] ([IncomingDate], [OurReference], [ValueDate], [Mes"& _ 
                "sageSender], [MessageSenderName], [MessageSenderCity], [Currency], [ReferenceNo]"& _ 
                ", [AccountOfInstitution], [AccountOfInstitutionName], [AccountOfInstitutionCity]"& _ 
                ", [Amount], [ExchangeRate], [AmountEuro], [OriginalOrderingCustomer], [OriginalO"& _ 
                "rderingInstitution], [OriginalOrderingInstitutionName], [OriginalOrderingInstitu"& _ 
                "tionCity], [BeneficiaryCustomer], [Commission], [DetailsOfCharges], [PAYMENT_COD"& _ 
                "E], [ReceiverBICofConstructMessage], [ReceiverBICofConstructMessageName], [Recei"& _ 
                "verBICofConstructMessageCity], [PaymentYear], [ProcessedBy], [MsgSenderCountry],"& _ 
                " [MTTYPE], [BeneficiaryBank], [BeneficiaryBankName], [BeneficiaryBankCity], [Msg"& _ 
                "BenefCountry], [SenderToReceiverInformation]) VALUES (@IncomingDate, @OurReferen"& _ 
                "ce, @ValueDate, @MessageSender, @MessageSenderName, @MessageSenderCity, @Currenc"& _ 
                "y, @ReferenceNo, @AccountOfInstitution, @AccountOfInstitutionName, @AccountOfIns"& _ 
                "titutionCity, @Amount, @ExchangeRate, @AmountEuro, @OriginalOrderingCustomer, @O"& _ 
                "riginalOrderingInstitution, @OriginalOrderingInstitutionName, @OriginalOrderingI"& _ 
                "nstitutionCity, @BeneficiaryCustomer, @Commission, @DetailsOfCharges, @PAYMENT_C"& _ 
                "ODE, @ReceiverBICofConstructMessage, @ReceiverBICofConstructMessageName, @Receiv"& _ 
                "erBICofConstructMessageCity, @PaymentYear, @ProcessedBy, @MsgSenderCountry, @MTT"& _ 
                "YPE, @BeneficiaryBank, @BeneficiaryBankName, @BeneficiaryBankCity, @MsgBenefCoun"& _ 
                "try, @SenderToReceiverInformation)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageSender", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSender", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageSenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageSenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReferenceNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitution", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingCustomer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitution", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Commission", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commission", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAYMENT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBICofConstructMessage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBICofConstructMessageName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBICofConstructMessageCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MsgBenefCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgBenefCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [GMPS PAYMENTS IN] SET [IncomingDate] = @IncomingDate, [OurReference] = @O"& _ 
                "urReference, [ValueDate] = @ValueDate, [MessageSender] = @MessageSender, [Messag"& _ 
                "eSenderName] = @MessageSenderName, [MessageSenderCity] = @MessageSenderCity, [Cu"& _ 
                "rrency] = @Currency, [ReferenceNo] = @ReferenceNo, [AccountOfInstitution] = @Acc"& _ 
                "ountOfInstitution, [AccountOfInstitutionName] = @AccountOfInstitutionName, [Acco"& _ 
                "untOfInstitutionCity] = @AccountOfInstitutionCity, [Amount] = @Amount, [Exchange"& _ 
                "Rate] = @ExchangeRate, [AmountEuro] = @AmountEuro, [OriginalOrderingCustomer] = "& _ 
                "@OriginalOrderingCustomer, [OriginalOrderingInstitution] = @OriginalOrderingInst"& _ 
                "itution, [OriginalOrderingInstitutionName] = @OriginalOrderingInstitutionName, ["& _ 
                "OriginalOrderingInstitutionCity] = @OriginalOrderingInstitutionCity, [Beneficiar"& _ 
                "yCustomer] = @BeneficiaryCustomer, [Commission] = @Commission, [DetailsOfCharges"& _ 
                "] = @DetailsOfCharges, [PAYMENT_CODE] = @PAYMENT_CODE, [ReceiverBICofConstructMe"& _ 
                "ssage] = @ReceiverBICofConstructMessage, [ReceiverBICofConstructMessageName] = @"& _ 
                "ReceiverBICofConstructMessageName, [ReceiverBICofConstructMessageCity] = @Receiv"& _ 
                "erBICofConstructMessageCity, [PaymentYear] = @PaymentYear, [ProcessedBy] = @Proc"& _ 
                "essedBy, [MsgSenderCountry] = @MsgSenderCountry, [MTTYPE] = @MTTYPE, [Beneficiar"& _ 
                "yBank] = @BeneficiaryBank, [BeneficiaryBankName] = @BeneficiaryBankName, [Benefi"& _ 
                "ciaryBankCity] = @BeneficiaryBankCity, [MsgBenefCountry] = @MsgBenefCountry, [Se"& _ 
                "nderToReceiverInformation] = @SenderToReceiverInformation WHERE (([ID] = @Origin"& _ 
                "al_ID) AND ((@IsNull_IncomingDate = 1 AND [IncomingDate] IS NULL) OR ([IncomingD"& _ 
                "ate] = @Original_IncomingDate)) AND ((@IsNull_OurReference = 1 AND [OurReference"& _ 
                "] IS NULL) OR ([OurReference] = @Original_OurReference)) AND ((@IsNull_ValueDate"& _ 
                " = 1 AND [ValueDate] IS NULL) OR ([ValueDate] = @Original_ValueDate)) AND ((@IsN"& _ 
                "ull_MessageSender = 1 AND [MessageSender] IS NULL) OR ([MessageSender] = @Origin"& _ 
                "al_MessageSender)) AND ((@IsNull_MessageSenderName = 1 AND [MessageSenderName] I"& _ 
                "S NULL) OR ([MessageSenderName] = @Original_MessageSenderName)) AND ((@IsNull_Me"& _ 
                "ssageSenderCity = 1 AND [MessageSenderCity] IS NULL) OR ([MessageSenderCity] = @"& _ 
                "Original_MessageSenderCity)) AND ((@IsNull_Currency = 1 AND [Currency] IS NULL) "& _ 
                "OR ([Currency] = @Original_Currency)) AND ((@IsNull_ReferenceNo = 1 AND [Referen"& _ 
                "ceNo] IS NULL) OR ([ReferenceNo] = @Original_ReferenceNo)) AND ((@IsNull_Account"& _ 
                "OfInstitution = 1 AND [AccountOfInstitution] IS NULL) OR ([AccountOfInstitution]"& _ 
                " = @Original_AccountOfInstitution)) AND ((@IsNull_AccountOfInstitutionName = 1 A"& _ 
                "ND [AccountOfInstitutionName] IS NULL) OR ([AccountOfInstitutionName] = @Origina"& _ 
                "l_AccountOfInstitutionName)) AND ((@IsNull_AccountOfInstitutionCity = 1 AND [Acc"& _ 
                "ountOfInstitutionCity] IS NULL) OR ([AccountOfInstitutionCity] = @Original_Accou"& _ 
                "ntOfInstitutionCity)) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount"& _ 
                "] = @Original_Amount)) AND ((@IsNull_ExchangeRate = 1 AND [ExchangeRate] IS NULL"& _ 
                ") OR ([ExchangeRate] = @Original_ExchangeRate)) AND ((@IsNull_AmountEuro = 1 AND"& _ 
                " [AmountEuro] IS NULL) OR ([AmountEuro] = @Original_AmountEuro)) AND ((@IsNull_O"& _ 
                "riginalOrderingCustomer = 1 AND [OriginalOrderingCustomer] IS NULL) OR ([Origina"& _ 
                "lOrderingCustomer] = @Original_OriginalOrderingCustomer)) AND ((@IsNull_Original"& _ 
                "OrderingInstitution = 1 AND [OriginalOrderingInstitution] IS NULL) OR ([Original"& _ 
                "OrderingInstitution] = @Original_OriginalOrderingInstitution)) AND ((@IsNull_Ori"& _ 
                "ginalOrderingInstitutionName = 1 AND [OriginalOrderingInstitutionName] IS NULL) "& _ 
                "OR ([OriginalOrderingInstitutionName] = @Original_OriginalOrderingInstitutionNam"& _ 
                "e)) AND ((@IsNull_OriginalOrderingInstitutionCity = 1 AND [OriginalOrderingInsti"& _ 
                "tutionCity] IS NULL) OR ([OriginalOrderingInstitutionCity] = @Original_OriginalO"& _ 
                "rderingInstitutionCity)) AND ((@IsNull_BeneficiaryCustomer = 1 AND [BeneficiaryC"& _ 
                "ustomer] IS NULL) OR ([BeneficiaryCustomer] = @Original_BeneficiaryCustomer)) AN"& _ 
                "D ((@IsNull_Commission = 1 AND [Commission] IS NULL) OR ([Commission] = @Origina"& _ 
                "l_Commission)) AND ((@IsNull_DetailsOfCharges = 1 AND [DetailsOfCharges] IS NULL"& _ 
                ") OR ([DetailsOfCharges] = @Original_DetailsOfCharges)) AND ((@IsNull_PAYMENT_CO"& _ 
                "DE = 1 AND [PAYMENT_CODE] IS NULL) OR ([PAYMENT_CODE] = @Original_PAYMENT_CODE))"& _ 
                " AND ((@IsNull_ReceiverBICofConstructMessage = 1 AND [ReceiverBICofConstructMess"& _ 
                "age] IS NULL) OR ([ReceiverBICofConstructMessage] = @Original_ReceiverBICofConst"& _ 
                "ructMessage)) AND ((@IsNull_ReceiverBICofConstructMessageName = 1 AND [ReceiverB"& _ 
                "ICofConstructMessageName] IS NULL) OR ([ReceiverBICofConstructMessageName] = @Or"& _ 
                "iginal_ReceiverBICofConstructMessageName)) AND ((@IsNull_ReceiverBICofConstructM"& _ 
                "essageCity = 1 AND [ReceiverBICofConstructMessageCity] IS NULL) OR ([ReceiverBIC"& _ 
                "ofConstructMessageCity] = @Original_ReceiverBICofConstructMessageCity)) AND ((@I"& _ 
                "sNull_PaymentYear = 1 AND [PaymentYear] IS NULL) OR ([PaymentYear] = @Original_P"& _ 
                "aymentYear)) AND ((@IsNull_ProcessedBy = 1 AND [ProcessedBy] IS NULL) OR ([Proce"& _ 
                "ssedBy] = @Original_ProcessedBy)) AND ((@IsNull_MsgSenderCountry = 1 AND [MsgSen"& _ 
                "derCountry] IS NULL) OR ([MsgSenderCountry] = @Original_MsgSenderCountry)) AND ("& _ 
                "(@IsNull_MTTYPE = 1 AND [MTTYPE] IS NULL) OR ([MTTYPE] = @Original_MTTYPE)) AND "& _ 
                "((@IsNull_BeneficiaryBank = 1 AND [BeneficiaryBank] IS NULL) OR ([BeneficiaryBan"& _ 
                "k] = @Original_BeneficiaryBank)) AND ((@IsNull_BeneficiaryBankName = 1 AND [Bene"& _ 
                "ficiaryBankName] IS NULL) OR ([BeneficiaryBankName] = @Original_BeneficiaryBankN"& _ 
                "ame)) AND ((@IsNull_BeneficiaryBankCity = 1 AND [BeneficiaryBankCity] IS NULL) O"& _ 
                "R ([BeneficiaryBankCity] = @Original_BeneficiaryBankCity)) AND ((@IsNull_MsgBene"& _ 
                "fCountry = 1 AND [MsgBenefCountry] IS NULL) OR ([MsgBenefCountry] = @Original_Ms"& _ 
                "gBenefCountry)) AND ((@IsNull_SenderToReceiverInformation = 1 AND [SenderToRecei"& _ 
                "verInformation] IS NULL) OR ([SenderToReceiverInformation] = @Original_SenderToR"& _ 
                "eceiverInformation)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageSender", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSender", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageSenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageSenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReferenceNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitution", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingCustomer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitution", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OriginalOrderingInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Commission", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commission", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAYMENT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBICofConstructMessage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBICofConstructMessageName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBICofConstructMessageCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MsgBenefCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgBenefCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IncomingDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IncomingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IncomingDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OurReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ValueDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageSender", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSender", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageSender", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSender", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageSenderName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageSenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageSenderCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageSenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageSenderCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Currency", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReferenceNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReferenceNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitution", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitution", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitution", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitutionName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitutionCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ExchangeRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AmountEuro", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingCustomer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingCustomer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingCustomer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingInstitution", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitution", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitution", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingInstitutionName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OriginalOrderingInstitutionCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OriginalOrderingInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OriginalOrderingInstitutionCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Commission", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commission", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Commission", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commission", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DetailsOfCharges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAYMENT_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAYMENT_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverBICofConstructMessage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverBICofConstructMessage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverBICofConstructMessageName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverBICofConstructMessageName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverBICofConstructMessageCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverBICofConstructMessageCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBICofConstructMessageCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PaymentYear", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProcessedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MsgSenderCountry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBank", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBank", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MsgBenefCountry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgBenefCountry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MsgBenefCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgBenefCountry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderToReceiverInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, IncomingDate, OurReference, ValueDate, MessageSender, MessageSe"& _ 
                "nderName, MessageSenderCity, Currency, ReferenceNo, AccountOfInstitution, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     AccountOfInstitutionName, AccountOfInstitutionCity, Amount,"& _ 
                " ExchangeRate, AmountEuro, OriginalOrderingCustomer, OriginalOrderingInstitution"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         OriginalOrderingInstitutionName, OriginalOrderingIn"& _ 
                "stitutionCity, BeneficiaryCustomer, Commission, DetailsOfCharges, PAYMENT_CODE, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ReceiverBICofConstructMessage, ReceiverBICofConstruct"& _ 
                "MessageName, ReceiverBICofConstructMessageCity, PaymentYear, ProcessedBy, MsgSen"& _ 
                "derCountry, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         MTTYPE, BeneficiaryBank, BeneficiaryBankN"& _ 
                "ame, BeneficiaryBankCity, MsgBenefCountry, SenderToReceiverInformation"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM    "& _ 
                "        [GMPS PAYMENTS IN]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.GMPS_IN_FILL"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 2147483647, Global.System.Data.ParameterDirection.ReturnValue, 10, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FROMDATE", Global.System.Data.SqlDbType.DateTime, 2147483647, Global.System.Data.ParameterDirection.Input, 255, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TILLDATE", Global.System.Data.SqlDbType.DateTime, 2147483647, Global.System.Data.ParameterDirection.Input, 255, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ClearingDataSet.GMPS_PAYMENTS_INDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ClearingDataSet.GMPS_PAYMENTS_INDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ClearingDataSet.GMPS_PAYMENTS_INDataTable = New ClearingDataSet.GMPS_PAYMENTS_INDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGMPS_IN_FILL(ByVal dataTable As ClearingDataSet.GMPS_PAYMENTS_INDataTable, ByVal FROMDATE As Global.System.Nullable(Of Date), ByVal TILLDATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FROMDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FROMDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TILLDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TILLDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGMPS_IN_FILL(ByVal FROMDATE As Global.System.Nullable(Of Date), ByVal TILLDATE As Global.System.Nullable(Of Date)) As ClearingDataSet.GMPS_PAYMENTS_INDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FROMDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FROMDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TILLDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TILLDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ClearingDataSet.GMPS_PAYMENTS_INDataTable = New ClearingDataSet.GMPS_PAYMENTS_INDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ClearingDataSet.GMPS_PAYMENTS_INDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ClearingDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GMPS PAYMENTS IN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_IncomingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OurReference As String,  _
                    ByVal Original_ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_MessageSender As String,  _
                    ByVal Original_MessageSenderName As String,  _
                    ByVal Original_MessageSenderCity As String,  _
                    ByVal Original_Currency As String,  _
                    ByVal Original_ReferenceNo As String,  _
                    ByVal Original_AccountOfInstitution As String,  _
                    ByVal Original_AccountOfInstitutionName As String,  _
                    ByVal Original_AccountOfInstitutionCity As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal Original_OriginalOrderingCustomer As String,  _
                    ByVal Original_OriginalOrderingInstitution As String,  _
                    ByVal Original_OriginalOrderingInstitutionName As String,  _
                    ByVal Original_OriginalOrderingInstitutionCity As String,  _
                    ByVal Original_BeneficiaryCustomer As String,  _
                    ByVal Original_Commission As Global.System.Nullable(Of Double),  _
                    ByVal Original_DetailsOfCharges As String,  _
                    ByVal Original_PAYMENT_CODE As String,  _
                    ByVal Original_ReceiverBICofConstructMessage As String,  _
                    ByVal Original_ReceiverBICofConstructMessageName As String,  _
                    ByVal Original_ReceiverBICofConstructMessageCity As String,  _
                    ByVal Original_PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal Original_ProcessedBy As String,  _
                    ByVal Original_MsgSenderCountry As String,  _
                    ByVal Original_MTTYPE As String,  _
                    ByVal Original_BeneficiaryBank As String,  _
                    ByVal Original_BeneficiaryBankName As String,  _
                    ByVal Original_BeneficiaryBankCity As String,  _
                    ByVal Original_MsgBenefCountry As String,  _
                    ByVal Original_SenderToReceiverInformation As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_IncomingDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_IncomingDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OurReference Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OurReference,String)
            End If
            If (Original_ValueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ValueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_MessageSender Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_MessageSender,String)
            End If
            If (Original_MessageSenderName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_MessageSenderName,String)
            End If
            If (Original_MessageSenderCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_MessageSenderCity,String)
            End If
            If (Original_Currency Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Currency,String)
            End If
            If (Original_ReferenceNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_ReferenceNo,String)
            End If
            If (Original_AccountOfInstitution Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_AccountOfInstitution,String)
            End If
            If (Original_AccountOfInstitutionName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_AccountOfInstitutionName,String)
            End If
            If (Original_AccountOfInstitutionCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_AccountOfInstitutionCity,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Amount.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_ExchangeRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_ExchangeRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_AmountEuro.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_AmountEuro.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_OriginalOrderingCustomer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_OriginalOrderingCustomer,String)
            End If
            If (Original_OriginalOrderingInstitution Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_OriginalOrderingInstitution,String)
            End If
            If (Original_OriginalOrderingInstitutionName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_OriginalOrderingInstitutionName,String)
            End If
            If (Original_OriginalOrderingInstitutionCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_OriginalOrderingInstitutionCity,String)
            End If
            If (Original_BeneficiaryCustomer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_BeneficiaryCustomer,String)
            End If
            If (Original_Commission.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Commission.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_DetailsOfCharges Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_DetailsOfCharges,String)
            End If
            If (Original_PAYMENT_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_PAYMENT_CODE,String)
            End If
            If (Original_ReceiverBICofConstructMessage Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ReceiverBICofConstructMessage,String)
            End If
            If (Original_ReceiverBICofConstructMessageName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ReceiverBICofConstructMessageName,String)
            End If
            If (Original_ReceiverBICofConstructMessageCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_ReceiverBICofConstructMessageCity,String)
            End If
            If (Original_PaymentYear.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_PaymentYear.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_ProcessedBy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_ProcessedBy,String)
            End If
            If (Original_MsgSenderCountry Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_MsgSenderCountry,String)
            End If
            If (Original_MTTYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_MTTYPE,String)
            End If
            If (Original_BeneficiaryBank Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_BeneficiaryBank,String)
            End If
            If (Original_BeneficiaryBankName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_BeneficiaryBankName,String)
            End If
            If (Original_BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_BeneficiaryBankCity,String)
            End If
            If (Original_MsgBenefCountry Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_MsgBenefCountry,String)
            End If
            If (Original_SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_SenderToReceiverInformation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal IncomingDate As Global.System.Nullable(Of Date),  _
                    ByVal OurReference As String,  _
                    ByVal ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal MessageSender As String,  _
                    ByVal MessageSenderName As String,  _
                    ByVal MessageSenderCity As String,  _
                    ByVal Currency As String,  _
                    ByVal ReferenceNo As String,  _
                    ByVal AccountOfInstitution As String,  _
                    ByVal AccountOfInstitutionName As String,  _
                    ByVal AccountOfInstitutionCity As String,  _
                    ByVal Amount As Global.System.Nullable(Of Double),  _
                    ByVal ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal OriginalOrderingCustomer As String,  _
                    ByVal OriginalOrderingInstitution As String,  _
                    ByVal OriginalOrderingInstitutionName As String,  _
                    ByVal OriginalOrderingInstitutionCity As String,  _
                    ByVal BeneficiaryCustomer As String,  _
                    ByVal Commission As Global.System.Nullable(Of Double),  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal PAYMENT_CODE As String,  _
                    ByVal ReceiverBICofConstructMessage As String,  _
                    ByVal ReceiverBICofConstructMessageName As String,  _
                    ByVal ReceiverBICofConstructMessageCity As String,  _
                    ByVal PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal ProcessedBy As String,  _
                    ByVal MsgSenderCountry As String,  _
                    ByVal MTTYPE As String,  _
                    ByVal BeneficiaryBank As String,  _
                    ByVal BeneficiaryBankName As String,  _
                    ByVal BeneficiaryBankCity As String,  _
                    ByVal MsgBenefCountry As String,  _
                    ByVal SenderToReceiverInformation As String) As Integer
            If (IncomingDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IncomingDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OurReference Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OurReference,String)
            End If
            If (ValueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ValueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (MessageSender Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MessageSender,String)
            End If
            If (MessageSenderName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MessageSenderName,String)
            End If
            If (MessageSenderCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MessageSenderCity,String)
            End If
            If (Currency Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Currency,String)
            End If
            If (ReferenceNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ReferenceNo,String)
            End If
            If (AccountOfInstitution Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(AccountOfInstitution,String)
            End If
            If (AccountOfInstitutionName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(AccountOfInstitutionName,String)
            End If
            If (AccountOfInstitutionCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(AccountOfInstitutionCity,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ExchangeRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ExchangeRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AmountEuro.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(AmountEuro.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OriginalOrderingCustomer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(OriginalOrderingCustomer,String)
            End If
            If (OriginalOrderingInstitution Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(OriginalOrderingInstitution,String)
            End If
            If (OriginalOrderingInstitutionName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(OriginalOrderingInstitutionName,String)
            End If
            If (OriginalOrderingInstitutionCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(OriginalOrderingInstitutionCity,String)
            End If
            If (BeneficiaryCustomer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(BeneficiaryCustomer,String)
            End If
            If (Commission.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Commission.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(DetailsOfCharges,String)
            End If
            If (PAYMENT_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(PAYMENT_CODE,String)
            End If
            If (ReceiverBICofConstructMessage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ReceiverBICofConstructMessage,String)
            End If
            If (ReceiverBICofConstructMessageName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ReceiverBICofConstructMessageName,String)
            End If
            If (ReceiverBICofConstructMessageCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ReceiverBICofConstructMessageCity,String)
            End If
            If (PaymentYear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PaymentYear.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ProcessedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ProcessedBy,String)
            End If
            If (MsgSenderCountry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(MsgSenderCountry,String)
            End If
            If (MTTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(MTTYPE,String)
            End If
            If (BeneficiaryBank Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(BeneficiaryBank,String)
            End If
            If (BeneficiaryBankName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BeneficiaryBankName,String)
            End If
            If (BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(BeneficiaryBankCity,String)
            End If
            If (MsgBenefCountry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(MsgBenefCountry,String)
            End If
            If (SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(SenderToReceiverInformation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal IncomingDate As Global.System.Nullable(Of Date),  _
                    ByVal OurReference As String,  _
                    ByVal ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal MessageSender As String,  _
                    ByVal MessageSenderName As String,  _
                    ByVal MessageSenderCity As String,  _
                    ByVal Currency As String,  _
                    ByVal ReferenceNo As String,  _
                    ByVal AccountOfInstitution As String,  _
                    ByVal AccountOfInstitutionName As String,  _
                    ByVal AccountOfInstitutionCity As String,  _
                    ByVal Amount As Global.System.Nullable(Of Double),  _
                    ByVal ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal OriginalOrderingCustomer As String,  _
                    ByVal OriginalOrderingInstitution As String,  _
                    ByVal OriginalOrderingInstitutionName As String,  _
                    ByVal OriginalOrderingInstitutionCity As String,  _
                    ByVal BeneficiaryCustomer As String,  _
                    ByVal Commission As Global.System.Nullable(Of Double),  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal PAYMENT_CODE As String,  _
                    ByVal ReceiverBICofConstructMessage As String,  _
                    ByVal ReceiverBICofConstructMessageName As String,  _
                    ByVal ReceiverBICofConstructMessageCity As String,  _
                    ByVal PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal ProcessedBy As String,  _
                    ByVal MsgSenderCountry As String,  _
                    ByVal MTTYPE As String,  _
                    ByVal BeneficiaryBank As String,  _
                    ByVal BeneficiaryBankName As String,  _
                    ByVal BeneficiaryBankCity As String,  _
                    ByVal MsgBenefCountry As String,  _
                    ByVal SenderToReceiverInformation As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_IncomingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OurReference As String,  _
                    ByVal Original_ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_MessageSender As String,  _
                    ByVal Original_MessageSenderName As String,  _
                    ByVal Original_MessageSenderCity As String,  _
                    ByVal Original_Currency As String,  _
                    ByVal Original_ReferenceNo As String,  _
                    ByVal Original_AccountOfInstitution As String,  _
                    ByVal Original_AccountOfInstitutionName As String,  _
                    ByVal Original_AccountOfInstitutionCity As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal Original_OriginalOrderingCustomer As String,  _
                    ByVal Original_OriginalOrderingInstitution As String,  _
                    ByVal Original_OriginalOrderingInstitutionName As String,  _
                    ByVal Original_OriginalOrderingInstitutionCity As String,  _
                    ByVal Original_BeneficiaryCustomer As String,  _
                    ByVal Original_Commission As Global.System.Nullable(Of Double),  _
                    ByVal Original_DetailsOfCharges As String,  _
                    ByVal Original_PAYMENT_CODE As String,  _
                    ByVal Original_ReceiverBICofConstructMessage As String,  _
                    ByVal Original_ReceiverBICofConstructMessageName As String,  _
                    ByVal Original_ReceiverBICofConstructMessageCity As String,  _
                    ByVal Original_PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal Original_ProcessedBy As String,  _
                    ByVal Original_MsgSenderCountry As String,  _
                    ByVal Original_MTTYPE As String,  _
                    ByVal Original_BeneficiaryBank As String,  _
                    ByVal Original_BeneficiaryBankName As String,  _
                    ByVal Original_BeneficiaryBankCity As String,  _
                    ByVal Original_MsgBenefCountry As String,  _
                    ByVal Original_SenderToReceiverInformation As String) As Integer
            If (IncomingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(IncomingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OurReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OurReference,String)
            End If
            If (ValueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ValueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (MessageSender Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MessageSender,String)
            End If
            If (MessageSenderName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MessageSenderName,String)
            End If
            If (MessageSenderCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(MessageSenderCity,String)
            End If
            If (Currency Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Currency,String)
            End If
            If (ReferenceNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ReferenceNo,String)
            End If
            If (AccountOfInstitution Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(AccountOfInstitution,String)
            End If
            If (AccountOfInstitutionName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(AccountOfInstitutionName,String)
            End If
            If (AccountOfInstitutionCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(AccountOfInstitutionCity,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ExchangeRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ExchangeRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AmountEuro.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(AmountEuro.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OriginalOrderingCustomer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(OriginalOrderingCustomer,String)
            End If
            If (OriginalOrderingInstitution Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(OriginalOrderingInstitution,String)
            End If
            If (OriginalOrderingInstitutionName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(OriginalOrderingInstitutionName,String)
            End If
            If (OriginalOrderingInstitutionCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(OriginalOrderingInstitutionCity,String)
            End If
            If (BeneficiaryCustomer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(BeneficiaryCustomer,String)
            End If
            If (Commission.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Commission.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(DetailsOfCharges,String)
            End If
            If (PAYMENT_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(PAYMENT_CODE,String)
            End If
            If (ReceiverBICofConstructMessage Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ReceiverBICofConstructMessage,String)
            End If
            If (ReceiverBICofConstructMessageName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ReceiverBICofConstructMessageName,String)
            End If
            If (ReceiverBICofConstructMessageCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(ReceiverBICofConstructMessageCity,String)
            End If
            If (PaymentYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PaymentYear.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ProcessedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ProcessedBy,String)
            End If
            If (MsgSenderCountry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(MsgSenderCountry,String)
            End If
            If (MTTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(MTTYPE,String)
            End If
            If (BeneficiaryBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(BeneficiaryBank,String)
            End If
            If (BeneficiaryBankName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(BeneficiaryBankName,String)
            End If
            If (BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(BeneficiaryBankCity,String)
            End If
            If (MsgBenefCountry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(MsgBenefCountry,String)
            End If
            If (SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(SenderToReceiverInformation,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_ID,Integer)
            If (Original_IncomingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_IncomingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_OurReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_OurReference,String)
            End If
            If (Original_ValueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_ValueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_MessageSender Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_MessageSender,String)
            End If
            If (Original_MessageSenderName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_MessageSenderName,String)
            End If
            If (Original_MessageSenderCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_MessageSenderCity,String)
            End If
            If (Original_Currency Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_Currency,String)
            End If
            If (Original_ReferenceNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_ReferenceNo,String)
            End If
            If (Original_AccountOfInstitution Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_AccountOfInstitution,String)
            End If
            If (Original_AccountOfInstitutionName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_AccountOfInstitutionName,String)
            End If
            If (Original_AccountOfInstitutionCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_AccountOfInstitutionCity,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_ExchangeRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ExchangeRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_AmountEuro.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_AmountEuro.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_OriginalOrderingCustomer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_OriginalOrderingCustomer,String)
            End If
            If (Original_OriginalOrderingInstitution Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_OriginalOrderingInstitution,String)
            End If
            If (Original_OriginalOrderingInstitutionName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_OriginalOrderingInstitutionName,String)
            End If
            If (Original_OriginalOrderingInstitutionCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_OriginalOrderingInstitutionCity,String)
            End If
            If (Original_BeneficiaryCustomer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_BeneficiaryCustomer,String)
            End If
            If (Original_Commission.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_Commission.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_DetailsOfCharges Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_DetailsOfCharges,String)
            End If
            If (Original_PAYMENT_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_PAYMENT_CODE,String)
            End If
            If (Original_ReceiverBICofConstructMessage Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_ReceiverBICofConstructMessage,String)
            End If
            If (Original_ReceiverBICofConstructMessageName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_ReceiverBICofConstructMessageName,String)
            End If
            If (Original_ReceiverBICofConstructMessageCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_ReceiverBICofConstructMessageCity,String)
            End If
            If (Original_PaymentYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_PaymentYear.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_ProcessedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_ProcessedBy,String)
            End If
            If (Original_MsgSenderCountry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_MsgSenderCountry,String)
            End If
            If (Original_MTTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_MTTYPE,String)
            End If
            If (Original_BeneficiaryBank Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_BeneficiaryBank,String)
            End If
            If (Original_BeneficiaryBankName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_BeneficiaryBankName,String)
            End If
            If (Original_BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_BeneficiaryBankCity,String)
            End If
            If (Original_MsgBenefCountry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_MsgBenefCountry,String)
            End If
            If (Original_SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_SenderToReceiverInformation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GMPS_PAYMENTS_OUTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GMPS PAYMENTS OUT"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("MTTYPE", "MTTYPE")
            tableMapping.ColumnMappings.Add("RegisterDate", "RegisterDate")
            tableMapping.ColumnMappings.Add("OurReference", "OurReference")
            tableMapping.ColumnMappings.Add("SenderReference", "SenderReference")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("Currency", "Currency")
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate")
            tableMapping.ColumnMappings.Add("AmountEuro", "AmountEuro")
            tableMapping.ColumnMappings.Add("SenderBIC", "SenderBIC")
            tableMapping.ColumnMappings.Add("SenderName", "SenderName")
            tableMapping.ColumnMappings.Add("SenderCity", "SenderCity")
            tableMapping.ColumnMappings.Add("ValueDate", "ValueDate")
            tableMapping.ColumnMappings.Add("ReceivingBankBIC", "ReceivingBankBIC")
            tableMapping.ColumnMappings.Add("ReceivingBankCountryCode", "ReceivingBankCountryCode")
            tableMapping.ColumnMappings.Add("ReceivingBankName", "ReceivingBankName")
            tableMapping.ColumnMappings.Add("ReceivingBankCity", "ReceivingBankCity")
            tableMapping.ColumnMappings.Add("OrderingCustomersAccountServicingInstitution", "OrderingCustomersAccountServicingInstitution")
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType")
            tableMapping.ColumnMappings.Add("OrderingCustomer", "OrderingCustomer")
            tableMapping.ColumnMappings.Add("OrderingCustomersAccNo", "OrderingCustomersAccNo")
            tableMapping.ColumnMappings.Add("IntermediaryInstitutionBIC", "IntermediaryInstitutionBIC")
            tableMapping.ColumnMappings.Add("IntermediaryInstitutionName", "IntermediaryInstitutionName")
            tableMapping.ColumnMappings.Add("IntermediaryInstitutionCity", "IntermediaryInstitutionCity")
            tableMapping.ColumnMappings.Add("IntermediaryInstitutionAccNo", "IntermediaryInstitutionAccNo")
            tableMapping.ColumnMappings.Add("AccountPayeeBIC", "AccountPayeeBIC")
            tableMapping.ColumnMappings.Add("AccountPayeeNameAddress", "AccountPayeeNameAddress")
            tableMapping.ColumnMappings.Add("AccountPayeeCity", "AccountPayeeCity")
            tableMapping.ColumnMappings.Add("AccountOfInstitutionAccNo", "AccountOfInstitutionAccNo")
            tableMapping.ColumnMappings.Add("BeneficiaryBankBIC", "BeneficiaryBankBIC")
            tableMapping.ColumnMappings.Add("BeneficiaryBankName", "BeneficiaryBankName")
            tableMapping.ColumnMappings.Add("BeneficiaryBankCity", "BeneficiaryBankCity")
            tableMapping.ColumnMappings.Add("BeneficiaryBankAccNo", "BeneficiaryBankAccNo")
            tableMapping.ColumnMappings.Add("BeneficiaryCustomerBIC", "BeneficiaryCustomerBIC")
            tableMapping.ColumnMappings.Add("BeneficiaryCustomerAccNo", "BeneficiaryCustomerAccNo")
            tableMapping.ColumnMappings.Add("BeneficiaryCustomerNameAddress", "BeneficiaryCustomerNameAddress")
            tableMapping.ColumnMappings.Add("DetailsOfCharges", "DetailsOfCharges")
            tableMapping.ColumnMappings.Add("PayStartTime", "PayStartTime")
            tableMapping.ColumnMappings.Add("SenderToReceiverInformation", "SenderToReceiverInformation")
            tableMapping.ColumnMappings.Add("DebitTransactionsSigns", "DebitTransactionsSigns")
            tableMapping.ColumnMappings.Add("ProcessingQueue", "ProcessingQueue")
            tableMapping.ColumnMappings.Add("ACK_State", "ACK_State")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("PaymentYear", "PaymentYear")
            tableMapping.ColumnMappings.Add("ProcessedBy", "ProcessedBy")
            tableMapping.ColumnMappings.Add("MsgSenderCountry", "MsgSenderCountry")
            tableMapping.ColumnMappings.Add("RemittanceInformation", "RemittanceInformation")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [GMPS PAYMENTS OUT] WHERE (([ID] = @Original_ID) AND ((@IsNull_MTTYPE"& _ 
                " = 1 AND [MTTYPE] IS NULL) OR ([MTTYPE] = @Original_MTTYPE)) AND ((@IsNull_Regis"& _ 
                "terDate = 1 AND [RegisterDate] IS NULL) OR ([RegisterDate] = @Original_RegisterD"& _ 
                "ate)) AND ((@IsNull_OurReference = 1 AND [OurReference] IS NULL) OR ([OurReferen"& _ 
                "ce] = @Original_OurReference)) AND ((@IsNull_SenderReference = 1 AND [SenderRefe"& _ 
                "rence] IS NULL) OR ([SenderReference] = @Original_SenderReference)) AND ((@IsNul"& _ 
                "l_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)) AND ((@IsNu"& _ 
                "ll_Currency = 1 AND [Currency] IS NULL) OR ([Currency] = @Original_Currency)) AN"& _ 
                "D ((@IsNull_ExchangeRate = 1 AND [ExchangeRate] IS NULL) OR ([ExchangeRate] = @O"& _ 
                "riginal_ExchangeRate)) AND ((@IsNull_AmountEuro = 1 AND [AmountEuro] IS NULL) OR"& _ 
                " ([AmountEuro] = @Original_AmountEuro)) AND ((@IsNull_SenderBIC = 1 AND [SenderB"& _ 
                "IC] IS NULL) OR ([SenderBIC] = @Original_SenderBIC)) AND ((@IsNull_SenderName = "& _ 
                "1 AND [SenderName] IS NULL) OR ([SenderName] = @Original_SenderName)) AND ((@IsN"& _ 
                "ull_SenderCity = 1 AND [SenderCity] IS NULL) OR ([SenderCity] = @Original_Sender"& _ 
                "City)) AND ((@IsNull_ValueDate = 1 AND [ValueDate] IS NULL) OR ([ValueDate] = @O"& _ 
                "riginal_ValueDate)) AND ((@IsNull_ReceivingBankBIC = 1 AND [ReceivingBankBIC] IS"& _ 
                " NULL) OR ([ReceivingBankBIC] = @Original_ReceivingBankBIC)) AND ((@IsNull_Recei"& _ 
                "vingBankCountryCode = 1 AND [ReceivingBankCountryCode] IS NULL) OR ([ReceivingBa"& _ 
                "nkCountryCode] = @Original_ReceivingBankCountryCode)) AND ((@IsNull_ReceivingBan"& _ 
                "kName = 1 AND [ReceivingBankName] IS NULL) OR ([ReceivingBankName] = @Original_R"& _ 
                "eceivingBankName)) AND ((@IsNull_ReceivingBankCity = 1 AND [ReceivingBankCity] I"& _ 
                "S NULL) OR ([ReceivingBankCity] = @Original_ReceivingBankCity)) AND ((@IsNull_Or"& _ 
                "deringCustomersAccountServicingInstitution = 1 AND [OrderingCustomersAccountServ"& _ 
                "icingInstitution] IS NULL) OR ([OrderingCustomersAccountServicingInstitution] = "& _ 
                "@Original_OrderingCustomersAccountServicingInstitution)) AND ((@IsNull_Transacti"& _ 
                "onType = 1 AND [TransactionType] IS NULL) OR ([TransactionType] = @Original_Tran"& _ 
                "sactionType)) AND ((@IsNull_OrderingCustomer = 1 AND [OrderingCustomer] IS NULL)"& _ 
                " OR ([OrderingCustomer] = @Original_OrderingCustomer)) AND ((@IsNull_OrderingCus"& _ 
                "tomersAccNo = 1 AND [OrderingCustomersAccNo] IS NULL) OR ([OrderingCustomersAccN"& _ 
                "o] = @Original_OrderingCustomersAccNo)) AND ((@IsNull_IntermediaryInstitutionBIC"& _ 
                " = 1 AND [IntermediaryInstitutionBIC] IS NULL) OR ([IntermediaryInstitutionBIC] "& _ 
                "= @Original_IntermediaryInstitutionBIC)) AND ((@IsNull_IntermediaryInstitutionNa"& _ 
                "me = 1 AND [IntermediaryInstitutionName] IS NULL) OR ([IntermediaryInstitutionNa"& _ 
                "me] = @Original_IntermediaryInstitutionName)) AND ((@IsNull_IntermediaryInstitut"& _ 
                "ionCity = 1 AND [IntermediaryInstitutionCity] IS NULL) OR ([IntermediaryInstitut"& _ 
                "ionCity] = @Original_IntermediaryInstitutionCity)) AND ((@IsNull_IntermediaryIns"& _ 
                "titutionAccNo = 1 AND [IntermediaryInstitutionAccNo] IS NULL) OR ([IntermediaryI"& _ 
                "nstitutionAccNo] = @Original_IntermediaryInstitutionAccNo)) AND ((@IsNull_Accoun"& _ 
                "tPayeeBIC = 1 AND [AccountPayeeBIC] IS NULL) OR ([AccountPayeeBIC] = @Original_A"& _ 
                "ccountPayeeBIC)) AND ((@IsNull_AccountPayeeNameAddress = 1 AND [AccountPayeeName"& _ 
                "Address] IS NULL) OR ([AccountPayeeNameAddress] = @Original_AccountPayeeNameAddr"& _ 
                "ess)) AND ((@IsNull_AccountPayeeCity = 1 AND [AccountPayeeCity] IS NULL) OR ([Ac"& _ 
                "countPayeeCity] = @Original_AccountPayeeCity)) AND ((@IsNull_AccountOfInstitutio"& _ 
                "nAccNo = 1 AND [AccountOfInstitutionAccNo] IS NULL) OR ([AccountOfInstitutionAcc"& _ 
                "No] = @Original_AccountOfInstitutionAccNo)) AND ((@IsNull_BeneficiaryBankBIC = 1"& _ 
                " AND [BeneficiaryBankBIC] IS NULL) OR ([BeneficiaryBankBIC] = @Original_Benefici"& _ 
                "aryBankBIC)) AND ((@IsNull_BeneficiaryBankName = 1 AND [BeneficiaryBankName] IS "& _ 
                "NULL) OR ([BeneficiaryBankName] = @Original_BeneficiaryBankName)) AND ((@IsNull_"& _ 
                "BeneficiaryBankCity = 1 AND [BeneficiaryBankCity] IS NULL) OR ([BeneficiaryBankC"& _ 
                "ity] = @Original_BeneficiaryBankCity)) AND ((@IsNull_BeneficiaryBankAccNo = 1 AN"& _ 
                "D [BeneficiaryBankAccNo] IS NULL) OR ([BeneficiaryBankAccNo] = @Original_Benefic"& _ 
                "iaryBankAccNo)) AND ((@IsNull_BeneficiaryCustomerBIC = 1 AND [BeneficiaryCustome"& _ 
                "rBIC] IS NULL) OR ([BeneficiaryCustomerBIC] = @Original_BeneficiaryCustomerBIC))"& _ 
                " AND ((@IsNull_BeneficiaryCustomerAccNo = 1 AND [BeneficiaryCustomerAccNo] IS NU"& _ 
                "LL) OR ([BeneficiaryCustomerAccNo] = @Original_BeneficiaryCustomerAccNo)) AND (("& _ 
                "@IsNull_BeneficiaryCustomerNameAddress = 1 AND [BeneficiaryCustomerNameAddress] "& _ 
                "IS NULL) OR ([BeneficiaryCustomerNameAddress] = @Original_BeneficiaryCustomerNam"& _ 
                "eAddress)) AND ((@IsNull_DetailsOfCharges = 1 AND [DetailsOfCharges] IS NULL) OR"& _ 
                " ([DetailsOfCharges] = @Original_DetailsOfCharges)) AND ((@IsNull_PayStartTime ="& _ 
                " 1 AND [PayStartTime] IS NULL) OR ([PayStartTime] = @Original_PayStartTime)) AND"& _ 
                " ((@IsNull_SenderToReceiverInformation = 1 AND [SenderToReceiverInformation] IS "& _ 
                "NULL) OR ([SenderToReceiverInformation] = @Original_SenderToReceiverInformation)"& _ 
                ") AND ((@IsNull_DebitTransactionsSigns = 1 AND [DebitTransactionsSigns] IS NULL)"& _ 
                " OR ([DebitTransactionsSigns] = @Original_DebitTransactionsSigns)) AND ((@IsNull"& _ 
                "_ProcessingQueue = 1 AND [ProcessingQueue] IS NULL) OR ([ProcessingQueue] = @Ori"& _ 
                "ginal_ProcessingQueue)) AND ((@IsNull_ACK_State = 1 AND [ACK_State] IS NULL) OR "& _ 
                "([ACK_State] = @Original_ACK_State)) AND ((@IsNull_Status = 1 AND [Status] IS NU"& _ 
                "LL) OR ([Status] = @Original_Status)) AND ((@IsNull_PaymentYear = 1 AND [Payment"& _ 
                "Year] IS NULL) OR ([PaymentYear] = @Original_PaymentYear)) AND ((@IsNull_Process"& _ 
                "edBy = 1 AND [ProcessedBy] IS NULL) OR ([ProcessedBy] = @Original_ProcessedBy)) "& _ 
                "AND ((@IsNull_MsgSenderCountry = 1 AND [MsgSenderCountry] IS NULL) OR ([MsgSende"& _ 
                "rCountry] = @Original_MsgSenderCountry)) AND ((@IsNull_RemittanceInformation = 1"& _ 
                " AND [RemittanceInformation] IS NULL) OR ([RemittanceInformation] = @Original_Re"& _ 
                "mittanceInformation)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RegisterDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegisterDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RegisterDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegisterDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OurReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Currency", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ExchangeRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AmountEuro", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ValueDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankCountryCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCountryCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCountryCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderingCustomersAccountServicingInstitution", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccountServicingInstitution", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderingCustomersAccountServicingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccountServicingInstitution", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TransactionType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderingCustomer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderingCustomersAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderingCustomersAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountPayeeBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPayeeBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountPayeeNameAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeNameAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPayeeNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeNameAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountPayeeCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPayeeCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitutionAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomerBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomerBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomerAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomerAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomerNameAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerNameAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomerNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerNameAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DetailsOfCharges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayStartTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayStartTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayStartTime", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayStartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderToReceiverInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DebitTransactionsSigns", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DebitTransactionsSigns", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DebitTransactionsSigns", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DebitTransactionsSigns", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProcessingQueue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessingQueue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProcessingQueue", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessingQueue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACK_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACK_State", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACK_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACK_State", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Status", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PaymentYear", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProcessedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MsgSenderCountry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RemittanceInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemittanceInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RemittanceInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemittanceInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GMPS PAYMENTS OUT] ([MTTYPE], [RegisterDate], [OurReference], [Sende"& _ 
                "rReference], [Amount], [Currency], [ExchangeRate], [AmountEuro], [SenderBIC], [S"& _ 
                "enderName], [SenderCity], [ValueDate], [ReceivingBankBIC], [ReceivingBankCountry"& _ 
                "Code], [ReceivingBankName], [ReceivingBankCity], [OrderingCustomersAccountServic"& _ 
                "ingInstitution], [TransactionType], [OrderingCustomer], [OrderingCustomersAccNo]"& _ 
                ", [IntermediaryInstitutionBIC], [IntermediaryInstitutionName], [IntermediaryInst"& _ 
                "itutionCity], [IntermediaryInstitutionAccNo], [AccountPayeeBIC], [AccountPayeeNa"& _ 
                "meAddress], [AccountPayeeCity], [AccountOfInstitutionAccNo], [BeneficiaryBankBIC"& _ 
                "], [BeneficiaryBankName], [BeneficiaryBankCity], [BeneficiaryBankAccNo], [Benefi"& _ 
                "ciaryCustomerBIC], [BeneficiaryCustomerAccNo], [BeneficiaryCustomerNameAddress],"& _ 
                " [DetailsOfCharges], [PayStartTime], [SenderToReceiverInformation], [DebitTransa"& _ 
                "ctionsSigns], [ProcessingQueue], [ACK_State], [Status], [PaymentYear], [Processe"& _ 
                "dBy], [MsgSenderCountry], [RemittanceInformation]) VALUES (@MTTYPE, @RegisterDat"& _ 
                "e, @OurReference, @SenderReference, @Amount, @Currency, @ExchangeRate, @AmountEu"& _ 
                "ro, @SenderBIC, @SenderName, @SenderCity, @ValueDate, @ReceivingBankBIC, @Receiv"& _ 
                "ingBankCountryCode, @ReceivingBankName, @ReceivingBankCity, @OrderingCustomersAc"& _ 
                "countServicingInstitution, @TransactionType, @OrderingCustomer, @OrderingCustome"& _ 
                "rsAccNo, @IntermediaryInstitutionBIC, @IntermediaryInstitutionName, @Intermediar"& _ 
                "yInstitutionCity, @IntermediaryInstitutionAccNo, @AccountPayeeBIC, @AccountPayee"& _ 
                "NameAddress, @AccountPayeeCity, @AccountOfInstitutionAccNo, @BeneficiaryBankBIC,"& _ 
                " @BeneficiaryBankName, @BeneficiaryBankCity, @BeneficiaryBankAccNo, @Beneficiary"& _ 
                "CustomerBIC, @BeneficiaryCustomerAccNo, @BeneficiaryCustomerNameAddress, @Detail"& _ 
                "sOfCharges, @PayStartTime, @SenderToReceiverInformation, @DebitTransactionsSigns"& _ 
                ", @ProcessingQueue, @ACK_State, @Status, @PaymentYear, @ProcessedBy, @MsgSenderC"& _ 
                "ountry, @RemittanceInformation)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RegisterDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegisterDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderingCustomersAccountServicingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccountServicingInstitution", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderingCustomersAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountPayeeBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountPayeeNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeNameAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountPayeeCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomerBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomerAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomerNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerNameAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayStartTime", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayStartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DebitTransactionsSigns", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DebitTransactionsSigns", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessingQueue", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessingQueue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACK_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACK_State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RemittanceInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemittanceInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [GMPS PAYMENTS OUT] SET [MTTYPE] = @MTTYPE, [RegisterDate] = @RegisterDate"& _ 
                ", [OurReference] = @OurReference, [SenderReference] = @SenderReference, [Amount]"& _ 
                " = @Amount, [Currency] = @Currency, [ExchangeRate] = @ExchangeRate, [AmountEuro]"& _ 
                " = @AmountEuro, [SenderBIC] = @SenderBIC, [SenderName] = @SenderName, [SenderCit"& _ 
                "y] = @SenderCity, [ValueDate] = @ValueDate, [ReceivingBankBIC] = @ReceivingBankB"& _ 
                "IC, [ReceivingBankCountryCode] = @ReceivingBankCountryCode, [ReceivingBankName] "& _ 
                "= @ReceivingBankName, [ReceivingBankCity] = @ReceivingBankCity, [OrderingCustome"& _ 
                "rsAccountServicingInstitution] = @OrderingCustomersAccountServicingInstitution, "& _ 
                "[TransactionType] = @TransactionType, [OrderingCustomer] = @OrderingCustomer, [O"& _ 
                "rderingCustomersAccNo] = @OrderingCustomersAccNo, [IntermediaryInstitutionBIC] ="& _ 
                " @IntermediaryInstitutionBIC, [IntermediaryInstitutionName] = @IntermediaryInsti"& _ 
                "tutionName, [IntermediaryInstitutionCity] = @IntermediaryInstitutionCity, [Inter"& _ 
                "mediaryInstitutionAccNo] = @IntermediaryInstitutionAccNo, [AccountPayeeBIC] = @A"& _ 
                "ccountPayeeBIC, [AccountPayeeNameAddress] = @AccountPayeeNameAddress, [AccountPa"& _ 
                "yeeCity] = @AccountPayeeCity, [AccountOfInstitutionAccNo] = @AccountOfInstitutio"& _ 
                "nAccNo, [BeneficiaryBankBIC] = @BeneficiaryBankBIC, [BeneficiaryBankName] = @Ben"& _ 
                "eficiaryBankName, [BeneficiaryBankCity] = @BeneficiaryBankCity, [BeneficiaryBank"& _ 
                "AccNo] = @BeneficiaryBankAccNo, [BeneficiaryCustomerBIC] = @BeneficiaryCustomerB"& _ 
                "IC, [BeneficiaryCustomerAccNo] = @BeneficiaryCustomerAccNo, [BeneficiaryCustomer"& _ 
                "NameAddress] = @BeneficiaryCustomerNameAddress, [DetailsOfCharges] = @DetailsOfC"& _ 
                "harges, [PayStartTime] = @PayStartTime, [SenderToReceiverInformation] = @SenderT"& _ 
                "oReceiverInformation, [DebitTransactionsSigns] = @DebitTransactionsSigns, [Proce"& _ 
                "ssingQueue] = @ProcessingQueue, [ACK_State] = @ACK_State, [Status] = @Status, [P"& _ 
                "aymentYear] = @PaymentYear, [ProcessedBy] = @ProcessedBy, [MsgSenderCountry] = @"& _ 
                "MsgSenderCountry, [RemittanceInformation] = @RemittanceInformation WHERE (([ID] "& _ 
                "= @Original_ID) AND ((@IsNull_MTTYPE = 1 AND [MTTYPE] IS NULL) OR ([MTTYPE] = @O"& _ 
                "riginal_MTTYPE)) AND ((@IsNull_RegisterDate = 1 AND [RegisterDate] IS NULL) OR ("& _ 
                "[RegisterDate] = @Original_RegisterDate)) AND ((@IsNull_OurReference = 1 AND [Ou"& _ 
                "rReference] IS NULL) OR ([OurReference] = @Original_OurReference)) AND ((@IsNull"& _ 
                "_SenderReference = 1 AND [SenderReference] IS NULL) OR ([SenderReference] = @Ori"& _ 
                "ginal_SenderReference)) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amou"& _ 
                "nt] = @Original_Amount)) AND ((@IsNull_Currency = 1 AND [Currency] IS NULL) OR ("& _ 
                "[Currency] = @Original_Currency)) AND ((@IsNull_ExchangeRate = 1 AND [ExchangeRa"& _ 
                "te] IS NULL) OR ([ExchangeRate] = @Original_ExchangeRate)) AND ((@IsNull_AmountE"& _ 
                "uro = 1 AND [AmountEuro] IS NULL) OR ([AmountEuro] = @Original_AmountEuro)) AND "& _ 
                "((@IsNull_SenderBIC = 1 AND [SenderBIC] IS NULL) OR ([SenderBIC] = @Original_Sen"& _ 
                "derBIC)) AND ((@IsNull_SenderName = 1 AND [SenderName] IS NULL) OR ([SenderName]"& _ 
                " = @Original_SenderName)) AND ((@IsNull_SenderCity = 1 AND [SenderCity] IS NULL)"& _ 
                " OR ([SenderCity] = @Original_SenderCity)) AND ((@IsNull_ValueDate = 1 AND [Valu"& _ 
                "eDate] IS NULL) OR ([ValueDate] = @Original_ValueDate)) AND ((@IsNull_ReceivingB"& _ 
                "ankBIC = 1 AND [ReceivingBankBIC] IS NULL) OR ([ReceivingBankBIC] = @Original_Re"& _ 
                "ceivingBankBIC)) AND ((@IsNull_ReceivingBankCountryCode = 1 AND [ReceivingBankCo"& _ 
                "untryCode] IS NULL) OR ([ReceivingBankCountryCode] = @Original_ReceivingBankCoun"& _ 
                "tryCode)) AND ((@IsNull_ReceivingBankName = 1 AND [ReceivingBankName] IS NULL) O"& _ 
                "R ([ReceivingBankName] = @Original_ReceivingBankName)) AND ((@IsNull_ReceivingBa"& _ 
                "nkCity = 1 AND [ReceivingBankCity] IS NULL) OR ([ReceivingBankCity] = @Original_"& _ 
                "ReceivingBankCity)) AND ((@IsNull_OrderingCustomersAccountServicingInstitution ="& _ 
                " 1 AND [OrderingCustomersAccountServicingInstitution] IS NULL) OR ([OrderingCust"& _ 
                "omersAccountServicingInstitution] = @Original_OrderingCustomersAccountServicingI"& _ 
                "nstitution)) AND ((@IsNull_TransactionType = 1 AND [TransactionType] IS NULL) OR"& _ 
                " ([TransactionType] = @Original_TransactionType)) AND ((@IsNull_OrderingCustomer"& _ 
                " = 1 AND [OrderingCustomer] IS NULL) OR ([OrderingCustomer] = @Original_Ordering"& _ 
                "Customer)) AND ((@IsNull_OrderingCustomersAccNo = 1 AND [OrderingCustomersAccNo]"& _ 
                " IS NULL) OR ([OrderingCustomersAccNo] = @Original_OrderingCustomersAccNo)) AND "& _ 
                "((@IsNull_IntermediaryInstitutionBIC = 1 AND [IntermediaryInstitutionBIC] IS NUL"& _ 
                "L) OR ([IntermediaryInstitutionBIC] = @Original_IntermediaryInstitutionBIC)) AND"& _ 
                " ((@IsNull_IntermediaryInstitutionName = 1 AND [IntermediaryInstitutionName] IS "& _ 
                "NULL) OR ([IntermediaryInstitutionName] = @Original_IntermediaryInstitutionName)"& _ 
                ") AND ((@IsNull_IntermediaryInstitutionCity = 1 AND [IntermediaryInstitutionCity"& _ 
                "] IS NULL) OR ([IntermediaryInstitutionCity] = @Original_IntermediaryInstitution"& _ 
                "City)) AND ((@IsNull_IntermediaryInstitutionAccNo = 1 AND [IntermediaryInstituti"& _ 
                "onAccNo] IS NULL) OR ([IntermediaryInstitutionAccNo] = @Original_IntermediaryIns"& _ 
                "titutionAccNo)) AND ((@IsNull_AccountPayeeBIC = 1 AND [AccountPayeeBIC] IS NULL)"& _ 
                " OR ([AccountPayeeBIC] = @Original_AccountPayeeBIC)) AND ((@IsNull_AccountPayeeN"& _ 
                "ameAddress = 1 AND [AccountPayeeNameAddress] IS NULL) OR ([AccountPayeeNameAddre"& _ 
                "ss] = @Original_AccountPayeeNameAddress)) AND ((@IsNull_AccountPayeeCity = 1 AND"& _ 
                " [AccountPayeeCity] IS NULL) OR ([AccountPayeeCity] = @Original_AccountPayeeCity"& _ 
                ")) AND ((@IsNull_AccountOfInstitutionAccNo = 1 AND [AccountOfInstitutionAccNo] I"& _ 
                "S NULL) OR ([AccountOfInstitutionAccNo] = @Original_AccountOfInstitutionAccNo)) "& _ 
                "AND ((@IsNull_BeneficiaryBankBIC = 1 AND [BeneficiaryBankBIC] IS NULL) OR ([Bene"& _ 
                "ficiaryBankBIC] = @Original_BeneficiaryBankBIC)) AND ((@IsNull_BeneficiaryBankNa"& _ 
                "me = 1 AND [BeneficiaryBankName] IS NULL) OR ([BeneficiaryBankName] = @Original_"& _ 
                "BeneficiaryBankName)) AND ((@IsNull_BeneficiaryBankCity = 1 AND [BeneficiaryBank"& _ 
                "City] IS NULL) OR ([BeneficiaryBankCity] = @Original_BeneficiaryBankCity)) AND ("& _ 
                "(@IsNull_BeneficiaryBankAccNo = 1 AND [BeneficiaryBankAccNo] IS NULL) OR ([Benef"& _ 
                "iciaryBankAccNo] = @Original_BeneficiaryBankAccNo)) AND ((@IsNull_BeneficiaryCus"& _ 
                "tomerBIC = 1 AND [BeneficiaryCustomerBIC] IS NULL) OR ([BeneficiaryCustomerBIC] "& _ 
                "= @Original_BeneficiaryCustomerBIC)) AND ((@IsNull_BeneficiaryCustomerAccNo = 1 "& _ 
                "AND [BeneficiaryCustomerAccNo] IS NULL) OR ([BeneficiaryCustomerAccNo] = @Origin"& _ 
                "al_BeneficiaryCustomerAccNo)) AND ((@IsNull_BeneficiaryCustomerNameAddress = 1 A"& _ 
                "ND [BeneficiaryCustomerNameAddress] IS NULL) OR ([BeneficiaryCustomerNameAddress"& _ 
                "] = @Original_BeneficiaryCustomerNameAddress)) AND ((@IsNull_DetailsOfCharges = "& _ 
                "1 AND [DetailsOfCharges] IS NULL) OR ([DetailsOfCharges] = @Original_DetailsOfCh"& _ 
                "arges)) AND ((@IsNull_PayStartTime = 1 AND [PayStartTime] IS NULL) OR ([PayStart"& _ 
                "Time] = @Original_PayStartTime)) AND ((@IsNull_SenderToReceiverInformation = 1 A"& _ 
                "ND [SenderToReceiverInformation] IS NULL) OR ([SenderToReceiverInformation] = @O"& _ 
                "riginal_SenderToReceiverInformation)) AND ((@IsNull_DebitTransactionsSigns = 1 A"& _ 
                "ND [DebitTransactionsSigns] IS NULL) OR ([DebitTransactionsSigns] = @Original_De"& _ 
                "bitTransactionsSigns)) AND ((@IsNull_ProcessingQueue = 1 AND [ProcessingQueue] I"& _ 
                "S NULL) OR ([ProcessingQueue] = @Original_ProcessingQueue)) AND ((@IsNull_ACK_St"& _ 
                "ate = 1 AND [ACK_State] IS NULL) OR ([ACK_State] = @Original_ACK_State)) AND ((@"& _ 
                "IsNull_Status = 1 AND [Status] IS NULL) OR ([Status] = @Original_Status)) AND (("& _ 
                "@IsNull_PaymentYear = 1 AND [PaymentYear] IS NULL) OR ([PaymentYear] = @Original"& _ 
                "_PaymentYear)) AND ((@IsNull_ProcessedBy = 1 AND [ProcessedBy] IS NULL) OR ([Pro"& _ 
                "cessedBy] = @Original_ProcessedBy)) AND ((@IsNull_MsgSenderCountry = 1 AND [MsgS"& _ 
                "enderCountry] IS NULL) OR ([MsgSenderCountry] = @Original_MsgSenderCountry)) AND"& _ 
                " ((@IsNull_RemittanceInformation = 1 AND [RemittanceInformation] IS NULL) OR ([R"& _ 
                "emittanceInformation] = @Original_RemittanceInformation)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RegisterDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegisterDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivingBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderingCustomersAccountServicingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccountServicingInstitution", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderingCustomersAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntermediaryInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountPayeeBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountPayeeNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeNameAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountPayeeCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountOfInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryBankAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomerBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomerAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerAccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BeneficiaryCustomerNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerNameAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayStartTime", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayStartTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DebitTransactionsSigns", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DebitTransactionsSigns", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessingQueue", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessingQueue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACK_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACK_State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RemittanceInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemittanceInformation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MTTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MTTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RegisterDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegisterDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RegisterDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RegisterDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OurReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Currency", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Currency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Currency", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ExchangeRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ExchangeRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExchangeRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AmountEuro", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AmountEuro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmountEuro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ValueDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankCountryCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCountryCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCountryCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivingBankCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivingBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivingBankCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderingCustomersAccountServicingInstitution", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccountServicingInstitution", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderingCustomersAccountServicingInstitution", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccountServicingInstitution", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TransactionType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderingCustomer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderingCustomer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderingCustomersAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderingCustomersAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderingCustomersAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IntermediaryInstitutionAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IntermediaryInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IntermediaryInstitutionAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountPayeeBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPayeeBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountPayeeNameAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeNameAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPayeeNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeNameAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountPayeeCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPayeeCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPayeeCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountOfInstitutionAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountOfInstitutionAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountOfInstitutionAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankCity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankCity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankCity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryBankAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryBankAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryBankAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomerBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomerBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomerAccNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerAccNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomerAccNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerAccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BeneficiaryCustomerNameAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerNameAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BeneficiaryCustomerNameAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BeneficiaryCustomerNameAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DetailsOfCharges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayStartTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayStartTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayStartTime", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayStartTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderToReceiverInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderToReceiverInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderToReceiverInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DebitTransactionsSigns", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DebitTransactionsSigns", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DebitTransactionsSigns", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DebitTransactionsSigns", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProcessingQueue", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessingQueue", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProcessingQueue", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessingQueue", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACK_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACK_State", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACK_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACK_State", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Status", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PaymentYear", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PaymentYear", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProcessedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProcessedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MsgSenderCountry", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MsgSenderCountry", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MsgSenderCountry", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RemittanceInformation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemittanceInformation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RemittanceInformation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RemittanceInformation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, MTTYPE, RegisterDate, OurReference, SenderReference, Amount, Cu"& _ 
                "rrency, ExchangeRate, AmountEuro, SenderBIC, SenderName, SenderCity, ValueDate, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ReceivingBankBIC, ReceivingBankCountryCode, Receiving"& _ 
                "BankName, ReceivingBankCity, OrderingCustomersAccountServicingInstitution, Trans"& _ 
                "actionType, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         OrderingCustomer, OrderingCustomersAccNo,"& _ 
                " IntermediaryInstitutionBIC, IntermediaryInstitutionName, IntermediaryInstitutio"& _ 
                "nCity, IntermediaryInstitutionAccNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AccountPayeeBIC,"& _ 
                " AccountPayeeNameAddress, AccountPayeeCity, AccountOfInstitutionAccNo, Beneficia"& _ 
                "ryBankBIC, BeneficiaryBankName, BeneficiaryBankCity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "BeneficiaryBankAccNo, BeneficiaryCustomerBIC, BeneficiaryCustomerAccNo, Benefici"& _ 
                "aryCustomerNameAddress, DetailsOfCharges, PayStartTime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   SenderToReceiverInformation, DebitTransactionsSigns, ProcessingQueue, ACK_Sta"& _ 
                "te, Status, PaymentYear, ProcessedBy, MsgSenderCountry, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   RemittanceInformation"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            [GMPS PAYMENTS OUT]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.GMPS_OUT_FILL"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 2147483647, Global.System.Data.ParameterDirection.ReturnValue, 10, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FROMDATE", Global.System.Data.SqlDbType.DateTime, 2147483647, Global.System.Data.ParameterDirection.Input, 255, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TILLDATE", Global.System.Data.SqlDbType.DateTime, 2147483647, Global.System.Data.ParameterDirection.Input, 255, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ClearingDataSet.GMPS_PAYMENTS_OUTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ClearingDataSet.GMPS_PAYMENTS_OUTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ClearingDataSet.GMPS_PAYMENTS_OUTDataTable = New ClearingDataSet.GMPS_PAYMENTS_OUTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGMPS_OUT_FILL(ByVal dataTable As ClearingDataSet.GMPS_PAYMENTS_OUTDataTable, ByVal FROMDATE As Global.System.Nullable(Of Date), ByVal TILLDATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FROMDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FROMDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TILLDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TILLDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGMPS_OUT_FILL(ByVal FROMDATE As Global.System.Nullable(Of Date), ByVal TILLDATE As Global.System.Nullable(Of Date)) As ClearingDataSet.GMPS_PAYMENTS_OUTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FROMDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FROMDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TILLDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TILLDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ClearingDataSet.GMPS_PAYMENTS_OUTDataTable = New ClearingDataSet.GMPS_PAYMENTS_OUTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ClearingDataSet.GMPS_PAYMENTS_OUTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ClearingDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GMPS PAYMENTS OUT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_MTTYPE As String,  _
                    ByVal Original_RegisterDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OurReference As String,  _
                    ByVal Original_SenderReference As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_Currency As String,  _
                    ByVal Original_ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal Original_SenderBIC As String,  _
                    ByVal Original_SenderName As String,  _
                    ByVal Original_SenderCity As String,  _
                    ByVal Original_ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReceivingBankBIC As String,  _
                    ByVal Original_ReceivingBankCountryCode As String,  _
                    ByVal Original_ReceivingBankName As String,  _
                    ByVal Original_ReceivingBankCity As String,  _
                    ByVal Original_OrderingCustomersAccountServicingInstitution As String,  _
                    ByVal Original_TransactionType As String,  _
                    ByVal Original_OrderingCustomer As String,  _
                    ByVal Original_OrderingCustomersAccNo As String,  _
                    ByVal Original_IntermediaryInstitutionBIC As String,  _
                    ByVal Original_IntermediaryInstitutionName As String,  _
                    ByVal Original_IntermediaryInstitutionCity As String,  _
                    ByVal Original_IntermediaryInstitutionAccNo As String,  _
                    ByVal Original_AccountPayeeBIC As String,  _
                    ByVal Original_AccountPayeeNameAddress As String,  _
                    ByVal Original_AccountPayeeCity As String,  _
                    ByVal Original_AccountOfInstitutionAccNo As String,  _
                    ByVal Original_BeneficiaryBankBIC As String,  _
                    ByVal Original_BeneficiaryBankName As String,  _
                    ByVal Original_BeneficiaryBankCity As String,  _
                    ByVal Original_BeneficiaryBankAccNo As String,  _
                    ByVal Original_BeneficiaryCustomerBIC As String,  _
                    ByVal Original_BeneficiaryCustomerAccNo As String,  _
                    ByVal Original_BeneficiaryCustomerNameAddress As String,  _
                    ByVal Original_DetailsOfCharges As String,  _
                    ByVal Original_PayStartTime As Global.System.Nullable(Of Double),  _
                    ByVal Original_SenderToReceiverInformation As String,  _
                    ByVal Original_DebitTransactionsSigns As String,  _
                    ByVal Original_ProcessingQueue As String,  _
                    ByVal Original_ACK_State As String,  _
                    ByVal Original_Status As String,  _
                    ByVal Original_PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal Original_ProcessedBy As String,  _
                    ByVal Original_MsgSenderCountry As String,  _
                    ByVal Original_RemittanceInformation As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_MTTYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_MTTYPE,String)
            End If
            If (Original_RegisterDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_RegisterDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_OurReference Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_OurReference,String)
            End If
            If (Original_SenderReference Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SenderReference,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Amount.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_Currency Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Currency,String)
            End If
            If (Original_ExchangeRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ExchangeRate.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_AmountEuro.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_AmountEuro.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_SenderBIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SenderBIC,String)
            End If
            If (Original_SenderName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_SenderName,String)
            End If
            If (Original_SenderCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_SenderCity,String)
            End If
            If (Original_ValueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_ValueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceivingBankBIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_ReceivingBankBIC,String)
            End If
            If (Original_ReceivingBankCountryCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_ReceivingBankCountryCode,String)
            End If
            If (Original_ReceivingBankName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_ReceivingBankName,String)
            End If
            If (Original_ReceivingBankCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_ReceivingBankCity,String)
            End If
            If (Original_OrderingCustomersAccountServicingInstitution Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_OrderingCustomersAccountServicingInstitution,String)
            End If
            If (Original_TransactionType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_TransactionType,String)
            End If
            If (Original_OrderingCustomer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_OrderingCustomer,String)
            End If
            If (Original_OrderingCustomersAccNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_OrderingCustomersAccNo,String)
            End If
            If (Original_IntermediaryInstitutionBIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_IntermediaryInstitutionBIC,String)
            End If
            If (Original_IntermediaryInstitutionName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_IntermediaryInstitutionName,String)
            End If
            If (Original_IntermediaryInstitutionCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_IntermediaryInstitutionCity,String)
            End If
            If (Original_IntermediaryInstitutionAccNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_IntermediaryInstitutionAccNo,String)
            End If
            If (Original_AccountPayeeBIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_AccountPayeeBIC,String)
            End If
            If (Original_AccountPayeeNameAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_AccountPayeeNameAddress,String)
            End If
            If (Original_AccountPayeeCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_AccountPayeeCity,String)
            End If
            If (Original_AccountOfInstitutionAccNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_AccountOfInstitutionAccNo,String)
            End If
            If (Original_BeneficiaryBankBIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_BeneficiaryBankBIC,String)
            End If
            If (Original_BeneficiaryBankName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_BeneficiaryBankName,String)
            End If
            If (Original_BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_BeneficiaryBankCity,String)
            End If
            If (Original_BeneficiaryBankAccNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_BeneficiaryBankAccNo,String)
            End If
            If (Original_BeneficiaryCustomerBIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_BeneficiaryCustomerBIC,String)
            End If
            If (Original_BeneficiaryCustomerAccNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_BeneficiaryCustomerAccNo,String)
            End If
            If (Original_BeneficiaryCustomerNameAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_BeneficiaryCustomerNameAddress,String)
            End If
            If (Original_DetailsOfCharges Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_DetailsOfCharges,String)
            End If
            If (Original_PayStartTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_PayStartTime.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_SenderToReceiverInformation,String)
            End If
            If (Original_DebitTransactionsSigns Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_DebitTransactionsSigns,String)
            End If
            If (Original_ProcessingQueue Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_ProcessingQueue,String)
            End If
            If (Original_ACK_State Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_ACK_State,String)
            End If
            If (Original_Status Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_Status,String)
            End If
            If (Original_PaymentYear.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_PaymentYear.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_ProcessedBy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_ProcessedBy,String)
            End If
            If (Original_MsgSenderCountry Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_MsgSenderCountry,String)
            End If
            If (Original_RemittanceInformation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_RemittanceInformation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal MTTYPE As String,  _
                    ByVal RegisterDate As Global.System.Nullable(Of Date),  _
                    ByVal OurReference As String,  _
                    ByVal SenderReference As String,  _
                    ByVal Amount As Global.System.Nullable(Of Double),  _
                    ByVal Currency As String,  _
                    ByVal ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal SenderBIC As String,  _
                    ByVal SenderName As String,  _
                    ByVal SenderCity As String,  _
                    ByVal ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal ReceivingBankBIC As String,  _
                    ByVal ReceivingBankCountryCode As String,  _
                    ByVal ReceivingBankName As String,  _
                    ByVal ReceivingBankCity As String,  _
                    ByVal OrderingCustomersAccountServicingInstitution As String,  _
                    ByVal TransactionType As String,  _
                    ByVal OrderingCustomer As String,  _
                    ByVal OrderingCustomersAccNo As String,  _
                    ByVal IntermediaryInstitutionBIC As String,  _
                    ByVal IntermediaryInstitutionName As String,  _
                    ByVal IntermediaryInstitutionCity As String,  _
                    ByVal IntermediaryInstitutionAccNo As String,  _
                    ByVal AccountPayeeBIC As String,  _
                    ByVal AccountPayeeNameAddress As String,  _
                    ByVal AccountPayeeCity As String,  _
                    ByVal AccountOfInstitutionAccNo As String,  _
                    ByVal BeneficiaryBankBIC As String,  _
                    ByVal BeneficiaryBankName As String,  _
                    ByVal BeneficiaryBankCity As String,  _
                    ByVal BeneficiaryBankAccNo As String,  _
                    ByVal BeneficiaryCustomerBIC As String,  _
                    ByVal BeneficiaryCustomerAccNo As String,  _
                    ByVal BeneficiaryCustomerNameAddress As String,  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal PayStartTime As Global.System.Nullable(Of Double),  _
                    ByVal SenderToReceiverInformation As String,  _
                    ByVal DebitTransactionsSigns As String,  _
                    ByVal ProcessingQueue As String,  _
                    ByVal ACK_State As String,  _
                    ByVal Status As String,  _
                    ByVal PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal ProcessedBy As String,  _
                    ByVal MsgSenderCountry As String,  _
                    ByVal RemittanceInformation As String) As Integer
            If (MTTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(MTTYPE,String)
            End If
            If (RegisterDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RegisterDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (OurReference Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(OurReference,String)
            End If
            If (SenderReference Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SenderReference,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Currency Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Currency,String)
            End If
            If (ExchangeRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ExchangeRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AmountEuro.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(AmountEuro.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SenderBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SenderBIC,String)
            End If
            If (SenderName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SenderName,String)
            End If
            If (SenderCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SenderCity,String)
            End If
            If (ValueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ValueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ReceivingBankBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ReceivingBankBIC,String)
            End If
            If (ReceivingBankCountryCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ReceivingBankCountryCode,String)
            End If
            If (ReceivingBankName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ReceivingBankName,String)
            End If
            If (ReceivingBankCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ReceivingBankCity,String)
            End If
            If (OrderingCustomersAccountServicingInstitution Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(OrderingCustomersAccountServicingInstitution,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(TransactionType,String)
            End If
            If (OrderingCustomer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(OrderingCustomer,String)
            End If
            If (OrderingCustomersAccNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(OrderingCustomersAccNo,String)
            End If
            If (IntermediaryInstitutionBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(IntermediaryInstitutionBIC,String)
            End If
            If (IntermediaryInstitutionName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(IntermediaryInstitutionName,String)
            End If
            If (IntermediaryInstitutionCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(IntermediaryInstitutionCity,String)
            End If
            If (IntermediaryInstitutionAccNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(IntermediaryInstitutionAccNo,String)
            End If
            If (AccountPayeeBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(AccountPayeeBIC,String)
            End If
            If (AccountPayeeNameAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(AccountPayeeNameAddress,String)
            End If
            If (AccountPayeeCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(AccountPayeeCity,String)
            End If
            If (AccountOfInstitutionAccNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(AccountOfInstitutionAccNo,String)
            End If
            If (BeneficiaryBankBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BeneficiaryBankBIC,String)
            End If
            If (BeneficiaryBankName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(BeneficiaryBankName,String)
            End If
            If (BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BeneficiaryBankCity,String)
            End If
            If (BeneficiaryBankAccNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(BeneficiaryBankAccNo,String)
            End If
            If (BeneficiaryCustomerBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(BeneficiaryCustomerBIC,String)
            End If
            If (BeneficiaryCustomerAccNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(BeneficiaryCustomerAccNo,String)
            End If
            If (BeneficiaryCustomerNameAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(BeneficiaryCustomerNameAddress,String)
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(DetailsOfCharges,String)
            End If
            If (PayStartTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(PayStartTime.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(SenderToReceiverInformation,String)
            End If
            If (DebitTransactionsSigns Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(DebitTransactionsSigns,String)
            End If
            If (ProcessingQueue Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ProcessingQueue,String)
            End If
            If (ACK_State Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ACK_State,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Status,String)
            End If
            If (PaymentYear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(PaymentYear.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ProcessedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(ProcessedBy,String)
            End If
            If (MsgSenderCountry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(MsgSenderCountry,String)
            End If
            If (RemittanceInformation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(RemittanceInformation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MTTYPE As String,  _
                    ByVal RegisterDate As Global.System.Nullable(Of Date),  _
                    ByVal OurReference As String,  _
                    ByVal SenderReference As String,  _
                    ByVal Amount As Global.System.Nullable(Of Double),  _
                    ByVal Currency As String,  _
                    ByVal ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal SenderBIC As String,  _
                    ByVal SenderName As String,  _
                    ByVal SenderCity As String,  _
                    ByVal ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal ReceivingBankBIC As String,  _
                    ByVal ReceivingBankCountryCode As String,  _
                    ByVal ReceivingBankName As String,  _
                    ByVal ReceivingBankCity As String,  _
                    ByVal OrderingCustomersAccountServicingInstitution As String,  _
                    ByVal TransactionType As String,  _
                    ByVal OrderingCustomer As String,  _
                    ByVal OrderingCustomersAccNo As String,  _
                    ByVal IntermediaryInstitutionBIC As String,  _
                    ByVal IntermediaryInstitutionName As String,  _
                    ByVal IntermediaryInstitutionCity As String,  _
                    ByVal IntermediaryInstitutionAccNo As String,  _
                    ByVal AccountPayeeBIC As String,  _
                    ByVal AccountPayeeNameAddress As String,  _
                    ByVal AccountPayeeCity As String,  _
                    ByVal AccountOfInstitutionAccNo As String,  _
                    ByVal BeneficiaryBankBIC As String,  _
                    ByVal BeneficiaryBankName As String,  _
                    ByVal BeneficiaryBankCity As String,  _
                    ByVal BeneficiaryBankAccNo As String,  _
                    ByVal BeneficiaryCustomerBIC As String,  _
                    ByVal BeneficiaryCustomerAccNo As String,  _
                    ByVal BeneficiaryCustomerNameAddress As String,  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal PayStartTime As Global.System.Nullable(Of Double),  _
                    ByVal SenderToReceiverInformation As String,  _
                    ByVal DebitTransactionsSigns As String,  _
                    ByVal ProcessingQueue As String,  _
                    ByVal ACK_State As String,  _
                    ByVal Status As String,  _
                    ByVal PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal ProcessedBy As String,  _
                    ByVal MsgSenderCountry As String,  _
                    ByVal RemittanceInformation As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_MTTYPE As String,  _
                    ByVal Original_RegisterDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OurReference As String,  _
                    ByVal Original_SenderReference As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_Currency As String,  _
                    ByVal Original_ExchangeRate As Global.System.Nullable(Of Double),  _
                    ByVal Original_AmountEuro As Global.System.Nullable(Of Double),  _
                    ByVal Original_SenderBIC As String,  _
                    ByVal Original_SenderName As String,  _
                    ByVal Original_SenderCity As String,  _
                    ByVal Original_ValueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ReceivingBankBIC As String,  _
                    ByVal Original_ReceivingBankCountryCode As String,  _
                    ByVal Original_ReceivingBankName As String,  _
                    ByVal Original_ReceivingBankCity As String,  _
                    ByVal Original_OrderingCustomersAccountServicingInstitution As String,  _
                    ByVal Original_TransactionType As String,  _
                    ByVal Original_OrderingCustomer As String,  _
                    ByVal Original_OrderingCustomersAccNo As String,  _
                    ByVal Original_IntermediaryInstitutionBIC As String,  _
                    ByVal Original_IntermediaryInstitutionName As String,  _
                    ByVal Original_IntermediaryInstitutionCity As String,  _
                    ByVal Original_IntermediaryInstitutionAccNo As String,  _
                    ByVal Original_AccountPayeeBIC As String,  _
                    ByVal Original_AccountPayeeNameAddress As String,  _
                    ByVal Original_AccountPayeeCity As String,  _
                    ByVal Original_AccountOfInstitutionAccNo As String,  _
                    ByVal Original_BeneficiaryBankBIC As String,  _
                    ByVal Original_BeneficiaryBankName As String,  _
                    ByVal Original_BeneficiaryBankCity As String,  _
                    ByVal Original_BeneficiaryBankAccNo As String,  _
                    ByVal Original_BeneficiaryCustomerBIC As String,  _
                    ByVal Original_BeneficiaryCustomerAccNo As String,  _
                    ByVal Original_BeneficiaryCustomerNameAddress As String,  _
                    ByVal Original_DetailsOfCharges As String,  _
                    ByVal Original_PayStartTime As Global.System.Nullable(Of Double),  _
                    ByVal Original_SenderToReceiverInformation As String,  _
                    ByVal Original_DebitTransactionsSigns As String,  _
                    ByVal Original_ProcessingQueue As String,  _
                    ByVal Original_ACK_State As String,  _
                    ByVal Original_Status As String,  _
                    ByVal Original_PaymentYear As Global.System.Nullable(Of Double),  _
                    ByVal Original_ProcessedBy As String,  _
                    ByVal Original_MsgSenderCountry As String,  _
                    ByVal Original_RemittanceInformation As String) As Integer
            If (MTTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(MTTYPE,String)
            End If
            If (RegisterDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RegisterDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (OurReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(OurReference,String)
            End If
            If (SenderReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SenderReference,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Currency Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Currency,String)
            End If
            If (ExchangeRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ExchangeRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AmountEuro.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(AmountEuro.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SenderBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SenderBIC,String)
            End If
            If (SenderName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SenderName,String)
            End If
            If (SenderCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SenderCity,String)
            End If
            If (ValueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ValueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ReceivingBankBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ReceivingBankBIC,String)
            End If
            If (ReceivingBankCountryCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ReceivingBankCountryCode,String)
            End If
            If (ReceivingBankName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ReceivingBankName,String)
            End If
            If (ReceivingBankCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ReceivingBankCity,String)
            End If
            If (OrderingCustomersAccountServicingInstitution Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(OrderingCustomersAccountServicingInstitution,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(TransactionType,String)
            End If
            If (OrderingCustomer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(OrderingCustomer,String)
            End If
            If (OrderingCustomersAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(OrderingCustomersAccNo,String)
            End If
            If (IntermediaryInstitutionBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(IntermediaryInstitutionBIC,String)
            End If
            If (IntermediaryInstitutionName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(IntermediaryInstitutionName,String)
            End If
            If (IntermediaryInstitutionCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(IntermediaryInstitutionCity,String)
            End If
            If (IntermediaryInstitutionAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(IntermediaryInstitutionAccNo,String)
            End If
            If (AccountPayeeBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(AccountPayeeBIC,String)
            End If
            If (AccountPayeeNameAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(AccountPayeeNameAddress,String)
            End If
            If (AccountPayeeCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(AccountPayeeCity,String)
            End If
            If (AccountOfInstitutionAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(AccountOfInstitutionAccNo,String)
            End If
            If (BeneficiaryBankBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(BeneficiaryBankBIC,String)
            End If
            If (BeneficiaryBankName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(BeneficiaryBankName,String)
            End If
            If (BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(BeneficiaryBankCity,String)
            End If
            If (BeneficiaryBankAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(BeneficiaryBankAccNo,String)
            End If
            If (BeneficiaryCustomerBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(BeneficiaryCustomerBIC,String)
            End If
            If (BeneficiaryCustomerAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(BeneficiaryCustomerAccNo,String)
            End If
            If (BeneficiaryCustomerNameAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(BeneficiaryCustomerNameAddress,String)
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(DetailsOfCharges,String)
            End If
            If (PayStartTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(PayStartTime.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(SenderToReceiverInformation,String)
            End If
            If (DebitTransactionsSigns Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(DebitTransactionsSigns,String)
            End If
            If (ProcessingQueue Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ProcessingQueue,String)
            End If
            If (ACK_State Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ACK_State,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Status,String)
            End If
            If (PaymentYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(PaymentYear.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (ProcessedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(ProcessedBy,String)
            End If
            If (MsgSenderCountry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(MsgSenderCountry,String)
            End If
            If (RemittanceInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(RemittanceInformation,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_ID,Integer)
            If (Original_MTTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_MTTYPE,String)
            End If
            If (Original_RegisterDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_RegisterDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_OurReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_OurReference,String)
            End If
            If (Original_SenderReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_SenderReference,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_Currency Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_Currency,String)
            End If
            If (Original_ExchangeRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ExchangeRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_AmountEuro.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_AmountEuro.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_SenderBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_SenderBIC,String)
            End If
            If (Original_SenderName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_SenderName,String)
            End If
            If (Original_SenderCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_SenderCity,String)
            End If
            If (Original_ValueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_ValueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceivingBankBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_ReceivingBankBIC,String)
            End If
            If (Original_ReceivingBankCountryCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_ReceivingBankCountryCode,String)
            End If
            If (Original_ReceivingBankName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ReceivingBankName,String)
            End If
            If (Original_ReceivingBankCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ReceivingBankCity,String)
            End If
            If (Original_OrderingCustomersAccountServicingInstitution Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_OrderingCustomersAccountServicingInstitution,String)
            End If
            If (Original_TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_TransactionType,String)
            End If
            If (Original_OrderingCustomer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_OrderingCustomer,String)
            End If
            If (Original_OrderingCustomersAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_OrderingCustomersAccNo,String)
            End If
            If (Original_IntermediaryInstitutionBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_IntermediaryInstitutionBIC,String)
            End If
            If (Original_IntermediaryInstitutionName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_IntermediaryInstitutionName,String)
            End If
            If (Original_IntermediaryInstitutionCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_IntermediaryInstitutionCity,String)
            End If
            If (Original_IntermediaryInstitutionAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_IntermediaryInstitutionAccNo,String)
            End If
            If (Original_AccountPayeeBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_AccountPayeeBIC,String)
            End If
            If (Original_AccountPayeeNameAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_AccountPayeeNameAddress,String)
            End If
            If (Original_AccountPayeeCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_AccountPayeeCity,String)
            End If
            If (Original_AccountOfInstitutionAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_AccountOfInstitutionAccNo,String)
            End If
            If (Original_BeneficiaryBankBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_BeneficiaryBankBIC,String)
            End If
            If (Original_BeneficiaryBankName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_BeneficiaryBankName,String)
            End If
            If (Original_BeneficiaryBankCity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_BeneficiaryBankCity,String)
            End If
            If (Original_BeneficiaryBankAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_BeneficiaryBankAccNo,String)
            End If
            If (Original_BeneficiaryCustomerBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_BeneficiaryCustomerBIC,String)
            End If
            If (Original_BeneficiaryCustomerAccNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_BeneficiaryCustomerAccNo,String)
            End If
            If (Original_BeneficiaryCustomerNameAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_BeneficiaryCustomerNameAddress,String)
            End If
            If (Original_DetailsOfCharges Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_DetailsOfCharges,String)
            End If
            If (Original_PayStartTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_PayStartTime.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_SenderToReceiverInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_SenderToReceiverInformation,String)
            End If
            If (Original_DebitTransactionsSigns Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_DebitTransactionsSigns,String)
            End If
            If (Original_ProcessingQueue Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_ProcessingQueue,String)
            End If
            If (Original_ACK_State Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_ACK_State,String)
            End If
            If (Original_Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_Status,String)
            End If
            If (Original_PaymentYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_PaymentYear.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_ProcessedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_ProcessedBy,String)
            End If
            If (Original_MsgSenderCountry Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_MsgSenderCountry,String)
            End If
            If (Original_RemittanceInformation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_RemittanceInformation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ODAS_REMMITANCESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ODAS REMMITANCES"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("EM00KEY0", "EM00KEY0")
            tableMapping.ColumnMappings.Add("Client Account", "Client Account")
            tableMapping.ColumnMappings.Add("EM00KEY1", "EM00KEY1")
            tableMapping.ColumnMappings.Add("EM00KEY2", "EM00KEY2")
            tableMapping.ColumnMappings.Add("OURTRANREFNO", "OURTRANREFNO")
            tableMapping.ColumnMappings.Add("INWARDOUTWARD", "INWARDOUTWARD")
            tableMapping.ColumnMappings.Add("METHOD", "METHOD")
            tableMapping.ColumnMappings.Add("RECEIVERBRANCH", "RECEIVERBRANCH")
            tableMapping.ColumnMappings.Add("RECEIVERID", "RECEIVERID")
            tableMapping.ColumnMappings.Add("RECEIVERNAME", "RECEIVERNAME")
            tableMapping.ColumnMappings.Add("RECEIVERSWIFT", "RECEIVERSWIFT")
            tableMapping.ColumnMappings.Add("SENDERCORBKID", "SENDERCORBKID")
            tableMapping.ColumnMappings.Add("SENDERCORRNAME", "SENDERCORRNAME")
            tableMapping.ColumnMappings.Add("SENDERCORRBR", "SENDERCORRBR")
            tableMapping.ColumnMappings.Add("SENDERCORRST", "SENDERCORRST")
            tableMapping.ColumnMappings.Add("RECRCORRID", "RECRCORRID")
            tableMapping.ColumnMappings.Add("RECRCORRNAME", "RECRCORRNAME")
            tableMapping.ColumnMappings.Add("RECRCORRBR", "RECRCORRBR")
            tableMapping.ColumnMappings.Add("RECRCORRSWIFT", "RECRCORRSWIFT")
            tableMapping.ColumnMappings.Add("ACWITHINSTID", "ACWITHINSTID")
            tableMapping.ColumnMappings.Add("ACWITHINSTNA", "ACWITHINSTNA")
            tableMapping.ColumnMappings.Add("ACWITHINSTBR", "ACWITHINSTBR")
            tableMapping.ColumnMappings.Add("ACWITHINSTST", "ACWITHINSTST")
            tableMapping.ColumnMappings.Add("BENEFACNO", "BENEFACNO")
            tableMapping.ColumnMappings.Add("BENEFCUSTBR", "BENEFCUSTBR")
            tableMapping.ColumnMappings.Add("BENEFCUSTID", "BENEFCUSTID")
            tableMapping.ColumnMappings.Add("BENEFCUSTNAME", "BENEFCUSTNAME")
            tableMapping.ColumnMappings.Add("BENEFCUSTADR1", "BENEFCUSTADR1")
            tableMapping.ColumnMappings.Add("BENEFCUSTADR2", "BENEFCUSTADR2")
            tableMapping.ColumnMappings.Add("DETOFCHARGE", "DETOFCHARGE")
            tableMapping.ColumnMappings.Add("SETOREINFO", "SETOREINFO")
            tableMapping.ColumnMappings.Add("CURRENCYCODE", "CURRENCYCODE")
            tableMapping.ColumnMappings.Add("TRANSACTIONDATE", "TRANSACTIONDATE")
            tableMapping.ColumnMappings.Add("VALUEDATE", "VALUEDATE")
            tableMapping.ColumnMappings.Add("Deal Amount", "Deal Amount")
            tableMapping.ColumnMappings.Add("EXCHANGE_RATE", "EXCHANGE_RATE")
            tableMapping.ColumnMappings.Add("Deal Amount Euro", "Deal Amount Euro")
            tableMapping.ColumnMappings.Add("HANDLINGFEE", "HANDLINGFEE")
            tableMapping.ColumnMappings.Add("ORDERCUSTBR", "ORDERCUSTBR")
            tableMapping.ColumnMappings.Add("ORDERCUSTID", "ORDERCUSTID")
            tableMapping.ColumnMappings.Add("ORDERCUSTNAME", "ORDERCUSTNAME")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD1", "ORDERCUSTADD1")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD2", "ORDERCUSTADD2")
            tableMapping.ColumnMappings.Add("HOLDFUNC", "HOLDFUNC")
            tableMapping.ColumnMappings.Add("ORDERCUSTADD3", "ORDERCUSTADD3")
            tableMapping.ColumnMappings.Add("SWIFTINREF", "SWIFTINREF")
            tableMapping.ColumnMappings.Add("BEMERKUNGEN", "BEMERKUNGEN")
            tableMapping.ColumnMappings.Add("PAYMENTDETAILS", "PAYMENTDETAILS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ODAS REMMITANCES] WHERE (([ID] = @Original_ID) AND ((@IsNull_EM00KEY"& _ 
                "0 = 1 AND [EM00KEY0] IS NULL) OR ([EM00KEY0] = @Original_EM00KEY0)) AND ((@IsNul"& _ 
                "l_Client_Account = 1 AND [Client Account] IS NULL) OR ([Client Account] = @Origi"& _ 
                "nal_Client_Account)) AND ((@IsNull_EM00KEY1 = 1 AND [EM00KEY1] IS NULL) OR ([EM0"& _ 
                "0KEY1] = @Original_EM00KEY1)) AND ((@IsNull_EM00KEY2 = 1 AND [EM00KEY2] IS NULL)"& _ 
                " OR ([EM00KEY2] = @Original_EM00KEY2)) AND ((@IsNull_OURTRANREFNO = 1 AND [OURTR"& _ 
                "ANREFNO] IS NULL) OR ([OURTRANREFNO] = @Original_OURTRANREFNO)) AND ((@IsNull_IN"& _ 
                "WARDOUTWARD = 1 AND [INWARDOUTWARD] IS NULL) OR ([INWARDOUTWARD] = @Original_INW"& _ 
                "ARDOUTWARD)) AND ((@IsNull_METHOD = 1 AND [METHOD] IS NULL) OR ([METHOD] = @Orig"& _ 
                "inal_METHOD)) AND ((@IsNull_RECEIVERBRANCH = 1 AND [RECEIVERBRANCH] IS NULL) OR "& _ 
                "([RECEIVERBRANCH] = @Original_RECEIVERBRANCH)) AND ((@IsNull_RECEIVERID = 1 AND "& _ 
                "[RECEIVERID] IS NULL) OR ([RECEIVERID] = @Original_RECEIVERID)) AND ((@IsNull_RE"& _ 
                "CEIVERNAME = 1 AND [RECEIVERNAME] IS NULL) OR ([RECEIVERNAME] = @Original_RECEIV"& _ 
                "ERNAME)) AND ((@IsNull_RECEIVERSWIFT = 1 AND [RECEIVERSWIFT] IS NULL) OR ([RECEI"& _ 
                "VERSWIFT] = @Original_RECEIVERSWIFT)) AND ((@IsNull_SENDERCORBKID = 1 AND [SENDE"& _ 
                "RCORBKID] IS NULL) OR ([SENDERCORBKID] = @Original_SENDERCORBKID)) AND ((@IsNull"& _ 
                "_SENDERCORRNAME = 1 AND [SENDERCORRNAME] IS NULL) OR ([SENDERCORRNAME] = @Origin"& _ 
                "al_SENDERCORRNAME)) AND ((@IsNull_SENDERCORRBR = 1 AND [SENDERCORRBR] IS NULL) O"& _ 
                "R ([SENDERCORRBR] = @Original_SENDERCORRBR)) AND ((@IsNull_SENDERCORRST = 1 AND "& _ 
                "[SENDERCORRST] IS NULL) OR ([SENDERCORRST] = @Original_SENDERCORRST)) AND ((@IsN"& _ 
                "ull_RECRCORRID = 1 AND [RECRCORRID] IS NULL) OR ([RECRCORRID] = @Original_RECRCO"& _ 
                "RRID)) AND ((@IsNull_RECRCORRNAME = 1 AND [RECRCORRNAME] IS NULL) OR ([RECRCORRN"& _ 
                "AME] = @Original_RECRCORRNAME)) AND ((@IsNull_RECRCORRBR = 1 AND [RECRCORRBR] IS"& _ 
                " NULL) OR ([RECRCORRBR] = @Original_RECRCORRBR)) AND ((@IsNull_RECRCORRSWIFT = 1"& _ 
                " AND [RECRCORRSWIFT] IS NULL) OR ([RECRCORRSWIFT] = @Original_RECRCORRSWIFT)) AN"& _ 
                "D ((@IsNull_ACWITHINSTID = 1 AND [ACWITHINSTID] IS NULL) OR ([ACWITHINSTID] = @O"& _ 
                "riginal_ACWITHINSTID)) AND ((@IsNull_ACWITHINSTNA = 1 AND [ACWITHINSTNA] IS NULL"& _ 
                ") OR ([ACWITHINSTNA] = @Original_ACWITHINSTNA)) AND ((@IsNull_ACWITHINSTBR = 1 A"& _ 
                "ND [ACWITHINSTBR] IS NULL) OR ([ACWITHINSTBR] = @Original_ACWITHINSTBR)) AND ((@"& _ 
                "IsNull_ACWITHINSTST = 1 AND [ACWITHINSTST] IS NULL) OR ([ACWITHINSTST] = @Origin"& _ 
                "al_ACWITHINSTST)) AND ((@IsNull_BENEFACNO = 1 AND [BENEFACNO] IS NULL) OR ([BENE"& _ 
                "FACNO] = @Original_BENEFACNO)) AND ((@IsNull_BENEFCUSTBR = 1 AND [BENEFCUSTBR] I"& _ 
                "S NULL) OR ([BENEFCUSTBR] = @Original_BENEFCUSTBR)) AND ((@IsNull_BENEFCUSTID = "& _ 
                "1 AND [BENEFCUSTID] IS NULL) OR ([BENEFCUSTID] = @Original_BENEFCUSTID)) AND ((@"& _ 
                "IsNull_BENEFCUSTNAME = 1 AND [BENEFCUSTNAME] IS NULL) OR ([BENEFCUSTNAME] = @Ori"& _ 
                "ginal_BENEFCUSTNAME)) AND ((@IsNull_BENEFCUSTADR1 = 1 AND [BENEFCUSTADR1] IS NUL"& _ 
                "L) OR ([BENEFCUSTADR1] = @Original_BENEFCUSTADR1)) AND ((@IsNull_BENEFCUSTADR2 ="& _ 
                " 1 AND [BENEFCUSTADR2] IS NULL) OR ([BENEFCUSTADR2] = @Original_BENEFCUSTADR2)) "& _ 
                "AND ((@IsNull_DETOFCHARGE = 1 AND [DETOFCHARGE] IS NULL) OR ([DETOFCHARGE] = @Or"& _ 
                "iginal_DETOFCHARGE)) AND ((@IsNull_SETOREINFO = 1 AND [SETOREINFO] IS NULL) OR ("& _ 
                "[SETOREINFO] = @Original_SETOREINFO)) AND ((@IsNull_CURRENCYCODE = 1 AND [CURREN"& _ 
                "CYCODE] IS NULL) OR ([CURRENCYCODE] = @Original_CURRENCYCODE)) AND ((@IsNull_TRA"& _ 
                "NSACTIONDATE = 1 AND [TRANSACTIONDATE] IS NULL) OR ([TRANSACTIONDATE] = @Origina"& _ 
                "l_TRANSACTIONDATE)) AND ((@IsNull_VALUEDATE = 1 AND [VALUEDATE] IS NULL) OR ([VA"& _ 
                "LUEDATE] = @Original_VALUEDATE)) AND ((@IsNull_Deal_Amount = 1 AND [Deal Amount]"& _ 
                " IS NULL) OR ([Deal Amount] = @Original_Deal_Amount)) AND ((@IsNull_EXCHANGE_RAT"& _ 
                "E = 1 AND [EXCHANGE_RATE] IS NULL) OR ([EXCHANGE_RATE] = @Original_EXCHANGE_RATE"& _ 
                ")) AND ((@IsNull_Deal_Amount_Euro = 1 AND [Deal Amount Euro] IS NULL) OR ([Deal "& _ 
                "Amount Euro] = @Original_Deal_Amount_Euro)) AND ((@IsNull_HANDLINGFEE = 1 AND [H"& _ 
                "ANDLINGFEE] IS NULL) OR ([HANDLINGFEE] = @Original_HANDLINGFEE)) AND ((@IsNull_O"& _ 
                "RDERCUSTBR = 1 AND [ORDERCUSTBR] IS NULL) OR ([ORDERCUSTBR] = @Original_ORDERCUS"& _ 
                "TBR)) AND ((@IsNull_ORDERCUSTID = 1 AND [ORDERCUSTID] IS NULL) OR ([ORDERCUSTID]"& _ 
                " = @Original_ORDERCUSTID)) AND ((@IsNull_ORDERCUSTNAME = 1 AND [ORDERCUSTNAME] I"& _ 
                "S NULL) OR ([ORDERCUSTNAME] = @Original_ORDERCUSTNAME)) AND ((@IsNull_ORDERCUSTA"& _ 
                "DD1 = 1 AND [ORDERCUSTADD1] IS NULL) OR ([ORDERCUSTADD1] = @Original_ORDERCUSTAD"& _ 
                "D1)) AND ((@IsNull_ORDERCUSTADD2 = 1 AND [ORDERCUSTADD2] IS NULL) OR ([ORDERCUST"& _ 
                "ADD2] = @Original_ORDERCUSTADD2)) AND ((@IsNull_HOLDFUNC = 1 AND [HOLDFUNC] IS N"& _ 
                "ULL) OR ([HOLDFUNC] = @Original_HOLDFUNC)) AND ((@IsNull_ORDERCUSTADD3 = 1 AND ["& _ 
                "ORDERCUSTADD3] IS NULL) OR ([ORDERCUSTADD3] = @Original_ORDERCUSTADD3)) AND ((@I"& _ 
                "sNull_SWIFTINREF = 1 AND [SWIFTINREF] IS NULL) OR ([SWIFTINREF] = @Original_SWIF"& _ 
                "TINREF)) AND ((@IsNull_PAYMENTDETAILS = 1 AND [PAYMENTDETAILS] IS NULL) OR ([PAY"& _ 
                "MENTDETAILS] = @Original_PAYMENTDETAILS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EM00KEY0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY0", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EM00KEY0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY0", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_Account", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client Account", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_Account", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client Account", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EM00KEY1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EM00KEY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EM00KEY2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EM00KEY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OURTRANREFNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OURTRANREFNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OURTRANREFNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OURTRANREFNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INWARDOUTWARD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INWARDOUTWARD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INWARDOUTWARD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INWARDOUTWARD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_METHOD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METHOD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_METHOD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METHOD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERBRANCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERBRANCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERSWIFT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORBKID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORBKID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORBKID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORBKID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORRNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORRBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORRST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORRST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRSWIFT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTNA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTNA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTNA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFACNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFACNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFACNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFACNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTADR1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTADR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTADR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTADR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DETOFCHARGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETOFCHARGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DETOFCHARGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETOFCHARGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SETOREINFO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SETOREINFO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SETOREINFO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SETOREINFO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CURRENCYCODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURRENCYCODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CURRENCYCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURRENCYCODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTIONDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRANSACTIONDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALUEDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUEDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALUEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUEDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Deal_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deal_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXCHANGE_RATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXCHANGE_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Deal_Amount_Euro", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount Euro", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deal_Amount_Euro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount Euro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HANDLINGFEE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HANDLINGFEE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HANDLINGFEE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HANDLINGFEE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTADD1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTADD1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTADD2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTADD2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HOLDFUNC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOLDFUNC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HOLDFUNC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOLDFUNC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTADD3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTADD3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SWIFTINREF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SWIFTINREF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SWIFTINREF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SWIFTINREF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAYMENTDETAILS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENTDETAILS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAYMENTDETAILS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENTDETAILS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ODAS REMMITANCES] ([EM00KEY0], [Client Account], [EM00KEY1], [EM00KE"& _ 
                "Y2], [OURTRANREFNO], [INWARDOUTWARD], [METHOD], [RECEIVERBRANCH], [RECEIVERID], "& _ 
                "[RECEIVERNAME], [RECEIVERSWIFT], [SENDERCORBKID], [SENDERCORRNAME], [SENDERCORRB"& _ 
                "R], [SENDERCORRST], [RECRCORRID], [RECRCORRNAME], [RECRCORRBR], [RECRCORRSWIFT],"& _ 
                " [ACWITHINSTID], [ACWITHINSTNA], [ACWITHINSTBR], [ACWITHINSTST], [BENEFACNO], [B"& _ 
                "ENEFCUSTBR], [BENEFCUSTID], [BENEFCUSTNAME], [BENEFCUSTADR1], [BENEFCUSTADR2], ["& _ 
                "DETOFCHARGE], [SETOREINFO], [CURRENCYCODE], [TRANSACTIONDATE], [VALUEDATE], [Dea"& _ 
                "l Amount], [EXCHANGE_RATE], [Deal Amount Euro], [HANDLINGFEE], [ORDERCUSTBR], [O"& _ 
                "RDERCUSTID], [ORDERCUSTNAME], [ORDERCUSTADD1], [ORDERCUSTADD2], [HOLDFUNC], [ORD"& _ 
                "ERCUSTADD3], [SWIFTINREF], [BEMERKUNGEN], [PAYMENTDETAILS]) VALUES (@EM00KEY0, @"& _ 
                "Client_Account, @EM00KEY1, @EM00KEY2, @OURTRANREFNO, @INWARDOUTWARD, @METHOD, @R"& _ 
                "ECEIVERBRANCH, @RECEIVERID, @RECEIVERNAME, @RECEIVERSWIFT, @SENDERCORBKID, @SEND"& _ 
                "ERCORRNAME, @SENDERCORRBR, @SENDERCORRST, @RECRCORRID, @RECRCORRNAME, @RECRCORRB"& _ 
                "R, @RECRCORRSWIFT, @ACWITHINSTID, @ACWITHINSTNA, @ACWITHINSTBR, @ACWITHINSTST, @"& _ 
                "BENEFACNO, @BENEFCUSTBR, @BENEFCUSTID, @BENEFCUSTNAME, @BENEFCUSTADR1, @BENEFCUS"& _ 
                "TADR2, @DETOFCHARGE, @SETOREINFO, @CURRENCYCODE, @TRANSACTIONDATE, @VALUEDATE, @"& _ 
                "Deal_Amount, @EXCHANGE_RATE, @Deal_Amount_Euro, @HANDLINGFEE, @ORDERCUSTBR, @ORD"& _ 
                "ERCUSTID, @ORDERCUSTNAME, @ORDERCUSTADD1, @ORDERCUSTADD2, @HOLDFUNC, @ORDERCUSTA"& _ 
                "DD3, @SWIFTINREF, @BEMERKUNGEN, @PAYMENTDETAILS)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_Account", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client Account", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OURTRANREFNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OURTRANREFNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INWARDOUTWARD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INWARDOUTWARD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@METHOD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METHOD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERBRANCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORBKID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORBKID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTNA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTNA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFACNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFACNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTADR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTADR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETOFCHARGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETOFCHARGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SETOREINFO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SETOREINFO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CURRENCYCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURRENCYCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANSACTIONDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALUEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXCHANGE_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_Amount_Euro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount Euro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HANDLINGFEE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HANDLINGFEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HOLDFUNC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOLDFUNC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SWIFTINREF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SWIFTINREF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BEMERKUNGEN", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BEMERKUNGEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAYMENTDETAILS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENTDETAILS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ODAS REMMITANCES] SET [EM00KEY0] = @EM00KEY0, [Client Account] = @Client_"& _ 
                "Account, [EM00KEY1] = @EM00KEY1, [EM00KEY2] = @EM00KEY2, [OURTRANREFNO] = @OURTR"& _ 
                "ANREFNO, [INWARDOUTWARD] = @INWARDOUTWARD, [METHOD] = @METHOD, [RECEIVERBRANCH] "& _ 
                "= @RECEIVERBRANCH, [RECEIVERID] = @RECEIVERID, [RECEIVERNAME] = @RECEIVERNAME, ["& _ 
                "RECEIVERSWIFT] = @RECEIVERSWIFT, [SENDERCORBKID] = @SENDERCORBKID, [SENDERCORRNA"& _ 
                "ME] = @SENDERCORRNAME, [SENDERCORRBR] = @SENDERCORRBR, [SENDERCORRST] = @SENDERC"& _ 
                "ORRST, [RECRCORRID] = @RECRCORRID, [RECRCORRNAME] = @RECRCORRNAME, [RECRCORRBR] "& _ 
                "= @RECRCORRBR, [RECRCORRSWIFT] = @RECRCORRSWIFT, [ACWITHINSTID] = @ACWITHINSTID,"& _ 
                " [ACWITHINSTNA] = @ACWITHINSTNA, [ACWITHINSTBR] = @ACWITHINSTBR, [ACWITHINSTST] "& _ 
                "= @ACWITHINSTST, [BENEFACNO] = @BENEFACNO, [BENEFCUSTBR] = @BENEFCUSTBR, [BENEFC"& _ 
                "USTID] = @BENEFCUSTID, [BENEFCUSTNAME] = @BENEFCUSTNAME, [BENEFCUSTADR1] = @BENE"& _ 
                "FCUSTADR1, [BENEFCUSTADR2] = @BENEFCUSTADR2, [DETOFCHARGE] = @DETOFCHARGE, [SETO"& _ 
                "REINFO] = @SETOREINFO, [CURRENCYCODE] = @CURRENCYCODE, [TRANSACTIONDATE] = @TRAN"& _ 
                "SACTIONDATE, [VALUEDATE] = @VALUEDATE, [Deal Amount] = @Deal_Amount, [EXCHANGE_R"& _ 
                "ATE] = @EXCHANGE_RATE, [Deal Amount Euro] = @Deal_Amount_Euro, [HANDLINGFEE] = @"& _ 
                "HANDLINGFEE, [ORDERCUSTBR] = @ORDERCUSTBR, [ORDERCUSTID] = @ORDERCUSTID, [ORDERC"& _ 
                "USTNAME] = @ORDERCUSTNAME, [ORDERCUSTADD1] = @ORDERCUSTADD1, [ORDERCUSTADD2] = @"& _ 
                "ORDERCUSTADD2, [HOLDFUNC] = @HOLDFUNC, [ORDERCUSTADD3] = @ORDERCUSTADD3, [SWIFTI"& _ 
                "NREF] = @SWIFTINREF, [BEMERKUNGEN] = @BEMERKUNGEN, [PAYMENTDETAILS] = @PAYMENTDE"& _ 
                "TAILS WHERE (([ID] = @Original_ID) AND ((@IsNull_EM00KEY0 = 1 AND [EM00KEY0] IS "& _ 
                "NULL) OR ([EM00KEY0] = @Original_EM00KEY0)) AND ((@IsNull_Client_Account = 1 AND"& _ 
                " [Client Account] IS NULL) OR ([Client Account] = @Original_Client_Account)) AND"& _ 
                " ((@IsNull_EM00KEY1 = 1 AND [EM00KEY1] IS NULL) OR ([EM00KEY1] = @Original_EM00K"& _ 
                "EY1)) AND ((@IsNull_EM00KEY2 = 1 AND [EM00KEY2] IS NULL) OR ([EM00KEY2] = @Origi"& _ 
                "nal_EM00KEY2)) AND ((@IsNull_OURTRANREFNO = 1 AND [OURTRANREFNO] IS NULL) OR ([O"& _ 
                "URTRANREFNO] = @Original_OURTRANREFNO)) AND ((@IsNull_INWARDOUTWARD = 1 AND [INW"& _ 
                "ARDOUTWARD] IS NULL) OR ([INWARDOUTWARD] = @Original_INWARDOUTWARD)) AND ((@IsNu"& _ 
                "ll_METHOD = 1 AND [METHOD] IS NULL) OR ([METHOD] = @Original_METHOD)) AND ((@IsN"& _ 
                "ull_RECEIVERBRANCH = 1 AND [RECEIVERBRANCH] IS NULL) OR ([RECEIVERBRANCH] = @Ori"& _ 
                "ginal_RECEIVERBRANCH)) AND ((@IsNull_RECEIVERID = 1 AND [RECEIVERID] IS NULL) OR"& _ 
                " ([RECEIVERID] = @Original_RECEIVERID)) AND ((@IsNull_RECEIVERNAME = 1 AND [RECE"& _ 
                "IVERNAME] IS NULL) OR ([RECEIVERNAME] = @Original_RECEIVERNAME)) AND ((@IsNull_R"& _ 
                "ECEIVERSWIFT = 1 AND [RECEIVERSWIFT] IS NULL) OR ([RECEIVERSWIFT] = @Original_RE"& _ 
                "CEIVERSWIFT)) AND ((@IsNull_SENDERCORBKID = 1 AND [SENDERCORBKID] IS NULL) OR (["& _ 
                "SENDERCORBKID] = @Original_SENDERCORBKID)) AND ((@IsNull_SENDERCORRNAME = 1 AND "& _ 
                "[SENDERCORRNAME] IS NULL) OR ([SENDERCORRNAME] = @Original_SENDERCORRNAME)) AND "& _ 
                "((@IsNull_SENDERCORRBR = 1 AND [SENDERCORRBR] IS NULL) OR ([SENDERCORRBR] = @Ori"& _ 
                "ginal_SENDERCORRBR)) AND ((@IsNull_SENDERCORRST = 1 AND [SENDERCORRST] IS NULL) "& _ 
                "OR ([SENDERCORRST] = @Original_SENDERCORRST)) AND ((@IsNull_RECRCORRID = 1 AND ["& _ 
                "RECRCORRID] IS NULL) OR ([RECRCORRID] = @Original_RECRCORRID)) AND ((@IsNull_REC"& _ 
                "RCORRNAME = 1 AND [RECRCORRNAME] IS NULL) OR ([RECRCORRNAME] = @Original_RECRCOR"& _ 
                "RNAME)) AND ((@IsNull_RECRCORRBR = 1 AND [RECRCORRBR] IS NULL) OR ([RECRCORRBR] "& _ 
                "= @Original_RECRCORRBR)) AND ((@IsNull_RECRCORRSWIFT = 1 AND [RECRCORRSWIFT] IS "& _ 
                "NULL) OR ([RECRCORRSWIFT] = @Original_RECRCORRSWIFT)) AND ((@IsNull_ACWITHINSTID"& _ 
                " = 1 AND [ACWITHINSTID] IS NULL) OR ([ACWITHINSTID] = @Original_ACWITHINSTID)) A"& _ 
                "ND ((@IsNull_ACWITHINSTNA = 1 AND [ACWITHINSTNA] IS NULL) OR ([ACWITHINSTNA] = @"& _ 
                "Original_ACWITHINSTNA)) AND ((@IsNull_ACWITHINSTBR = 1 AND [ACWITHINSTBR] IS NUL"& _ 
                "L) OR ([ACWITHINSTBR] = @Original_ACWITHINSTBR)) AND ((@IsNull_ACWITHINSTST = 1 "& _ 
                "AND [ACWITHINSTST] IS NULL) OR ([ACWITHINSTST] = @Original_ACWITHINSTST)) AND (("& _ 
                "@IsNull_BENEFACNO = 1 AND [BENEFACNO] IS NULL) OR ([BENEFACNO] = @Original_BENEF"& _ 
                "ACNO)) AND ((@IsNull_BENEFCUSTBR = 1 AND [BENEFCUSTBR] IS NULL) OR ([BENEFCUSTBR"& _ 
                "] = @Original_BENEFCUSTBR)) AND ((@IsNull_BENEFCUSTID = 1 AND [BENEFCUSTID] IS N"& _ 
                "ULL) OR ([BENEFCUSTID] = @Original_BENEFCUSTID)) AND ((@IsNull_BENEFCUSTNAME = 1"& _ 
                " AND [BENEFCUSTNAME] IS NULL) OR ([BENEFCUSTNAME] = @Original_BENEFCUSTNAME)) AN"& _ 
                "D ((@IsNull_BENEFCUSTADR1 = 1 AND [BENEFCUSTADR1] IS NULL) OR ([BENEFCUSTADR1] ="& _ 
                " @Original_BENEFCUSTADR1)) AND ((@IsNull_BENEFCUSTADR2 = 1 AND [BENEFCUSTADR2] I"& _ 
                "S NULL) OR ([BENEFCUSTADR2] = @Original_BENEFCUSTADR2)) AND ((@IsNull_DETOFCHARG"& _ 
                "E = 1 AND [DETOFCHARGE] IS NULL) OR ([DETOFCHARGE] = @Original_DETOFCHARGE)) AND"& _ 
                " ((@IsNull_SETOREINFO = 1 AND [SETOREINFO] IS NULL) OR ([SETOREINFO] = @Original"& _ 
                "_SETOREINFO)) AND ((@IsNull_CURRENCYCODE = 1 AND [CURRENCYCODE] IS NULL) OR ([CU"& _ 
                "RRENCYCODE] = @Original_CURRENCYCODE)) AND ((@IsNull_TRANSACTIONDATE = 1 AND [TR"& _ 
                "ANSACTIONDATE] IS NULL) OR ([TRANSACTIONDATE] = @Original_TRANSACTIONDATE)) AND "& _ 
                "((@IsNull_VALUEDATE = 1 AND [VALUEDATE] IS NULL) OR ([VALUEDATE] = @Original_VAL"& _ 
                "UEDATE)) AND ((@IsNull_Deal_Amount = 1 AND [Deal Amount] IS NULL) OR ([Deal Amou"& _ 
                "nt] = @Original_Deal_Amount)) AND ((@IsNull_EXCHANGE_RATE = 1 AND [EXCHANGE_RATE"& _ 
                "] IS NULL) OR ([EXCHANGE_RATE] = @Original_EXCHANGE_RATE)) AND ((@IsNull_Deal_Am"& _ 
                "ount_Euro = 1 AND [Deal Amount Euro] IS NULL) OR ([Deal Amount Euro] = @Original"& _ 
                "_Deal_Amount_Euro)) AND ((@IsNull_HANDLINGFEE = 1 AND [HANDLINGFEE] IS NULL) OR "& _ 
                "([HANDLINGFEE] = @Original_HANDLINGFEE)) AND ((@IsNull_ORDERCUSTBR = 1 AND [ORDE"& _ 
                "RCUSTBR] IS NULL) OR ([ORDERCUSTBR] = @Original_ORDERCUSTBR)) AND ((@IsNull_ORDE"& _ 
                "RCUSTID = 1 AND [ORDERCUSTID] IS NULL) OR ([ORDERCUSTID] = @Original_ORDERCUSTID"& _ 
                ")) AND ((@IsNull_ORDERCUSTNAME = 1 AND [ORDERCUSTNAME] IS NULL) OR ([ORDERCUSTNA"& _ 
                "ME] = @Original_ORDERCUSTNAME)) AND ((@IsNull_ORDERCUSTADD1 = 1 AND [ORDERCUSTAD"& _ 
                "D1] IS NULL) OR ([ORDERCUSTADD1] = @Original_ORDERCUSTADD1)) AND ((@IsNull_ORDER"& _ 
                "CUSTADD2 = 1 AND [ORDERCUSTADD2] IS NULL) OR ([ORDERCUSTADD2] = @Original_ORDERC"& _ 
                "USTADD2)) AND ((@IsNull_HOLDFUNC = 1 AND [HOLDFUNC] IS NULL) OR ([HOLDFUNC] = @O"& _ 
                "riginal_HOLDFUNC)) AND ((@IsNull_ORDERCUSTADD3 = 1 AND [ORDERCUSTADD3] IS NULL) "& _ 
                "OR ([ORDERCUSTADD3] = @Original_ORDERCUSTADD3)) AND ((@IsNull_SWIFTINREF = 1 AND"& _ 
                " [SWIFTINREF] IS NULL) OR ([SWIFTINREF] = @Original_SWIFTINREF)) AND ((@IsNull_P"& _ 
                "AYMENTDETAILS = 1 AND [PAYMENTDETAILS] IS NULL) OR ([PAYMENTDETAILS] = @Original"& _ 
                "_PAYMENTDETAILS)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_Account", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client Account", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM00KEY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OURTRANREFNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OURTRANREFNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INWARDOUTWARD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INWARDOUTWARD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@METHOD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METHOD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERBRANCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECEIVERSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORBKID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORBKID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SENDERCORRST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RECRCORRSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTNA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTNA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACWITHINSTST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFACNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFACNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTADR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BENEFCUSTADR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DETOFCHARGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETOFCHARGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SETOREINFO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SETOREINFO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CURRENCYCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURRENCYCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANSACTIONDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALUEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXCHANGE_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_Amount_Euro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount Euro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HANDLINGFEE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HANDLINGFEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTBR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HOLDFUNC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOLDFUNC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERCUSTADD3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SWIFTINREF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SWIFTINREF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BEMERKUNGEN", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BEMERKUNGEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAYMENTDETAILS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENTDETAILS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EM00KEY0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY0", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EM00KEY0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY0", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_Account", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client Account", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_Account", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client Account", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EM00KEY1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EM00KEY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EM00KEY2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EM00KEY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EM00KEY2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OURTRANREFNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OURTRANREFNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OURTRANREFNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OURTRANREFNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INWARDOUTWARD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INWARDOUTWARD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INWARDOUTWARD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INWARDOUTWARD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_METHOD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METHOD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_METHOD", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METHOD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERBRANCH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERBRANCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERBRANCH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECEIVERSWIFT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECEIVERSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECEIVERSWIFT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORBKID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORBKID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORBKID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORBKID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORRNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORRBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SENDERCORRST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SENDERCORRST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SENDERCORRST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RECRCORRSWIFT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RECRCORRSWIFT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RECRCORRSWIFT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTNA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTNA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTNA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACWITHINSTST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACWITHINSTST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACWITHINSTST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFACNO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFACNO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFACNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFACNO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTADR1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTADR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BENEFCUSTADR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BENEFCUSTADR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BENEFCUSTADR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DETOFCHARGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETOFCHARGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DETOFCHARGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DETOFCHARGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SETOREINFO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SETOREINFO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SETOREINFO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SETOREINFO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CURRENCYCODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURRENCYCODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CURRENCYCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURRENCYCODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRANSACTIONDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRANSACTIONDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSACTIONDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALUEDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUEDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALUEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUEDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Deal_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deal_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXCHANGE_RATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXCHANGE_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXCHANGE_RATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Deal_Amount_Euro", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount Euro", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deal_Amount_Euro", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal Amount Euro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HANDLINGFEE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HANDLINGFEE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HANDLINGFEE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HANDLINGFEE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTBR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTBR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTBR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTBR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTNAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTNAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTNAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTADD1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTADD1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTADD2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTADD2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HOLDFUNC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOLDFUNC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HOLDFUNC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOLDFUNC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDERCUSTADD3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDERCUSTADD3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERCUSTADD3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SWIFTINREF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SWIFTINREF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SWIFTINREF", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SWIFTINREF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAYMENTDETAILS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENTDETAILS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAYMENTDETAILS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAYMENTDETAILS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, EM00KEY0, [Client Account], EM00KEY1, EM00KEY2, OURTRANREFNO, I"& _ 
                "NWARDOUTWARD, METHOD, RECEIVERBRANCH, RECEIVERID, RECEIVERNAME, RECEIVERSWIFT, S"& _ 
                "ENDERCORBKID, SENDERCORRNAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SENDERCORRBR, SENDERCOR"& _ 
                "RST, RECRCORRID, RECRCORRNAME, RECRCORRBR, RECRCORRSWIFT, ACWITHINSTID, ACWITHIN"& _ 
                "STNA, ACWITHINSTBR, ACWITHINSTST, BENEFACNO, BENEFCUSTBR, BENEFCUSTID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  BENEFCUSTNAME, BENEFCUSTADR1, BENEFCUSTADR2, DETOFCHARGE, SETO"& _ 
                "REINFO, CURRENCYCODE, TRANSACTIONDATE, VALUEDATE, [Deal Amount], EXCHANGE_RATE, "& _ 
                "[Deal Amount Euro], HANDLINGFEE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ORDERCUSTBR, ORDERCU"& _ 
                "STID, ORDERCUSTNAME, ORDERCUSTADD1, ORDERCUSTADD2, HOLDFUNC, ORDERCUSTADD3, SWIF"& _ 
                "TINREF, BEMERKUNGEN, PAYMENTDETAILS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            [ODAS REMMITANCES]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.ODAS_REM_FILL"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 2147483647, Global.System.Data.ParameterDirection.ReturnValue, 10, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FROMDATE", Global.System.Data.SqlDbType.DateTime, 2147483647, Global.System.Data.ParameterDirection.Input, 255, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TILLDATE", Global.System.Data.SqlDbType.DateTime, 2147483647, Global.System.Data.ParameterDirection.Input, 255, 255, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ClearingDataSet.ODAS_REMMITANCESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ClearingDataSet.ODAS_REMMITANCESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ClearingDataSet.ODAS_REMMITANCESDataTable = New ClearingDataSet.ODAS_REMMITANCESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByODAS_REM_FILL(ByVal dataTable As ClearingDataSet.ODAS_REMMITANCESDataTable, ByVal FROMDATE As Global.System.Nullable(Of Date), ByVal TILLDATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FROMDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FROMDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TILLDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TILLDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByODAS_REM_FILL(ByVal FROMDATE As Global.System.Nullable(Of Date), ByVal TILLDATE As Global.System.Nullable(Of Date)) As ClearingDataSet.ODAS_REMMITANCESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (FROMDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FROMDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TILLDATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TILLDATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ClearingDataSet.ODAS_REMMITANCESDataTable = New ClearingDataSet.ODAS_REMMITANCESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ClearingDataSet.ODAS_REMMITANCESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ClearingDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "ODAS REMMITANCES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_EM00KEY0 As String,  _
                    ByVal Original_Client_Account As String,  _
                    ByVal Original_EM00KEY1 As String,  _
                    ByVal Original_EM00KEY2 As String,  _
                    ByVal Original_OURTRANREFNO As String,  _
                    ByVal Original_INWARDOUTWARD As String,  _
                    ByVal Original_METHOD As String,  _
                    ByVal Original_RECEIVERBRANCH As String,  _
                    ByVal Original_RECEIVERID As String,  _
                    ByVal Original_RECEIVERNAME As String,  _
                    ByVal Original_RECEIVERSWIFT As String,  _
                    ByVal Original_SENDERCORBKID As String,  _
                    ByVal Original_SENDERCORRNAME As String,  _
                    ByVal Original_SENDERCORRBR As String,  _
                    ByVal Original_SENDERCORRST As String,  _
                    ByVal Original_RECRCORRID As String,  _
                    ByVal Original_RECRCORRNAME As String,  _
                    ByVal Original_RECRCORRBR As String,  _
                    ByVal Original_RECRCORRSWIFT As String,  _
                    ByVal Original_ACWITHINSTID As String,  _
                    ByVal Original_ACWITHINSTNA As String,  _
                    ByVal Original_ACWITHINSTBR As String,  _
                    ByVal Original_ACWITHINSTST As String,  _
                    ByVal Original_BENEFACNO As String,  _
                    ByVal Original_BENEFCUSTBR As String,  _
                    ByVal Original_BENEFCUSTID As String,  _
                    ByVal Original_BENEFCUSTNAME As String,  _
                    ByVal Original_BENEFCUSTADR1 As String,  _
                    ByVal Original_BENEFCUSTADR2 As String,  _
                    ByVal Original_DETOFCHARGE As String,  _
                    ByVal Original_SETOREINFO As String,  _
                    ByVal Original_CURRENCYCODE As String,  _
                    ByVal Original_TRANSACTIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_VALUEDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_Deal_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_EXCHANGE_RATE As Global.System.Nullable(Of Double),  _
                    ByVal Original_Deal_Amount_Euro As Global.System.Nullable(Of Double),  _
                    ByVal Original_HANDLINGFEE As Global.System.Nullable(Of Double),  _
                    ByVal Original_ORDERCUSTBR As String,  _
                    ByVal Original_ORDERCUSTID As String,  _
                    ByVal Original_ORDERCUSTNAME As String,  _
                    ByVal Original_ORDERCUSTADD1 As String,  _
                    ByVal Original_ORDERCUSTADD2 As String,  _
                    ByVal Original_HOLDFUNC As String,  _
                    ByVal Original_ORDERCUSTADD3 As String,  _
                    ByVal Original_SWIFTINREF As String,  _
                    ByVal Original_PAYMENTDETAILS As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_EM00KEY0 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_EM00KEY0,String)
            End If
            If (Original_Client_Account Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Client_Account,String)
            End If
            If (Original_EM00KEY1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_EM00KEY1,String)
            End If
            If (Original_EM00KEY2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_EM00KEY2,String)
            End If
            If (Original_OURTRANREFNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_OURTRANREFNO,String)
            End If
            If (Original_INWARDOUTWARD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_INWARDOUTWARD,String)
            End If
            If (Original_METHOD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_METHOD,String)
            End If
            If (Original_RECEIVERBRANCH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_RECEIVERBRANCH,String)
            End If
            If (Original_RECEIVERID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_RECEIVERID,String)
            End If
            If (Original_RECEIVERNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_RECEIVERNAME,String)
            End If
            If (Original_RECEIVERSWIFT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_RECEIVERSWIFT,String)
            End If
            If (Original_SENDERCORBKID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_SENDERCORBKID,String)
            End If
            If (Original_SENDERCORRNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_SENDERCORRNAME,String)
            End If
            If (Original_SENDERCORRBR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_SENDERCORRBR,String)
            End If
            If (Original_SENDERCORRST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_SENDERCORRST,String)
            End If
            If (Original_RECRCORRID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_RECRCORRID,String)
            End If
            If (Original_RECRCORRNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_RECRCORRNAME,String)
            End If
            If (Original_RECRCORRBR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_RECRCORRBR,String)
            End If
            If (Original_RECRCORRSWIFT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_RECRCORRSWIFT,String)
            End If
            If (Original_ACWITHINSTID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_ACWITHINSTID,String)
            End If
            If (Original_ACWITHINSTNA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_ACWITHINSTNA,String)
            End If
            If (Original_ACWITHINSTBR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_ACWITHINSTBR,String)
            End If
            If (Original_ACWITHINSTST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ACWITHINSTST,String)
            End If
            If (Original_BENEFACNO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_BENEFACNO,String)
            End If
            If (Original_BENEFCUSTBR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_BENEFCUSTBR,String)
            End If
            If (Original_BENEFCUSTID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_BENEFCUSTID,String)
            End If
            If (Original_BENEFCUSTNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_BENEFCUSTNAME,String)
            End If
            If (Original_BENEFCUSTADR1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_BENEFCUSTADR1,String)
            End If
            If (Original_BENEFCUSTADR2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_BENEFCUSTADR2,String)
            End If
            If (Original_DETOFCHARGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_DETOFCHARGE,String)
            End If
            If (Original_SETOREINFO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_SETOREINFO,String)
            End If
            If (Original_CURRENCYCODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_CURRENCYCODE,String)
            End If
            If (Original_TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_VALUEDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_VALUEDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_Deal_Amount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_Deal_Amount.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_EXCHANGE_RATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_EXCHANGE_RATE.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_Deal_Amount_Euro.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_Deal_Amount_Euro.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_HANDLINGFEE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_HANDLINGFEE.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_ORDERCUSTBR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_ORDERCUSTBR,String)
            End If
            If (Original_ORDERCUSTID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_ORDERCUSTID,String)
            End If
            If (Original_ORDERCUSTNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_ORDERCUSTNAME,String)
            End If
            If (Original_ORDERCUSTADD1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_ORDERCUSTADD1,String)
            End If
            If (Original_ORDERCUSTADD2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_ORDERCUSTADD2,String)
            End If
            If (Original_HOLDFUNC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_HOLDFUNC,String)
            End If
            If (Original_ORDERCUSTADD3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_ORDERCUSTADD3,String)
            End If
            If (Original_SWIFTINREF Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_SWIFTINREF,String)
            End If
            If (Original_PAYMENTDETAILS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_PAYMENTDETAILS,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal EM00KEY0 As String,  _
                    ByVal Client_Account As String,  _
                    ByVal EM00KEY1 As String,  _
                    ByVal EM00KEY2 As String,  _
                    ByVal OURTRANREFNO As String,  _
                    ByVal INWARDOUTWARD As String,  _
                    ByVal METHOD As String,  _
                    ByVal RECEIVERBRANCH As String,  _
                    ByVal RECEIVERID As String,  _
                    ByVal RECEIVERNAME As String,  _
                    ByVal RECEIVERSWIFT As String,  _
                    ByVal SENDERCORBKID As String,  _
                    ByVal SENDERCORRNAME As String,  _
                    ByVal SENDERCORRBR As String,  _
                    ByVal SENDERCORRST As String,  _
                    ByVal RECRCORRID As String,  _
                    ByVal RECRCORRNAME As String,  _
                    ByVal RECRCORRBR As String,  _
                    ByVal RECRCORRSWIFT As String,  _
                    ByVal ACWITHINSTID As String,  _
                    ByVal ACWITHINSTNA As String,  _
                    ByVal ACWITHINSTBR As String,  _
                    ByVal ACWITHINSTST As String,  _
                    ByVal BENEFACNO As String,  _
                    ByVal BENEFCUSTBR As String,  _
                    ByVal BENEFCUSTID As String,  _
                    ByVal BENEFCUSTNAME As String,  _
                    ByVal BENEFCUSTADR1 As String,  _
                    ByVal BENEFCUSTADR2 As String,  _
                    ByVal DETOFCHARGE As String,  _
                    ByVal SETOREINFO As String,  _
                    ByVal CURRENCYCODE As String,  _
                    ByVal TRANSACTIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal VALUEDATE As Global.System.Nullable(Of Date),  _
                    ByVal Deal_Amount As Global.System.Nullable(Of Double),  _
                    ByVal EXCHANGE_RATE As Global.System.Nullable(Of Double),  _
                    ByVal Deal_Amount_Euro As Global.System.Nullable(Of Double),  _
                    ByVal HANDLINGFEE As Global.System.Nullable(Of Double),  _
                    ByVal ORDERCUSTBR As String,  _
                    ByVal ORDERCUSTID As String,  _
                    ByVal ORDERCUSTNAME As String,  _
                    ByVal ORDERCUSTADD1 As String,  _
                    ByVal ORDERCUSTADD2 As String,  _
                    ByVal HOLDFUNC As String,  _
                    ByVal ORDERCUSTADD3 As String,  _
                    ByVal SWIFTINREF As String,  _
                    ByVal BEMERKUNGEN As String,  _
                    ByVal PAYMENTDETAILS As String) As Integer
            If (EM00KEY0 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(EM00KEY0,String)
            End If
            If (Client_Account Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Client_Account,String)
            End If
            If (EM00KEY1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EM00KEY1,String)
            End If
            If (EM00KEY2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EM00KEY2,String)
            End If
            If (OURTRANREFNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OURTRANREFNO,String)
            End If
            If (INWARDOUTWARD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(INWARDOUTWARD,String)
            End If
            If (METHOD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(METHOD,String)
            End If
            If (RECEIVERBRANCH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(RECEIVERBRANCH,String)
            End If
            If (RECEIVERID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(RECEIVERID,String)
            End If
            If (RECEIVERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(RECEIVERNAME,String)
            End If
            If (RECEIVERSWIFT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RECEIVERSWIFT,String)
            End If
            If (SENDERCORBKID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SENDERCORBKID,String)
            End If
            If (SENDERCORRNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SENDERCORRNAME,String)
            End If
            If (SENDERCORRBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SENDERCORRBR,String)
            End If
            If (SENDERCORRST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SENDERCORRST,String)
            End If
            If (RECRCORRID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RECRCORRID,String)
            End If
            If (RECRCORRNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(RECRCORRNAME,String)
            End If
            If (RECRCORRBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RECRCORRBR,String)
            End If
            If (RECRCORRSWIFT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RECRCORRSWIFT,String)
            End If
            If (ACWITHINSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ACWITHINSTID,String)
            End If
            If (ACWITHINSTNA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ACWITHINSTNA,String)
            End If
            If (ACWITHINSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ACWITHINSTBR,String)
            End If
            If (ACWITHINSTST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ACWITHINSTST,String)
            End If
            If (BENEFACNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(BENEFACNO,String)
            End If
            If (BENEFCUSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(BENEFCUSTBR,String)
            End If
            If (BENEFCUSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(BENEFCUSTID,String)
            End If
            If (BENEFCUSTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(BENEFCUSTNAME,String)
            End If
            If (BENEFCUSTADR1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(BENEFCUSTADR1,String)
            End If
            If (BENEFCUSTADR2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BENEFCUSTADR2,String)
            End If
            If (DETOFCHARGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DETOFCHARGE,String)
            End If
            If (SETOREINFO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(SETOREINFO,String)
            End If
            If (CURRENCYCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CURRENCYCODE,String)
            End If
            If (TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (VALUEDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(VALUEDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Deal_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (EXCHANGE_RATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(EXCHANGE_RATE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount_Euro.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Deal_Amount_Euro.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HANDLINGFEE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(HANDLINGFEE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (ORDERCUSTBR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ORDERCUSTBR,String)
            End If
            If (ORDERCUSTID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ORDERCUSTID,String)
            End If
            If (ORDERCUSTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ORDERCUSTNAME,String)
            End If
            If (ORDERCUSTADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ORDERCUSTADD1,String)
            End If
            If (ORDERCUSTADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ORDERCUSTADD2,String)
            End If
            If (HOLDFUNC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(HOLDFUNC,String)
            End If
            If (ORDERCUSTADD3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(ORDERCUSTADD3,String)
            End If
            If (SWIFTINREF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(SWIFTINREF,String)
            End If
            If (BEMERKUNGEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(BEMERKUNGEN,String)
            End If
            If (PAYMENTDETAILS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(PAYMENTDETAILS,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal EM00KEY0 As String,  _
                    ByVal Client_Account As String,  _
                    ByVal EM00KEY1 As String,  _
                    ByVal EM00KEY2 As String,  _
                    ByVal OURTRANREFNO As String,  _
                    ByVal INWARDOUTWARD As String,  _
                    ByVal METHOD As String,  _
                    ByVal RECEIVERBRANCH As String,  _
                    ByVal RECEIVERID As String,  _
                    ByVal RECEIVERNAME As String,  _
                    ByVal RECEIVERSWIFT As String,  _
                    ByVal SENDERCORBKID As String,  _
                    ByVal SENDERCORRNAME As String,  _
                    ByVal SENDERCORRBR As String,  _
                    ByVal SENDERCORRST As String,  _
                    ByVal RECRCORRID As String,  _
                    ByVal RECRCORRNAME As String,  _
                    ByVal RECRCORRBR As String,  _
                    ByVal RECRCORRSWIFT As String,  _
                    ByVal ACWITHINSTID As String,  _
                    ByVal ACWITHINSTNA As String,  _
                    ByVal ACWITHINSTBR As String,  _
                    ByVal ACWITHINSTST As String,  _
                    ByVal BENEFACNO As String,  _
                    ByVal BENEFCUSTBR As String,  _
                    ByVal BENEFCUSTID As String,  _
                    ByVal BENEFCUSTNAME As String,  _
                    ByVal BENEFCUSTADR1 As String,  _
                    ByVal BENEFCUSTADR2 As String,  _
                    ByVal DETOFCHARGE As String,  _
                    ByVal SETOREINFO As String,  _
                    ByVal CURRENCYCODE As String,  _
                    ByVal TRANSACTIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal VALUEDATE As Global.System.Nullable(Of Date),  _
                    ByVal Deal_Amount As Global.System.Nullable(Of Double),  _
                    ByVal EXCHANGE_RATE As Global.System.Nullable(Of Double),  _
                    ByVal Deal_Amount_Euro As Global.System.Nullable(Of Double),  _
                    ByVal HANDLINGFEE As Global.System.Nullable(Of Double),  _
                    ByVal ORDERCUSTBR As String,  _
                    ByVal ORDERCUSTID As String,  _
                    ByVal ORDERCUSTNAME As String,  _
                    ByVal ORDERCUSTADD1 As String,  _
                    ByVal ORDERCUSTADD2 As String,  _
                    ByVal HOLDFUNC As String,  _
                    ByVal ORDERCUSTADD3 As String,  _
                    ByVal SWIFTINREF As String,  _
                    ByVal BEMERKUNGEN As String,  _
                    ByVal PAYMENTDETAILS As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_EM00KEY0 As String,  _
                    ByVal Original_Client_Account As String,  _
                    ByVal Original_EM00KEY1 As String,  _
                    ByVal Original_EM00KEY2 As String,  _
                    ByVal Original_OURTRANREFNO As String,  _
                    ByVal Original_INWARDOUTWARD As String,  _
                    ByVal Original_METHOD As String,  _
                    ByVal Original_RECEIVERBRANCH As String,  _
                    ByVal Original_RECEIVERID As String,  _
                    ByVal Original_RECEIVERNAME As String,  _
                    ByVal Original_RECEIVERSWIFT As String,  _
                    ByVal Original_SENDERCORBKID As String,  _
                    ByVal Original_SENDERCORRNAME As String,  _
                    ByVal Original_SENDERCORRBR As String,  _
                    ByVal Original_SENDERCORRST As String,  _
                    ByVal Original_RECRCORRID As String,  _
                    ByVal Original_RECRCORRNAME As String,  _
                    ByVal Original_RECRCORRBR As String,  _
                    ByVal Original_RECRCORRSWIFT As String,  _
                    ByVal Original_ACWITHINSTID As String,  _
                    ByVal Original_ACWITHINSTNA As String,  _
                    ByVal Original_ACWITHINSTBR As String,  _
                    ByVal Original_ACWITHINSTST As String,  _
                    ByVal Original_BENEFACNO As String,  _
                    ByVal Original_BENEFCUSTBR As String,  _
                    ByVal Original_BENEFCUSTID As String,  _
                    ByVal Original_BENEFCUSTNAME As String,  _
                    ByVal Original_BENEFCUSTADR1 As String,  _
                    ByVal Original_BENEFCUSTADR2 As String,  _
                    ByVal Original_DETOFCHARGE As String,  _
                    ByVal Original_SETOREINFO As String,  _
                    ByVal Original_CURRENCYCODE As String,  _
                    ByVal Original_TRANSACTIONDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_VALUEDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_Deal_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_EXCHANGE_RATE As Global.System.Nullable(Of Double),  _
                    ByVal Original_Deal_Amount_Euro As Global.System.Nullable(Of Double),  _
                    ByVal Original_HANDLINGFEE As Global.System.Nullable(Of Double),  _
                    ByVal Original_ORDERCUSTBR As String,  _
                    ByVal Original_ORDERCUSTID As String,  _
                    ByVal Original_ORDERCUSTNAME As String,  _
                    ByVal Original_ORDERCUSTADD1 As String,  _
                    ByVal Original_ORDERCUSTADD2 As String,  _
                    ByVal Original_HOLDFUNC As String,  _
                    ByVal Original_ORDERCUSTADD3 As String,  _
                    ByVal Original_SWIFTINREF As String,  _
                    ByVal Original_PAYMENTDETAILS As String) As Integer
            If (EM00KEY0 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(EM00KEY0,String)
            End If
            If (Client_Account Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Client_Account,String)
            End If
            If (EM00KEY1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EM00KEY1,String)
            End If
            If (EM00KEY2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(EM00KEY2,String)
            End If
            If (OURTRANREFNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OURTRANREFNO,String)
            End If
            If (INWARDOUTWARD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(INWARDOUTWARD,String)
            End If
            If (METHOD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(METHOD,String)
            End If
            If (RECEIVERBRANCH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(RECEIVERBRANCH,String)
            End If
            If (RECEIVERID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(RECEIVERID,String)
            End If
            If (RECEIVERNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(RECEIVERNAME,String)
            End If
            If (RECEIVERSWIFT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(RECEIVERSWIFT,String)
            End If
            If (SENDERCORBKID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SENDERCORBKID,String)
            End If
            If (SENDERCORRNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SENDERCORRNAME,String)
            End If
            If (SENDERCORRBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SENDERCORRBR,String)
            End If
            If (SENDERCORRST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SENDERCORRST,String)
            End If
            If (RECRCORRID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(RECRCORRID,String)
            End If
            If (RECRCORRNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(RECRCORRNAME,String)
            End If
            If (RECRCORRBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(RECRCORRBR,String)
            End If
            If (RECRCORRSWIFT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(RECRCORRSWIFT,String)
            End If
            If (ACWITHINSTID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ACWITHINSTID,String)
            End If
            If (ACWITHINSTNA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ACWITHINSTNA,String)
            End If
            If (ACWITHINSTBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ACWITHINSTBR,String)
            End If
            If (ACWITHINSTST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ACWITHINSTST,String)
            End If
            If (BENEFACNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(BENEFACNO,String)
            End If
            If (BENEFCUSTBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(BENEFCUSTBR,String)
            End If
            If (BENEFCUSTID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(BENEFCUSTID,String)
            End If
            If (BENEFCUSTNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(BENEFCUSTNAME,String)
            End If
            If (BENEFCUSTADR1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(BENEFCUSTADR1,String)
            End If
            If (BENEFCUSTADR2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(BENEFCUSTADR2,String)
            End If
            If (DETOFCHARGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(DETOFCHARGE,String)
            End If
            If (SETOREINFO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(SETOREINFO,String)
            End If
            If (CURRENCYCODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CURRENCYCODE,String)
            End If
            If (TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (VALUEDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(VALUEDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Deal_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (EXCHANGE_RATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(EXCHANGE_RATE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Deal_Amount_Euro.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Deal_Amount_Euro.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HANDLINGFEE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(HANDLINGFEE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (ORDERCUSTBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(ORDERCUSTBR,String)
            End If
            If (ORDERCUSTID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ORDERCUSTID,String)
            End If
            If (ORDERCUSTNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ORDERCUSTNAME,String)
            End If
            If (ORDERCUSTADD1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(ORDERCUSTADD1,String)
            End If
            If (ORDERCUSTADD2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(ORDERCUSTADD2,String)
            End If
            If (HOLDFUNC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(HOLDFUNC,String)
            End If
            If (ORDERCUSTADD3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(ORDERCUSTADD3,String)
            End If
            If (SWIFTINREF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(SWIFTINREF,String)
            End If
            If (BEMERKUNGEN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(BEMERKUNGEN,String)
            End If
            If (PAYMENTDETAILS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(PAYMENTDETAILS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_ID,Integer)
            If (Original_EM00KEY0 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_EM00KEY0,String)
            End If
            If (Original_Client_Account Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_Client_Account,String)
            End If
            If (Original_EM00KEY1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_EM00KEY1,String)
            End If
            If (Original_EM00KEY2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_EM00KEY2,String)
            End If
            If (Original_OURTRANREFNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_OURTRANREFNO,String)
            End If
            If (Original_INWARDOUTWARD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_INWARDOUTWARD,String)
            End If
            If (Original_METHOD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_METHOD,String)
            End If
            If (Original_RECEIVERBRANCH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_RECEIVERBRANCH,String)
            End If
            If (Original_RECEIVERID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_RECEIVERID,String)
            End If
            If (Original_RECEIVERNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_RECEIVERNAME,String)
            End If
            If (Original_RECEIVERSWIFT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_RECEIVERSWIFT,String)
            End If
            If (Original_SENDERCORBKID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_SENDERCORBKID,String)
            End If
            If (Original_SENDERCORRNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_SENDERCORRNAME,String)
            End If
            If (Original_SENDERCORRBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_SENDERCORRBR,String)
            End If
            If (Original_SENDERCORRST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_SENDERCORRST,String)
            End If
            If (Original_RECRCORRID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_RECRCORRID,String)
            End If
            If (Original_RECRCORRNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_RECRCORRNAME,String)
            End If
            If (Original_RECRCORRBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_RECRCORRBR,String)
            End If
            If (Original_RECRCORRSWIFT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_RECRCORRSWIFT,String)
            End If
            If (Original_ACWITHINSTID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_ACWITHINSTID,String)
            End If
            If (Original_ACWITHINSTNA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_ACWITHINSTNA,String)
            End If
            If (Original_ACWITHINSTBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_ACWITHINSTBR,String)
            End If
            If (Original_ACWITHINSTST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_ACWITHINSTST,String)
            End If
            If (Original_BENEFACNO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_BENEFACNO,String)
            End If
            If (Original_BENEFCUSTBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_BENEFCUSTBR,String)
            End If
            If (Original_BENEFCUSTID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_BENEFCUSTID,String)
            End If
            If (Original_BENEFCUSTNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_BENEFCUSTNAME,String)
            End If
            If (Original_BENEFCUSTADR1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_BENEFCUSTADR1,String)
            End If
            If (Original_BENEFCUSTADR2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_BENEFCUSTADR2,String)
            End If
            If (Original_DETOFCHARGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_DETOFCHARGE,String)
            End If
            If (Original_SETOREINFO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_SETOREINFO,String)
            End If
            If (Original_CURRENCYCODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_CURRENCYCODE,String)
            End If
            If (Original_TRANSACTIONDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_TRANSACTIONDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_VALUEDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_VALUEDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_Deal_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_Deal_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_EXCHANGE_RATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_EXCHANGE_RATE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_Deal_Amount_Euro.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_Deal_Amount_Euro.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_HANDLINGFEE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_HANDLINGFEE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_ORDERCUSTBR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_ORDERCUSTBR,String)
            End If
            If (Original_ORDERCUSTID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_ORDERCUSTID,String)
            End If
            If (Original_ORDERCUSTNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_ORDERCUSTNAME,String)
            End If
            If (Original_ORDERCUSTADD1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_ORDERCUSTADD1,String)
            End If
            If (Original_ORDERCUSTADD2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_ORDERCUSTADD2,String)
            End If
            If (Original_HOLDFUNC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_HOLDFUNC,String)
            End If
            If (Original_ORDERCUSTADD3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_ORDERCUSTADD3,String)
            End If
            If (Original_SWIFTINREF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_SWIFTINREF,String)
            End If
            If (Original_PAYMENTDETAILS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_PAYMENTDETAILS,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ALL_SWIFT_CHARGES_MESSAGESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ALL_SWIFT_CHARGES_MESSAGES"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("SwiftFileName", "SwiftFileName")
            tableMapping.ColumnMappings.Add("Ref20", "Ref20")
            tableMapping.ColumnMappings.Add("Ref21", "Ref21")
            tableMapping.ColumnMappings.Add("CCY", "CCY")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("DetailsOfCharges", "DetailsOfCharges")
            tableMapping.ColumnMappings.Add("MessageType", "MessageType")
            tableMapping.ColumnMappings.Add("MessageTypeName", "MessageTypeName")
            tableMapping.ColumnMappings.Add("SenderBIC", "SenderBIC")
            tableMapping.ColumnMappings.Add("SenderName", "SenderName")
            tableMapping.ColumnMappings.Add("SenderBranch", "SenderBranch")
            tableMapping.ColumnMappings.Add("ReceivedDate", "ReceivedDate")
            tableMapping.ColumnMappings.Add("OSN", "OSN")
            tableMapping.ColumnMappings.Add("OSN_ReceivedDate", "OSN_ReceivedDate")
            tableMapping.ColumnMappings.Add("Swift_Message", "Swift_Message")
            tableMapping.ColumnMappings.Add("Swift_Message_Formated", "Swift_Message_Formated")
            tableMapping.ColumnMappings.Add("MatchedStatus", "MatchedStatus")
            tableMapping.ColumnMappings.Add("ReceiverCorrespondent", "ReceiverCorrespondent")
            tableMapping.ColumnMappings.Add("PayedStatus", "PayedStatus")
            tableMapping.ColumnMappings.Add("PayedReference", "PayedReference")
            tableMapping.ColumnMappings.Add("PayedDate", "PayedDate")
            tableMapping.ColumnMappings.Add("Notes", "Notes")
            tableMapping.ColumnMappings.Add("LastUpdate", "LastUpdate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ALL_SWIFT_CHARGES_MESSAGES] WHERE (([ID] = @Original_ID) AND ((@IsNu"& _ 
                "ll_SwiftFileName = 1 AND [SwiftFileName] IS NULL) OR ([SwiftFileName] = @Origina"& _ 
                "l_SwiftFileName)) AND ((@IsNull_Ref20 = 1 AND [Ref20] IS NULL) OR ([Ref20] = @Or"& _ 
                "iginal_Ref20)) AND ((@IsNull_Ref21 = 1 AND [Ref21] IS NULL) OR ([Ref21] = @Origi"& _ 
                "nal_Ref21)) AND ((@IsNull_CCY = 1 AND [CCY] IS NULL) OR ([CCY] = @Original_CCY))"& _ 
                " AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)"& _ 
                ") AND ((@IsNull_DetailsOfCharges = 1 AND [DetailsOfCharges] IS NULL) OR ([Detail"& _ 
                "sOfCharges] = @Original_DetailsOfCharges)) AND ((@IsNull_MessageType = 1 AND [Me"& _ 
                "ssageType] IS NULL) OR ([MessageType] = @Original_MessageType)) AND ((@IsNull_Me"& _ 
                "ssageTypeName = 1 AND [MessageTypeName] IS NULL) OR ([MessageTypeName] = @Origin"& _ 
                "al_MessageTypeName)) AND ((@IsNull_SenderBIC = 1 AND [SenderBIC] IS NULL) OR ([S"& _ 
                "enderBIC] = @Original_SenderBIC)) AND ((@IsNull_SenderName = 1 AND [SenderName] "& _ 
                "IS NULL) OR ([SenderName] = @Original_SenderName)) AND ((@IsNull_SenderBranch = "& _ 
                "1 AND [SenderBranch] IS NULL) OR ([SenderBranch] = @Original_SenderBranch)) AND "& _ 
                "((@IsNull_ReceivedDate = 1 AND [ReceivedDate] IS NULL) OR ([ReceivedDate] = @Ori"& _ 
                "ginal_ReceivedDate)) AND ((@IsNull_OSN = 1 AND [OSN] IS NULL) OR ([OSN] = @Origi"& _ 
                "nal_OSN)) AND ((@IsNull_OSN_ReceivedDate = 1 AND [OSN_ReceivedDate] IS NULL) OR "& _ 
                "([OSN_ReceivedDate] = @Original_OSN_ReceivedDate)) AND ((@IsNull_MatchedStatus ="& _ 
                " 1 AND [MatchedStatus] IS NULL) OR ([MatchedStatus] = @Original_MatchedStatus)) "& _ 
                "AND ((@IsNull_ReceiverCorrespondent = 1 AND [ReceiverCorrespondent] IS NULL) OR "& _ 
                "([ReceiverCorrespondent] = @Original_ReceiverCorrespondent)) AND ((@IsNull_Payed"& _ 
                "Status = 1 AND [PayedStatus] IS NULL) OR ([PayedStatus] = @Original_PayedStatus)"& _ 
                ") AND ((@IsNull_PayedReference = 1 AND [PayedReference] IS NULL) OR ([PayedRefer"& _ 
                "ence] = @Original_PayedReference)) AND ((@IsNull_PayedDate = 1 AND [PayedDate] I"& _ 
                "S NULL) OR ([PayedDate] = @Original_PayedDate)) AND ((@IsNull_Notes = 1 AND [Not"& _ 
                "es] IS NULL) OR ([Notes] = @Original_Notes)) AND ((@IsNull_LastUpdate = 1 AND [L"& _ 
                "astUpdate] IS NULL) OR ([LastUpdate] = @Original_LastUpdate)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SwiftFileName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwiftFileName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SwiftFileName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwiftFileName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ref20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref20", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ref20", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ref21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref21", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ref21", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref21", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CCY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DetailsOfCharges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageTypeName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageTypeName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageTypeName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageTypeName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OSN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OSN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OSN_ReceivedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN_ReceivedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OSN_ReceivedDate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN_ReceivedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MatchedStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MatchedStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MatchedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MatchedStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverCorrespondent", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverCorrespondent", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverCorrespondent", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverCorrespondent", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayedStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayedReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayedReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Notes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastUpdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastUpdate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ALL_SWIFT_CHARGES_MESSAGES] ([SwiftFileName], [Ref20], [Ref21], [CCY"& _ 
                "], [Amount], [DetailsOfCharges], [MessageType], [MessageTypeName], [SenderBIC], "& _ 
                "[SenderName], [SenderBranch], [ReceivedDate], [OSN], [OSN_ReceivedDate], [Swift_"& _ 
                "Message], [Swift_Message_Formated], [MatchedStatus], [ReceiverCorrespondent], [P"& _ 
                "ayedStatus], [PayedReference], [PayedDate], [Notes], [LastUpdate]) VALUES (@Swif"& _ 
                "tFileName, @Ref20, @Ref21, @CCY, @Amount, @DetailsOfCharges, @MessageType, @Mess"& _ 
                "ageTypeName, @SenderBIC, @SenderName, @SenderBranch, @ReceivedDate, @OSN, @OSN_R"& _ 
                "eceivedDate, @Swift_Message, @Swift_Message_Formated, @MatchedStatus, @ReceiverC"& _ 
                "orrespondent, @PayedStatus, @PayedReference, @PayedDate, @Notes, @LastUpdate);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "SELECT ID, SwiftFileName, Ref20, Ref21, CCY, Amount, DetailsOfCharges, MessageTy"& _ 
                "pe, MessageTypeName, SenderBIC, SenderName, SenderBranch, ReceivedDate, OSN, OSN"& _ 
                "_ReceivedDate, Swift_Message, Swift_Message_Formated, MatchedStatus, ReceiverCor"& _ 
                "respondent, PayedStatus, PayedReference, PayedDate, Notes, LastUpdate FROM ALL_S"& _ 
                "WIFT_CHARGES_MESSAGES WHERE (ID = SCOPE_IDENTITY()) ORDER BY ReceivedDate DESC, "& _ 
                "ID DESC"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwiftFileName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwiftFileName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ref20", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ref21", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref21", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageTypeName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageTypeName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OSN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OSN_ReceivedDate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN_ReceivedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swift_Message", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swift_Message", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swift_Message_Formated", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swift_Message_Formated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MatchedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MatchedStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverCorrespondent", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverCorrespondent", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastUpdate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ALL_SWIFT_CHARGES_MESSAGES] SET [SwiftFileName] = @SwiftFileName, [Ref20]"& _ 
                " = @Ref20, [Ref21] = @Ref21, [CCY] = @CCY, [Amount] = @Amount, [DetailsOfCharges"& _ 
                "] = @DetailsOfCharges, [MessageType] = @MessageType, [MessageTypeName] = @Messag"& _ 
                "eTypeName, [SenderBIC] = @SenderBIC, [SenderName] = @SenderName, [SenderBranch] "& _ 
                "= @SenderBranch, [ReceivedDate] = @ReceivedDate, [OSN] = @OSN, [OSN_ReceivedDate"& _ 
                "] = @OSN_ReceivedDate, [Swift_Message] = @Swift_Message, [Swift_Message_Formated"& _ 
                "] = @Swift_Message_Formated, [MatchedStatus] = @MatchedStatus, [ReceiverCorrespo"& _ 
                "ndent] = @ReceiverCorrespondent, [PayedStatus] = @PayedStatus, [PayedReference] "& _ 
                "= @PayedReference, [PayedDate] = @PayedDate, [Notes] = @Notes, [LastUpdate] = @L"& _ 
                "astUpdate WHERE (([ID] = @Original_ID) AND ((@IsNull_SwiftFileName = 1 AND [Swif"& _ 
                "tFileName] IS NULL) OR ([SwiftFileName] = @Original_SwiftFileName)) AND ((@IsNul"& _ 
                "l_Ref20 = 1 AND [Ref20] IS NULL) OR ([Ref20] = @Original_Ref20)) AND ((@IsNull_R"& _ 
                "ef21 = 1 AND [Ref21] IS NULL) OR ([Ref21] = @Original_Ref21)) AND ((@IsNull_CCY "& _ 
                "= 1 AND [CCY] IS NULL) OR ([CCY] = @Original_CCY)) AND ((@IsNull_Amount = 1 AND "& _ 
                "[Amount] IS NULL) OR ([Amount] = @Original_Amount)) AND ((@IsNull_DetailsOfCharg"& _ 
                "es = 1 AND [DetailsOfCharges] IS NULL) OR ([DetailsOfCharges] = @Original_Detail"& _ 
                "sOfCharges)) AND ((@IsNull_MessageType = 1 AND [MessageType] IS NULL) OR ([Messa"& _ 
                "geType] = @Original_MessageType)) AND ((@IsNull_MessageTypeName = 1 AND [Message"& _ 
                "TypeName] IS NULL) OR ([MessageTypeName] = @Original_MessageTypeName)) AND ((@Is"& _ 
                "Null_SenderBIC = 1 AND [SenderBIC] IS NULL) OR ([SenderBIC] = @Original_SenderBI"& _ 
                "C)) AND ((@IsNull_SenderName = 1 AND [SenderName] IS NULL) OR ([SenderName] = @O"& _ 
                "riginal_SenderName)) AND ((@IsNull_SenderBranch = 1 AND [SenderBranch] IS NULL) "& _ 
                "OR ([SenderBranch] = @Original_SenderBranch)) AND ((@IsNull_ReceivedDate = 1 AND"& _ 
                " [ReceivedDate] IS NULL) OR ([ReceivedDate] = @Original_ReceivedDate)) AND ((@Is"& _ 
                "Null_OSN = 1 AND [OSN] IS NULL) OR ([OSN] = @Original_OSN)) AND ((@IsNull_OSN_Re"& _ 
                "ceivedDate = 1 AND [OSN_ReceivedDate] IS NULL) OR ([OSN_ReceivedDate] = @Origina"& _ 
                "l_OSN_ReceivedDate)) AND ((@IsNull_MatchedStatus = 1 AND [MatchedStatus] IS NULL"& _ 
                ") OR ([MatchedStatus] = @Original_MatchedStatus)) AND ((@IsNull_ReceiverCorrespo"& _ 
                "ndent = 1 AND [ReceiverCorrespondent] IS NULL) OR ([ReceiverCorrespondent] = @Or"& _ 
                "iginal_ReceiverCorrespondent)) AND ((@IsNull_PayedStatus = 1 AND [PayedStatus] I"& _ 
                "S NULL) OR ([PayedStatus] = @Original_PayedStatus)) AND ((@IsNull_PayedReference"& _ 
                " = 1 AND [PayedReference] IS NULL) OR ([PayedReference] = @Original_PayedReferen"& _ 
                "ce)) AND ((@IsNull_PayedDate = 1 AND [PayedDate] IS NULL) OR ([PayedDate] = @Ori"& _ 
                "ginal_PayedDate)) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Or"& _ 
                "iginal_Notes)) AND ((@IsNull_LastUpdate = 1 AND [LastUpdate] IS NULL) OR ([LastU"& _ 
                "pdate] = @Original_LastUpdate)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, SwiftFileName, Ref20, Ref21, CCY, "& _ 
                "Amount, DetailsOfCharges, MessageType, MessageTypeName, SenderBIC, SenderName, S"& _ 
                "enderBranch, ReceivedDate, OSN, OSN_ReceivedDate, Swift_Message, Swift_Message_F"& _ 
                "ormated, MatchedStatus, ReceiverCorrespondent, PayedStatus, PayedReference, Paye"& _ 
                "dDate, Notes, LastUpdate FROM ALL_SWIFT_CHARGES_MESSAGES WHERE (ID = @ID) ORDER "& _ 
                "BY ReceivedDate DESC, ID DESC"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwiftFileName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwiftFileName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ref20", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ref21", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref21", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MessageTypeName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageTypeName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceivedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OSN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OSN_ReceivedDate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN_ReceivedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swift_Message", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swift_Message", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swift_Message_Formated", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swift_Message_Formated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MatchedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MatchedStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverCorrespondent", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverCorrespondent", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastUpdate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SwiftFileName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwiftFileName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SwiftFileName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwiftFileName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ref20", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref20", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ref20", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ref21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref21", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ref21", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ref21", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CCY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DetailsOfCharges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MessageTypeName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageTypeName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MessageTypeName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MessageTypeName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderBIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SenderBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SenderBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceivedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceivedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OSN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OSN", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OSN_ReceivedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN_ReceivedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OSN_ReceivedDate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSN_ReceivedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MatchedStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MatchedStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MatchedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MatchedStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiverCorrespondent", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverCorrespondent", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiverCorrespondent", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverCorrespondent", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayedStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayedReference", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedReference", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayedReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedReference", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PayedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PayedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Notes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastUpdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastUpdate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastUpdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, SwiftFileName, Ref20, Ref21, CCY, Amount, DetailsOfCharges, Mes"& _ 
                "sageType, MessageTypeName, SenderBIC, SenderName, SenderBranch, ReceivedDate, OS"& _ 
                "N, OSN_ReceivedDate, Swift_Message, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Swift_Message_For"& _ 
                "mated, MatchedStatus, ReceiverCorrespondent, PayedStatus, PayedReference, PayedD"& _ 
                "ate, Notes, LastUpdate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ALL_SWIFT_CHARGES_MESSAGES"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Rec"& _ 
                "eivedDate DESC, ID DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT Amount, CCY, DetailsOfCharges, ID, LastUpdate, MatchedStatus, MessageType,"& _ 
                " MessageTypeName, Notes, OSN, OSN_ReceivedDate, PayedDate, PayedReference, Payed"& _ 
                "Status, ReceivedDate, ReceiverCorrespondent, Ref20, Ref21, SenderBIC, SenderBran"& _ 
                "ch, SenderName, SwiftFileName, Swift_Message, Swift_Message_Formated FROM ALL_SW"& _ 
                "IFT_CHARGES_MESSAGES WHERE (ID = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Amount, CCY, DetailsOfCharges, ID, LastUpdate, MatchedStatus, MessageType,"& _ 
                " MessageTypeName, Notes, OSN, OSN_ReceivedDate, PayedDate, PayedReference, Payed"& _ 
                "Status, ReceivedDate, ReceiverCorrespondent, Ref20, Ref21, SenderBIC, SenderBran"& _ 
                "ch, SenderName, SwiftFileName, Swift_Message, Swift_Message_Formated FROM ALL_SW"& _ 
                "IFT_CHARGES_MESSAGES WHERE (ReceivedDate >= @Param1) AND (ReceivedDate <= @Param"& _ 
                "2) ORDER BY ReceivedDate DESC, ID DESC"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceivedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable = New ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByID(ByVal dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable, ByVal Param1 As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByID(ByVal Param1 As Integer) As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,Integer)
            Dim dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable = New ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByReceivedDate(ByVal dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable, ByVal Param1 As Global.System.Nullable(Of Date), ByVal Param2 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Param2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByReceivedDate(ByVal Param1 As Global.System.Nullable(Of Date), ByVal Param2 As Global.System.Nullable(Of Date)) As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Param2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable = New ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ClearingDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "ALL_SWIFT_CHARGES_MESSAGES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_SwiftFileName As String,  _
                    ByVal Original_Ref20 As String,  _
                    ByVal Original_Ref21 As String,  _
                    ByVal Original_CCY As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_DetailsOfCharges As String,  _
                    ByVal Original_MessageType As String,  _
                    ByVal Original_MessageTypeName As String,  _
                    ByVal Original_SenderBIC As String,  _
                    ByVal Original_SenderName As String,  _
                    ByVal Original_SenderBranch As String,  _
                    ByVal Original_ReceivedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OSN As Global.System.Nullable(Of Double),  _
                    ByVal Original_OSN_ReceivedDate As String,  _
                    ByVal Original_MatchedStatus As String,  _
                    ByVal Original_ReceiverCorrespondent As String,  _
                    ByVal Original_PayedStatus As String,  _
                    ByVal Original_PayedReference As String,  _
                    ByVal Original_PayedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Notes As String,  _
                    ByVal Original_LastUpdate As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_SwiftFileName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SwiftFileName,String)
            End If
            If (Original_Ref20 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Ref20,String)
            End If
            If (Original_Ref21 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Ref21,String)
            End If
            If (Original_CCY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CCY,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Amount.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_DetailsOfCharges Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DetailsOfCharges,String)
            End If
            If (Original_MessageType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_MessageType,String)
            End If
            If (Original_MessageTypeName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_MessageTypeName,String)
            End If
            If (Original_SenderBIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SenderBIC,String)
            End If
            If (Original_SenderName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_SenderName,String)
            End If
            If (Original_SenderBranch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_SenderBranch,String)
            End If
            If (Original_ReceivedDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_ReceivedDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_OSN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_OSN.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_OSN_ReceivedDate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_OSN_ReceivedDate,String)
            End If
            If (Original_MatchedStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_MatchedStatus,String)
            End If
            If (Original_ReceiverCorrespondent Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_ReceiverCorrespondent,String)
            End If
            If (Original_PayedStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_PayedStatus,String)
            End If
            If (Original_PayedReference Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_PayedReference,String)
            End If
            If (Original_PayedDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_PayedDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_Notes Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Notes,String)
            End If
            If (Original_LastUpdate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_LastUpdate,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SwiftFileName As String,  _
                    ByVal Ref20 As String,  _
                    ByVal Ref21 As String,  _
                    ByVal CCY As String,  _
                    ByVal Amount As Global.System.Nullable(Of Double),  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal MessageType As String,  _
                    ByVal MessageTypeName As String,  _
                    ByVal SenderBIC As String,  _
                    ByVal SenderName As String,  _
                    ByVal SenderBranch As String,  _
                    ByVal ReceivedDate As Global.System.Nullable(Of Date),  _
                    ByVal OSN As Global.System.Nullable(Of Double),  _
                    ByVal OSN_ReceivedDate As String,  _
                    ByVal Swift_Message As String,  _
                    ByVal Swift_Message_Formated As String,  _
                    ByVal MatchedStatus As String,  _
                    ByVal ReceiverCorrespondent As String,  _
                    ByVal PayedStatus As String,  _
                    ByVal PayedReference As String,  _
                    ByVal PayedDate As Global.System.Nullable(Of Date),  _
                    ByVal Notes As String,  _
                    ByVal LastUpdate As String) As Integer
            If (SwiftFileName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SwiftFileName,String)
            End If
            If (Ref20 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Ref20,String)
            End If
            If (Ref21 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Ref21,String)
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CCY,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DetailsOfCharges,String)
            End If
            If (MessageType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MessageType,String)
            End If
            If (MessageTypeName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(MessageTypeName,String)
            End If
            If (SenderBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SenderBIC,String)
            End If
            If (SenderName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SenderName,String)
            End If
            If (SenderBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SenderBranch,String)
            End If
            If (ReceivedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ReceivedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (OSN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(OSN.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OSN_ReceivedDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(OSN_ReceivedDate,String)
            End If
            If (Swift_Message Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Swift_Message,String)
            End If
            If (Swift_Message_Formated Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Swift_Message_Formated,String)
            End If
            If (MatchedStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(MatchedStatus,String)
            End If
            If (ReceiverCorrespondent Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ReceiverCorrespondent,String)
            End If
            If (PayedStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PayedStatus,String)
            End If
            If (PayedReference Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PayedReference,String)
            End If
            If (PayedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(PayedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Notes,String)
            End If
            If (LastUpdate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(LastUpdate,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SwiftFileName As String,  _
                    ByVal Ref20 As String,  _
                    ByVal Ref21 As String,  _
                    ByVal CCY As String,  _
                    ByVal Amount As Global.System.Nullable(Of Double),  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal MessageType As String,  _
                    ByVal MessageTypeName As String,  _
                    ByVal SenderBIC As String,  _
                    ByVal SenderName As String,  _
                    ByVal SenderBranch As String,  _
                    ByVal ReceivedDate As Global.System.Nullable(Of Date),  _
                    ByVal OSN As Global.System.Nullable(Of Double),  _
                    ByVal OSN_ReceivedDate As String,  _
                    ByVal Swift_Message As String,  _
                    ByVal Swift_Message_Formated As String,  _
                    ByVal MatchedStatus As String,  _
                    ByVal ReceiverCorrespondent As String,  _
                    ByVal PayedStatus As String,  _
                    ByVal PayedReference As String,  _
                    ByVal PayedDate As Global.System.Nullable(Of Date),  _
                    ByVal Notes As String,  _
                    ByVal LastUpdate As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_SwiftFileName As String,  _
                    ByVal Original_Ref20 As String,  _
                    ByVal Original_Ref21 As String,  _
                    ByVal Original_CCY As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_DetailsOfCharges As String,  _
                    ByVal Original_MessageType As String,  _
                    ByVal Original_MessageTypeName As String,  _
                    ByVal Original_SenderBIC As String,  _
                    ByVal Original_SenderName As String,  _
                    ByVal Original_SenderBranch As String,  _
                    ByVal Original_ReceivedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OSN As Global.System.Nullable(Of Double),  _
                    ByVal Original_OSN_ReceivedDate As String,  _
                    ByVal Original_MatchedStatus As String,  _
                    ByVal Original_ReceiverCorrespondent As String,  _
                    ByVal Original_PayedStatus As String,  _
                    ByVal Original_PayedReference As String,  _
                    ByVal Original_PayedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Notes As String,  _
                    ByVal Original_LastUpdate As String,  _
                    ByVal ID As Integer) As Integer
            If (SwiftFileName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SwiftFileName,String)
            End If
            If (Ref20 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Ref20,String)
            End If
            If (Ref21 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Ref21,String)
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CCY,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DetailsOfCharges,String)
            End If
            If (MessageType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(MessageType,String)
            End If
            If (MessageTypeName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(MessageTypeName,String)
            End If
            If (SenderBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SenderBIC,String)
            End If
            If (SenderName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SenderName,String)
            End If
            If (SenderBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SenderBranch,String)
            End If
            If (ReceivedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ReceivedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (OSN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(OSN.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OSN_ReceivedDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(OSN_ReceivedDate,String)
            End If
            If (Swift_Message Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Swift_Message,String)
            End If
            If (Swift_Message_Formated Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Swift_Message_Formated,String)
            End If
            If (MatchedStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(MatchedStatus,String)
            End If
            If (ReceiverCorrespondent Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ReceiverCorrespondent,String)
            End If
            If (PayedStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PayedStatus,String)
            End If
            If (PayedReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(PayedReference,String)
            End If
            If (PayedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(PayedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Notes,String)
            End If
            If (LastUpdate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(LastUpdate,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ID,Integer)
            If (Original_SwiftFileName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_SwiftFileName,String)
            End If
            If (Original_Ref20 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_Ref20,String)
            End If
            If (Original_Ref21 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_Ref21,String)
            End If
            If (Original_CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_CCY,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_DetailsOfCharges Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_DetailsOfCharges,String)
            End If
            If (Original_MessageType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_MessageType,String)
            End If
            If (Original_MessageTypeName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_MessageTypeName,String)
            End If
            If (Original_SenderBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_SenderBIC,String)
            End If
            If (Original_SenderName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_SenderName,String)
            End If
            If (Original_SenderBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_SenderBranch,String)
            End If
            If (Original_ReceivedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_ReceivedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_OSN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_OSN.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_OSN_ReceivedDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_OSN_ReceivedDate,String)
            End If
            If (Original_MatchedStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_MatchedStatus,String)
            End If
            If (Original_ReceiverCorrespondent Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_ReceiverCorrespondent,String)
            End If
            If (Original_PayedStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_PayedStatus,String)
            End If
            If (Original_PayedReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_PayedReference,String)
            End If
            If (Original_PayedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_PayedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_Notes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Notes,String)
            End If
            If (Original_LastUpdate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_LastUpdate,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SwiftFileName As String,  _
                    ByVal Ref20 As String,  _
                    ByVal Ref21 As String,  _
                    ByVal CCY As String,  _
                    ByVal Amount As Global.System.Nullable(Of Double),  _
                    ByVal DetailsOfCharges As String,  _
                    ByVal MessageType As String,  _
                    ByVal MessageTypeName As String,  _
                    ByVal SenderBIC As String,  _
                    ByVal SenderName As String,  _
                    ByVal SenderBranch As String,  _
                    ByVal ReceivedDate As Global.System.Nullable(Of Date),  _
                    ByVal OSN As Global.System.Nullable(Of Double),  _
                    ByVal OSN_ReceivedDate As String,  _
                    ByVal Swift_Message As String,  _
                    ByVal Swift_Message_Formated As String,  _
                    ByVal MatchedStatus As String,  _
                    ByVal ReceiverCorrespondent As String,  _
                    ByVal PayedStatus As String,  _
                    ByVal PayedReference As String,  _
                    ByVal PayedDate As Global.System.Nullable(Of Date),  _
                    ByVal Notes As String,  _
                    ByVal LastUpdate As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_SwiftFileName As String,  _
                    ByVal Original_Ref20 As String,  _
                    ByVal Original_Ref21 As String,  _
                    ByVal Original_CCY As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Original_DetailsOfCharges As String,  _
                    ByVal Original_MessageType As String,  _
                    ByVal Original_MessageTypeName As String,  _
                    ByVal Original_SenderBIC As String,  _
                    ByVal Original_SenderName As String,  _
                    ByVal Original_SenderBranch As String,  _
                    ByVal Original_ReceivedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OSN As Global.System.Nullable(Of Double),  _
                    ByVal Original_OSN_ReceivedDate As String,  _
                    ByVal Original_MatchedStatus As String,  _
                    ByVal Original_ReceiverCorrespondent As String,  _
                    ByVal Original_PayedStatus As String,  _
                    ByVal Original_PayedReference As String,  _
                    ByVal Original_PayedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Notes As String,  _
                    ByVal Original_LastUpdate As String) As Integer
            Return Me.Update(SwiftFileName, Ref20, Ref21, CCY, Amount, DetailsOfCharges, MessageType, MessageTypeName, SenderBIC, SenderName, SenderBranch, ReceivedDate, OSN, OSN_ReceivedDate, Swift_Message, Swift_Message_Formated, MatchedStatus, ReceiverCorrespondent, PayedStatus, PayedReference, PayedDate, Notes, LastUpdate, Original_ID, Original_SwiftFileName, Original_Ref20, Original_Ref21, Original_CCY, Original_Amount, Original_DetailsOfCharges, Original_MessageType, Original_MessageTypeName, Original_SenderBIC, Original_SenderName, Original_SenderBranch, Original_ReceivedDate, Original_OSN, Original_OSN_ReceivedDate, Original_MatchedStatus, Original_ReceiverCorrespondent, Original_PayedStatus, Original_PayedReference, Original_PayedDate, Original_Notes, Original_LastUpdate, Original_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ALL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ALL_SWIFT_CHARGES_MESSAGES_Details"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("OurReference", "OurReference")
            tableMapping.ColumnMappings.Add("RelatedPayment", "RelatedPayment")
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType")
            tableMapping.ColumnMappings.Add("ReceiverBIC", "ReceiverBIC")
            tableMapping.ColumnMappings.Add("ValueDate", "ValueDate")
            tableMapping.ColumnMappings.Add("CCY", "CCY")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("DetailsOfCharges", "DetailsOfCharges")
            tableMapping.ColumnMappings.Add("PayedStatus", "PayedStatus")
            tableMapping.ColumnMappings.Add("Id_Charges", "Id_Charges")
            tableMapping.ColumnMappings.Add("RequestedChargesCurrency", "RequestedChargesCurrency")
            tableMapping.ColumnMappings.Add("RequestedChargesAmount", "RequestedChargesAmount")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ALL_SWIFT_CHARGES_MESSAGES_Details] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ALL_SWIFT_CHARGES_MESSAGES_Details] ([OurReference], [RelatedPayment"& _ 
                "], [PaymentType], [ReceiverBIC], [ValueDate], [CCY], [Amount], [DetailsOfCharges"& _ 
                "], [PayedStatus], [Id_Charges], [RequestedChargesCurrency], [RequestedChargesAmo"& _ 
                "unt]) VALUES (@OurReference, @RelatedPayment, @PaymentType, @ReceiverBIC, @Value"& _ 
                "Date, @CCY, @Amount, @DetailsOfCharges, @PayedStatus, @Id_Charges, @RequestedCha"& _ 
                "rgesCurrency, @RequestedChargesAmount)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelatedPayment", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelatedPayment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Charges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Charges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestedChargesCurrency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestedChargesCurrency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestedChargesAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestedChargesAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ALL_SWIFT_CHARGES_MESSAGES_Details] SET [OurReference] = @OurReference, ["& _ 
                "RelatedPayment] = @RelatedPayment, [PaymentType] = @PaymentType, [ReceiverBIC] ="& _ 
                " @ReceiverBIC, [ValueDate] = @ValueDate, [CCY] = @CCY, [Amount] = @Amount, [Deta"& _ 
                "ilsOfCharges] = @DetailsOfCharges, [PayedStatus] = @PayedStatus, [Id_Charges] = "& _ 
                "@Id_Charges, [RequestedChargesCurrency] = @RequestedChargesCurrency, [RequestedC"& _ 
                "hargesAmount] = @RequestedChargesAmount WHERE (([ID] = @Original_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OurReference", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OurReference", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelatedPayment", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelatedPayment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PaymentType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PaymentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiverBIC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiverBIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValueDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValueDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DetailsOfCharges", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DetailsOfCharges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PayedStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PayedStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Charges", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Charges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestedChargesCurrency", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestedChargesCurrency", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RequestedChargesAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RequestedChargesAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, OurReference, RelatedPayment, PaymentType, ReceiverBIC, ValueDa"& _ 
                "te, CCY, Amount, DetailsOfCharges, PayedStatus, Id_Charges, RequestedChargesCurr"& _ 
                "ency, RequestedChargesAmount"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ALL_SWIFT_CHARGES_MESSAGES_Details"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT Amount, CCY, DetailsOfCharges, ID, Id_Charges, OurReference, PayedStatus, "& _ 
                "PaymentType, ReceiverBIC, RelatedPayment, RequestedChargesAmount, RequestedCharg"& _ 
                "esCurrency, ValueDate FROM ALL_SWIFT_CHARGES_MESSAGES_Details WHERE (Id_Charges "& _ 
                "= @Param1) ORDER BY ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Charges", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable = New ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByID_Charges(ByVal dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable, ByVal Param1 As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByID_Charges(ByVal Param1 As Global.System.Nullable(Of Integer)) As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable = New ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ClearingDataSet.ALL_SWIFT_CHARGES_MESSAGES_DetailsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ClearingDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "ALL_SWIFT_CHARGES_MESSAGES_Details")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal OurReference As String, ByVal RelatedPayment As String, ByVal PaymentType As String, ByVal ReceiverBIC As String, ByVal ValueDate As Global.System.Nullable(Of Date), ByVal CCY As String, ByVal Amount As Global.System.Nullable(Of Double), ByVal DetailsOfCharges As String, ByVal PayedStatus As String, ByVal Id_Charges As Global.System.Nullable(Of Integer), ByVal RequestedChargesCurrency As String, ByVal RequestedChargesAmount As Global.System.Nullable(Of Double)) As Integer
            If (OurReference Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(OurReference,String)
            End If
            If (RelatedPayment Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RelatedPayment,String)
            End If
            If (PaymentType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PaymentType,String)
            End If
            If (ReceiverBIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ReceiverBIC,String)
            End If
            If (ValueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ValueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CCY,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DetailsOfCharges,String)
            End If
            If (PayedStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PayedStatus,String)
            End If
            If (Id_Charges.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Id_Charges.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (RequestedChargesCurrency Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RequestedChargesCurrency,String)
            End If
            If (RequestedChargesAmount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(RequestedChargesAmount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal OurReference As String, ByVal RelatedPayment As String, ByVal PaymentType As String, ByVal ReceiverBIC As String, ByVal ValueDate As Global.System.Nullable(Of Date), ByVal CCY As String, ByVal Amount As Global.System.Nullable(Of Double), ByVal DetailsOfCharges As String, ByVal PayedStatus As String, ByVal Id_Charges As Global.System.Nullable(Of Integer), ByVal RequestedChargesCurrency As String, ByVal RequestedChargesAmount As Global.System.Nullable(Of Double), ByVal Original_ID As Integer) As Integer
            If (OurReference Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(OurReference,String)
            End If
            If (RelatedPayment Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RelatedPayment,String)
            End If
            If (PaymentType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PaymentType,String)
            End If
            If (ReceiverBIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ReceiverBIC,String)
            End If
            If (ValueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ValueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CCY,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DetailsOfCharges Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DetailsOfCharges,String)
            End If
            If (PayedStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PayedStatus,String)
            End If
            If (Id_Charges.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Id_Charges.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (RequestedChargesCurrency Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(RequestedChargesCurrency,String)
            End If
            If (RequestedChargesAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(RequestedChargesAmount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cHEQUE_COLLECTIONSTableAdapter As CHEQUE_COLLECTIONSTableAdapter
        
        Private _gMPS_PAYMENTS_INTableAdapter As GMPS_PAYMENTS_INTableAdapter
        
        Private _gMPS_PAYMENTS_OUTTableAdapter As GMPS_PAYMENTS_OUTTableAdapter
        
        Private _oDAS_REMMITANCESTableAdapter As ODAS_REMMITANCESTableAdapter
        
        Private _aLL_SWIFT_CHARGES_MESSAGESTableAdapter As ALL_SWIFT_CHARGES_MESSAGESTableAdapter
        
        Private _aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter As ALL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CHEQUE_COLLECTIONSTableAdapter() As CHEQUE_COLLECTIONSTableAdapter
            Get
                Return Me._cHEQUE_COLLECTIONSTableAdapter
            End Get
            Set
                Me._cHEQUE_COLLECTIONSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GMPS_PAYMENTS_INTableAdapter() As GMPS_PAYMENTS_INTableAdapter
            Get
                Return Me._gMPS_PAYMENTS_INTableAdapter
            End Get
            Set
                Me._gMPS_PAYMENTS_INTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GMPS_PAYMENTS_OUTTableAdapter() As GMPS_PAYMENTS_OUTTableAdapter
            Get
                Return Me._gMPS_PAYMENTS_OUTTableAdapter
            End Get
            Set
                Me._gMPS_PAYMENTS_OUTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ODAS_REMMITANCESTableAdapter() As ODAS_REMMITANCESTableAdapter
            Get
                Return Me._oDAS_REMMITANCESTableAdapter
            End Get
            Set
                Me._oDAS_REMMITANCESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ALL_SWIFT_CHARGES_MESSAGESTableAdapter() As ALL_SWIFT_CHARGES_MESSAGESTableAdapter
            Get
                Return Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter
            End Get
            Set
                Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ALL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter() As ALL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter
            Get
                Return Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter
            End Get
            Set
                Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cHEQUE_COLLECTIONSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cHEQUE_COLLECTIONSTableAdapter.Connection
                End If
                If ((Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gMPS_PAYMENTS_INTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gMPS_PAYMENTS_INTableAdapter.Connection
                End If
                If ((Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gMPS_PAYMENTS_OUTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gMPS_PAYMENTS_OUTTableAdapter.Connection
                End If
                If ((Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._oDAS_REMMITANCESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._oDAS_REMMITANCESTableAdapter.Connection
                End If
                If ((Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Connection
                End If
                If ((Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ClearingDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ALL_SWIFT_CHARGES_MESSAGES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CHEQUE_COLLECTIONS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cHEQUE_COLLECTIONSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GMPS_PAYMENTS_IN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gMPS_PAYMENTS_INTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GMPS_PAYMENTS_OUT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gMPS_PAYMENTS_OUTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ODAS_REMMITANCES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._oDAS_REMMITANCESTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ALL_SWIFT_CHARGES_MESSAGES_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ClearingDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ALL_SWIFT_CHARGES_MESSAGES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CHEQUE_COLLECTIONS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cHEQUE_COLLECTIONSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GMPS_PAYMENTS_IN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gMPS_PAYMENTS_INTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GMPS_PAYMENTS_OUT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gMPS_PAYMENTS_OUTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ODAS_REMMITANCES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._oDAS_REMMITANCESTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ALL_SWIFT_CHARGES_MESSAGES_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ClearingDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ALL_SWIFT_CHARGES_MESSAGES_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ODAS_REMMITANCES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._oDAS_REMMITANCESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GMPS_PAYMENTS_OUT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gMPS_PAYMENTS_OUTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GMPS_PAYMENTS_IN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gMPS_PAYMENTS_INTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CHEQUE_COLLECTIONS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cHEQUE_COLLECTIONSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ALL_SWIFT_CHARGES_MESSAGES.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ClearingDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cHEQUE_COLLECTIONSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gMPS_PAYMENTS_INTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gMPS_PAYMENTS_OUTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._oDAS_REMMITANCESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cHEQUE_COLLECTIONSTableAdapter, Me._cHEQUE_COLLECTIONSTableAdapter.Connection)
                    Me._cHEQUE_COLLECTIONSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cHEQUE_COLLECTIONSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cHEQUE_COLLECTIONSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cHEQUE_COLLECTIONSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cHEQUE_COLLECTIONSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gMPS_PAYMENTS_INTableAdapter, Me._gMPS_PAYMENTS_INTableAdapter.Connection)
                    Me._gMPS_PAYMENTS_INTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gMPS_PAYMENTS_INTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gMPS_PAYMENTS_INTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gMPS_PAYMENTS_INTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gMPS_PAYMENTS_INTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gMPS_PAYMENTS_OUTTableAdapter, Me._gMPS_PAYMENTS_OUTTableAdapter.Connection)
                    Me._gMPS_PAYMENTS_OUTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gMPS_PAYMENTS_OUTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gMPS_PAYMENTS_OUTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gMPS_PAYMENTS_OUTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gMPS_PAYMENTS_OUTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._oDAS_REMMITANCESTableAdapter, Me._oDAS_REMMITANCESTableAdapter.Connection)
                    Me._oDAS_REMMITANCESTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._oDAS_REMMITANCESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._oDAS_REMMITANCESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._oDAS_REMMITANCESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._oDAS_REMMITANCESTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter, Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Connection)
                    Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter, Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Connection)
                    Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cHEQUE_COLLECTIONSTableAdapter) Is Nothing) Then
                    Me._cHEQUE_COLLECTIONSTableAdapter.Connection = CType(revertConnections(Me._cHEQUE_COLLECTIONSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cHEQUE_COLLECTIONSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gMPS_PAYMENTS_INTableAdapter) Is Nothing) Then
                    Me._gMPS_PAYMENTS_INTableAdapter.Connection = CType(revertConnections(Me._gMPS_PAYMENTS_INTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gMPS_PAYMENTS_INTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gMPS_PAYMENTS_OUTTableAdapter) Is Nothing) Then
                    Me._gMPS_PAYMENTS_OUTTableAdapter.Connection = CType(revertConnections(Me._gMPS_PAYMENTS_OUTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gMPS_PAYMENTS_OUTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._oDAS_REMMITANCESTableAdapter) Is Nothing) Then
                    Me._oDAS_REMMITANCESTableAdapter.Connection = CType(revertConnections(Me._oDAS_REMMITANCESTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._oDAS_REMMITANCESTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter) Is Nothing) Then
                    Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Connection = CType(revertConnections(Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aLL_SWIFT_CHARGES_MESSAGESTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter) Is Nothing) Then
                    Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Connection = CType(revertConnections(Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aLL_SWIFT_CHARGES_MESSAGES_DetailsTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
