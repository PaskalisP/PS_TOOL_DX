'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("MM_Statistic_Dataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class MM_Statistic_Dataset
    Inherits Global.System.Data.DataSet
    
    Private tableOPICS_MM As OPICS_MMDataTable
    
    Private tableOPICS_FX_SWAPS As OPICS_FX_SWAPSDataTable
    
    Private tableOPICS_FX As OPICS_FXDataTable
    
    Private tableMM_STATISTIC_DATE As MM_STATISTIC_DATEDataTable
    
    Private tableMM_STATISTIC_FXSW As MM_STATISTIC_FXSWDataTable
    
    Private tableMM_STATISTIC_UGMM As MM_STATISTIC_UGMMDataTable
    
    Private tableMM_STATISTIC_BGMM As MM_STATISTIC_BGMMDataTable
    
    Private tableMM_STATISTIC_EORW As MM_STATISTIC_EORWDataTable
    
    Private relationFK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE As Global.System.Data.DataRelation
    
    Private relationFK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE As Global.System.Data.DataRelation
    
    Private relationFK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE As Global.System.Data.DataRelation
    
    Private relationFK_MM_STATISTIC_EORW_MM_STATISTIC_DATE As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("OPICS_MM")) Is Nothing) Then
                MyBase.Tables.Add(New OPICS_MMDataTable(ds.Tables("OPICS_MM")))
            End If
            If (Not (ds.Tables("OPICS_FX_SWAPS")) Is Nothing) Then
                MyBase.Tables.Add(New OPICS_FX_SWAPSDataTable(ds.Tables("OPICS_FX_SWAPS")))
            End If
            If (Not (ds.Tables("OPICS_FX")) Is Nothing) Then
                MyBase.Tables.Add(New OPICS_FXDataTable(ds.Tables("OPICS_FX")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_DATE")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_DATEDataTable(ds.Tables("MM_STATISTIC_DATE")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_FXSW")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_FXSWDataTable(ds.Tables("MM_STATISTIC_FXSW")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_UGMM")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_UGMMDataTable(ds.Tables("MM_STATISTIC_UGMM")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_BGMM")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_BGMMDataTable(ds.Tables("MM_STATISTIC_BGMM")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_EORW")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_EORWDataTable(ds.Tables("MM_STATISTIC_EORW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPICS_MM() As OPICS_MMDataTable
        Get
            Return Me.tableOPICS_MM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPICS_FX_SWAPS() As OPICS_FX_SWAPSDataTable
        Get
            Return Me.tableOPICS_FX_SWAPS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPICS_FX() As OPICS_FXDataTable
        Get
            Return Me.tableOPICS_FX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MM_STATISTIC_DATE() As MM_STATISTIC_DATEDataTable
        Get
            Return Me.tableMM_STATISTIC_DATE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MM_STATISTIC_FXSW() As MM_STATISTIC_FXSWDataTable
        Get
            Return Me.tableMM_STATISTIC_FXSW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MM_STATISTIC_UGMM() As MM_STATISTIC_UGMMDataTable
        Get
            Return Me.tableMM_STATISTIC_UGMM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MM_STATISTIC_BGMM() As MM_STATISTIC_BGMMDataTable
        Get
            Return Me.tableMM_STATISTIC_BGMM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MM_STATISTIC_EORW() As MM_STATISTIC_EORWDataTable
        Get
            Return Me.tableMM_STATISTIC_EORW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As MM_Statistic_Dataset = CType(MyBase.Clone,MM_Statistic_Dataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("OPICS_MM")) Is Nothing) Then
                MyBase.Tables.Add(New OPICS_MMDataTable(ds.Tables("OPICS_MM")))
            End If
            If (Not (ds.Tables("OPICS_FX_SWAPS")) Is Nothing) Then
                MyBase.Tables.Add(New OPICS_FX_SWAPSDataTable(ds.Tables("OPICS_FX_SWAPS")))
            End If
            If (Not (ds.Tables("OPICS_FX")) Is Nothing) Then
                MyBase.Tables.Add(New OPICS_FXDataTable(ds.Tables("OPICS_FX")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_DATE")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_DATEDataTable(ds.Tables("MM_STATISTIC_DATE")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_FXSW")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_FXSWDataTable(ds.Tables("MM_STATISTIC_FXSW")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_UGMM")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_UGMMDataTable(ds.Tables("MM_STATISTIC_UGMM")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_BGMM")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_BGMMDataTable(ds.Tables("MM_STATISTIC_BGMM")))
            End If
            If (Not (ds.Tables("MM_STATISTIC_EORW")) Is Nothing) Then
                MyBase.Tables.Add(New MM_STATISTIC_EORWDataTable(ds.Tables("MM_STATISTIC_EORW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableOPICS_MM = CType(MyBase.Tables("OPICS_MM"),OPICS_MMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPICS_MM) Is Nothing) Then
                Me.tableOPICS_MM.InitVars
            End If
        End If
        Me.tableOPICS_FX_SWAPS = CType(MyBase.Tables("OPICS_FX_SWAPS"),OPICS_FX_SWAPSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPICS_FX_SWAPS) Is Nothing) Then
                Me.tableOPICS_FX_SWAPS.InitVars
            End If
        End If
        Me.tableOPICS_FX = CType(MyBase.Tables("OPICS_FX"),OPICS_FXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPICS_FX) Is Nothing) Then
                Me.tableOPICS_FX.InitVars
            End If
        End If
        Me.tableMM_STATISTIC_DATE = CType(MyBase.Tables("MM_STATISTIC_DATE"),MM_STATISTIC_DATEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMM_STATISTIC_DATE) Is Nothing) Then
                Me.tableMM_STATISTIC_DATE.InitVars
            End If
        End If
        Me.tableMM_STATISTIC_FXSW = CType(MyBase.Tables("MM_STATISTIC_FXSW"),MM_STATISTIC_FXSWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMM_STATISTIC_FXSW) Is Nothing) Then
                Me.tableMM_STATISTIC_FXSW.InitVars
            End If
        End If
        Me.tableMM_STATISTIC_UGMM = CType(MyBase.Tables("MM_STATISTIC_UGMM"),MM_STATISTIC_UGMMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMM_STATISTIC_UGMM) Is Nothing) Then
                Me.tableMM_STATISTIC_UGMM.InitVars
            End If
        End If
        Me.tableMM_STATISTIC_BGMM = CType(MyBase.Tables("MM_STATISTIC_BGMM"),MM_STATISTIC_BGMMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMM_STATISTIC_BGMM) Is Nothing) Then
                Me.tableMM_STATISTIC_BGMM.InitVars
            End If
        End If
        Me.tableMM_STATISTIC_EORW = CType(MyBase.Tables("MM_STATISTIC_EORW"),MM_STATISTIC_EORWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMM_STATISTIC_EORW) Is Nothing) Then
                Me.tableMM_STATISTIC_EORW.InitVars
            End If
        End If
        Me.relationFK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE = Me.Relations("FK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE")
        Me.relationFK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE = Me.Relations("FK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE")
        Me.relationFK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE = Me.Relations("FK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE")
        Me.relationFK_MM_STATISTIC_EORW_MM_STATISTIC_DATE = Me.Relations("FK_MM_STATISTIC_EORW_MM_STATISTIC_DATE")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "MM_Statistic_Dataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/MM_Statistic_Dataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableOPICS_MM = New OPICS_MMDataTable()
        MyBase.Tables.Add(Me.tableOPICS_MM)
        Me.tableOPICS_FX_SWAPS = New OPICS_FX_SWAPSDataTable()
        MyBase.Tables.Add(Me.tableOPICS_FX_SWAPS)
        Me.tableOPICS_FX = New OPICS_FXDataTable()
        MyBase.Tables.Add(Me.tableOPICS_FX)
        Me.tableMM_STATISTIC_DATE = New MM_STATISTIC_DATEDataTable()
        MyBase.Tables.Add(Me.tableMM_STATISTIC_DATE)
        Me.tableMM_STATISTIC_FXSW = New MM_STATISTIC_FXSWDataTable()
        MyBase.Tables.Add(Me.tableMM_STATISTIC_FXSW)
        Me.tableMM_STATISTIC_UGMM = New MM_STATISTIC_UGMMDataTable()
        MyBase.Tables.Add(Me.tableMM_STATISTIC_UGMM)
        Me.tableMM_STATISTIC_BGMM = New MM_STATISTIC_BGMMDataTable()
        MyBase.Tables.Add(Me.tableMM_STATISTIC_BGMM)
        Me.tableMM_STATISTIC_EORW = New MM_STATISTIC_EORWDataTable()
        MyBase.Tables.Add(Me.tableMM_STATISTIC_EORW)
        Me.relationFK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE = New Global.System.Data.DataRelation("FK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE", New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_DATE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_FXSW.Id_MM_Statistic_DateColumn}, false)
        Me.Relations.Add(Me.relationFK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE)
        Me.relationFK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE = New Global.System.Data.DataRelation("FK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE", New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_DATE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_UGMM.Id_MM_Statistic_DateColumn}, false)
        Me.Relations.Add(Me.relationFK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE)
        Me.relationFK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE = New Global.System.Data.DataRelation("FK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE", New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_DATE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_BGMM.Id_MM_Statistic_DateColumn}, false)
        Me.Relations.Add(Me.relationFK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE)
        Me.relationFK_MM_STATISTIC_EORW_MM_STATISTIC_DATE = New Global.System.Data.DataRelation("FK_MM_STATISTIC_EORW_MM_STATISTIC_DATE", New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_DATE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableMM_STATISTIC_EORW.Id_MM_Statistic_DateColumn}, false)
        Me.Relations.Add(Me.relationFK_MM_STATISTIC_EORW_MM_STATISTIC_DATE)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeOPICS_MM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeOPICS_FX_SWAPS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeOPICS_FX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMM_STATISTIC_DATE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMM_STATISTIC_FXSW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMM_STATISTIC_UGMM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMM_STATISTIC_BGMM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMM_STATISTIC_EORW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub OPICS_MMRowChangeEventHandler(ByVal sender As Object, ByVal e As OPICS_MMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub OPICS_FX_SWAPSRowChangeEventHandler(ByVal sender As Object, ByVal e As OPICS_FX_SWAPSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub OPICS_FXRowChangeEventHandler(ByVal sender As Object, ByVal e As OPICS_FXRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MM_STATISTIC_DATERowChangeEventHandler(ByVal sender As Object, ByVal e As MM_STATISTIC_DATERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MM_STATISTIC_FXSWRowChangeEventHandler(ByVal sender As Object, ByVal e As MM_STATISTIC_FXSWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MM_STATISTIC_UGMMRowChangeEventHandler(ByVal sender As Object, ByVal e As MM_STATISTIC_UGMMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MM_STATISTIC_BGMMRowChangeEventHandler(ByVal sender As Object, ByVal e As MM_STATISTIC_BGMMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MM_STATISTIC_EORWRowChangeEventHandler(ByVal sender As Object, ByVal e As MM_STATISTIC_EORWRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPICS_MMDataTable
        Inherits Global.System.Data.TypedTableBase(Of OPICS_MMRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTransactionStatus As Global.System.Data.DataColumn
        
        Private columnTransactionType As Global.System.Data.DataColumn
        
        Private columnInstrumentType As Global.System.Data.DataColumn
        
        Private columnBRANCH As Global.System.Data.DataColumn
        
        Private columnDEAL_NO As Global.System.Data.DataColumn
        
        Private columnPRODUCT As Global.System.Data.DataColumn
        
        Private columnTYPE As Global.System.Data.DataColumn
        
        Private columnCUSTOMER As Global.System.Data.DataColumn
        
        Private columnCCY As Global.System.Data.DataColumn
        
        Private columnCCY_AMOUNT As Global.System.Data.DataColumn
        
        Private columnRATE_CODE As Global.System.Data.DataColumn
        
        Private columnInterest_rate As Global.System.Data.DataColumn
        
        Private columnTradeDate As Global.System.Data.DataColumn
        
        Private columnMAT_DATE As Global.System.Data.DataColumn
        
        Private columnDaysToMaturity As Global.System.Data.DataColumn
        
        Private columnREVERSAL_DATE As Global.System.Data.DataColumn
        
        Private columnREVERSAL_REASON As Global.System.Data.DataColumn
        
        Private columnNEW_DEAL_NO As Global.System.Data.DataColumn
        
        Private columnVALUE_DATE As Global.System.Data.DataColumn
        
        Private columnPORTFOLIO As Global.System.Data.DataColumn
        
        Private columnLINKED_DEAL_NR As Global.System.Data.DataColumn
        
        Private columnSTRATEGY As Global.System.Data.DataColumn
        
        Private columnFUNDING_RATE As Global.System.Data.DataColumn
        
        Private columnFUND_CENTER As Global.System.Data.DataColumn
        
        Private columnCOST_CENTER As Global.System.Data.DataColumn
        
        Private columnTRADER As Global.System.Data.DataColumn
        
        Private columnCORPORATE_TRADER As Global.System.Data.DataColumn
        
        Private columnCORPORATE_PORTFOLIO As Global.System.Data.DataColumn
        
        Private columnFRONT_END_DEAL_NR As Global.System.Data.DataColumn
        
        Private columnCUSTOMER_SHORT_NAME As Global.System.Data.DataColumn
        
        Private columnCUSTOMER_LONG_NAME As Global.System.Data.DataColumn
        
        Private columnBROKER_SHORT_NAME As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Nr As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Name As Global.System.Data.DataColumn
        
        Private columnBIC_CODE As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnMeldepflicht As Global.System.Data.DataColumn
        
        Private columnClientType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPICS_MM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InstrumentTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstrumentType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BRANCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRANCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DEAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRODUCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCY_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RATE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRATE_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Interest_rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterest_rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TradeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MAT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DaysToMaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDaysToMaturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REVERSAL_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVERSAL_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property REVERSAL_REASONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREVERSAL_REASON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NEW_DEAL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEW_DEAL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VALUE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALUE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PORTFOLIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORTFOLIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LINKED_DEAL_NRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINKED_DEAL_NR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property STRATEGYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRATEGY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FUNDING_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUNDING_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FUND_CENTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUND_CENTER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property COST_CENTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOST_CENTER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TRADERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRADER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CORPORATE_TRADERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORPORATE_TRADER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CORPORATE_PORTFOLIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORPORATE_PORTFOLIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRONT_END_DEAL_NRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRONT_END_DEAL_NR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUSTOMER_SHORT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER_SHORT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CUSTOMER_LONG_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER_LONG_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BROKER_SHORT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBROKER_SHORT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MeldepflichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeldepflicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPICS_MMRow
            Get
                Return CType(Me.Rows(index),OPICS_MMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_MMRowChanging As OPICS_MMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_MMRowChanged As OPICS_MMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_MMRowDeleting As OPICS_MMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_MMRowDeleted As OPICS_MMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddOPICS_MMRow(ByVal row As OPICS_MMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddOPICS_MMRow( _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal InstrumentType As String,  _
                    ByVal BRANCH As String,  _
                    ByVal DEAL_NO As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal TYPE As String,  _
                    ByVal CUSTOMER As String,  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Double,  _
                    ByVal RATE_CODE As String,  _
                    ByVal Interest_rate As Double,  _
                    ByVal TradeDate As Date,  _
                    ByVal MAT_DATE As Date,  _
                    ByVal DaysToMaturity As Double,  _
                    ByVal REVERSAL_DATE As Date,  _
                    ByVal REVERSAL_REASON As String,  _
                    ByVal NEW_DEAL_NO As String,  _
                    ByVal VALUE_DATE As Date,  _
                    ByVal PORTFOLIO As String,  _
                    ByVal LINKED_DEAL_NR As String,  _
                    ByVal STRATEGY As String,  _
                    ByVal FUNDING_RATE As Double,  _
                    ByVal FUND_CENTER As String,  _
                    ByVal COST_CENTER As String,  _
                    ByVal TRADER As String,  _
                    ByVal CORPORATE_TRADER As String,  _
                    ByVal CORPORATE_PORTFOLIO As String,  _
                    ByVal FRONT_END_DEAL_NR As String,  _
                    ByVal CUSTOMER_SHORT_NAME As String,  _
                    ByVal CUSTOMER_LONG_NAME As String,  _
                    ByVal BROKER_SHORT_NAME As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Meldepflicht As String,  _
                    ByVal ClientType As String) As OPICS_MMRow
            Dim rowOPICS_MMRow As OPICS_MMRow = CType(Me.NewRow,OPICS_MMRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TransactionStatus, TransactionType, InstrumentType, BRANCH, DEAL_NO, PRODUCT, TYPE, CUSTOMER, CCY, CCY_AMOUNT, RATE_CODE, Interest_rate, TradeDate, MAT_DATE, DaysToMaturity, REVERSAL_DATE, REVERSAL_REASON, NEW_DEAL_NO, VALUE_DATE, PORTFOLIO, LINKED_DEAL_NR, STRATEGY, FUNDING_RATE, FUND_CENTER, COST_CENTER, TRADER, CORPORATE_TRADER, CORPORATE_PORTFOLIO, FRONT_END_DEAL_NR, CUSTOMER_SHORT_NAME, CUSTOMER_LONG_NAME, BROKER_SHORT_NAME, OCBS_Cust_Nr, OCBS_Cust_Name, BIC_CODE, LEI_CODE, Meldepflicht, ClientType}
            rowOPICS_MMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPICS_MMRow)
            Return rowOPICS_MMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As OPICS_MMRow
            Return CType(Me.Rows.Find(New Object() {ID}),OPICS_MMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPICS_MMDataTable = CType(MyBase.Clone,OPICS_MMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPICS_MMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTransactionStatus = MyBase.Columns("TransactionStatus")
            Me.columnTransactionType = MyBase.Columns("TransactionType")
            Me.columnInstrumentType = MyBase.Columns("InstrumentType")
            Me.columnBRANCH = MyBase.Columns("BRANCH")
            Me.columnDEAL_NO = MyBase.Columns("DEAL_NO")
            Me.columnPRODUCT = MyBase.Columns("PRODUCT")
            Me.columnTYPE = MyBase.Columns("TYPE")
            Me.columnCUSTOMER = MyBase.Columns("CUSTOMER")
            Me.columnCCY = MyBase.Columns("CCY")
            Me.columnCCY_AMOUNT = MyBase.Columns("CCY_AMOUNT")
            Me.columnRATE_CODE = MyBase.Columns("RATE_CODE")
            Me.columnInterest_rate = MyBase.Columns("Interest_rate")
            Me.columnTradeDate = MyBase.Columns("TradeDate")
            Me.columnMAT_DATE = MyBase.Columns("MAT_DATE")
            Me.columnDaysToMaturity = MyBase.Columns("DaysToMaturity")
            Me.columnREVERSAL_DATE = MyBase.Columns("REVERSAL_DATE")
            Me.columnREVERSAL_REASON = MyBase.Columns("REVERSAL_REASON")
            Me.columnNEW_DEAL_NO = MyBase.Columns("NEW_DEAL_NO")
            Me.columnVALUE_DATE = MyBase.Columns("VALUE_DATE")
            Me.columnPORTFOLIO = MyBase.Columns("PORTFOLIO")
            Me.columnLINKED_DEAL_NR = MyBase.Columns("LINKED_DEAL_NR")
            Me.columnSTRATEGY = MyBase.Columns("STRATEGY")
            Me.columnFUNDING_RATE = MyBase.Columns("FUNDING_RATE")
            Me.columnFUND_CENTER = MyBase.Columns("FUND_CENTER")
            Me.columnCOST_CENTER = MyBase.Columns("COST_CENTER")
            Me.columnTRADER = MyBase.Columns("TRADER")
            Me.columnCORPORATE_TRADER = MyBase.Columns("CORPORATE_TRADER")
            Me.columnCORPORATE_PORTFOLIO = MyBase.Columns("CORPORATE_PORTFOLIO")
            Me.columnFRONT_END_DEAL_NR = MyBase.Columns("FRONT_END_DEAL_NR")
            Me.columnCUSTOMER_SHORT_NAME = MyBase.Columns("CUSTOMER_SHORT_NAME")
            Me.columnCUSTOMER_LONG_NAME = MyBase.Columns("CUSTOMER_LONG_NAME")
            Me.columnBROKER_SHORT_NAME = MyBase.Columns("BROKER_SHORT_NAME")
            Me.columnOCBS_Cust_Nr = MyBase.Columns("OCBS_Cust_Nr")
            Me.columnOCBS_Cust_Name = MyBase.Columns("OCBS_Cust_Name")
            Me.columnBIC_CODE = MyBase.Columns("BIC_CODE")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnMeldepflicht = MyBase.Columns("Meldepflicht")
            Me.columnClientType = MyBase.Columns("ClientType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTransactionStatus = New Global.System.Data.DataColumn("TransactionStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionStatus)
            Me.columnTransactionType = New Global.System.Data.DataColumn("TransactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionType)
            Me.columnInstrumentType = New Global.System.Data.DataColumn("InstrumentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstrumentType)
            Me.columnBRANCH = New Global.System.Data.DataColumn("BRANCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRANCH)
            Me.columnDEAL_NO = New Global.System.Data.DataColumn("DEAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEAL_NO)
            Me.columnPRODUCT = New Global.System.Data.DataColumn("PRODUCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT)
            Me.columnTYPE = New Global.System.Data.DataColumn("TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYPE)
            Me.columnCUSTOMER = New Global.System.Data.DataColumn("CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER)
            Me.columnCCY = New Global.System.Data.DataColumn("CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY)
            Me.columnCCY_AMOUNT = New Global.System.Data.DataColumn("CCY_AMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY_AMOUNT)
            Me.columnRATE_CODE = New Global.System.Data.DataColumn("RATE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRATE_CODE)
            Me.columnInterest_rate = New Global.System.Data.DataColumn("Interest_rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterest_rate)
            Me.columnTradeDate = New Global.System.Data.DataColumn("TradeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeDate)
            Me.columnMAT_DATE = New Global.System.Data.DataColumn("MAT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAT_DATE)
            Me.columnDaysToMaturity = New Global.System.Data.DataColumn("DaysToMaturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDaysToMaturity)
            Me.columnREVERSAL_DATE = New Global.System.Data.DataColumn("REVERSAL_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVERSAL_DATE)
            Me.columnREVERSAL_REASON = New Global.System.Data.DataColumn("REVERSAL_REASON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREVERSAL_REASON)
            Me.columnNEW_DEAL_NO = New Global.System.Data.DataColumn("NEW_DEAL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEW_DEAL_NO)
            Me.columnVALUE_DATE = New Global.System.Data.DataColumn("VALUE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALUE_DATE)
            Me.columnPORTFOLIO = New Global.System.Data.DataColumn("PORTFOLIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORTFOLIO)
            Me.columnLINKED_DEAL_NR = New Global.System.Data.DataColumn("LINKED_DEAL_NR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINKED_DEAL_NR)
            Me.columnSTRATEGY = New Global.System.Data.DataColumn("STRATEGY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRATEGY)
            Me.columnFUNDING_RATE = New Global.System.Data.DataColumn("FUNDING_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUNDING_RATE)
            Me.columnFUND_CENTER = New Global.System.Data.DataColumn("FUND_CENTER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUND_CENTER)
            Me.columnCOST_CENTER = New Global.System.Data.DataColumn("COST_CENTER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOST_CENTER)
            Me.columnTRADER = New Global.System.Data.DataColumn("TRADER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRADER)
            Me.columnCORPORATE_TRADER = New Global.System.Data.DataColumn("CORPORATE_TRADER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORPORATE_TRADER)
            Me.columnCORPORATE_PORTFOLIO = New Global.System.Data.DataColumn("CORPORATE_PORTFOLIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORPORATE_PORTFOLIO)
            Me.columnFRONT_END_DEAL_NR = New Global.System.Data.DataColumn("FRONT_END_DEAL_NR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRONT_END_DEAL_NR)
            Me.columnCUSTOMER_SHORT_NAME = New Global.System.Data.DataColumn("CUSTOMER_SHORT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER_SHORT_NAME)
            Me.columnCUSTOMER_LONG_NAME = New Global.System.Data.DataColumn("CUSTOMER_LONG_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER_LONG_NAME)
            Me.columnBROKER_SHORT_NAME = New Global.System.Data.DataColumn("BROKER_SHORT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBROKER_SHORT_NAME)
            Me.columnOCBS_Cust_Nr = New Global.System.Data.DataColumn("OCBS_Cust_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Nr)
            Me.columnOCBS_Cust_Name = New Global.System.Data.DataColumn("OCBS_Cust_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Name)
            Me.columnBIC_CODE = New Global.System.Data.DataColumn("BIC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC_CODE)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnMeldepflicht = New Global.System.Data.DataColumn("Meldepflicht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeldepflicht)
            Me.columnClientType = New Global.System.Data.DataColumn("ClientType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnTransactionStatus.MaxLength = 50
            Me.columnTransactionType.MaxLength = 50
            Me.columnInstrumentType.MaxLength = 50
            Me.columnBRANCH.MaxLength = 255
            Me.columnDEAL_NO.MaxLength = 255
            Me.columnPRODUCT.MaxLength = 255
            Me.columnTYPE.MaxLength = 255
            Me.columnCUSTOMER.MaxLength = 255
            Me.columnCCY.MaxLength = 255
            Me.columnRATE_CODE.MaxLength = 255
            Me.columnREVERSAL_REASON.MaxLength = 255
            Me.columnNEW_DEAL_NO.MaxLength = 255
            Me.columnPORTFOLIO.MaxLength = 255
            Me.columnLINKED_DEAL_NR.MaxLength = 255
            Me.columnSTRATEGY.MaxLength = 255
            Me.columnFUND_CENTER.MaxLength = 255
            Me.columnCOST_CENTER.MaxLength = 255
            Me.columnTRADER.MaxLength = 255
            Me.columnCORPORATE_TRADER.MaxLength = 255
            Me.columnCORPORATE_PORTFOLIO.MaxLength = 255
            Me.columnFRONT_END_DEAL_NR.MaxLength = 255
            Me.columnCUSTOMER_SHORT_NAME.MaxLength = 255
            Me.columnCUSTOMER_LONG_NAME.MaxLength = 255
            Me.columnBROKER_SHORT_NAME.MaxLength = 255
            Me.columnOCBS_Cust_Nr.MaxLength = 50
            Me.columnOCBS_Cust_Name.MaxLength = 255
            Me.columnBIC_CODE.MaxLength = 50
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnMeldepflicht.MaxLength = 1
            Me.columnClientType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewOPICS_MMRow() As OPICS_MMRow
            Return CType(Me.NewRow,OPICS_MMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPICS_MMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPICS_MMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPICS_MMRowChangedEvent) Is Nothing) Then
                RaiseEvent OPICS_MMRowChanged(Me, New OPICS_MMRowChangeEvent(CType(e.Row,OPICS_MMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPICS_MMRowChangingEvent) Is Nothing) Then
                RaiseEvent OPICS_MMRowChanging(Me, New OPICS_MMRowChangeEvent(CType(e.Row,OPICS_MMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPICS_MMRowDeletedEvent) Is Nothing) Then
                RaiseEvent OPICS_MMRowDeleted(Me, New OPICS_MMRowChangeEvent(CType(e.Row,OPICS_MMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPICS_MMRowDeletingEvent) Is Nothing) Then
                RaiseEvent OPICS_MMRowDeleting(Me, New OPICS_MMRowChangeEvent(CType(e.Row,OPICS_MMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveOPICS_MMRow(ByVal row As OPICS_MMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPICS_MMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPICS_FX_SWAPSDataTable
        Inherits Global.System.Data.TypedTableBase(Of OPICS_FX_SWAPSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTransactionType As Global.System.Data.DataColumn
        
        Private columnTransactionStatus As Global.System.Data.DataColumn
        
        Private columnSpot_Deal_No As Global.System.Data.DataColumn
        
        Private columnCustomer As Global.System.Data.DataColumn
        
        Private columnSeqNr_NearLeg As Global.System.Data.DataColumn
        
        Private columnDraftNr_NearLeg As Global.System.Data.DataColumn
        
        Private columnNearLeg_P_S As Global.System.Data.DataColumn
        
        Private columnNearLeg_CCY As Global.System.Data.DataColumn
        
        Private columnNearLeg_CCY_Amount As Global.System.Data.DataColumn
        
        Private columnSpotRate As Global.System.Data.DataColumn
        
        Private columnNearLeg_CTR As Global.System.Data.DataColumn
        
        Private columnNearLeg_CTR_Amount As Global.System.Data.DataColumn
        
        Private columnSpot_Deal_Status As Global.System.Data.DataColumn
        
        Private columnTradeDate As Global.System.Data.DataColumn
        
        Private columnValue_date As Global.System.Data.DataColumn
        
        Private columnSeqNr_FarLeg As Global.System.Data.DataColumn
        
        Private columnDraftNr_FarLeg As Global.System.Data.DataColumn
        
        Private columnSwap_Deal_No As Global.System.Data.DataColumn
        
        Private columnFarLeg_P_S As Global.System.Data.DataColumn
        
        Private columnFarLeg_CCY As Global.System.Data.DataColumn
        
        Private columnFarLeg_CCY_Amount As Global.System.Data.DataColumn
        
        Private columnSwapRate As Global.System.Data.DataColumn
        
        Private columnFarLeg_CTR As Global.System.Data.DataColumn
        
        Private columnFarLeg_CTR_Amount As Global.System.Data.DataColumn
        
        Private columnSwap_Deal_Status As Global.System.Data.DataColumn
        
        Private columnMaturityDate As Global.System.Data.DataColumn
        
        Private columnDaysToMaturity As Global.System.Data.DataColumn
        
        Private columnSwapPoints As Global.System.Data.DataColumn
        
        Private columnFE_Dealno As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Nr As Global.System.Data.DataColumn
        
        Private columnOCBS_Customer_Name As Global.System.Data.DataColumn
        
        Private columnBIC_CODE As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnMeldepflicht As Global.System.Data.DataColumn
        
        Private columnClientType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPICS_FX_SWAPS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spot_Deal_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpot_Deal_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SeqNr_NearLegColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeqNr_NearLeg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DraftNr_NearLegColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDraftNr_NearLeg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NearLeg_P_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNearLeg_P_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NearLeg_CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNearLeg_CCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NearLeg_CCY_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNearLeg_CCY_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpotRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpotRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NearLeg_CTRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNearLeg_CTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NearLeg_CTR_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNearLeg_CTR_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spot_Deal_StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpot_Deal_Status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TradeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Value_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValue_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SeqNr_FarLegColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeqNr_FarLeg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DraftNr_FarLegColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDraftNr_FarLeg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Swap_Deal_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwap_Deal_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FarLeg_P_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFarLeg_P_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FarLeg_CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFarLeg_CCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FarLeg_CCY_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFarLeg_CCY_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SwapRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwapRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FarLeg_CTRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFarLeg_CTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FarLeg_CTR_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFarLeg_CTR_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Swap_Deal_StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwap_Deal_Status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DaysToMaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDaysToMaturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SwapPointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwapPoints
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FE_DealnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_Dealno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Customer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MeldepflichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeldepflicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPICS_FX_SWAPSRow
            Get
                Return CType(Me.Rows(index),OPICS_FX_SWAPSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FX_SWAPSRowChanging As OPICS_FX_SWAPSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FX_SWAPSRowChanged As OPICS_FX_SWAPSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FX_SWAPSRowDeleting As OPICS_FX_SWAPSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FX_SWAPSRowDeleted As OPICS_FX_SWAPSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddOPICS_FX_SWAPSRow(ByVal row As OPICS_FX_SWAPSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddOPICS_FX_SWAPSRow( _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal Spot_Deal_No As String,  _
                    ByVal Customer As String,  _
                    ByVal SeqNr_NearLeg As String,  _
                    ByVal DraftNr_NearLeg As String,  _
                    ByVal NearLeg_P_S As String,  _
                    ByVal NearLeg_CCY As String,  _
                    ByVal NearLeg_CCY_Amount As Double,  _
                    ByVal SpotRate As Double,  _
                    ByVal NearLeg_CTR As String,  _
                    ByVal NearLeg_CTR_Amount As Double,  _
                    ByVal Spot_Deal_Status As String,  _
                    ByVal TradeDate As Date,  _
                    ByVal Value_date As Date,  _
                    ByVal SeqNr_FarLeg As String,  _
                    ByVal DraftNr_FarLeg As String,  _
                    ByVal Swap_Deal_No As String,  _
                    ByVal FarLeg_P_S As String,  _
                    ByVal FarLeg_CCY As String,  _
                    ByVal FarLeg_CCY_Amount As Double,  _
                    ByVal SwapRate As Double,  _
                    ByVal FarLeg_CTR As String,  _
                    ByVal FarLeg_CTR_Amount As Double,  _
                    ByVal Swap_Deal_Status As String,  _
                    ByVal MaturityDate As Date,  _
                    ByVal DaysToMaturity As Double,  _
                    ByVal SwapPoints As Double,  _
                    ByVal FE_Dealno As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Meldepflicht As String,  _
                    ByVal ClientType As String) As OPICS_FX_SWAPSRow
            Dim rowOPICS_FX_SWAPSRow As OPICS_FX_SWAPSRow = CType(Me.NewRow,OPICS_FX_SWAPSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TransactionType, TransactionStatus, Spot_Deal_No, Customer, SeqNr_NearLeg, DraftNr_NearLeg, NearLeg_P_S, NearLeg_CCY, NearLeg_CCY_Amount, SpotRate, NearLeg_CTR, NearLeg_CTR_Amount, Spot_Deal_Status, TradeDate, Value_date, SeqNr_FarLeg, DraftNr_FarLeg, Swap_Deal_No, FarLeg_P_S, FarLeg_CCY, FarLeg_CCY_Amount, SwapRate, FarLeg_CTR, FarLeg_CTR_Amount, Swap_Deal_Status, MaturityDate, DaysToMaturity, SwapPoints, FE_Dealno, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, LEI_CODE, Meldepflicht, ClientType}
            rowOPICS_FX_SWAPSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPICS_FX_SWAPSRow)
            Return rowOPICS_FX_SWAPSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As OPICS_FX_SWAPSRow
            Return CType(Me.Rows.Find(New Object() {ID}),OPICS_FX_SWAPSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPICS_FX_SWAPSDataTable = CType(MyBase.Clone,OPICS_FX_SWAPSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPICS_FX_SWAPSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTransactionType = MyBase.Columns("TransactionType")
            Me.columnTransactionStatus = MyBase.Columns("TransactionStatus")
            Me.columnSpot_Deal_No = MyBase.Columns("Spot_Deal_No")
            Me.columnCustomer = MyBase.Columns("Customer")
            Me.columnSeqNr_NearLeg = MyBase.Columns("SeqNr_NearLeg")
            Me.columnDraftNr_NearLeg = MyBase.Columns("DraftNr_NearLeg")
            Me.columnNearLeg_P_S = MyBase.Columns("NearLeg_P_S")
            Me.columnNearLeg_CCY = MyBase.Columns("NearLeg_CCY")
            Me.columnNearLeg_CCY_Amount = MyBase.Columns("NearLeg_CCY_Amount")
            Me.columnSpotRate = MyBase.Columns("SpotRate")
            Me.columnNearLeg_CTR = MyBase.Columns("NearLeg_CTR")
            Me.columnNearLeg_CTR_Amount = MyBase.Columns("NearLeg_CTR_Amount")
            Me.columnSpot_Deal_Status = MyBase.Columns("Spot_Deal_Status")
            Me.columnTradeDate = MyBase.Columns("TradeDate")
            Me.columnValue_date = MyBase.Columns("Value_date")
            Me.columnSeqNr_FarLeg = MyBase.Columns("SeqNr_FarLeg")
            Me.columnDraftNr_FarLeg = MyBase.Columns("DraftNr_FarLeg")
            Me.columnSwap_Deal_No = MyBase.Columns("Swap_Deal_No")
            Me.columnFarLeg_P_S = MyBase.Columns("FarLeg_P_S")
            Me.columnFarLeg_CCY = MyBase.Columns("FarLeg_CCY")
            Me.columnFarLeg_CCY_Amount = MyBase.Columns("FarLeg_CCY_Amount")
            Me.columnSwapRate = MyBase.Columns("SwapRate")
            Me.columnFarLeg_CTR = MyBase.Columns("FarLeg_CTR")
            Me.columnFarLeg_CTR_Amount = MyBase.Columns("FarLeg_CTR_Amount")
            Me.columnSwap_Deal_Status = MyBase.Columns("Swap_Deal_Status")
            Me.columnMaturityDate = MyBase.Columns("MaturityDate")
            Me.columnDaysToMaturity = MyBase.Columns("DaysToMaturity")
            Me.columnSwapPoints = MyBase.Columns("SwapPoints")
            Me.columnFE_Dealno = MyBase.Columns("FE_Dealno")
            Me.columnOCBS_Cust_Nr = MyBase.Columns("OCBS_Cust_Nr")
            Me.columnOCBS_Customer_Name = MyBase.Columns("OCBS_Customer_Name")
            Me.columnBIC_CODE = MyBase.Columns("BIC_CODE")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnMeldepflicht = MyBase.Columns("Meldepflicht")
            Me.columnClientType = MyBase.Columns("ClientType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTransactionType = New Global.System.Data.DataColumn("TransactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionType)
            Me.columnTransactionStatus = New Global.System.Data.DataColumn("TransactionStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionStatus)
            Me.columnSpot_Deal_No = New Global.System.Data.DataColumn("Spot_Deal_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpot_Deal_No)
            Me.columnCustomer = New Global.System.Data.DataColumn("Customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer)
            Me.columnSeqNr_NearLeg = New Global.System.Data.DataColumn("SeqNr_NearLeg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeqNr_NearLeg)
            Me.columnDraftNr_NearLeg = New Global.System.Data.DataColumn("DraftNr_NearLeg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDraftNr_NearLeg)
            Me.columnNearLeg_P_S = New Global.System.Data.DataColumn("NearLeg_P_S", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNearLeg_P_S)
            Me.columnNearLeg_CCY = New Global.System.Data.DataColumn("NearLeg_CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNearLeg_CCY)
            Me.columnNearLeg_CCY_Amount = New Global.System.Data.DataColumn("NearLeg_CCY_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNearLeg_CCY_Amount)
            Me.columnSpotRate = New Global.System.Data.DataColumn("SpotRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpotRate)
            Me.columnNearLeg_CTR = New Global.System.Data.DataColumn("NearLeg_CTR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNearLeg_CTR)
            Me.columnNearLeg_CTR_Amount = New Global.System.Data.DataColumn("NearLeg_CTR_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNearLeg_CTR_Amount)
            Me.columnSpot_Deal_Status = New Global.System.Data.DataColumn("Spot_Deal_Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpot_Deal_Status)
            Me.columnTradeDate = New Global.System.Data.DataColumn("TradeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeDate)
            Me.columnValue_date = New Global.System.Data.DataColumn("Value_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValue_date)
            Me.columnSeqNr_FarLeg = New Global.System.Data.DataColumn("SeqNr_FarLeg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeqNr_FarLeg)
            Me.columnDraftNr_FarLeg = New Global.System.Data.DataColumn("DraftNr_FarLeg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDraftNr_FarLeg)
            Me.columnSwap_Deal_No = New Global.System.Data.DataColumn("Swap_Deal_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwap_Deal_No)
            Me.columnFarLeg_P_S = New Global.System.Data.DataColumn("FarLeg_P_S", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFarLeg_P_S)
            Me.columnFarLeg_CCY = New Global.System.Data.DataColumn("FarLeg_CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFarLeg_CCY)
            Me.columnFarLeg_CCY_Amount = New Global.System.Data.DataColumn("FarLeg_CCY_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFarLeg_CCY_Amount)
            Me.columnSwapRate = New Global.System.Data.DataColumn("SwapRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwapRate)
            Me.columnFarLeg_CTR = New Global.System.Data.DataColumn("FarLeg_CTR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFarLeg_CTR)
            Me.columnFarLeg_CTR_Amount = New Global.System.Data.DataColumn("FarLeg_CTR_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFarLeg_CTR_Amount)
            Me.columnSwap_Deal_Status = New Global.System.Data.DataColumn("Swap_Deal_Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwap_Deal_Status)
            Me.columnMaturityDate = New Global.System.Data.DataColumn("MaturityDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityDate)
            Me.columnDaysToMaturity = New Global.System.Data.DataColumn("DaysToMaturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDaysToMaturity)
            Me.columnSwapPoints = New Global.System.Data.DataColumn("SwapPoints", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwapPoints)
            Me.columnFE_Dealno = New Global.System.Data.DataColumn("FE_Dealno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_Dealno)
            Me.columnOCBS_Cust_Nr = New Global.System.Data.DataColumn("OCBS_Cust_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Nr)
            Me.columnOCBS_Customer_Name = New Global.System.Data.DataColumn("OCBS_Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Customer_Name)
            Me.columnBIC_CODE = New Global.System.Data.DataColumn("BIC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC_CODE)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnMeldepflicht = New Global.System.Data.DataColumn("Meldepflicht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeldepflicht)
            Me.columnClientType = New Global.System.Data.DataColumn("ClientType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnTransactionType.MaxLength = 50
            Me.columnTransactionStatus.MaxLength = 50
            Me.columnSpot_Deal_No.MaxLength = 255
            Me.columnCustomer.MaxLength = 255
            Me.columnSeqNr_NearLeg.MaxLength = 50
            Me.columnDraftNr_NearLeg.MaxLength = 50
            Me.columnNearLeg_P_S.MaxLength = 255
            Me.columnNearLeg_CCY.MaxLength = 3
            Me.columnNearLeg_CTR.MaxLength = 3
            Me.columnSpot_Deal_Status.MaxLength = 50
            Me.columnSeqNr_FarLeg.MaxLength = 50
            Me.columnDraftNr_FarLeg.MaxLength = 50
            Me.columnSwap_Deal_No.MaxLength = 255
            Me.columnFarLeg_P_S.MaxLength = 255
            Me.columnFarLeg_CCY.MaxLength = 3
            Me.columnFarLeg_CTR.MaxLength = 3
            Me.columnSwap_Deal_Status.MaxLength = 50
            Me.columnFE_Dealno.MaxLength = 255
            Me.columnOCBS_Cust_Nr.MaxLength = 50
            Me.columnOCBS_Customer_Name.MaxLength = 255
            Me.columnBIC_CODE.MaxLength = 50
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnMeldepflicht.MaxLength = 1
            Me.columnClientType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewOPICS_FX_SWAPSRow() As OPICS_FX_SWAPSRow
            Return CType(Me.NewRow,OPICS_FX_SWAPSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPICS_FX_SWAPSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPICS_FX_SWAPSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPICS_FX_SWAPSRowChangedEvent) Is Nothing) Then
                RaiseEvent OPICS_FX_SWAPSRowChanged(Me, New OPICS_FX_SWAPSRowChangeEvent(CType(e.Row,OPICS_FX_SWAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPICS_FX_SWAPSRowChangingEvent) Is Nothing) Then
                RaiseEvent OPICS_FX_SWAPSRowChanging(Me, New OPICS_FX_SWAPSRowChangeEvent(CType(e.Row,OPICS_FX_SWAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPICS_FX_SWAPSRowDeletedEvent) Is Nothing) Then
                RaiseEvent OPICS_FX_SWAPSRowDeleted(Me, New OPICS_FX_SWAPSRowChangeEvent(CType(e.Row,OPICS_FX_SWAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPICS_FX_SWAPSRowDeletingEvent) Is Nothing) Then
                RaiseEvent OPICS_FX_SWAPSRowDeleting(Me, New OPICS_FX_SWAPSRowChangeEvent(CType(e.Row,OPICS_FX_SWAPSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveOPICS_FX_SWAPSRow(ByVal row As OPICS_FX_SWAPSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPICS_FX_SWAPSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPICS_FXDataTable
        Inherits Global.System.Data.TypedTableBase(Of OPICS_FXRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTransactionStatus As Global.System.Data.DataColumn
        
        Private columnDeal_No As Global.System.Data.DataColumn
        
        Private columnSeq_No As Global.System.Data.DataColumn
        
        Private columnCustomer As Global.System.Data.DataColumn
        
        Private columnP_S As Global.System.Data.DataColumn
        
        Private columnCCY As Global.System.Data.DataColumn
        
        Private columnCCY_Amount As Global.System.Data.DataColumn
        
        Private columnRate As Global.System.Data.DataColumn
        
        Private columnCTR As Global.System.Data.DataColumn
        
        Private columnCTR_Amount As Global.System.Data.DataColumn
        
        Private columnTradeDate As Global.System.Data.DataColumn
        
        Private columnValue_date As Global.System.Data.DataColumn
        
        Private columnSwap_No As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnFE_Dealno As Global.System.Data.DataColumn
        
        Private columnDraftNo As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Nr As Global.System.Data.DataColumn
        
        Private columnOCBS_Customer_Name As Global.System.Data.DataColumn
        
        Private columnBIC_CODE As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnClientType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPICS_FX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Deal_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeal_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Seq_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeq_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property P_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCY_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CTRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CTR_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTR_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TradeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Value_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValue_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Swap_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwap_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FE_DealnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_Dealno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DraftNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDraftNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Customer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPICS_FXRow
            Get
                Return CType(Me.Rows(index),OPICS_FXRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FXRowChanging As OPICS_FXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FXRowChanged As OPICS_FXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FXRowDeleting As OPICS_FXRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event OPICS_FXRowDeleted As OPICS_FXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddOPICS_FXRow(ByVal row As OPICS_FXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddOPICS_FXRow( _
                    ByVal TransactionStatus As String,  _
                    ByVal Deal_No As String,  _
                    ByVal Seq_No As String,  _
                    ByVal Customer As String,  _
                    ByVal P_S As String,  _
                    ByVal CCY As String,  _
                    ByVal CCY_Amount As Double,  _
                    ByVal Rate As Double,  _
                    ByVal CTR As String,  _
                    ByVal CTR_Amount As Double,  _
                    ByVal TradeDate As Date,  _
                    ByVal Value_date As Date,  _
                    ByVal Swap_No As String,  _
                    ByVal Status As String,  _
                    ByVal FE_Dealno As String,  _
                    ByVal DraftNo As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal ClientType As String) As OPICS_FXRow
            Dim rowOPICS_FXRow As OPICS_FXRow = CType(Me.NewRow,OPICS_FXRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TransactionStatus, Deal_No, Seq_No, Customer, P_S, CCY, CCY_Amount, Rate, CTR, CTR_Amount, TradeDate, Value_date, Swap_No, Status, FE_Dealno, DraftNo, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, LEI_CODE, ClientType}
            rowOPICS_FXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPICS_FXRow)
            Return rowOPICS_FXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As OPICS_FXRow
            Return CType(Me.Rows.Find(New Object() {ID}),OPICS_FXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPICS_FXDataTable = CType(MyBase.Clone,OPICS_FXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPICS_FXDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTransactionStatus = MyBase.Columns("TransactionStatus")
            Me.columnDeal_No = MyBase.Columns("Deal_No")
            Me.columnSeq_No = MyBase.Columns("Seq_No")
            Me.columnCustomer = MyBase.Columns("Customer")
            Me.columnP_S = MyBase.Columns("P_S")
            Me.columnCCY = MyBase.Columns("CCY")
            Me.columnCCY_Amount = MyBase.Columns("CCY_Amount")
            Me.columnRate = MyBase.Columns("Rate")
            Me.columnCTR = MyBase.Columns("CTR")
            Me.columnCTR_Amount = MyBase.Columns("CTR_Amount")
            Me.columnTradeDate = MyBase.Columns("TradeDate")
            Me.columnValue_date = MyBase.Columns("Value_date")
            Me.columnSwap_No = MyBase.Columns("Swap_No")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnFE_Dealno = MyBase.Columns("FE_Dealno")
            Me.columnDraftNo = MyBase.Columns("DraftNo")
            Me.columnOCBS_Cust_Nr = MyBase.Columns("OCBS_Cust_Nr")
            Me.columnOCBS_Customer_Name = MyBase.Columns("OCBS_Customer_Name")
            Me.columnBIC_CODE = MyBase.Columns("BIC_CODE")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnClientType = MyBase.Columns("ClientType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTransactionStatus = New Global.System.Data.DataColumn("TransactionStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionStatus)
            Me.columnDeal_No = New Global.System.Data.DataColumn("Deal_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeal_No)
            Me.columnSeq_No = New Global.System.Data.DataColumn("Seq_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeq_No)
            Me.columnCustomer = New Global.System.Data.DataColumn("Customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomer)
            Me.columnP_S = New Global.System.Data.DataColumn("P_S", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_S)
            Me.columnCCY = New Global.System.Data.DataColumn("CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY)
            Me.columnCCY_Amount = New Global.System.Data.DataColumn("CCY_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY_Amount)
            Me.columnRate = New Global.System.Data.DataColumn("Rate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate)
            Me.columnCTR = New Global.System.Data.DataColumn("CTR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTR)
            Me.columnCTR_Amount = New Global.System.Data.DataColumn("CTR_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTR_Amount)
            Me.columnTradeDate = New Global.System.Data.DataColumn("TradeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeDate)
            Me.columnValue_date = New Global.System.Data.DataColumn("Value_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValue_date)
            Me.columnSwap_No = New Global.System.Data.DataColumn("Swap_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwap_No)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnFE_Dealno = New Global.System.Data.DataColumn("FE_Dealno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_Dealno)
            Me.columnDraftNo = New Global.System.Data.DataColumn("DraftNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDraftNo)
            Me.columnOCBS_Cust_Nr = New Global.System.Data.DataColumn("OCBS_Cust_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Nr)
            Me.columnOCBS_Customer_Name = New Global.System.Data.DataColumn("OCBS_Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Customer_Name)
            Me.columnBIC_CODE = New Global.System.Data.DataColumn("BIC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC_CODE)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnClientType = New Global.System.Data.DataColumn("ClientType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnTransactionStatus.MaxLength = 50
            Me.columnDeal_No.MaxLength = 255
            Me.columnSeq_No.MaxLength = 255
            Me.columnCustomer.MaxLength = 255
            Me.columnP_S.MaxLength = 255
            Me.columnCCY.MaxLength = 255
            Me.columnCTR.MaxLength = 255
            Me.columnSwap_No.MaxLength = 255
            Me.columnStatus.MaxLength = 255
            Me.columnFE_Dealno.MaxLength = 255
            Me.columnDraftNo.MaxLength = 255
            Me.columnOCBS_Cust_Nr.MaxLength = 50
            Me.columnOCBS_Customer_Name.MaxLength = 255
            Me.columnBIC_CODE.MaxLength = 50
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnClientType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewOPICS_FXRow() As OPICS_FXRow
            Return CType(Me.NewRow,OPICS_FXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPICS_FXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPICS_FXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPICS_FXRowChangedEvent) Is Nothing) Then
                RaiseEvent OPICS_FXRowChanged(Me, New OPICS_FXRowChangeEvent(CType(e.Row,OPICS_FXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPICS_FXRowChangingEvent) Is Nothing) Then
                RaiseEvent OPICS_FXRowChanging(Me, New OPICS_FXRowChangeEvent(CType(e.Row,OPICS_FXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPICS_FXRowDeletedEvent) Is Nothing) Then
                RaiseEvent OPICS_FXRowDeleted(Me, New OPICS_FXRowChangeEvent(CType(e.Row,OPICS_FXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPICS_FXRowDeletingEvent) Is Nothing) Then
                RaiseEvent OPICS_FXRowDeleting(Me, New OPICS_FXRowChangeEvent(CType(e.Row,OPICS_FXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveOPICS_FXRow(ByVal row As OPICS_FXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPICS_FXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MM_STATISTIC_DATEDataTable
        Inherits Global.System.Data.TypedTableBase(Of MM_STATISTIC_DATERow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMM_Statistic_Date As Global.System.Data.DataColumn
        
        Private columnBGMM_RepID As Global.System.Data.DataColumn
        
        Private columnUGMM_RepID As Global.System.Data.DataColumn
        
        Private columnFXSW_RepID As Global.System.Data.DataColumn
        
        Private columnEORW_RepID As Global.System.Data.DataColumn
        
        Private columnBGMM_Result As Global.System.Data.DataColumn
        
        Private columnUGMM_Result As Global.System.Data.DataColumn
        
        Private columnFXSW_Result As Global.System.Data.DataColumn
        
        Private columnEORW_Result As Global.System.Data.DataColumn
        
        Private columnReportLocked As Global.System.Data.DataColumn
        
        Private columnBGMM_Result_Check As Global.System.Data.DataColumn
        
        Private columnUGMM_Result_Check As Global.System.Data.DataColumn
        
        Private columnFXSW_Result_Check As Global.System.Data.DataColumn
        
        Private columnEORW_Result_Check As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MM_STATISTIC_DATE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MM_Statistic_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMM_Statistic_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BGMM_RepIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGMM_RepID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UGMM_RepIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUGMM_RepID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FXSW_RepIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFXSW_RepID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EORW_RepIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEORW_RepID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BGMM_ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGMM_Result
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UGMM_ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUGMM_Result
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FXSW_ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFXSW_Result
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EORW_ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEORW_Result
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReportLockedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportLocked
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BGMM_Result_CheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBGMM_Result_Check
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UGMM_Result_CheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUGMM_Result_Check
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FXSW_Result_CheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFXSW_Result_Check
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EORW_Result_CheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEORW_Result_Check
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MM_STATISTIC_DATERow
            Get
                Return CType(Me.Rows(index),MM_STATISTIC_DATERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_DATERowChanging As MM_STATISTIC_DATERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_DATERowChanged As MM_STATISTIC_DATERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_DATERowDeleting As MM_STATISTIC_DATERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_DATERowDeleted As MM_STATISTIC_DATERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMM_STATISTIC_DATERow(ByVal row As MM_STATISTIC_DATERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMM_STATISTIC_DATERow(ByVal MM_Statistic_Date As Date, ByVal BGMM_RepID As String, ByVal UGMM_RepID As String, ByVal FXSW_RepID As String, ByVal EORW_RepID As String, ByVal BGMM_Result As Double, ByVal UGMM_Result As Double, ByVal FXSW_Result As Double, ByVal EORW_Result As Double, ByVal ReportLocked As Boolean, ByVal BGMM_Result_Check As String, ByVal UGMM_Result_Check As String, ByVal FXSW_Result_Check As String, ByVal EORW_Result_Check As String) As MM_STATISTIC_DATERow
            Dim rowMM_STATISTIC_DATERow As MM_STATISTIC_DATERow = CType(Me.NewRow,MM_STATISTIC_DATERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, MM_Statistic_Date, BGMM_RepID, UGMM_RepID, FXSW_RepID, EORW_RepID, BGMM_Result, UGMM_Result, FXSW_Result, EORW_Result, ReportLocked, BGMM_Result_Check, UGMM_Result_Check, FXSW_Result_Check, EORW_Result_Check}
            rowMM_STATISTIC_DATERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMM_STATISTIC_DATERow)
            Return rowMM_STATISTIC_DATERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As MM_STATISTIC_DATERow
            Return CType(Me.Rows.Find(New Object() {ID}),MM_STATISTIC_DATERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MM_STATISTIC_DATEDataTable = CType(MyBase.Clone,MM_STATISTIC_DATEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MM_STATISTIC_DATEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnMM_Statistic_Date = MyBase.Columns("MM_Statistic_Date")
            Me.columnBGMM_RepID = MyBase.Columns("BGMM_RepID")
            Me.columnUGMM_RepID = MyBase.Columns("UGMM_RepID")
            Me.columnFXSW_RepID = MyBase.Columns("FXSW_RepID")
            Me.columnEORW_RepID = MyBase.Columns("EORW_RepID")
            Me.columnBGMM_Result = MyBase.Columns("BGMM_Result")
            Me.columnUGMM_Result = MyBase.Columns("UGMM_Result")
            Me.columnFXSW_Result = MyBase.Columns("FXSW_Result")
            Me.columnEORW_Result = MyBase.Columns("EORW_Result")
            Me.columnReportLocked = MyBase.Columns("ReportLocked")
            Me.columnBGMM_Result_Check = MyBase.Columns("BGMM_Result_Check")
            Me.columnUGMM_Result_Check = MyBase.Columns("UGMM_Result_Check")
            Me.columnFXSW_Result_Check = MyBase.Columns("FXSW_Result_Check")
            Me.columnEORW_Result_Check = MyBase.Columns("EORW_Result_Check")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMM_Statistic_Date = New Global.System.Data.DataColumn("MM_Statistic_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMM_Statistic_Date)
            Me.columnBGMM_RepID = New Global.System.Data.DataColumn("BGMM_RepID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGMM_RepID)
            Me.columnUGMM_RepID = New Global.System.Data.DataColumn("UGMM_RepID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUGMM_RepID)
            Me.columnFXSW_RepID = New Global.System.Data.DataColumn("FXSW_RepID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFXSW_RepID)
            Me.columnEORW_RepID = New Global.System.Data.DataColumn("EORW_RepID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEORW_RepID)
            Me.columnBGMM_Result = New Global.System.Data.DataColumn("BGMM_Result", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGMM_Result)
            Me.columnUGMM_Result = New Global.System.Data.DataColumn("UGMM_Result", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUGMM_Result)
            Me.columnFXSW_Result = New Global.System.Data.DataColumn("FXSW_Result", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFXSW_Result)
            Me.columnEORW_Result = New Global.System.Data.DataColumn("EORW_Result", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEORW_Result)
            Me.columnReportLocked = New Global.System.Data.DataColumn("ReportLocked", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportLocked)
            Me.columnBGMM_Result_Check = New Global.System.Data.DataColumn("BGMM_Result_Check", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBGMM_Result_Check)
            Me.columnUGMM_Result_Check = New Global.System.Data.DataColumn("UGMM_Result_Check", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUGMM_Result_Check)
            Me.columnFXSW_Result_Check = New Global.System.Data.DataColumn("FXSW_Result_Check", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFXSW_Result_Check)
            Me.columnEORW_Result_Check = New Global.System.Data.DataColumn("EORW_Result_Check", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEORW_Result_Check)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnBGMM_RepID.MaxLength = 50
            Me.columnUGMM_RepID.MaxLength = 50
            Me.columnFXSW_RepID.MaxLength = 50
            Me.columnEORW_RepID.MaxLength = 50
            Me.columnBGMM_Result_Check.MaxLength = 50
            Me.columnUGMM_Result_Check.MaxLength = 50
            Me.columnFXSW_Result_Check.MaxLength = 50
            Me.columnEORW_Result_Check.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMM_STATISTIC_DATERow() As MM_STATISTIC_DATERow
            Return CType(Me.NewRow,MM_STATISTIC_DATERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MM_STATISTIC_DATERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MM_STATISTIC_DATERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MM_STATISTIC_DATERowChangedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_DATERowChanged(Me, New MM_STATISTIC_DATERowChangeEvent(CType(e.Row,MM_STATISTIC_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MM_STATISTIC_DATERowChangingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_DATERowChanging(Me, New MM_STATISTIC_DATERowChangeEvent(CType(e.Row,MM_STATISTIC_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MM_STATISTIC_DATERowDeletedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_DATERowDeleted(Me, New MM_STATISTIC_DATERowChangeEvent(CType(e.Row,MM_STATISTIC_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MM_STATISTIC_DATERowDeletingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_DATERowDeleting(Me, New MM_STATISTIC_DATERowChangeEvent(CType(e.Row,MM_STATISTIC_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMM_STATISTIC_DATERow(ByVal row As MM_STATISTIC_DATERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MM_STATISTIC_DATEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MM_STATISTIC_FXSWDataTable
        Inherits Global.System.Data.TypedTableBase(Of MM_STATISTIC_FXSWRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMeldepflicht As Global.System.Data.DataColumn
        
        Private columnTransactionType As Global.System.Data.DataColumn
        
        Private columnTransactionStatus As Global.System.Data.DataColumn
        
        Private columnPTI_Swap_Deal_No As Global.System.Data.DataColumn
        
        Private columnTransactionCurrencyCodeEUR As Global.System.Data.DataColumn
        
        Private columnTransactionNominalAmount As Global.System.Data.DataColumn
        
        Private columnTransactionForeignCurrencyCode As Global.System.Data.DataColumn
        
        Private columnSpotRate As Global.System.Data.DataColumn
        
        Private columnSwapRate As Global.System.Data.DataColumn
        
        Private columnTradeDate As Global.System.Data.DataColumn
        
        Private columnValue_date As Global.System.Data.DataColumn
        
        Private columnMaturityDate As Global.System.Data.DataColumn
        
        Private columnSwapPoints As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Nr As Global.System.Data.DataColumn
        
        Private columnOCBS_Customer_Name As Global.System.Data.DataColumn
        
        Private columnBIC_CODE As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnCounterpartySector As Global.System.Data.DataColumn
        
        Private columnCounterpartyCountryCode As Global.System.Data.DataColumn
        
        Private columnId_MM_Statistic_Date As Global.System.Data.DataColumn
        
        Private columnClientType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MM_STATISTIC_FXSW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MeldepflichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeldepflicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PTI_Swap_Deal_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTI_Swap_Deal_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionCurrencyCodeEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionCurrencyCodeEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionNominalAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionNominalAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionForeignCurrencyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionForeignCurrencyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpotRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpotRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SwapRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwapRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TradeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Value_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValue_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SwapPointsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSwapPoints
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Customer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartySectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartySector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartyCountryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartyCountryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_MM_Statistic_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_MM_Statistic_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MM_STATISTIC_FXSWRow
            Get
                Return CType(Me.Rows(index),MM_STATISTIC_FXSWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_FXSWRowChanging As MM_STATISTIC_FXSWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_FXSWRowChanged As MM_STATISTIC_FXSWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_FXSWRowDeleting As MM_STATISTIC_FXSWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_FXSWRowDeleted As MM_STATISTIC_FXSWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMM_STATISTIC_FXSWRow(ByVal row As MM_STATISTIC_FXSWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMM_STATISTIC_FXSWRow( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal PTI_Swap_Deal_No As String,  _
                    ByVal TransactionCurrencyCodeEUR As String,  _
                    ByVal TransactionNominalAmount As Double,  _
                    ByVal TransactionForeignCurrencyCode As String,  _
                    ByVal SpotRate As Double,  _
                    ByVal SwapRate As Double,  _
                    ByVal TradeDate As Date,  _
                    ByVal Value_date As Date,  _
                    ByVal MaturityDate As Date,  _
                    ByVal SwapPoints As Double,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE As MM_STATISTIC_DATERow,  _
                    ByVal ClientType As String) As MM_STATISTIC_FXSWRow
            Dim rowMM_STATISTIC_FXSWRow As MM_STATISTIC_FXSWRow = CType(Me.NewRow,MM_STATISTIC_FXSWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Meldepflicht, TransactionType, TransactionStatus, PTI_Swap_Deal_No, TransactionCurrencyCodeEUR, TransactionNominalAmount, TransactionForeignCurrencyCode, SpotRate, SwapRate, TradeDate, Value_date, MaturityDate, SwapPoints, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, LEI_CODE, CounterpartySector, CounterpartyCountryCode, Nothing, ClientType}
            If (Not (parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE) Is Nothing) Then
                columnValuesArray(20) = parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE(0)
            End If
            rowMM_STATISTIC_FXSWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMM_STATISTIC_FXSWRow)
            Return rowMM_STATISTIC_FXSWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As MM_STATISTIC_FXSWRow
            Return CType(Me.Rows.Find(New Object() {ID}),MM_STATISTIC_FXSWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MM_STATISTIC_FXSWDataTable = CType(MyBase.Clone,MM_STATISTIC_FXSWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MM_STATISTIC_FXSWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnMeldepflicht = MyBase.Columns("Meldepflicht")
            Me.columnTransactionType = MyBase.Columns("TransactionType")
            Me.columnTransactionStatus = MyBase.Columns("TransactionStatus")
            Me.columnPTI_Swap_Deal_No = MyBase.Columns("PTI_Swap_Deal_No")
            Me.columnTransactionCurrencyCodeEUR = MyBase.Columns("TransactionCurrencyCodeEUR")
            Me.columnTransactionNominalAmount = MyBase.Columns("TransactionNominalAmount")
            Me.columnTransactionForeignCurrencyCode = MyBase.Columns("TransactionForeignCurrencyCode")
            Me.columnSpotRate = MyBase.Columns("SpotRate")
            Me.columnSwapRate = MyBase.Columns("SwapRate")
            Me.columnTradeDate = MyBase.Columns("TradeDate")
            Me.columnValue_date = MyBase.Columns("Value_date")
            Me.columnMaturityDate = MyBase.Columns("MaturityDate")
            Me.columnSwapPoints = MyBase.Columns("SwapPoints")
            Me.columnOCBS_Cust_Nr = MyBase.Columns("OCBS_Cust_Nr")
            Me.columnOCBS_Customer_Name = MyBase.Columns("OCBS_Customer_Name")
            Me.columnBIC_CODE = MyBase.Columns("BIC_CODE")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnCounterpartySector = MyBase.Columns("CounterpartySector")
            Me.columnCounterpartyCountryCode = MyBase.Columns("CounterpartyCountryCode")
            Me.columnId_MM_Statistic_Date = MyBase.Columns("Id_MM_Statistic_Date")
            Me.columnClientType = MyBase.Columns("ClientType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMeldepflicht = New Global.System.Data.DataColumn("Meldepflicht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeldepflicht)
            Me.columnTransactionType = New Global.System.Data.DataColumn("TransactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionType)
            Me.columnTransactionStatus = New Global.System.Data.DataColumn("TransactionStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionStatus)
            Me.columnPTI_Swap_Deal_No = New Global.System.Data.DataColumn("PTI_Swap_Deal_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTI_Swap_Deal_No)
            Me.columnTransactionCurrencyCodeEUR = New Global.System.Data.DataColumn("TransactionCurrencyCodeEUR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionCurrencyCodeEUR)
            Me.columnTransactionNominalAmount = New Global.System.Data.DataColumn("TransactionNominalAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionNominalAmount)
            Me.columnTransactionForeignCurrencyCode = New Global.System.Data.DataColumn("TransactionForeignCurrencyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionForeignCurrencyCode)
            Me.columnSpotRate = New Global.System.Data.DataColumn("SpotRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpotRate)
            Me.columnSwapRate = New Global.System.Data.DataColumn("SwapRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwapRate)
            Me.columnTradeDate = New Global.System.Data.DataColumn("TradeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeDate)
            Me.columnValue_date = New Global.System.Data.DataColumn("Value_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValue_date)
            Me.columnMaturityDate = New Global.System.Data.DataColumn("MaturityDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityDate)
            Me.columnSwapPoints = New Global.System.Data.DataColumn("SwapPoints", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSwapPoints)
            Me.columnOCBS_Cust_Nr = New Global.System.Data.DataColumn("OCBS_Cust_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Nr)
            Me.columnOCBS_Customer_Name = New Global.System.Data.DataColumn("OCBS_Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Customer_Name)
            Me.columnBIC_CODE = New Global.System.Data.DataColumn("BIC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC_CODE)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnCounterpartySector = New Global.System.Data.DataColumn("CounterpartySector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartySector)
            Me.columnCounterpartyCountryCode = New Global.System.Data.DataColumn("CounterpartyCountryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartyCountryCode)
            Me.columnId_MM_Statistic_Date = New Global.System.Data.DataColumn("Id_MM_Statistic_Date", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_MM_Statistic_Date)
            Me.columnClientType = New Global.System.Data.DataColumn("ClientType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnMeldepflicht.MaxLength = 1
            Me.columnTransactionType.MaxLength = 50
            Me.columnTransactionStatus.MaxLength = 50
            Me.columnPTI_Swap_Deal_No.MaxLength = 255
            Me.columnTransactionCurrencyCodeEUR.MaxLength = 3
            Me.columnTransactionForeignCurrencyCode.MaxLength = 3
            Me.columnOCBS_Cust_Nr.MaxLength = 50
            Me.columnOCBS_Customer_Name.MaxLength = 255
            Me.columnBIC_CODE.MaxLength = 50
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnCounterpartySector.MaxLength = 50
            Me.columnCounterpartyCountryCode.MaxLength = 50
            Me.columnClientType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMM_STATISTIC_FXSWRow() As MM_STATISTIC_FXSWRow
            Return CType(Me.NewRow,MM_STATISTIC_FXSWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MM_STATISTIC_FXSWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MM_STATISTIC_FXSWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MM_STATISTIC_FXSWRowChangedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_FXSWRowChanged(Me, New MM_STATISTIC_FXSWRowChangeEvent(CType(e.Row,MM_STATISTIC_FXSWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MM_STATISTIC_FXSWRowChangingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_FXSWRowChanging(Me, New MM_STATISTIC_FXSWRowChangeEvent(CType(e.Row,MM_STATISTIC_FXSWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MM_STATISTIC_FXSWRowDeletedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_FXSWRowDeleted(Me, New MM_STATISTIC_FXSWRowChangeEvent(CType(e.Row,MM_STATISTIC_FXSWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MM_STATISTIC_FXSWRowDeletingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_FXSWRowDeleting(Me, New MM_STATISTIC_FXSWRowChangeEvent(CType(e.Row,MM_STATISTIC_FXSWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMM_STATISTIC_FXSWRow(ByVal row As MM_STATISTIC_FXSWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MM_STATISTIC_FXSWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MM_STATISTIC_UGMMDataTable
        Inherits Global.System.Data.TypedTableBase(Of MM_STATISTIC_UGMMRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMeldepflicht As Global.System.Data.DataColumn
        
        Private columnTransactionStatus As Global.System.Data.DataColumn
        
        Private columnTransactionType As Global.System.Data.DataColumn
        
        Private columnInstrumentType As Global.System.Data.DataColumn
        
        Private columnPTI_Deal_Nr As Global.System.Data.DataColumn
        
        Private columnCounterpartySector As Global.System.Data.DataColumn
        
        Private columnCounterpartyCountryCode As Global.System.Data.DataColumn
        
        Private columnTradeDate As Global.System.Data.DataColumn
        
        Private columnSettlementDate As Global.System.Data.DataColumn
        
        Private columnMaturityDate As Global.System.Data.DataColumn
        
        Private columnCCY As Global.System.Data.DataColumn
        
        Private columnCCY_AMOUNT As Global.System.Data.DataColumn
        
        Private columnTransactionDealPrice As Global.System.Data.DataColumn
        
        Private columnRateType As Global.System.Data.DataColumn
        
        Private columnDealRate As Global.System.Data.DataColumn
        
        Private columnReferenceRateIndex As Global.System.Data.DataColumn
        
        Private columnBasisPointSpread As Global.System.Data.DataColumn
        
        Private columnFUNDING_RATE As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Nr As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Name As Global.System.Data.DataColumn
        
        Private columnBIC_CODE As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnId_MM_Statistic_Date As Global.System.Data.DataColumn
        
        Private columnClientType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MM_STATISTIC_UGMM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MeldepflichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeldepflicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InstrumentTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstrumentType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PTI_Deal_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTI_Deal_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartySectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartySector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartyCountryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartyCountryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TradeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SettlementDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSettlementDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCY_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionDealPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionDealPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RateTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DealRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDealRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReferenceRateIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceRateIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BasisPointSpreadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasisPointSpread
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FUNDING_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUNDING_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_MM_Statistic_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_MM_Statistic_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MM_STATISTIC_UGMMRow
            Get
                Return CType(Me.Rows(index),MM_STATISTIC_UGMMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_UGMMRowChanging As MM_STATISTIC_UGMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_UGMMRowChanged As MM_STATISTIC_UGMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_UGMMRowDeleting As MM_STATISTIC_UGMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_UGMMRowDeleted As MM_STATISTIC_UGMMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMM_STATISTIC_UGMMRow(ByVal row As MM_STATISTIC_UGMMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMM_STATISTIC_UGMMRow( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal InstrumentType As String,  _
                    ByVal PTI_Deal_Nr As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal TradeDate As Date,  _
                    ByVal SettlementDate As Date,  _
                    ByVal MaturityDate As Date,  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Double,  _
                    ByVal TransactionDealPrice As Double,  _
                    ByVal RateType As String,  _
                    ByVal DealRate As Double,  _
                    ByVal ReferenceRateIndex As String,  _
                    ByVal BasisPointSpread As Double,  _
                    ByVal FUNDING_RATE As Double,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE As MM_STATISTIC_DATERow,  _
                    ByVal ClientType As String) As MM_STATISTIC_UGMMRow
            Dim rowMM_STATISTIC_UGMMRow As MM_STATISTIC_UGMMRow = CType(Me.NewRow,MM_STATISTIC_UGMMRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Meldepflicht, TransactionStatus, TransactionType, InstrumentType, PTI_Deal_Nr, CounterpartySector, CounterpartyCountryCode, TradeDate, SettlementDate, MaturityDate, CCY, CCY_AMOUNT, TransactionDealPrice, RateType, DealRate, ReferenceRateIndex, BasisPointSpread, FUNDING_RATE, OCBS_Cust_Nr, OCBS_Cust_Name, BIC_CODE, LEI_CODE, Nothing, ClientType}
            If (Not (parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE) Is Nothing) Then
                columnValuesArray(23) = parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE(0)
            End If
            rowMM_STATISTIC_UGMMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMM_STATISTIC_UGMMRow)
            Return rowMM_STATISTIC_UGMMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As MM_STATISTIC_UGMMRow
            Return CType(Me.Rows.Find(New Object() {ID}),MM_STATISTIC_UGMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MM_STATISTIC_UGMMDataTable = CType(MyBase.Clone,MM_STATISTIC_UGMMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MM_STATISTIC_UGMMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnMeldepflicht = MyBase.Columns("Meldepflicht")
            Me.columnTransactionStatus = MyBase.Columns("TransactionStatus")
            Me.columnTransactionType = MyBase.Columns("TransactionType")
            Me.columnInstrumentType = MyBase.Columns("InstrumentType")
            Me.columnPTI_Deal_Nr = MyBase.Columns("PTI_Deal_Nr")
            Me.columnCounterpartySector = MyBase.Columns("CounterpartySector")
            Me.columnCounterpartyCountryCode = MyBase.Columns("CounterpartyCountryCode")
            Me.columnTradeDate = MyBase.Columns("TradeDate")
            Me.columnSettlementDate = MyBase.Columns("SettlementDate")
            Me.columnMaturityDate = MyBase.Columns("MaturityDate")
            Me.columnCCY = MyBase.Columns("CCY")
            Me.columnCCY_AMOUNT = MyBase.Columns("CCY_AMOUNT")
            Me.columnTransactionDealPrice = MyBase.Columns("TransactionDealPrice")
            Me.columnRateType = MyBase.Columns("RateType")
            Me.columnDealRate = MyBase.Columns("DealRate")
            Me.columnReferenceRateIndex = MyBase.Columns("ReferenceRateIndex")
            Me.columnBasisPointSpread = MyBase.Columns("BasisPointSpread")
            Me.columnFUNDING_RATE = MyBase.Columns("FUNDING_RATE")
            Me.columnOCBS_Cust_Nr = MyBase.Columns("OCBS_Cust_Nr")
            Me.columnOCBS_Cust_Name = MyBase.Columns("OCBS_Cust_Name")
            Me.columnBIC_CODE = MyBase.Columns("BIC_CODE")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnId_MM_Statistic_Date = MyBase.Columns("Id_MM_Statistic_Date")
            Me.columnClientType = MyBase.Columns("ClientType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMeldepflicht = New Global.System.Data.DataColumn("Meldepflicht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeldepflicht)
            Me.columnTransactionStatus = New Global.System.Data.DataColumn("TransactionStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionStatus)
            Me.columnTransactionType = New Global.System.Data.DataColumn("TransactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionType)
            Me.columnInstrumentType = New Global.System.Data.DataColumn("InstrumentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstrumentType)
            Me.columnPTI_Deal_Nr = New Global.System.Data.DataColumn("PTI_Deal_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTI_Deal_Nr)
            Me.columnCounterpartySector = New Global.System.Data.DataColumn("CounterpartySector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartySector)
            Me.columnCounterpartyCountryCode = New Global.System.Data.DataColumn("CounterpartyCountryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartyCountryCode)
            Me.columnTradeDate = New Global.System.Data.DataColumn("TradeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeDate)
            Me.columnSettlementDate = New Global.System.Data.DataColumn("SettlementDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSettlementDate)
            Me.columnMaturityDate = New Global.System.Data.DataColumn("MaturityDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityDate)
            Me.columnCCY = New Global.System.Data.DataColumn("CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY)
            Me.columnCCY_AMOUNT = New Global.System.Data.DataColumn("CCY_AMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY_AMOUNT)
            Me.columnTransactionDealPrice = New Global.System.Data.DataColumn("TransactionDealPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionDealPrice)
            Me.columnRateType = New Global.System.Data.DataColumn("RateType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateType)
            Me.columnDealRate = New Global.System.Data.DataColumn("DealRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDealRate)
            Me.columnReferenceRateIndex = New Global.System.Data.DataColumn("ReferenceRateIndex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceRateIndex)
            Me.columnBasisPointSpread = New Global.System.Data.DataColumn("BasisPointSpread", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasisPointSpread)
            Me.columnFUNDING_RATE = New Global.System.Data.DataColumn("FUNDING_RATE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUNDING_RATE)
            Me.columnOCBS_Cust_Nr = New Global.System.Data.DataColumn("OCBS_Cust_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Nr)
            Me.columnOCBS_Cust_Name = New Global.System.Data.DataColumn("OCBS_Cust_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Name)
            Me.columnBIC_CODE = New Global.System.Data.DataColumn("BIC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC_CODE)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnId_MM_Statistic_Date = New Global.System.Data.DataColumn("Id_MM_Statistic_Date", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_MM_Statistic_Date)
            Me.columnClientType = New Global.System.Data.DataColumn("ClientType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnMeldepflicht.MaxLength = 1
            Me.columnTransactionStatus.MaxLength = 50
            Me.columnTransactionType.MaxLength = 50
            Me.columnInstrumentType.MaxLength = 50
            Me.columnPTI_Deal_Nr.MaxLength = 255
            Me.columnCounterpartySector.MaxLength = 50
            Me.columnCounterpartyCountryCode.MaxLength = 50
            Me.columnCCY.MaxLength = 3
            Me.columnRateType.MaxLength = 50
            Me.columnReferenceRateIndex.MaxLength = 50
            Me.columnOCBS_Cust_Nr.MaxLength = 50
            Me.columnOCBS_Cust_Name.MaxLength = 255
            Me.columnBIC_CODE.MaxLength = 50
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnClientType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMM_STATISTIC_UGMMRow() As MM_STATISTIC_UGMMRow
            Return CType(Me.NewRow,MM_STATISTIC_UGMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MM_STATISTIC_UGMMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MM_STATISTIC_UGMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MM_STATISTIC_UGMMRowChangedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_UGMMRowChanged(Me, New MM_STATISTIC_UGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_UGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MM_STATISTIC_UGMMRowChangingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_UGMMRowChanging(Me, New MM_STATISTIC_UGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_UGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MM_STATISTIC_UGMMRowDeletedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_UGMMRowDeleted(Me, New MM_STATISTIC_UGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_UGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MM_STATISTIC_UGMMRowDeletingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_UGMMRowDeleting(Me, New MM_STATISTIC_UGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_UGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMM_STATISTIC_UGMMRow(ByVal row As MM_STATISTIC_UGMMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MM_STATISTIC_UGMMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MM_STATISTIC_BGMMDataTable
        Inherits Global.System.Data.TypedTableBase(Of MM_STATISTIC_BGMMRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMeldepflicht As Global.System.Data.DataColumn
        
        Private columnTransactionStatus As Global.System.Data.DataColumn
        
        Private columnTransactionType As Global.System.Data.DataColumn
        
        Private columnPTI_Deal_Nr As Global.System.Data.DataColumn
        
        Private columnCounterpartySector As Global.System.Data.DataColumn
        
        Private columnCounterpartyCountryCode As Global.System.Data.DataColumn
        
        Private columnTradeDate As Global.System.Data.DataColumn
        
        Private columnSettlementDate As Global.System.Data.DataColumn
        
        Private columnMaturityDate As Global.System.Data.DataColumn
        
        Private columnCCY As Global.System.Data.DataColumn
        
        Private columnCCY_AMOUNT As Global.System.Data.DataColumn
        
        Private columnTransactionDealPrice As Global.System.Data.DataColumn
        
        Private columnRateType As Global.System.Data.DataColumn
        
        Private columnDealRate As Global.System.Data.DataColumn
        
        Private columnReferenceRateIndex As Global.System.Data.DataColumn
        
        Private columnBasisPointSpread As Global.System.Data.DataColumn
        
        Private columnCollateral_ISIN As Global.System.Data.DataColumn
        
        Private columnCollateralNominalAmount As Global.System.Data.DataColumn
        
        Private columnCollateralHaircut As Global.System.Data.DataColumn
        
        Private columnSpecialCollateralIndicator As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Nr As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Name As Global.System.Data.DataColumn
        
        Private columnBIC_CODE As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnId_MM_Statistic_Date As Global.System.Data.DataColumn
        
        Private columnClientType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MM_STATISTIC_BGMM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MeldepflichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeldepflicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PTI_Deal_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTI_Deal_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartySectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartySector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartyCountryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartyCountryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TradeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SettlementDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSettlementDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CCY_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCY_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionDealPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionDealPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RateTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DealRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDealRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReferenceRateIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceRateIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BasisPointSpreadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasisPointSpread
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Collateral_ISINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollateral_ISIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CollateralNominalAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollateralNominalAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CollateralHaircutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollateralHaircut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecialCollateralIndicatorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecialCollateralIndicator
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_MM_Statistic_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_MM_Statistic_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MM_STATISTIC_BGMMRow
            Get
                Return CType(Me.Rows(index),MM_STATISTIC_BGMMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_BGMMRowChanging As MM_STATISTIC_BGMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_BGMMRowChanged As MM_STATISTIC_BGMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_BGMMRowDeleting As MM_STATISTIC_BGMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_BGMMRowDeleted As MM_STATISTIC_BGMMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMM_STATISTIC_BGMMRow(ByVal row As MM_STATISTIC_BGMMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMM_STATISTIC_BGMMRow( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal PTI_Deal_Nr As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal TradeDate As Date,  _
                    ByVal SettlementDate As Date,  _
                    ByVal MaturityDate As Date,  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Double,  _
                    ByVal TransactionDealPrice As Double,  _
                    ByVal RateType As String,  _
                    ByVal DealRate As Double,  _
                    ByVal ReferenceRateIndex As String,  _
                    ByVal BasisPointSpread As Double,  _
                    ByVal Collateral_ISIN As String,  _
                    ByVal CollateralNominalAmount As Double,  _
                    ByVal CollateralHaircut As Double,  _
                    ByVal SpecialCollateralIndicator As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE As MM_STATISTIC_DATERow,  _
                    ByVal ClientType As String) As MM_STATISTIC_BGMMRow
            Dim rowMM_STATISTIC_BGMMRow As MM_STATISTIC_BGMMRow = CType(Me.NewRow,MM_STATISTIC_BGMMRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Meldepflicht, TransactionStatus, TransactionType, PTI_Deal_Nr, CounterpartySector, CounterpartyCountryCode, TradeDate, SettlementDate, MaturityDate, CCY, CCY_AMOUNT, TransactionDealPrice, RateType, DealRate, ReferenceRateIndex, BasisPointSpread, Collateral_ISIN, CollateralNominalAmount, CollateralHaircut, SpecialCollateralIndicator, OCBS_Cust_Nr, OCBS_Cust_Name, BIC_CODE, LEI_CODE, Nothing, ClientType}
            If (Not (parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE) Is Nothing) Then
                columnValuesArray(25) = parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE(0)
            End If
            rowMM_STATISTIC_BGMMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMM_STATISTIC_BGMMRow)
            Return rowMM_STATISTIC_BGMMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As MM_STATISTIC_BGMMRow
            Return CType(Me.Rows.Find(New Object() {ID}),MM_STATISTIC_BGMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MM_STATISTIC_BGMMDataTable = CType(MyBase.Clone,MM_STATISTIC_BGMMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MM_STATISTIC_BGMMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnMeldepflicht = MyBase.Columns("Meldepflicht")
            Me.columnTransactionStatus = MyBase.Columns("TransactionStatus")
            Me.columnTransactionType = MyBase.Columns("TransactionType")
            Me.columnPTI_Deal_Nr = MyBase.Columns("PTI_Deal_Nr")
            Me.columnCounterpartySector = MyBase.Columns("CounterpartySector")
            Me.columnCounterpartyCountryCode = MyBase.Columns("CounterpartyCountryCode")
            Me.columnTradeDate = MyBase.Columns("TradeDate")
            Me.columnSettlementDate = MyBase.Columns("SettlementDate")
            Me.columnMaturityDate = MyBase.Columns("MaturityDate")
            Me.columnCCY = MyBase.Columns("CCY")
            Me.columnCCY_AMOUNT = MyBase.Columns("CCY_AMOUNT")
            Me.columnTransactionDealPrice = MyBase.Columns("TransactionDealPrice")
            Me.columnRateType = MyBase.Columns("RateType")
            Me.columnDealRate = MyBase.Columns("DealRate")
            Me.columnReferenceRateIndex = MyBase.Columns("ReferenceRateIndex")
            Me.columnBasisPointSpread = MyBase.Columns("BasisPointSpread")
            Me.columnCollateral_ISIN = MyBase.Columns("Collateral_ISIN")
            Me.columnCollateralNominalAmount = MyBase.Columns("CollateralNominalAmount")
            Me.columnCollateralHaircut = MyBase.Columns("CollateralHaircut")
            Me.columnSpecialCollateralIndicator = MyBase.Columns("SpecialCollateralIndicator")
            Me.columnOCBS_Cust_Nr = MyBase.Columns("OCBS_Cust_Nr")
            Me.columnOCBS_Cust_Name = MyBase.Columns("OCBS_Cust_Name")
            Me.columnBIC_CODE = MyBase.Columns("BIC_CODE")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnId_MM_Statistic_Date = MyBase.Columns("Id_MM_Statistic_Date")
            Me.columnClientType = MyBase.Columns("ClientType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMeldepflicht = New Global.System.Data.DataColumn("Meldepflicht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeldepflicht)
            Me.columnTransactionStatus = New Global.System.Data.DataColumn("TransactionStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionStatus)
            Me.columnTransactionType = New Global.System.Data.DataColumn("TransactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionType)
            Me.columnPTI_Deal_Nr = New Global.System.Data.DataColumn("PTI_Deal_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTI_Deal_Nr)
            Me.columnCounterpartySector = New Global.System.Data.DataColumn("CounterpartySector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartySector)
            Me.columnCounterpartyCountryCode = New Global.System.Data.DataColumn("CounterpartyCountryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartyCountryCode)
            Me.columnTradeDate = New Global.System.Data.DataColumn("TradeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeDate)
            Me.columnSettlementDate = New Global.System.Data.DataColumn("SettlementDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSettlementDate)
            Me.columnMaturityDate = New Global.System.Data.DataColumn("MaturityDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityDate)
            Me.columnCCY = New Global.System.Data.DataColumn("CCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY)
            Me.columnCCY_AMOUNT = New Global.System.Data.DataColumn("CCY_AMOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCY_AMOUNT)
            Me.columnTransactionDealPrice = New Global.System.Data.DataColumn("TransactionDealPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionDealPrice)
            Me.columnRateType = New Global.System.Data.DataColumn("RateType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateType)
            Me.columnDealRate = New Global.System.Data.DataColumn("DealRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDealRate)
            Me.columnReferenceRateIndex = New Global.System.Data.DataColumn("ReferenceRateIndex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceRateIndex)
            Me.columnBasisPointSpread = New Global.System.Data.DataColumn("BasisPointSpread", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasisPointSpread)
            Me.columnCollateral_ISIN = New Global.System.Data.DataColumn("Collateral_ISIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollateral_ISIN)
            Me.columnCollateralNominalAmount = New Global.System.Data.DataColumn("CollateralNominalAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollateralNominalAmount)
            Me.columnCollateralHaircut = New Global.System.Data.DataColumn("CollateralHaircut", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollateralHaircut)
            Me.columnSpecialCollateralIndicator = New Global.System.Data.DataColumn("SpecialCollateralIndicator", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecialCollateralIndicator)
            Me.columnOCBS_Cust_Nr = New Global.System.Data.DataColumn("OCBS_Cust_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Nr)
            Me.columnOCBS_Cust_Name = New Global.System.Data.DataColumn("OCBS_Cust_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Name)
            Me.columnBIC_CODE = New Global.System.Data.DataColumn("BIC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC_CODE)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnId_MM_Statistic_Date = New Global.System.Data.DataColumn("Id_MM_Statistic_Date", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_MM_Statistic_Date)
            Me.columnClientType = New Global.System.Data.DataColumn("ClientType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnMeldepflicht.MaxLength = 1
            Me.columnTransactionStatus.MaxLength = 50
            Me.columnTransactionType.MaxLength = 50
            Me.columnPTI_Deal_Nr.MaxLength = 255
            Me.columnCounterpartySector.MaxLength = 50
            Me.columnCounterpartyCountryCode.MaxLength = 50
            Me.columnCCY.MaxLength = 3
            Me.columnRateType.MaxLength = 50
            Me.columnReferenceRateIndex.MaxLength = 50
            Me.columnCollateral_ISIN.MaxLength = 50
            Me.columnSpecialCollateralIndicator.MaxLength = 50
            Me.columnOCBS_Cust_Nr.MaxLength = 50
            Me.columnOCBS_Cust_Name.MaxLength = 255
            Me.columnBIC_CODE.MaxLength = 50
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnClientType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMM_STATISTIC_BGMMRow() As MM_STATISTIC_BGMMRow
            Return CType(Me.NewRow,MM_STATISTIC_BGMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MM_STATISTIC_BGMMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MM_STATISTIC_BGMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MM_STATISTIC_BGMMRowChangedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_BGMMRowChanged(Me, New MM_STATISTIC_BGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_BGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MM_STATISTIC_BGMMRowChangingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_BGMMRowChanging(Me, New MM_STATISTIC_BGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_BGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MM_STATISTIC_BGMMRowDeletedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_BGMMRowDeleted(Me, New MM_STATISTIC_BGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_BGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MM_STATISTIC_BGMMRowDeletingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_BGMMRowDeleting(Me, New MM_STATISTIC_BGMMRowChangeEvent(CType(e.Row,MM_STATISTIC_BGMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMM_STATISTIC_BGMMRow(ByVal row As MM_STATISTIC_BGMMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MM_STATISTIC_BGMMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MM_STATISTIC_EORWDataTable
        Inherits Global.System.Data.TypedTableBase(Of MM_STATISTIC_EORWRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMeldepflicht As Global.System.Data.DataColumn
        
        Private columnTransactionType As Global.System.Data.DataColumn
        
        Private columnTransactionStatus As Global.System.Data.DataColumn
        
        Private columnPTI_Swap_Deal_No As Global.System.Data.DataColumn
        
        Private columnTransactionNominalAmount As Global.System.Data.DataColumn
        
        Private columnFixedInterestRate As Global.System.Data.DataColumn
        
        Private columnTradeDate As Global.System.Data.DataColumn
        
        Private columnStart_date As Global.System.Data.DataColumn
        
        Private columnMaturityDate As Global.System.Data.DataColumn
        
        Private columnOCBS_Cust_Nr As Global.System.Data.DataColumn
        
        Private columnOCBS_Customer_Name As Global.System.Data.DataColumn
        
        Private columnBIC_CODE As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnCounterpartySector As Global.System.Data.DataColumn
        
        Private columnCounterpartyCountryCode As Global.System.Data.DataColumn
        
        Private columnId_MM_Statistic_Date As Global.System.Data.DataColumn
        
        Private columnClientType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MM_STATISTIC_EORW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MeldepflichtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeldepflicht
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PTI_Swap_Deal_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTI_Swap_Deal_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TransactionNominalAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionNominalAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FixedInterestRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFixedInterestRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TradeDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Start_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStart_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Cust_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Cust_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OCBS_Customer_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCBS_Customer_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartySectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartySector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CounterpartyCountryCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounterpartyCountryCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_MM_Statistic_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_MM_Statistic_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MM_STATISTIC_EORWRow
            Get
                Return CType(Me.Rows(index),MM_STATISTIC_EORWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_EORWRowChanging As MM_STATISTIC_EORWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_EORWRowChanged As MM_STATISTIC_EORWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_EORWRowDeleting As MM_STATISTIC_EORWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MM_STATISTIC_EORWRowDeleted As MM_STATISTIC_EORWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMM_STATISTIC_EORWRow(ByVal row As MM_STATISTIC_EORWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMM_STATISTIC_EORWRow( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal PTI_Swap_Deal_No As String,  _
                    ByVal TransactionNominalAmount As Double,  _
                    ByVal FixedInterestRate As Double,  _
                    ByVal TradeDate As Date,  _
                    ByVal Start_date As Date,  _
                    ByVal MaturityDate As Date,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_EORW_MM_STATISTIC_DATE As MM_STATISTIC_DATERow,  _
                    ByVal ClientType As String) As MM_STATISTIC_EORWRow
            Dim rowMM_STATISTIC_EORWRow As MM_STATISTIC_EORWRow = CType(Me.NewRow,MM_STATISTIC_EORWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Meldepflicht, TransactionType, TransactionStatus, PTI_Swap_Deal_No, TransactionNominalAmount, FixedInterestRate, TradeDate, Start_date, MaturityDate, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, LEI_CODE, CounterpartySector, CounterpartyCountryCode, Nothing, ClientType}
            If (Not (parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_EORW_MM_STATISTIC_DATE) Is Nothing) Then
                columnValuesArray(16) = parentMM_STATISTIC_DATERowByFK_MM_STATISTIC_EORW_MM_STATISTIC_DATE(0)
            End If
            rowMM_STATISTIC_EORWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMM_STATISTIC_EORWRow)
            Return rowMM_STATISTIC_EORWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As MM_STATISTIC_EORWRow
            Return CType(Me.Rows.Find(New Object() {ID}),MM_STATISTIC_EORWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MM_STATISTIC_EORWDataTable = CType(MyBase.Clone,MM_STATISTIC_EORWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MM_STATISTIC_EORWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnMeldepflicht = MyBase.Columns("Meldepflicht")
            Me.columnTransactionType = MyBase.Columns("TransactionType")
            Me.columnTransactionStatus = MyBase.Columns("TransactionStatus")
            Me.columnPTI_Swap_Deal_No = MyBase.Columns("PTI_Swap_Deal_No")
            Me.columnTransactionNominalAmount = MyBase.Columns("TransactionNominalAmount")
            Me.columnFixedInterestRate = MyBase.Columns("FixedInterestRate")
            Me.columnTradeDate = MyBase.Columns("TradeDate")
            Me.columnStart_date = MyBase.Columns("Start_date")
            Me.columnMaturityDate = MyBase.Columns("MaturityDate")
            Me.columnOCBS_Cust_Nr = MyBase.Columns("OCBS_Cust_Nr")
            Me.columnOCBS_Customer_Name = MyBase.Columns("OCBS_Customer_Name")
            Me.columnBIC_CODE = MyBase.Columns("BIC_CODE")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnCounterpartySector = MyBase.Columns("CounterpartySector")
            Me.columnCounterpartyCountryCode = MyBase.Columns("CounterpartyCountryCode")
            Me.columnId_MM_Statistic_Date = MyBase.Columns("Id_MM_Statistic_Date")
            Me.columnClientType = MyBase.Columns("ClientType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMeldepflicht = New Global.System.Data.DataColumn("Meldepflicht", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeldepflicht)
            Me.columnTransactionType = New Global.System.Data.DataColumn("TransactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionType)
            Me.columnTransactionStatus = New Global.System.Data.DataColumn("TransactionStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionStatus)
            Me.columnPTI_Swap_Deal_No = New Global.System.Data.DataColumn("PTI_Swap_Deal_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTI_Swap_Deal_No)
            Me.columnTransactionNominalAmount = New Global.System.Data.DataColumn("TransactionNominalAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionNominalAmount)
            Me.columnFixedInterestRate = New Global.System.Data.DataColumn("FixedInterestRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFixedInterestRate)
            Me.columnTradeDate = New Global.System.Data.DataColumn("TradeDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeDate)
            Me.columnStart_date = New Global.System.Data.DataColumn("Start_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStart_date)
            Me.columnMaturityDate = New Global.System.Data.DataColumn("MaturityDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityDate)
            Me.columnOCBS_Cust_Nr = New Global.System.Data.DataColumn("OCBS_Cust_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Cust_Nr)
            Me.columnOCBS_Customer_Name = New Global.System.Data.DataColumn("OCBS_Customer_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCBS_Customer_Name)
            Me.columnBIC_CODE = New Global.System.Data.DataColumn("BIC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC_CODE)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnCounterpartySector = New Global.System.Data.DataColumn("CounterpartySector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartySector)
            Me.columnCounterpartyCountryCode = New Global.System.Data.DataColumn("CounterpartyCountryCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounterpartyCountryCode)
            Me.columnId_MM_Statistic_Date = New Global.System.Data.DataColumn("Id_MM_Statistic_Date", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_MM_Statistic_Date)
            Me.columnClientType = New Global.System.Data.DataColumn("ClientType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnMeldepflicht.MaxLength = 1
            Me.columnTransactionType.MaxLength = 50
            Me.columnTransactionStatus.MaxLength = 50
            Me.columnPTI_Swap_Deal_No.MaxLength = 255
            Me.columnOCBS_Cust_Nr.MaxLength = 50
            Me.columnOCBS_Customer_Name.MaxLength = 255
            Me.columnBIC_CODE.MaxLength = 50
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnCounterpartySector.MaxLength = 50
            Me.columnCounterpartyCountryCode.MaxLength = 50
            Me.columnClientType.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMM_STATISTIC_EORWRow() As MM_STATISTIC_EORWRow
            Return CType(Me.NewRow,MM_STATISTIC_EORWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MM_STATISTIC_EORWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MM_STATISTIC_EORWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MM_STATISTIC_EORWRowChangedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_EORWRowChanged(Me, New MM_STATISTIC_EORWRowChangeEvent(CType(e.Row,MM_STATISTIC_EORWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MM_STATISTIC_EORWRowChangingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_EORWRowChanging(Me, New MM_STATISTIC_EORWRowChangeEvent(CType(e.Row,MM_STATISTIC_EORWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MM_STATISTIC_EORWRowDeletedEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_EORWRowDeleted(Me, New MM_STATISTIC_EORWRowChangeEvent(CType(e.Row,MM_STATISTIC_EORWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MM_STATISTIC_EORWRowDeletingEvent) Is Nothing) Then
                RaiseEvent MM_STATISTIC_EORWRowDeleting(Me, New MM_STATISTIC_EORWRowChangeEvent(CType(e.Row,MM_STATISTIC_EORWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMM_STATISTIC_EORWRow(ByVal row As MM_STATISTIC_EORWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MM_Statistic_Dataset = New MM_Statistic_Dataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MM_STATISTIC_EORWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OPICS_MMRow
        Inherits Global.System.Data.DataRow
        
        Private tableOPICS_MM As OPICS_MMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPICS_MM = CType(Me.Table,OPICS_MMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableOPICS_MM.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableOPICS_MM.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.TransactionStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionStatus' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.TransactionStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.TransactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionType' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.TransactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InstrumentType() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.InstrumentTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InstrumentType' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.InstrumentTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BRANCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.BRANCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRANCH' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.BRANCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DEAL_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.DEAL_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEAL_NO' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.DEAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRODUCT() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.PRODUCTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCT' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.PRODUCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TYPE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY_AMOUNT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.CCY_AMOUNTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY_AMOUNT' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.CCY_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RATE_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.RATE_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RATE_CODE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.RATE_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Interest_rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.Interest_rateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Interest_rate' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.Interest_rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TradeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.TradeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeDate' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.TradeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MAT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.MAT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAT_DATE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.MAT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DaysToMaturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.DaysToMaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DaysToMaturity' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.DaysToMaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REVERSAL_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.REVERSAL_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVERSAL_DATE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.REVERSAL_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property REVERSAL_REASON() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.REVERSAL_REASONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REVERSAL_REASON' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.REVERSAL_REASONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NEW_DEAL_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.NEW_DEAL_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEW_DEAL_NO' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.NEW_DEAL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VALUE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.VALUE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VALUE_DATE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.VALUE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PORTFOLIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.PORTFOLIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PORTFOLIO' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.PORTFOLIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LINKED_DEAL_NR() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.LINKED_DEAL_NRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LINKED_DEAL_NR' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.LINKED_DEAL_NRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property STRATEGY() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.STRATEGYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STRATEGY' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.STRATEGYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FUNDING_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.FUNDING_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FUNDING_RATE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.FUNDING_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FUND_CENTER() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.FUND_CENTERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FUND_CENTER' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.FUND_CENTERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property COST_CENTER() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.COST_CENTERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COST_CENTER' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.COST_CENTERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TRADER() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.TRADERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRADER' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.TRADERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CORPORATE_TRADER() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.CORPORATE_TRADERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CORPORATE_TRADER' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.CORPORATE_TRADERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CORPORATE_PORTFOLIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.CORPORATE_PORTFOLIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CORPORATE_PORTFOLIO' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.CORPORATE_PORTFOLIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRONT_END_DEAL_NR() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.FRONT_END_DEAL_NRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRONT_END_DEAL_NR' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.FRONT_END_DEAL_NRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUSTOMER_SHORT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.CUSTOMER_SHORT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER_SHORT_NAME' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.CUSTOMER_SHORT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CUSTOMER_LONG_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.CUSTOMER_LONG_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER_LONG_NAME' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.CUSTOMER_LONG_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BROKER_SHORT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.BROKER_SHORT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BROKER_SHORT_NAME' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.BROKER_SHORT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.OCBS_Cust_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Nr' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.OCBS_Cust_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.OCBS_Cust_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Name' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.OCBS_Cust_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.BIC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC_CODE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.BIC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Meldepflicht() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.MeldepflichtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Meldepflicht' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.MeldepflichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientType() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_MM.ClientTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientType' in table 'OPICS_MM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_MM.ClientTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionStatusNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.TransactionStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionStatusNull()
            Me(Me.tableOPICS_MM.TransactionStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionTypeNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.TransactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionTypeNull()
            Me(Me.tableOPICS_MM.TransactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstrumentTypeNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.InstrumentTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstrumentTypeNull()
            Me(Me.tableOPICS_MM.InstrumentTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBRANCHNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.BRANCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBRANCHNull()
            Me(Me.tableOPICS_MM.BRANCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDEAL_NONull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.DEAL_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDEAL_NONull()
            Me(Me.tableOPICS_MM.DEAL_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRODUCTNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.PRODUCTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRODUCTNull()
            Me(Me.tableOPICS_MM.PRODUCTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTYPENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTYPENull()
            Me(Me.tableOPICS_MM.TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUSTOMERNull()
            Me(Me.tableOPICS_MM.CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCYNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCYNull()
            Me(Me.tableOPICS_MM.CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCY_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.CCY_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCY_AMOUNTNull()
            Me(Me.tableOPICS_MM.CCY_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRATE_CODENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.RATE_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRATE_CODENull()
            Me(Me.tableOPICS_MM.RATE_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInterest_rateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.Interest_rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInterest_rateNull()
            Me(Me.tableOPICS_MM.Interest_rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTradeDateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.TradeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTradeDateNull()
            Me(Me.tableOPICS_MM.TradeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMAT_DATENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.MAT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMAT_DATENull()
            Me(Me.tableOPICS_MM.MAT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDaysToMaturityNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.DaysToMaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDaysToMaturityNull()
            Me(Me.tableOPICS_MM.DaysToMaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREVERSAL_DATENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.REVERSAL_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREVERSAL_DATENull()
            Me(Me.tableOPICS_MM.REVERSAL_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsREVERSAL_REASONNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.REVERSAL_REASONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetREVERSAL_REASONNull()
            Me(Me.tableOPICS_MM.REVERSAL_REASONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNEW_DEAL_NONull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.NEW_DEAL_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNEW_DEAL_NONull()
            Me(Me.tableOPICS_MM.NEW_DEAL_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVALUE_DATENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.VALUE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVALUE_DATENull()
            Me(Me.tableOPICS_MM.VALUE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPORTFOLIONull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.PORTFOLIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPORTFOLIONull()
            Me(Me.tableOPICS_MM.PORTFOLIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLINKED_DEAL_NRNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.LINKED_DEAL_NRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLINKED_DEAL_NRNull()
            Me(Me.tableOPICS_MM.LINKED_DEAL_NRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSTRATEGYNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.STRATEGYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSTRATEGYNull()
            Me(Me.tableOPICS_MM.STRATEGYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFUNDING_RATENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.FUNDING_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFUNDING_RATENull()
            Me(Me.tableOPICS_MM.FUNDING_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFUND_CENTERNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.FUND_CENTERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFUND_CENTERNull()
            Me(Me.tableOPICS_MM.FUND_CENTERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCOST_CENTERNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.COST_CENTERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCOST_CENTERNull()
            Me(Me.tableOPICS_MM.COST_CENTERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTRADERNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.TRADERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTRADERNull()
            Me(Me.tableOPICS_MM.TRADERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCORPORATE_TRADERNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.CORPORATE_TRADERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCORPORATE_TRADERNull()
            Me(Me.tableOPICS_MM.CORPORATE_TRADERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCORPORATE_PORTFOLIONull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.CORPORATE_PORTFOLIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCORPORATE_PORTFOLIONull()
            Me(Me.tableOPICS_MM.CORPORATE_PORTFOLIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRONT_END_DEAL_NRNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.FRONT_END_DEAL_NRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRONT_END_DEAL_NRNull()
            Me(Me.tableOPICS_MM.FRONT_END_DEAL_NRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUSTOMER_SHORT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.CUSTOMER_SHORT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUSTOMER_SHORT_NAMENull()
            Me(Me.tableOPICS_MM.CUSTOMER_SHORT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCUSTOMER_LONG_NAMENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.CUSTOMER_LONG_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCUSTOMER_LONG_NAMENull()
            Me(Me.tableOPICS_MM.CUSTOMER_LONG_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBROKER_SHORT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.BROKER_SHORT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBROKER_SHORT_NAMENull()
            Me(Me.tableOPICS_MM.BROKER_SHORT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NrNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.OCBS_Cust_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NrNull()
            Me(Me.tableOPICS_MM.OCBS_Cust_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NameNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.OCBS_Cust_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NameNull()
            Me(Me.tableOPICS_MM.OCBS_Cust_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC_CODENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.BIC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC_CODENull()
            Me(Me.tableOPICS_MM.BIC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableOPICS_MM.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMeldepflichtNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.MeldepflichtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMeldepflichtNull()
            Me(Me.tableOPICS_MM.MeldepflichtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientTypeNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_MM.ClientTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientTypeNull()
            Me(Me.tableOPICS_MM.ClientTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OPICS_FX_SWAPSRow
        Inherits Global.System.Data.DataRow
        
        Private tableOPICS_FX_SWAPS As OPICS_FX_SWAPSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPICS_FX_SWAPS = CType(Me.Table,OPICS_FX_SWAPSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableOPICS_FX_SWAPS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.TransactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionType' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.TransactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.TransactionStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionStatus' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.TransactionStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spot_Deal_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.Spot_Deal_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spot_Deal_No' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.Spot_Deal_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Customer() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.CustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.CustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SeqNr_NearLeg() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.SeqNr_NearLegColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeqNr_NearLeg' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.SeqNr_NearLegColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DraftNr_NearLeg() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.DraftNr_NearLegColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DraftNr_NearLeg' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.DraftNr_NearLegColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NearLeg_P_S() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.NearLeg_P_SColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NearLeg_P_S' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.NearLeg_P_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NearLeg_CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.NearLeg_CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NearLeg_CCY' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.NearLeg_CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NearLeg_CCY_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.NearLeg_CCY_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NearLeg_CCY_Amount' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.NearLeg_CCY_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpotRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.SpotRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpotRate' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.SpotRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NearLeg_CTR() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.NearLeg_CTRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NearLeg_CTR' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.NearLeg_CTRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NearLeg_CTR_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.NearLeg_CTR_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NearLeg_CTR_Amount' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.NearLeg_CTR_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spot_Deal_Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.Spot_Deal_StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spot_Deal_Status' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.Spot_Deal_StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TradeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.TradeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeDate' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.TradeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Value_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.Value_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Value_date' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.Value_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SeqNr_FarLeg() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.SeqNr_FarLegColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeqNr_FarLeg' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.SeqNr_FarLegColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DraftNr_FarLeg() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.DraftNr_FarLegColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DraftNr_FarLeg' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.DraftNr_FarLegColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Swap_Deal_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.Swap_Deal_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Swap_Deal_No' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.Swap_Deal_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FarLeg_P_S() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.FarLeg_P_SColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FarLeg_P_S' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.FarLeg_P_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FarLeg_CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.FarLeg_CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FarLeg_CCY' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.FarLeg_CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FarLeg_CCY_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.FarLeg_CCY_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FarLeg_CCY_Amount' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.FarLeg_CCY_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SwapRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.SwapRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SwapRate' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.SwapRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FarLeg_CTR() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.FarLeg_CTRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FarLeg_CTR' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.FarLeg_CTRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FarLeg_CTR_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.FarLeg_CTR_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FarLeg_CTR_Amount' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.FarLeg_CTR_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Swap_Deal_Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.Swap_Deal_StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Swap_Deal_Status' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.Swap_Deal_StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.MaturityDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityDate' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.MaturityDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DaysToMaturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.DaysToMaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DaysToMaturity' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.DaysToMaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SwapPoints() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.SwapPointsColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SwapPoints' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.SwapPointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FE_Dealno() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.FE_DealnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FE_Dealno' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.FE_DealnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.OCBS_Cust_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Nr' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.OCBS_Cust_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.OCBS_Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Customer_Name' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.OCBS_Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.BIC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC_CODE' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.BIC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Meldepflicht() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.MeldepflichtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Meldepflicht' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.MeldepflichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientType() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX_SWAPS.ClientTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientType' in table 'OPICS_FX_SWAPS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX_SWAPS.ClientTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionTypeNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.TransactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionTypeNull()
            Me(Me.tableOPICS_FX_SWAPS.TransactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionStatusNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.TransactionStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionStatusNull()
            Me(Me.tableOPICS_FX_SWAPS.TransactionStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpot_Deal_NoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.Spot_Deal_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpot_Deal_NoNull()
            Me(Me.tableOPICS_FX_SWAPS.Spot_Deal_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCustomerNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.CustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCustomerNull()
            Me(Me.tableOPICS_FX_SWAPS.CustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSeqNr_NearLegNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.SeqNr_NearLegColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSeqNr_NearLegNull()
            Me(Me.tableOPICS_FX_SWAPS.SeqNr_NearLegColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDraftNr_NearLegNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.DraftNr_NearLegColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDraftNr_NearLegNull()
            Me(Me.tableOPICS_FX_SWAPS.DraftNr_NearLegColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNearLeg_P_SNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.NearLeg_P_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNearLeg_P_SNull()
            Me(Me.tableOPICS_FX_SWAPS.NearLeg_P_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNearLeg_CCYNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.NearLeg_CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNearLeg_CCYNull()
            Me(Me.tableOPICS_FX_SWAPS.NearLeg_CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNearLeg_CCY_AmountNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.NearLeg_CCY_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNearLeg_CCY_AmountNull()
            Me(Me.tableOPICS_FX_SWAPS.NearLeg_CCY_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpotRateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.SpotRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpotRateNull()
            Me(Me.tableOPICS_FX_SWAPS.SpotRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNearLeg_CTRNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.NearLeg_CTRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNearLeg_CTRNull()
            Me(Me.tableOPICS_FX_SWAPS.NearLeg_CTRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNearLeg_CTR_AmountNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.NearLeg_CTR_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNearLeg_CTR_AmountNull()
            Me(Me.tableOPICS_FX_SWAPS.NearLeg_CTR_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpot_Deal_StatusNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.Spot_Deal_StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpot_Deal_StatusNull()
            Me(Me.tableOPICS_FX_SWAPS.Spot_Deal_StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTradeDateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.TradeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTradeDateNull()
            Me(Me.tableOPICS_FX_SWAPS.TradeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsValue_dateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.Value_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetValue_dateNull()
            Me(Me.tableOPICS_FX_SWAPS.Value_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSeqNr_FarLegNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.SeqNr_FarLegColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSeqNr_FarLegNull()
            Me(Me.tableOPICS_FX_SWAPS.SeqNr_FarLegColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDraftNr_FarLegNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.DraftNr_FarLegColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDraftNr_FarLegNull()
            Me(Me.tableOPICS_FX_SWAPS.DraftNr_FarLegColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwap_Deal_NoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.Swap_Deal_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwap_Deal_NoNull()
            Me(Me.tableOPICS_FX_SWAPS.Swap_Deal_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFarLeg_P_SNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.FarLeg_P_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFarLeg_P_SNull()
            Me(Me.tableOPICS_FX_SWAPS.FarLeg_P_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFarLeg_CCYNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.FarLeg_CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFarLeg_CCYNull()
            Me(Me.tableOPICS_FX_SWAPS.FarLeg_CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFarLeg_CCY_AmountNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.FarLeg_CCY_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFarLeg_CCY_AmountNull()
            Me(Me.tableOPICS_FX_SWAPS.FarLeg_CCY_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwapRateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.SwapRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwapRateNull()
            Me(Me.tableOPICS_FX_SWAPS.SwapRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFarLeg_CTRNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.FarLeg_CTRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFarLeg_CTRNull()
            Me(Me.tableOPICS_FX_SWAPS.FarLeg_CTRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFarLeg_CTR_AmountNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.FarLeg_CTR_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFarLeg_CTR_AmountNull()
            Me(Me.tableOPICS_FX_SWAPS.FarLeg_CTR_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwap_Deal_StatusNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.Swap_Deal_StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwap_Deal_StatusNull()
            Me(Me.tableOPICS_FX_SWAPS.Swap_Deal_StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityDateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.MaturityDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityDateNull()
            Me(Me.tableOPICS_FX_SWAPS.MaturityDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDaysToMaturityNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.DaysToMaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDaysToMaturityNull()
            Me(Me.tableOPICS_FX_SWAPS.DaysToMaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwapPointsNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.SwapPointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwapPointsNull()
            Me(Me.tableOPICS_FX_SWAPS.SwapPointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFE_DealnoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.FE_DealnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFE_DealnoNull()
            Me(Me.tableOPICS_FX_SWAPS.FE_DealnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NrNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.OCBS_Cust_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NrNull()
            Me(Me.tableOPICS_FX_SWAPS.OCBS_Cust_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Customer_NameNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.OCBS_Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Customer_NameNull()
            Me(Me.tableOPICS_FX_SWAPS.OCBS_Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC_CODENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.BIC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC_CODENull()
            Me(Me.tableOPICS_FX_SWAPS.BIC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableOPICS_FX_SWAPS.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMeldepflichtNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.MeldepflichtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMeldepflichtNull()
            Me(Me.tableOPICS_FX_SWAPS.MeldepflichtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientTypeNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX_SWAPS.ClientTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientTypeNull()
            Me(Me.tableOPICS_FX_SWAPS.ClientTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OPICS_FXRow
        Inherits Global.System.Data.DataRow
        
        Private tableOPICS_FX As OPICS_FXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPICS_FX = CType(Me.Table,OPICS_FXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableOPICS_FX.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableOPICS_FX.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.TransactionStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionStatus' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.TransactionStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Deal_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.Deal_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Deal_No' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.Deal_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Seq_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.Seq_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Seq_No' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.Seq_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Customer() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.CustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Customer' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.CustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property P_S() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.P_SColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_S' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.P_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.CCY_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY_Amount' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.CCY_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Rate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.RateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rate' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CTR() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.CTRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CTR' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.CTRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CTR_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.CTR_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CTR_Amount' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.CTR_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TradeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.TradeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeDate' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.TradeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Value_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.Value_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Value_date' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.Value_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Swap_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.Swap_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Swap_No' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.Swap_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FE_Dealno() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.FE_DealnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FE_Dealno' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.FE_DealnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DraftNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.DraftNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DraftNo' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.DraftNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.OCBS_Cust_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Nr' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.OCBS_Cust_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.OCBS_Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Customer_Name' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.OCBS_Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.BIC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC_CODE' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.BIC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientType() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPICS_FX.ClientTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientType' in table 'OPICS_FX' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPICS_FX.ClientTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionStatusNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.TransactionStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionStatusNull()
            Me(Me.tableOPICS_FX.TransactionStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeal_NoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.Deal_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeal_NoNull()
            Me(Me.tableOPICS_FX.Deal_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSeq_NoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.Seq_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSeq_NoNull()
            Me(Me.tableOPICS_FX.Seq_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCustomerNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.CustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCustomerNull()
            Me(Me.tableOPICS_FX.CustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsP_SNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.P_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetP_SNull()
            Me(Me.tableOPICS_FX.P_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCYNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCYNull()
            Me(Me.tableOPICS_FX.CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCY_AmountNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.CCY_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCY_AmountNull()
            Me(Me.tableOPICS_FX.CCY_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRateNull()
            Me(Me.tableOPICS_FX.RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCTRNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.CTRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCTRNull()
            Me(Me.tableOPICS_FX.CTRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCTR_AmountNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.CTR_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCTR_AmountNull()
            Me(Me.tableOPICS_FX.CTR_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTradeDateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.TradeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTradeDateNull()
            Me(Me.tableOPICS_FX.TradeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsValue_dateNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.Value_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetValue_dateNull()
            Me(Me.tableOPICS_FX.Value_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwap_NoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.Swap_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwap_NoNull()
            Me(Me.tableOPICS_FX.Swap_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableOPICS_FX.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFE_DealnoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.FE_DealnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFE_DealnoNull()
            Me(Me.tableOPICS_FX.FE_DealnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDraftNoNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.DraftNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDraftNoNull()
            Me(Me.tableOPICS_FX.DraftNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NrNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.OCBS_Cust_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NrNull()
            Me(Me.tableOPICS_FX.OCBS_Cust_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Customer_NameNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.OCBS_Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Customer_NameNull()
            Me(Me.tableOPICS_FX.OCBS_Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC_CODENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.BIC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC_CODENull()
            Me(Me.tableOPICS_FX.BIC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableOPICS_FX.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientTypeNull() As Boolean
            Return Me.IsNull(Me.tableOPICS_FX.ClientTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientTypeNull()
            Me(Me.tableOPICS_FX.ClientTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MM_STATISTIC_DATERow
        Inherits Global.System.Data.DataRow
        
        Private tableMM_STATISTIC_DATE As MM_STATISTIC_DATEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMM_STATISTIC_DATE = CType(Me.Table,MM_STATISTIC_DATEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableMM_STATISTIC_DATE.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MM_Statistic_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.MM_Statistic_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MM_Statistic_Date' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.MM_Statistic_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BGMM_RepID() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.BGMM_RepIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGMM_RepID' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.BGMM_RepIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UGMM_RepID() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.UGMM_RepIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UGMM_RepID' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.UGMM_RepIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FXSW_RepID() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.FXSW_RepIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FXSW_RepID' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.FXSW_RepIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EORW_RepID() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.EORW_RepIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EORW_RepID' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.EORW_RepIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BGMM_Result() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.BGMM_ResultColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGMM_Result' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.BGMM_ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UGMM_Result() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.UGMM_ResultColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UGMM_Result' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.UGMM_ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FXSW_Result() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.FXSW_ResultColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FXSW_Result' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.FXSW_ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EORW_Result() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.EORW_ResultColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EORW_Result' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.EORW_ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReportLocked() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.ReportLockedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportLocked' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.ReportLockedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BGMM_Result_Check() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.BGMM_Result_CheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BGMM_Result_Check' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.BGMM_Result_CheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UGMM_Result_Check() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.UGMM_Result_CheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UGMM_Result_Check' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.UGMM_Result_CheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FXSW_Result_Check() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.FXSW_Result_CheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FXSW_Result_Check' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.FXSW_Result_CheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EORW_Result_Check() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_DATE.EORW_Result_CheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EORW_Result_Check' in table 'MM_STATISTIC_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_DATE.EORW_Result_CheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMM_Statistic_DateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.MM_Statistic_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMM_Statistic_DateNull()
            Me(Me.tableMM_STATISTIC_DATE.MM_Statistic_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBGMM_RepIDNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.BGMM_RepIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBGMM_RepIDNull()
            Me(Me.tableMM_STATISTIC_DATE.BGMM_RepIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUGMM_RepIDNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.UGMM_RepIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUGMM_RepIDNull()
            Me(Me.tableMM_STATISTIC_DATE.UGMM_RepIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFXSW_RepIDNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.FXSW_RepIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFXSW_RepIDNull()
            Me(Me.tableMM_STATISTIC_DATE.FXSW_RepIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEORW_RepIDNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.EORW_RepIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEORW_RepIDNull()
            Me(Me.tableMM_STATISTIC_DATE.EORW_RepIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBGMM_ResultNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.BGMM_ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBGMM_ResultNull()
            Me(Me.tableMM_STATISTIC_DATE.BGMM_ResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUGMM_ResultNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.UGMM_ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUGMM_ResultNull()
            Me(Me.tableMM_STATISTIC_DATE.UGMM_ResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFXSW_ResultNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.FXSW_ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFXSW_ResultNull()
            Me(Me.tableMM_STATISTIC_DATE.FXSW_ResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEORW_ResultNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.EORW_ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEORW_ResultNull()
            Me(Me.tableMM_STATISTIC_DATE.EORW_ResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReportLockedNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.ReportLockedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReportLockedNull()
            Me(Me.tableMM_STATISTIC_DATE.ReportLockedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBGMM_Result_CheckNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.BGMM_Result_CheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBGMM_Result_CheckNull()
            Me(Me.tableMM_STATISTIC_DATE.BGMM_Result_CheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUGMM_Result_CheckNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.UGMM_Result_CheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUGMM_Result_CheckNull()
            Me(Me.tableMM_STATISTIC_DATE.UGMM_Result_CheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFXSW_Result_CheckNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.FXSW_Result_CheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFXSW_Result_CheckNull()
            Me(Me.tableMM_STATISTIC_DATE.FXSW_Result_CheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEORW_Result_CheckNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_DATE.EORW_Result_CheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEORW_Result_CheckNull()
            Me(Me.tableMM_STATISTIC_DATE.EORW_Result_CheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetMM_STATISTIC_FXSWRows() As MM_STATISTIC_FXSWRow()
            If (Me.Table.ChildRelations("FK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE") Is Nothing) Then
                Return New MM_STATISTIC_FXSWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE")),MM_STATISTIC_FXSWRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetMM_STATISTIC_UGMMRows() As MM_STATISTIC_UGMMRow()
            If (Me.Table.ChildRelations("FK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE") Is Nothing) Then
                Return New MM_STATISTIC_UGMMRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE")),MM_STATISTIC_UGMMRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetMM_STATISTIC_BGMMRows() As MM_STATISTIC_BGMMRow()
            If (Me.Table.ChildRelations("FK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE") Is Nothing) Then
                Return New MM_STATISTIC_BGMMRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE")),MM_STATISTIC_BGMMRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetMM_STATISTIC_EORWRows() As MM_STATISTIC_EORWRow()
            If (Me.Table.ChildRelations("FK_MM_STATISTIC_EORW_MM_STATISTIC_DATE") Is Nothing) Then
                Return New MM_STATISTIC_EORWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_MM_STATISTIC_EORW_MM_STATISTIC_DATE")),MM_STATISTIC_EORWRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MM_STATISTIC_FXSWRow
        Inherits Global.System.Data.DataRow
        
        Private tableMM_STATISTIC_FXSW As MM_STATISTIC_FXSWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMM_STATISTIC_FXSW = CType(Me.Table,MM_STATISTIC_FXSWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableMM_STATISTIC_FXSW.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Meldepflicht() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.MeldepflichtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Meldepflicht' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.MeldepflichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.TransactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionType' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.TransactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.TransactionStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionStatus' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.TransactionStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PTI_Swap_Deal_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.PTI_Swap_Deal_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTI_Swap_Deal_No' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.PTI_Swap_Deal_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionCurrencyCodeEUR() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.TransactionCurrencyCodeEURColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionCurrencyCodeEUR' in table 'MM_STATISTIC_FXSW' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.TransactionCurrencyCodeEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionNominalAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.TransactionNominalAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionNominalAmount' in table 'MM_STATISTIC_FXSW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.TransactionNominalAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionForeignCurrencyCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.TransactionForeignCurrencyCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionForeignCurrencyCode' in table 'MM_STATISTIC_FXSW"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.TransactionForeignCurrencyCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpotRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.SpotRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpotRate' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.SpotRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SwapRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.SwapRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SwapRate' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.SwapRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TradeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.TradeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeDate' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.TradeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Value_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.Value_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Value_date' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.Value_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.MaturityDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityDate' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.MaturityDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SwapPoints() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.SwapPointsColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SwapPoints' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.SwapPointsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.OCBS_Cust_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Nr' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.OCBS_Cust_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.OCBS_Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Customer_Name' in table 'MM_STATISTIC_FXSW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.OCBS_Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.BIC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC_CODE' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.BIC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartySector() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.CounterpartySectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartySector' in table 'MM_STATISTIC_FXSW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.CounterpartySectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartyCountryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.CounterpartyCountryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartyCountryCode' in table 'MM_STATISTIC_FXSW' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.CounterpartyCountryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_MM_Statistic_Date() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.Id_MM_Statistic_DateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_MM_Statistic_Date' in table 'MM_STATISTIC_FXSW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.Id_MM_Statistic_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_FXSW.ClientTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientType' in table 'MM_STATISTIC_FXSW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_FXSW.ClientTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MM_STATISTIC_DATERow() As MM_STATISTIC_DATERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE")),MM_STATISTIC_DATERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_MM_STATISTIC_FXSW_MM_STATISTIC_DATE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMeldepflichtNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.MeldepflichtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMeldepflichtNull()
            Me(Me.tableMM_STATISTIC_FXSW.MeldepflichtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.TransactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionTypeNull()
            Me(Me.tableMM_STATISTIC_FXSW.TransactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionStatusNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.TransactionStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionStatusNull()
            Me(Me.tableMM_STATISTIC_FXSW.TransactionStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPTI_Swap_Deal_NoNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.PTI_Swap_Deal_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPTI_Swap_Deal_NoNull()
            Me(Me.tableMM_STATISTIC_FXSW.PTI_Swap_Deal_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionCurrencyCodeEURNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.TransactionCurrencyCodeEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionCurrencyCodeEURNull()
            Me(Me.tableMM_STATISTIC_FXSW.TransactionCurrencyCodeEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionNominalAmountNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.TransactionNominalAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionNominalAmountNull()
            Me(Me.tableMM_STATISTIC_FXSW.TransactionNominalAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionForeignCurrencyCodeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.TransactionForeignCurrencyCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionForeignCurrencyCodeNull()
            Me(Me.tableMM_STATISTIC_FXSW.TransactionForeignCurrencyCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpotRateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.SpotRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpotRateNull()
            Me(Me.tableMM_STATISTIC_FXSW.SpotRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwapRateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.SwapRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwapRateNull()
            Me(Me.tableMM_STATISTIC_FXSW.SwapRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTradeDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.TradeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTradeDateNull()
            Me(Me.tableMM_STATISTIC_FXSW.TradeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsValue_dateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.Value_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetValue_dateNull()
            Me(Me.tableMM_STATISTIC_FXSW.Value_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.MaturityDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityDateNull()
            Me(Me.tableMM_STATISTIC_FXSW.MaturityDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSwapPointsNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.SwapPointsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSwapPointsNull()
            Me(Me.tableMM_STATISTIC_FXSW.SwapPointsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NrNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.OCBS_Cust_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NrNull()
            Me(Me.tableMM_STATISTIC_FXSW.OCBS_Cust_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Customer_NameNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.OCBS_Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Customer_NameNull()
            Me(Me.tableMM_STATISTIC_FXSW.OCBS_Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.BIC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC_CODENull()
            Me(Me.tableMM_STATISTIC_FXSW.BIC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableMM_STATISTIC_FXSW.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartySectorNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.CounterpartySectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartySectorNull()
            Me(Me.tableMM_STATISTIC_FXSW.CounterpartySectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartyCountryCodeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.CounterpartyCountryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartyCountryCodeNull()
            Me(Me.tableMM_STATISTIC_FXSW.CounterpartyCountryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_MM_Statistic_DateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.Id_MM_Statistic_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_MM_Statistic_DateNull()
            Me(Me.tableMM_STATISTIC_FXSW.Id_MM_Statistic_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_FXSW.ClientTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientTypeNull()
            Me(Me.tableMM_STATISTIC_FXSW.ClientTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MM_STATISTIC_UGMMRow
        Inherits Global.System.Data.DataRow
        
        Private tableMM_STATISTIC_UGMM As MM_STATISTIC_UGMMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMM_STATISTIC_UGMM = CType(Me.Table,MM_STATISTIC_UGMMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableMM_STATISTIC_UGMM.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Meldepflicht() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.MeldepflichtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Meldepflicht' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.MeldepflichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.TransactionStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionStatus' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.TransactionStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.TransactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionType' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.TransactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InstrumentType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.InstrumentTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InstrumentType' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.InstrumentTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PTI_Deal_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.PTI_Deal_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTI_Deal_Nr' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.PTI_Deal_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartySector() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.CounterpartySectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartySector' in table 'MM_STATISTIC_UGMM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.CounterpartySectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartyCountryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.CounterpartyCountryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartyCountryCode' in table 'MM_STATISTIC_UGMM' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.CounterpartyCountryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TradeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.TradeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeDate' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.TradeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SettlementDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.SettlementDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SettlementDate' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.SettlementDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.MaturityDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityDate' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.MaturityDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY_AMOUNT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.CCY_AMOUNTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY_AMOUNT' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.CCY_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionDealPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.TransactionDealPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionDealPrice' in table 'MM_STATISTIC_UGMM' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.TransactionDealPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RateType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.RateTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateType' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.RateTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DealRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.DealRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DealRate' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.DealRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReferenceRateIndex() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.ReferenceRateIndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceRateIndex' in table 'MM_STATISTIC_UGMM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.ReferenceRateIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BasisPointSpread() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.BasisPointSpreadColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BasisPointSpread' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.BasisPointSpreadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FUNDING_RATE() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.FUNDING_RATEColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FUNDING_RATE' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.FUNDING_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Nr' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Name' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.BIC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC_CODE' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.BIC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_MM_Statistic_Date() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.Id_MM_Statistic_DateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_MM_Statistic_Date' in table 'MM_STATISTIC_UGMM' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.Id_MM_Statistic_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_UGMM.ClientTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientType' in table 'MM_STATISTIC_UGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_UGMM.ClientTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MM_STATISTIC_DATERow() As MM_STATISTIC_DATERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE")),MM_STATISTIC_DATERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_MM_STATISTIC_UGMM_MM_STATISTIC_DATE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMeldepflichtNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.MeldepflichtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMeldepflichtNull()
            Me(Me.tableMM_STATISTIC_UGMM.MeldepflichtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionStatusNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.TransactionStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionStatusNull()
            Me(Me.tableMM_STATISTIC_UGMM.TransactionStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.TransactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionTypeNull()
            Me(Me.tableMM_STATISTIC_UGMM.TransactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstrumentTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.InstrumentTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstrumentTypeNull()
            Me(Me.tableMM_STATISTIC_UGMM.InstrumentTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPTI_Deal_NrNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.PTI_Deal_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPTI_Deal_NrNull()
            Me(Me.tableMM_STATISTIC_UGMM.PTI_Deal_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartySectorNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.CounterpartySectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartySectorNull()
            Me(Me.tableMM_STATISTIC_UGMM.CounterpartySectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartyCountryCodeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.CounterpartyCountryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartyCountryCodeNull()
            Me(Me.tableMM_STATISTIC_UGMM.CounterpartyCountryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTradeDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.TradeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTradeDateNull()
            Me(Me.tableMM_STATISTIC_UGMM.TradeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSettlementDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.SettlementDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSettlementDateNull()
            Me(Me.tableMM_STATISTIC_UGMM.SettlementDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.MaturityDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityDateNull()
            Me(Me.tableMM_STATISTIC_UGMM.MaturityDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCYNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCYNull()
            Me(Me.tableMM_STATISTIC_UGMM.CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCY_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.CCY_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCY_AMOUNTNull()
            Me(Me.tableMM_STATISTIC_UGMM.CCY_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionDealPriceNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.TransactionDealPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionDealPriceNull()
            Me(Me.tableMM_STATISTIC_UGMM.TransactionDealPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRateTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.RateTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRateTypeNull()
            Me(Me.tableMM_STATISTIC_UGMM.RateTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDealRateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.DealRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDealRateNull()
            Me(Me.tableMM_STATISTIC_UGMM.DealRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReferenceRateIndexNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.ReferenceRateIndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReferenceRateIndexNull()
            Me(Me.tableMM_STATISTIC_UGMM.ReferenceRateIndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBasisPointSpreadNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.BasisPointSpreadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBasisPointSpreadNull()
            Me(Me.tableMM_STATISTIC_UGMM.BasisPointSpreadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFUNDING_RATENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.FUNDING_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFUNDING_RATENull()
            Me(Me.tableMM_STATISTIC_UGMM.FUNDING_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NrNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NrNull()
            Me(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NameNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NameNull()
            Me(Me.tableMM_STATISTIC_UGMM.OCBS_Cust_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.BIC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC_CODENull()
            Me(Me.tableMM_STATISTIC_UGMM.BIC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableMM_STATISTIC_UGMM.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_MM_Statistic_DateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.Id_MM_Statistic_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_MM_Statistic_DateNull()
            Me(Me.tableMM_STATISTIC_UGMM.Id_MM_Statistic_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_UGMM.ClientTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientTypeNull()
            Me(Me.tableMM_STATISTIC_UGMM.ClientTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MM_STATISTIC_BGMMRow
        Inherits Global.System.Data.DataRow
        
        Private tableMM_STATISTIC_BGMM As MM_STATISTIC_BGMMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMM_STATISTIC_BGMM = CType(Me.Table,MM_STATISTIC_BGMMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableMM_STATISTIC_BGMM.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Meldepflicht() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.MeldepflichtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Meldepflicht' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.MeldepflichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.TransactionStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionStatus' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.TransactionStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.TransactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionType' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.TransactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PTI_Deal_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.PTI_Deal_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTI_Deal_Nr' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.PTI_Deal_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartySector() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.CounterpartySectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartySector' in table 'MM_STATISTIC_BGMM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.CounterpartySectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartyCountryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.CounterpartyCountryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartyCountryCode' in table 'MM_STATISTIC_BGMM' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.CounterpartyCountryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TradeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.TradeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeDate' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.TradeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SettlementDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.SettlementDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SettlementDate' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.SettlementDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.MaturityDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityDate' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.MaturityDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.CCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.CCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CCY_AMOUNT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.CCY_AMOUNTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCY_AMOUNT' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.CCY_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionDealPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.TransactionDealPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionDealPrice' in table 'MM_STATISTIC_BGMM' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.TransactionDealPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RateType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.RateTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateType' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.RateTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DealRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.DealRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DealRate' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.DealRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReferenceRateIndex() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.ReferenceRateIndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceRateIndex' in table 'MM_STATISTIC_BGMM' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.ReferenceRateIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BasisPointSpread() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.BasisPointSpreadColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BasisPointSpread' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.BasisPointSpreadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Collateral_ISIN() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.Collateral_ISINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Collateral_ISIN' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.Collateral_ISINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CollateralNominalAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.CollateralNominalAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CollateralNominalAmount' in table 'MM_STATISTIC_BGMM' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.CollateralNominalAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CollateralHaircut() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.CollateralHaircutColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CollateralHaircut' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.CollateralHaircutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecialCollateralIndicator() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.SpecialCollateralIndicatorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecialCollateralIndicator' in table 'MM_STATISTIC_BGMM' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.SpecialCollateralIndicatorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Nr' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Name' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.BIC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC_CODE' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.BIC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_MM_Statistic_Date() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.Id_MM_Statistic_DateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_MM_Statistic_Date' in table 'MM_STATISTIC_BGMM' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.Id_MM_Statistic_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_BGMM.ClientTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientType' in table 'MM_STATISTIC_BGMM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_BGMM.ClientTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MM_STATISTIC_DATERow() As MM_STATISTIC_DATERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE")),MM_STATISTIC_DATERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_MM_STATISTIC_BGMM_MM_STATISTIC_DATE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMeldepflichtNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.MeldepflichtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMeldepflichtNull()
            Me(Me.tableMM_STATISTIC_BGMM.MeldepflichtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionStatusNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.TransactionStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionStatusNull()
            Me(Me.tableMM_STATISTIC_BGMM.TransactionStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.TransactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionTypeNull()
            Me(Me.tableMM_STATISTIC_BGMM.TransactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPTI_Deal_NrNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.PTI_Deal_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPTI_Deal_NrNull()
            Me(Me.tableMM_STATISTIC_BGMM.PTI_Deal_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartySectorNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.CounterpartySectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartySectorNull()
            Me(Me.tableMM_STATISTIC_BGMM.CounterpartySectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartyCountryCodeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.CounterpartyCountryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartyCountryCodeNull()
            Me(Me.tableMM_STATISTIC_BGMM.CounterpartyCountryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTradeDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.TradeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTradeDateNull()
            Me(Me.tableMM_STATISTIC_BGMM.TradeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSettlementDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.SettlementDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSettlementDateNull()
            Me(Me.tableMM_STATISTIC_BGMM.SettlementDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.MaturityDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityDateNull()
            Me(Me.tableMM_STATISTIC_BGMM.MaturityDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCYNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.CCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCYNull()
            Me(Me.tableMM_STATISTIC_BGMM.CCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCCY_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.CCY_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCCY_AMOUNTNull()
            Me(Me.tableMM_STATISTIC_BGMM.CCY_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionDealPriceNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.TransactionDealPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionDealPriceNull()
            Me(Me.tableMM_STATISTIC_BGMM.TransactionDealPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRateTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.RateTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRateTypeNull()
            Me(Me.tableMM_STATISTIC_BGMM.RateTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDealRateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.DealRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDealRateNull()
            Me(Me.tableMM_STATISTIC_BGMM.DealRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReferenceRateIndexNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.ReferenceRateIndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReferenceRateIndexNull()
            Me(Me.tableMM_STATISTIC_BGMM.ReferenceRateIndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBasisPointSpreadNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.BasisPointSpreadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBasisPointSpreadNull()
            Me(Me.tableMM_STATISTIC_BGMM.BasisPointSpreadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCollateral_ISINNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.Collateral_ISINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCollateral_ISINNull()
            Me(Me.tableMM_STATISTIC_BGMM.Collateral_ISINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCollateralNominalAmountNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.CollateralNominalAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCollateralNominalAmountNull()
            Me(Me.tableMM_STATISTIC_BGMM.CollateralNominalAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCollateralHaircutNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.CollateralHaircutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCollateralHaircutNull()
            Me(Me.tableMM_STATISTIC_BGMM.CollateralHaircutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecialCollateralIndicatorNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.SpecialCollateralIndicatorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecialCollateralIndicatorNull()
            Me(Me.tableMM_STATISTIC_BGMM.SpecialCollateralIndicatorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NrNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NrNull()
            Me(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NameNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NameNull()
            Me(Me.tableMM_STATISTIC_BGMM.OCBS_Cust_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.BIC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC_CODENull()
            Me(Me.tableMM_STATISTIC_BGMM.BIC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableMM_STATISTIC_BGMM.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_MM_Statistic_DateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.Id_MM_Statistic_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_MM_Statistic_DateNull()
            Me(Me.tableMM_STATISTIC_BGMM.Id_MM_Statistic_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_BGMM.ClientTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientTypeNull()
            Me(Me.tableMM_STATISTIC_BGMM.ClientTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MM_STATISTIC_EORWRow
        Inherits Global.System.Data.DataRow
        
        Private tableMM_STATISTIC_EORW As MM_STATISTIC_EORWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMM_STATISTIC_EORW = CType(Me.Table,MM_STATISTIC_EORWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableMM_STATISTIC_EORW.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Meldepflicht() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.MeldepflichtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Meldepflicht' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.MeldepflichtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.TransactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionType' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.TransactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.TransactionStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionStatus' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.TransactionStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PTI_Swap_Deal_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.PTI_Swap_Deal_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTI_Swap_Deal_No' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.PTI_Swap_Deal_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TransactionNominalAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.TransactionNominalAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionNominalAmount' in table 'MM_STATISTIC_EORW' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.TransactionNominalAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FixedInterestRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.FixedInterestRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FixedInterestRate' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.FixedInterestRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TradeDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.TradeDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TradeDate' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.TradeDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Start_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.Start_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Start_date' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.Start_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.MaturityDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityDate' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.MaturityDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Cust_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.OCBS_Cust_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Cust_Nr' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.OCBS_Cust_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OCBS_Customer_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.OCBS_Customer_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCBS_Customer_Name' in table 'MM_STATISTIC_EORW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.OCBS_Customer_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.BIC_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC_CODE' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.BIC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartySector() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.CounterpartySectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartySector' in table 'MM_STATISTIC_EORW' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.CounterpartySectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CounterpartyCountryCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.CounterpartyCountryCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CounterpartyCountryCode' in table 'MM_STATISTIC_EORW' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.CounterpartyCountryCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_MM_Statistic_Date() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.Id_MM_Statistic_DateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_MM_Statistic_Date' in table 'MM_STATISTIC_EORW' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.Id_MM_Statistic_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMM_STATISTIC_EORW.ClientTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientType' in table 'MM_STATISTIC_EORW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMM_STATISTIC_EORW.ClientTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MM_STATISTIC_DATERow() As MM_STATISTIC_DATERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_MM_STATISTIC_EORW_MM_STATISTIC_DATE")),MM_STATISTIC_DATERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_MM_STATISTIC_EORW_MM_STATISTIC_DATE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMeldepflichtNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.MeldepflichtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMeldepflichtNull()
            Me(Me.tableMM_STATISTIC_EORW.MeldepflichtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.TransactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionTypeNull()
            Me(Me.tableMM_STATISTIC_EORW.TransactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionStatusNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.TransactionStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionStatusNull()
            Me(Me.tableMM_STATISTIC_EORW.TransactionStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPTI_Swap_Deal_NoNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.PTI_Swap_Deal_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPTI_Swap_Deal_NoNull()
            Me(Me.tableMM_STATISTIC_EORW.PTI_Swap_Deal_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTransactionNominalAmountNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.TransactionNominalAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTransactionNominalAmountNull()
            Me(Me.tableMM_STATISTIC_EORW.TransactionNominalAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFixedInterestRateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.FixedInterestRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFixedInterestRateNull()
            Me(Me.tableMM_STATISTIC_EORW.FixedInterestRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTradeDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.TradeDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTradeDateNull()
            Me(Me.tableMM_STATISTIC_EORW.TradeDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStart_dateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.Start_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStart_dateNull()
            Me(Me.tableMM_STATISTIC_EORW.Start_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityDateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.MaturityDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityDateNull()
            Me(Me.tableMM_STATISTIC_EORW.MaturityDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Cust_NrNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.OCBS_Cust_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Cust_NrNull()
            Me(Me.tableMM_STATISTIC_EORW.OCBS_Cust_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOCBS_Customer_NameNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.OCBS_Customer_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOCBS_Customer_NameNull()
            Me(Me.tableMM_STATISTIC_EORW.OCBS_Customer_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.BIC_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC_CODENull()
            Me(Me.tableMM_STATISTIC_EORW.BIC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableMM_STATISTIC_EORW.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartySectorNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.CounterpartySectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartySectorNull()
            Me(Me.tableMM_STATISTIC_EORW.CounterpartySectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCounterpartyCountryCodeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.CounterpartyCountryCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCounterpartyCountryCodeNull()
            Me(Me.tableMM_STATISTIC_EORW.CounterpartyCountryCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_MM_Statistic_DateNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.Id_MM_Statistic_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_MM_Statistic_DateNull()
            Me(Me.tableMM_STATISTIC_EORW.Id_MM_Statistic_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientTypeNull() As Boolean
            Return Me.IsNull(Me.tableMM_STATISTIC_EORW.ClientTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientTypeNull()
            Me(Me.tableMM_STATISTIC_EORW.ClientTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class OPICS_MMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPICS_MMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As OPICS_MMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As OPICS_MMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class OPICS_FX_SWAPSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPICS_FX_SWAPSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As OPICS_FX_SWAPSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As OPICS_FX_SWAPSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class OPICS_FXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPICS_FXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As OPICS_FXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As OPICS_FXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MM_STATISTIC_DATERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MM_STATISTIC_DATERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MM_STATISTIC_DATERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MM_STATISTIC_DATERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MM_STATISTIC_FXSWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MM_STATISTIC_FXSWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MM_STATISTIC_FXSWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MM_STATISTIC_FXSWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MM_STATISTIC_UGMMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MM_STATISTIC_UGMMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MM_STATISTIC_UGMMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MM_STATISTIC_UGMMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MM_STATISTIC_BGMMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MM_STATISTIC_BGMMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MM_STATISTIC_BGMMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MM_STATISTIC_BGMMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MM_STATISTIC_EORWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MM_STATISTIC_EORWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MM_STATISTIC_EORWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MM_STATISTIC_EORWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace MM_Statistic_DatasetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPICS_MMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPICS_MM"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("TransactionStatus", "TransactionStatus")
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType")
            tableMapping.ColumnMappings.Add("InstrumentType", "InstrumentType")
            tableMapping.ColumnMappings.Add("BRANCH", "BRANCH")
            tableMapping.ColumnMappings.Add("DEAL_NO", "DEAL_NO")
            tableMapping.ColumnMappings.Add("PRODUCT", "PRODUCT")
            tableMapping.ColumnMappings.Add("TYPE", "TYPE")
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER")
            tableMapping.ColumnMappings.Add("CCY", "CCY")
            tableMapping.ColumnMappings.Add("CCY_AMOUNT", "CCY_AMOUNT")
            tableMapping.ColumnMappings.Add("RATE_CODE", "RATE_CODE")
            tableMapping.ColumnMappings.Add("Interest_rate", "Interest_rate")
            tableMapping.ColumnMappings.Add("TradeDate", "TradeDate")
            tableMapping.ColumnMappings.Add("MAT_DATE", "MAT_DATE")
            tableMapping.ColumnMappings.Add("DaysToMaturity", "DaysToMaturity")
            tableMapping.ColumnMappings.Add("REVERSAL_DATE", "REVERSAL_DATE")
            tableMapping.ColumnMappings.Add("REVERSAL_REASON", "REVERSAL_REASON")
            tableMapping.ColumnMappings.Add("NEW_DEAL_NO", "NEW_DEAL_NO")
            tableMapping.ColumnMappings.Add("VALUE_DATE", "VALUE_DATE")
            tableMapping.ColumnMappings.Add("PORTFOLIO", "PORTFOLIO")
            tableMapping.ColumnMappings.Add("LINKED_DEAL_NR", "LINKED_DEAL_NR")
            tableMapping.ColumnMappings.Add("STRATEGY", "STRATEGY")
            tableMapping.ColumnMappings.Add("FUNDING_RATE", "FUNDING_RATE")
            tableMapping.ColumnMappings.Add("FUND_CENTER", "FUND_CENTER")
            tableMapping.ColumnMappings.Add("COST_CENTER", "COST_CENTER")
            tableMapping.ColumnMappings.Add("TRADER", "TRADER")
            tableMapping.ColumnMappings.Add("CORPORATE_TRADER", "CORPORATE_TRADER")
            tableMapping.ColumnMappings.Add("CORPORATE_PORTFOLIO", "CORPORATE_PORTFOLIO")
            tableMapping.ColumnMappings.Add("FRONT_END_DEAL_NR", "FRONT_END_DEAL_NR")
            tableMapping.ColumnMappings.Add("CUSTOMER_SHORT_NAME", "CUSTOMER_SHORT_NAME")
            tableMapping.ColumnMappings.Add("CUSTOMER_LONG_NAME", "CUSTOMER_LONG_NAME")
            tableMapping.ColumnMappings.Add("BROKER_SHORT_NAME", "BROKER_SHORT_NAME")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Nr", "OCBS_Cust_Nr")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Name", "OCBS_Cust_Name")
            tableMapping.ColumnMappings.Add("BIC_CODE", "BIC_CODE")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Meldepflicht", "Meldepflicht")
            tableMapping.ColumnMappings.Add("ClientType", "ClientType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [OPICS_MM] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [OPICS_MM] ([TransactionStatus], [TransactionType], [InstrumentType],"& _ 
                " [BRANCH], [DEAL_NO], [PRODUCT], [TYPE], [CUSTOMER], [CCY], [CCY_AMOUNT], [RATE_"& _ 
                "CODE], [Interest_rate], [TradeDate], [MAT_DATE], [DaysToMaturity], [REVERSAL_DAT"& _ 
                "E], [REVERSAL_REASON], [NEW_DEAL_NO], [VALUE_DATE], [PORTFOLIO], [LINKED_DEAL_NR"& _ 
                "], [STRATEGY], [FUNDING_RATE], [FUND_CENTER], [COST_CENTER], [TRADER], [CORPORAT"& _ 
                "E_TRADER], [CORPORATE_PORTFOLIO], [FRONT_END_DEAL_NR], [CUSTOMER_SHORT_NAME], [C"& _ 
                "USTOMER_LONG_NAME], [BROKER_SHORT_NAME], [OCBS_Cust_Nr], [OCBS_Cust_Name], [BIC_"& _ 
                "CODE], [LEI_CODE], [Meldepflicht], [ClientType]) VALUES (@TransactionStatus, @Tr"& _ 
                "ansactionType, @InstrumentType, @BRANCH, @DEAL_NO, @PRODUCT, @TYPE, @CUSTOMER, @"& _ 
                "CCY, @CCY_AMOUNT, @RATE_CODE, @Interest_rate, @TradeDate, @MAT_DATE, @DaysToMatu"& _ 
                "rity, @REVERSAL_DATE, @REVERSAL_REASON, @NEW_DEAL_NO, @VALUE_DATE, @PORTFOLIO, @"& _ 
                "LINKED_DEAL_NR, @STRATEGY, @FUNDING_RATE, @FUND_CENTER, @COST_CENTER, @TRADER, @"& _ 
                "CORPORATE_TRADER, @CORPORATE_PORTFOLIO, @FRONT_END_DEAL_NR, @CUSTOMER_SHORT_NAME"& _ 
                ", @CUSTOMER_LONG_NAME, @BROKER_SHORT_NAME, @OCBS_Cust_Nr, @OCBS_Cust_Name, @BIC_"& _ 
                "CODE, @LEI_CODE, @Meldepflicht, @ClientType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstrumentType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstrumentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRANCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRANCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUSTOMER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_AMOUNT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RATE_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Interest_rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Interest_rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAT_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaysToMaturity", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysToMaturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVERSAL_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVERSAL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVERSAL_REASON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVERSAL_REASON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEW_DEAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEW_DEAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALUE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORTFOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORTFOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINKED_DEAL_NR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINKED_DEAL_NR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STRATEGY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STRATEGY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FUNDING_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FUNDING_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FUND_CENTER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FUND_CENTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COST_CENTER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COST_CENTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRADER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRADER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORPORATE_TRADER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORPORATE_TRADER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORPORATE_PORTFOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORPORATE_PORTFOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FRONT_END_DEAL_NR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FRONT_END_DEAL_NR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUSTOMER_SHORT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_SHORT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUSTOMER_LONG_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_LONG_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BROKER_SHORT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BROKER_SHORT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [OPICS_MM] SET [TransactionStatus] = @TransactionStatus, [TransactionType]"& _ 
                " = @TransactionType, [InstrumentType] = @InstrumentType, [BRANCH] = @BRANCH, [DE"& _ 
                "AL_NO] = @DEAL_NO, [PRODUCT] = @PRODUCT, [TYPE] = @TYPE, [CUSTOMER] = @CUSTOMER,"& _ 
                " [CCY] = @CCY, [CCY_AMOUNT] = @CCY_AMOUNT, [RATE_CODE] = @RATE_CODE, [Interest_r"& _ 
                "ate] = @Interest_rate, [TradeDate] = @TradeDate, [MAT_DATE] = @MAT_DATE, [DaysTo"& _ 
                "Maturity] = @DaysToMaturity, [REVERSAL_DATE] = @REVERSAL_DATE, [REVERSAL_REASON]"& _ 
                " = @REVERSAL_REASON, [NEW_DEAL_NO] = @NEW_DEAL_NO, [VALUE_DATE] = @VALUE_DATE, ["& _ 
                "PORTFOLIO] = @PORTFOLIO, [LINKED_DEAL_NR] = @LINKED_DEAL_NR, [STRATEGY] = @STRAT"& _ 
                "EGY, [FUNDING_RATE] = @FUNDING_RATE, [FUND_CENTER] = @FUND_CENTER, [COST_CENTER]"& _ 
                " = @COST_CENTER, [TRADER] = @TRADER, [CORPORATE_TRADER] = @CORPORATE_TRADER, [CO"& _ 
                "RPORATE_PORTFOLIO] = @CORPORATE_PORTFOLIO, [FRONT_END_DEAL_NR] = @FRONT_END_DEAL"& _ 
                "_NR, [CUSTOMER_SHORT_NAME] = @CUSTOMER_SHORT_NAME, [CUSTOMER_LONG_NAME] = @CUSTO"& _ 
                "MER_LONG_NAME, [BROKER_SHORT_NAME] = @BROKER_SHORT_NAME, [OCBS_Cust_Nr] = @OCBS_"& _ 
                "Cust_Nr, [OCBS_Cust_Name] = @OCBS_Cust_Name, [BIC_CODE] = @BIC_CODE, [LEI_CODE] "& _ 
                "= @LEI_CODE, [Meldepflicht] = @Meldepflicht, [ClientType] = @ClientType WHERE (("& _ 
                "[ID] = @Original_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstrumentType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstrumentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRANCH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRANCH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DEAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUSTOMER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_AMOUNT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RATE_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Interest_rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Interest_rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAT_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaysToMaturity", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysToMaturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVERSAL_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVERSAL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REVERSAL_REASON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REVERSAL_REASON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEW_DEAL_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEW_DEAL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALUE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALUE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORTFOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORTFOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINKED_DEAL_NR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINKED_DEAL_NR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STRATEGY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STRATEGY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FUNDING_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FUNDING_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FUND_CENTER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FUND_CENTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COST_CENTER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COST_CENTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRADER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRADER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORPORATE_TRADER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORPORATE_TRADER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORPORATE_PORTFOLIO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORPORATE_PORTFOLIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FRONT_END_DEAL_NR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FRONT_END_DEAL_NR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUSTOMER_SHORT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_SHORT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUSTOMER_LONG_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUSTOMER_LONG_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BROKER_SHORT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BROKER_SHORT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, TransactionStatus, TransactionType, InstrumentType, BRANCH, DEA"& _ 
                "L_NO, PRODUCT, TYPE, CUSTOMER, CCY, CCY_AMOUNT, RATE_CODE, Interest_rate, TradeD"& _ 
                "ate, MAT_DATE, DaysToMaturity, REVERSAL_DATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         REVERSA"& _ 
                "L_REASON, NEW_DEAL_NO, VALUE_DATE, PORTFOLIO, LINKED_DEAL_NR, STRATEGY, FUNDING_"& _ 
                "RATE, FUND_CENTER, COST_CENTER, TRADER, CORPORATE_TRADER, CORPORATE_PORTFOLIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FRONT_END_DEAL_NR, CUSTOMER_SHORT_NAME, CUSTOMER_LONG_"& _ 
                "NAME, BROKER_SHORT_NAME, OCBS_Cust_Nr, OCBS_Cust_Name, BIC_CODE, LEI_CODE, Melde"& _ 
                "pflicht, ClientType"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            OPICS_MM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TradeDate DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillOpicsMM_Deals(ByVal dataTable As MM_Statistic_Dataset.OPICS_MMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataOpicsMM_Deals() As MM_Statistic_Dataset.OPICS_MMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.OPICS_MMDataTable = New MM_Statistic_Dataset.OPICS_MMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.OPICS_MMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "OPICS_MM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal InstrumentType As String,  _
                    ByVal BRANCH As String,  _
                    ByVal DEAL_NO As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal TYPE As String,  _
                    ByVal CUSTOMER As String,  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Global.System.Nullable(Of Double),  _
                    ByVal RATE_CODE As String,  _
                    ByVal Interest_rate As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal MAT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal DaysToMaturity As Global.System.Nullable(Of Double),  _
                    ByVal REVERSAL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal REVERSAL_REASON As String,  _
                    ByVal NEW_DEAL_NO As String,  _
                    ByVal VALUE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal PORTFOLIO As String,  _
                    ByVal LINKED_DEAL_NR As String,  _
                    ByVal STRATEGY As String,  _
                    ByVal FUNDING_RATE As Global.System.Nullable(Of Double),  _
                    ByVal FUND_CENTER As String,  _
                    ByVal COST_CENTER As String,  _
                    ByVal TRADER As String,  _
                    ByVal CORPORATE_TRADER As String,  _
                    ByVal CORPORATE_PORTFOLIO As String,  _
                    ByVal FRONT_END_DEAL_NR As String,  _
                    ByVal CUSTOMER_SHORT_NAME As String,  _
                    ByVal CUSTOMER_LONG_NAME As String,  _
                    ByVal BROKER_SHORT_NAME As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Meldepflicht As String,  _
                    ByVal ClientType As String) As Integer
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TransactionStatus,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TransactionType,String)
            End If
            If (InstrumentType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(InstrumentType,String)
            End If
            If (BRANCH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BRANCH,String)
            End If
            If (DEAL_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DEAL_NO,String)
            End If
            If (PRODUCT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PRODUCT,String)
            End If
            If (TYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TYPE,String)
            End If
            If (CUSTOMER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CUSTOMER,String)
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CCY,String)
            End If
            If (CCY_AMOUNT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CCY_AMOUNT.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (RATE_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RATE_CODE,String)
            End If
            If (Interest_rate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Interest_rate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (MAT_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(MAT_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DaysToMaturity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DaysToMaturity.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (REVERSAL_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(REVERSAL_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (REVERSAL_REASON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(REVERSAL_REASON,String)
            End If
            If (NEW_DEAL_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(NEW_DEAL_NO,String)
            End If
            If (VALUE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(VALUE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PORTFOLIO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PORTFOLIO,String)
            End If
            If (LINKED_DEAL_NR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(LINKED_DEAL_NR,String)
            End If
            If (STRATEGY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(STRATEGY,String)
            End If
            If (FUNDING_RATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(FUNDING_RATE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (FUND_CENTER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(FUND_CENTER,String)
            End If
            If (COST_CENTER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(COST_CENTER,String)
            End If
            If (TRADER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TRADER,String)
            End If
            If (CORPORATE_TRADER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CORPORATE_TRADER,String)
            End If
            If (CORPORATE_PORTFOLIO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(CORPORATE_PORTFOLIO,String)
            End If
            If (FRONT_END_DEAL_NR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(FRONT_END_DEAL_NR,String)
            End If
            If (CUSTOMER_SHORT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CUSTOMER_SHORT_NAME,String)
            End If
            If (CUSTOMER_LONG_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CUSTOMER_LONG_NAME,String)
            End If
            If (BROKER_SHORT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(BROKER_SHORT_NAME,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Cust_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(OCBS_Cust_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(LEI_CODE,String)
            End If
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Meldepflicht,String)
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(ClientType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal InstrumentType As String,  _
                    ByVal BRANCH As String,  _
                    ByVal DEAL_NO As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal TYPE As String,  _
                    ByVal CUSTOMER As String,  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Global.System.Nullable(Of Double),  _
                    ByVal RATE_CODE As String,  _
                    ByVal Interest_rate As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal MAT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal DaysToMaturity As Global.System.Nullable(Of Double),  _
                    ByVal REVERSAL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal REVERSAL_REASON As String,  _
                    ByVal NEW_DEAL_NO As String,  _
                    ByVal VALUE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal PORTFOLIO As String,  _
                    ByVal LINKED_DEAL_NR As String,  _
                    ByVal STRATEGY As String,  _
                    ByVal FUNDING_RATE As Global.System.Nullable(Of Double),  _
                    ByVal FUND_CENTER As String,  _
                    ByVal COST_CENTER As String,  _
                    ByVal TRADER As String,  _
                    ByVal CORPORATE_TRADER As String,  _
                    ByVal CORPORATE_PORTFOLIO As String,  _
                    ByVal FRONT_END_DEAL_NR As String,  _
                    ByVal CUSTOMER_SHORT_NAME As String,  _
                    ByVal CUSTOMER_LONG_NAME As String,  _
                    ByVal BROKER_SHORT_NAME As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Meldepflicht As String,  _
                    ByVal ClientType As String,  _
                    ByVal Original_ID As Integer) As Integer
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TransactionStatus,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TransactionType,String)
            End If
            If (InstrumentType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(InstrumentType,String)
            End If
            If (BRANCH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BRANCH,String)
            End If
            If (DEAL_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DEAL_NO,String)
            End If
            If (PRODUCT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRODUCT,String)
            End If
            If (TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TYPE,String)
            End If
            If (CUSTOMER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CUSTOMER,String)
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CCY,String)
            End If
            If (CCY_AMOUNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CCY_AMOUNT.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (RATE_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(RATE_CODE,String)
            End If
            If (Interest_rate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Interest_rate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (MAT_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(MAT_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DaysToMaturity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DaysToMaturity.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (REVERSAL_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(REVERSAL_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (REVERSAL_REASON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(REVERSAL_REASON,String)
            End If
            If (NEW_DEAL_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(NEW_DEAL_NO,String)
            End If
            If (VALUE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(VALUE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PORTFOLIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(PORTFOLIO,String)
            End If
            If (LINKED_DEAL_NR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(LINKED_DEAL_NR,String)
            End If
            If (STRATEGY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(STRATEGY,String)
            End If
            If (FUNDING_RATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(FUNDING_RATE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (FUND_CENTER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(FUND_CENTER,String)
            End If
            If (COST_CENTER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(COST_CENTER,String)
            End If
            If (TRADER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TRADER,String)
            End If
            If (CORPORATE_TRADER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CORPORATE_TRADER,String)
            End If
            If (CORPORATE_PORTFOLIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(CORPORATE_PORTFOLIO,String)
            End If
            If (FRONT_END_DEAL_NR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(FRONT_END_DEAL_NR,String)
            End If
            If (CUSTOMER_SHORT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CUSTOMER_SHORT_NAME,String)
            End If
            If (CUSTOMER_LONG_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CUSTOMER_LONG_NAME,String)
            End If
            If (BROKER_SHORT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(BROKER_SHORT_NAME,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Cust_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(OCBS_Cust_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(LEI_CODE,String)
            End If
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Meldepflicht,String)
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(ClientType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPICS_FX_SWAPSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPICS_FX_SWAPS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType")
            tableMapping.ColumnMappings.Add("TransactionStatus", "TransactionStatus")
            tableMapping.ColumnMappings.Add("Spot_Deal_No", "Spot_Deal_No")
            tableMapping.ColumnMappings.Add("Customer", "Customer")
            tableMapping.ColumnMappings.Add("SeqNr_NearLeg", "SeqNr_NearLeg")
            tableMapping.ColumnMappings.Add("DraftNr_NearLeg", "DraftNr_NearLeg")
            tableMapping.ColumnMappings.Add("NearLeg_P_S", "NearLeg_P_S")
            tableMapping.ColumnMappings.Add("NearLeg_CCY", "NearLeg_CCY")
            tableMapping.ColumnMappings.Add("NearLeg_CCY_Amount", "NearLeg_CCY_Amount")
            tableMapping.ColumnMappings.Add("SpotRate", "SpotRate")
            tableMapping.ColumnMappings.Add("NearLeg_CTR", "NearLeg_CTR")
            tableMapping.ColumnMappings.Add("NearLeg_CTR_Amount", "NearLeg_CTR_Amount")
            tableMapping.ColumnMappings.Add("Spot_Deal_Status", "Spot_Deal_Status")
            tableMapping.ColumnMappings.Add("TradeDate", "TradeDate")
            tableMapping.ColumnMappings.Add("Value_date", "Value_date")
            tableMapping.ColumnMappings.Add("SeqNr_FarLeg", "SeqNr_FarLeg")
            tableMapping.ColumnMappings.Add("DraftNr_FarLeg", "DraftNr_FarLeg")
            tableMapping.ColumnMappings.Add("Swap_Deal_No", "Swap_Deal_No")
            tableMapping.ColumnMappings.Add("FarLeg_P_S", "FarLeg_P_S")
            tableMapping.ColumnMappings.Add("FarLeg_CCY", "FarLeg_CCY")
            tableMapping.ColumnMappings.Add("FarLeg_CCY_Amount", "FarLeg_CCY_Amount")
            tableMapping.ColumnMappings.Add("SwapRate", "SwapRate")
            tableMapping.ColumnMappings.Add("FarLeg_CTR", "FarLeg_CTR")
            tableMapping.ColumnMappings.Add("FarLeg_CTR_Amount", "FarLeg_CTR_Amount")
            tableMapping.ColumnMappings.Add("Swap_Deal_Status", "Swap_Deal_Status")
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate")
            tableMapping.ColumnMappings.Add("DaysToMaturity", "DaysToMaturity")
            tableMapping.ColumnMappings.Add("SwapPoints", "SwapPoints")
            tableMapping.ColumnMappings.Add("FE_Dealno", "FE_Dealno")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Nr", "OCBS_Cust_Nr")
            tableMapping.ColumnMappings.Add("OCBS_Customer_Name", "OCBS_Customer_Name")
            tableMapping.ColumnMappings.Add("BIC_CODE", "BIC_CODE")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Meldepflicht", "Meldepflicht")
            tableMapping.ColumnMappings.Add("ClientType", "ClientType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [OPICS_FX_SWAPS] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [OPICS_FX_SWAPS] ([TransactionType], [TransactionStatus], [Spot_Deal_"& _ 
                "No], [Customer], [SeqNr_NearLeg], [DraftNr_NearLeg], [NearLeg_P_S], [NearLeg_CCY"& _ 
                "], [NearLeg_CCY_Amount], [SpotRate], [NearLeg_CTR], [NearLeg_CTR_Amount], [Spot_"& _ 
                "Deal_Status], [TradeDate], [Value_date], [SeqNr_FarLeg], [DraftNr_FarLeg], [Swap"& _ 
                "_Deal_No], [FarLeg_P_S], [FarLeg_CCY], [FarLeg_CCY_Amount], [SwapRate], [FarLeg_"& _ 
                "CTR], [FarLeg_CTR_Amount], [Swap_Deal_Status], [MaturityDate], [DaysToMaturity],"& _ 
                " [SwapPoints], [FE_Dealno], [OCBS_Cust_Nr], [OCBS_Customer_Name], [BIC_CODE], [L"& _ 
                "EI_CODE], [Meldepflicht], [ClientType]) VALUES (@TransactionType, @TransactionSt"& _ 
                "atus, @Spot_Deal_No, @Customer, @SeqNr_NearLeg, @DraftNr_NearLeg, @NearLeg_P_S, "& _ 
                "@NearLeg_CCY, @NearLeg_CCY_Amount, @SpotRate, @NearLeg_CTR, @NearLeg_CTR_Amount,"& _ 
                " @Spot_Deal_Status, @TradeDate, @Value_date, @SeqNr_FarLeg, @DraftNr_FarLeg, @Sw"& _ 
                "ap_Deal_No, @FarLeg_P_S, @FarLeg_CCY, @FarLeg_CCY_Amount, @SwapRate, @FarLeg_CTR"& _ 
                ", @FarLeg_CTR_Amount, @Swap_Deal_Status, @MaturityDate, @DaysToMaturity, @SwapPo"& _ 
                "ints, @FE_Dealno, @OCBS_Cust_Nr, @OCBS_Customer_Name, @BIC_CODE, @LEI_CODE, @Mel"& _ 
                "depflicht, @ClientType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spot_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spot_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNr_NearLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNr_NearLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraftNr_NearLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraftNr_NearLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_P_S", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_P_S", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CCY_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CCY_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpotRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpotRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CTR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CTR_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CTR_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spot_Deal_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spot_Deal_Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Value_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Value_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNr_FarLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNr_FarLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraftNr_FarLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraftNr_FarLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swap_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swap_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_P_S", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_P_S", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CCY_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CCY_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CTR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CTR_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CTR_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swap_Deal_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swap_Deal_Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaysToMaturity", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysToMaturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapPoints", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapPoints", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_Dealno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FE_Dealno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [OPICS_FX_SWAPS] SET [TransactionType] = @TransactionType, [TransactionSta"& _ 
                "tus] = @TransactionStatus, [Spot_Deal_No] = @Spot_Deal_No, [Customer] = @Custome"& _ 
                "r, [SeqNr_NearLeg] = @SeqNr_NearLeg, [DraftNr_NearLeg] = @DraftNr_NearLeg, [Near"& _ 
                "Leg_P_S] = @NearLeg_P_S, [NearLeg_CCY] = @NearLeg_CCY, [NearLeg_CCY_Amount] = @N"& _ 
                "earLeg_CCY_Amount, [SpotRate] = @SpotRate, [NearLeg_CTR] = @NearLeg_CTR, [NearLe"& _ 
                "g_CTR_Amount] = @NearLeg_CTR_Amount, [Spot_Deal_Status] = @Spot_Deal_Status, [Tr"& _ 
                "adeDate] = @TradeDate, [Value_date] = @Value_date, [SeqNr_FarLeg] = @SeqNr_FarLe"& _ 
                "g, [DraftNr_FarLeg] = @DraftNr_FarLeg, [Swap_Deal_No] = @Swap_Deal_No, [FarLeg_P"& _ 
                "_S] = @FarLeg_P_S, [FarLeg_CCY] = @FarLeg_CCY, [FarLeg_CCY_Amount] = @FarLeg_CCY"& _ 
                "_Amount, [SwapRate] = @SwapRate, [FarLeg_CTR] = @FarLeg_CTR, [FarLeg_CTR_Amount]"& _ 
                " = @FarLeg_CTR_Amount, [Swap_Deal_Status] = @Swap_Deal_Status, [MaturityDate] = "& _ 
                "@MaturityDate, [DaysToMaturity] = @DaysToMaturity, [SwapPoints] = @SwapPoints, ["& _ 
                "FE_Dealno] = @FE_Dealno, [OCBS_Cust_Nr] = @OCBS_Cust_Nr, [OCBS_Customer_Name] = "& _ 
                "@OCBS_Customer_Name, [BIC_CODE] = @BIC_CODE, [LEI_CODE] = @LEI_CODE, [Meldepflic"& _ 
                "ht] = @Meldepflicht, [ClientType] = @ClientType WHERE (([ID] = @Original_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spot_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spot_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNr_NearLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNr_NearLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraftNr_NearLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraftNr_NearLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_P_S", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_P_S", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CCY_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CCY_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpotRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpotRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CTR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NearLeg_CTR_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NearLeg_CTR_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spot_Deal_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spot_Deal_Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Value_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Value_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SeqNr_FarLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SeqNr_FarLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraftNr_FarLeg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraftNr_FarLeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swap_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swap_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_P_S", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_P_S", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CCY_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CCY_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CTR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FarLeg_CTR_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FarLeg_CTR_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swap_Deal_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swap_Deal_Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DaysToMaturity", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DaysToMaturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapPoints", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapPoints", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_Dealno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FE_Dealno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, TransactionType, TransactionStatus, Spot_Deal_No, Customer, Seq"& _ 
                "Nr_NearLeg, DraftNr_NearLeg, NearLeg_P_S, NearLeg_CCY, NearLeg_CCY_Amount, SpotR"& _ 
                "ate, NearLeg_CTR, NearLeg_CTR_Amount, Spot_Deal_Status, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   TradeDate, Value_date, SeqNr_FarLeg, DraftNr_FarLeg, Swap_Deal_No, FarLeg_P_S"& _ 
                ", FarLeg_CCY, FarLeg_CCY_Amount, SwapRate, FarLeg_CTR, FarLeg_CTR_Amount, Swap_D"& _ 
                "eal_Status, MaturityDate, DaysToMaturity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SwapPoints,"& _ 
                " FE_Dealno, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, LEI_CODE, Meldepflicht, "& _ 
                "ClientType"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            OPICS_FX_SWAPS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TradeDate DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillbyFX_TradeDate(ByVal dataTable As MM_Statistic_Dataset.OPICS_FX_SWAPSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataFX_TradeDate() As MM_Statistic_Dataset.OPICS_FX_SWAPSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.OPICS_FX_SWAPSDataTable = New MM_Statistic_Dataset.OPICS_FX_SWAPSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.OPICS_FX_SWAPSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "OPICS_FX_SWAPS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal Spot_Deal_No As String,  _
                    ByVal Customer As String,  _
                    ByVal SeqNr_NearLeg As String,  _
                    ByVal DraftNr_NearLeg As String,  _
                    ByVal NearLeg_P_S As String,  _
                    ByVal NearLeg_CCY As String,  _
                    ByVal NearLeg_CCY_Amount As Global.System.Nullable(Of Double),  _
                    ByVal SpotRate As Global.System.Nullable(Of Double),  _
                    ByVal NearLeg_CTR As String,  _
                    ByVal NearLeg_CTR_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Spot_Deal_Status As String,  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Value_date As Global.System.Nullable(Of Date),  _
                    ByVal SeqNr_FarLeg As String,  _
                    ByVal DraftNr_FarLeg As String,  _
                    ByVal Swap_Deal_No As String,  _
                    ByVal FarLeg_P_S As String,  _
                    ByVal FarLeg_CCY As String,  _
                    ByVal FarLeg_CCY_Amount As Global.System.Nullable(Of Double),  _
                    ByVal SwapRate As Global.System.Nullable(Of Double),  _
                    ByVal FarLeg_CTR As String,  _
                    ByVal FarLeg_CTR_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Swap_Deal_Status As String,  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal DaysToMaturity As Global.System.Nullable(Of Double),  _
                    ByVal SwapPoints As Global.System.Nullable(Of Double),  _
                    ByVal FE_Dealno As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Meldepflicht As String,  _
                    ByVal ClientType As String) As Integer
            If (TransactionType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TransactionType,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TransactionStatus,String)
            End If
            If (Spot_Deal_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Spot_Deal_No,String)
            End If
            If (Customer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Customer,String)
            End If
            If (SeqNr_NearLeg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(SeqNr_NearLeg,String)
            End If
            If (DraftNr_NearLeg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DraftNr_NearLeg,String)
            End If
            If (NearLeg_P_S Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(NearLeg_P_S,String)
            End If
            If (NearLeg_CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(NearLeg_CCY,String)
            End If
            If (NearLeg_CCY_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(NearLeg_CCY_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SpotRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SpotRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (NearLeg_CTR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(NearLeg_CTR,String)
            End If
            If (NearLeg_CTR_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(NearLeg_CTR_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Spot_Deal_Status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Spot_Deal_Status,String)
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Value_date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Value_date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SeqNr_FarLeg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SeqNr_FarLeg,String)
            End If
            If (DraftNr_FarLeg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(DraftNr_FarLeg,String)
            End If
            If (Swap_Deal_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Swap_Deal_No,String)
            End If
            If (FarLeg_P_S Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(FarLeg_P_S,String)
            End If
            If (FarLeg_CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(FarLeg_CCY,String)
            End If
            If (FarLeg_CCY_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(FarLeg_CCY_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SwapRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SwapRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (FarLeg_CTR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(FarLeg_CTR,String)
            End If
            If (FarLeg_CTR_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(FarLeg_CTR_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Swap_Deal_Status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Swap_Deal_Status,String)
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (DaysToMaturity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(DaysToMaturity.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (SwapPoints.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(SwapPoints.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (FE_Dealno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(FE_Dealno,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(LEI_CODE,String)
            End If
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Meldepflicht,String)
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ClientType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal Spot_Deal_No As String,  _
                    ByVal Customer As String,  _
                    ByVal SeqNr_NearLeg As String,  _
                    ByVal DraftNr_NearLeg As String,  _
                    ByVal NearLeg_P_S As String,  _
                    ByVal NearLeg_CCY As String,  _
                    ByVal NearLeg_CCY_Amount As Global.System.Nullable(Of Double),  _
                    ByVal SpotRate As Global.System.Nullable(Of Double),  _
                    ByVal NearLeg_CTR As String,  _
                    ByVal NearLeg_CTR_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Spot_Deal_Status As String,  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Value_date As Global.System.Nullable(Of Date),  _
                    ByVal SeqNr_FarLeg As String,  _
                    ByVal DraftNr_FarLeg As String,  _
                    ByVal Swap_Deal_No As String,  _
                    ByVal FarLeg_P_S As String,  _
                    ByVal FarLeg_CCY As String,  _
                    ByVal FarLeg_CCY_Amount As Global.System.Nullable(Of Double),  _
                    ByVal SwapRate As Global.System.Nullable(Of Double),  _
                    ByVal FarLeg_CTR As String,  _
                    ByVal FarLeg_CTR_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Swap_Deal_Status As String,  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal DaysToMaturity As Global.System.Nullable(Of Double),  _
                    ByVal SwapPoints As Global.System.Nullable(Of Double),  _
                    ByVal FE_Dealno As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Meldepflicht As String,  _
                    ByVal ClientType As String,  _
                    ByVal Original_ID As Integer) As Integer
            If (TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TransactionType,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TransactionStatus,String)
            End If
            If (Spot_Deal_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Spot_Deal_No,String)
            End If
            If (Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Customer,String)
            End If
            If (SeqNr_NearLeg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SeqNr_NearLeg,String)
            End If
            If (DraftNr_NearLeg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DraftNr_NearLeg,String)
            End If
            If (NearLeg_P_S Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(NearLeg_P_S,String)
            End If
            If (NearLeg_CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(NearLeg_CCY,String)
            End If
            If (NearLeg_CCY_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(NearLeg_CCY_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SpotRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SpotRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (NearLeg_CTR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(NearLeg_CTR,String)
            End If
            If (NearLeg_CTR_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(NearLeg_CTR_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Spot_Deal_Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Spot_Deal_Status,String)
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Value_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Value_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SeqNr_FarLeg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SeqNr_FarLeg,String)
            End If
            If (DraftNr_FarLeg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(DraftNr_FarLeg,String)
            End If
            If (Swap_Deal_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Swap_Deal_No,String)
            End If
            If (FarLeg_P_S Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(FarLeg_P_S,String)
            End If
            If (FarLeg_CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(FarLeg_CCY,String)
            End If
            If (FarLeg_CCY_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(FarLeg_CCY_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SwapRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(SwapRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (FarLeg_CTR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(FarLeg_CTR,String)
            End If
            If (FarLeg_CTR_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(FarLeg_CTR_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Swap_Deal_Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Swap_Deal_Status,String)
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (DaysToMaturity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(DaysToMaturity.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (SwapPoints.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(SwapPoints.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (FE_Dealno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(FE_Dealno,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(LEI_CODE,String)
            End If
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Meldepflicht,String)
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(ClientType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPICS_FXTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPICS_FX"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("TransactionStatus", "TransactionStatus")
            tableMapping.ColumnMappings.Add("Deal_No", "Deal_No")
            tableMapping.ColumnMappings.Add("Seq_No", "Seq_No")
            tableMapping.ColumnMappings.Add("Customer", "Customer")
            tableMapping.ColumnMappings.Add("P_S", "P_S")
            tableMapping.ColumnMappings.Add("CCY", "CCY")
            tableMapping.ColumnMappings.Add("CCY_Amount", "CCY_Amount")
            tableMapping.ColumnMappings.Add("Rate", "Rate")
            tableMapping.ColumnMappings.Add("CTR", "CTR")
            tableMapping.ColumnMappings.Add("CTR_Amount", "CTR_Amount")
            tableMapping.ColumnMappings.Add("TradeDate", "TradeDate")
            tableMapping.ColumnMappings.Add("Value_date", "Value_date")
            tableMapping.ColumnMappings.Add("Swap_No", "Swap_No")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("FE_Dealno", "FE_Dealno")
            tableMapping.ColumnMappings.Add("DraftNo", "DraftNo")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Nr", "OCBS_Cust_Nr")
            tableMapping.ColumnMappings.Add("OCBS_Customer_Name", "OCBS_Customer_Name")
            tableMapping.ColumnMappings.Add("BIC_CODE", "BIC_CODE")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("ClientType", "ClientType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [OPICS_FX] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [OPICS_FX] ([TransactionStatus], [Deal_No], [Seq_No], [Customer], [P_"& _ 
                "S], [CCY], [CCY_Amount], [Rate], [CTR], [CTR_Amount], [TradeDate], [Value_date],"& _ 
                " [Swap_No], [Status], [FE_Dealno], [DraftNo], [OCBS_Cust_Nr], [OCBS_Customer_Nam"& _ 
                "e], [BIC_CODE], [LEI_CODE], [ClientType]) VALUES (@TransactionStatus, @Deal_No, "& _ 
                "@Seq_No, @Customer, @P_S, @CCY, @CCY_Amount, @Rate, @CTR, @CTR_Amount, @TradeDat"& _ 
                "e, @Value_date, @Swap_No, @Status, @FE_Dealno, @DraftNo, @OCBS_Cust_Nr, @OCBS_Cu"& _ 
                "stomer_Name, @BIC_CODE, @LEI_CODE, @ClientType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Seq_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Seq_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_S", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_S", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTR_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTR_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Value_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Value_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swap_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swap_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_Dealno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FE_Dealno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraftNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraftNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [OPICS_FX] SET [TransactionStatus] = @TransactionStatus, [Deal_No] = @Deal"& _ 
                "_No, [Seq_No] = @Seq_No, [Customer] = @Customer, [P_S] = @P_S, [CCY] = @CCY, [CC"& _ 
                "Y_Amount] = @CCY_Amount, [Rate] = @Rate, [CTR] = @CTR, [CTR_Amount] = @CTR_Amoun"& _ 
                "t, [TradeDate] = @TradeDate, [Value_date] = @Value_date, [Swap_No] = @Swap_No, ["& _ 
                "Status] = @Status, [FE_Dealno] = @FE_Dealno, [DraftNo] = @DraftNo, [OCBS_Cust_Nr"& _ 
                "] = @OCBS_Cust_Nr, [OCBS_Customer_Name] = @OCBS_Customer_Name, [BIC_CODE] = @BIC"& _ 
                "_CODE, [LEI_CODE] = @LEI_CODE, [ClientType] = @ClientType WHERE (([ID] = @Origin"& _ 
                "al_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Seq_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Seq_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_S", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_S", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTR_Amount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTR_Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Value_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Value_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Swap_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Swap_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_Dealno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FE_Dealno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DraftNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DraftNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, TransactionStatus, Deal_No, Seq_No, Customer, P_S, CCY, CCY_Amo"& _ 
                "unt, Rate, CTR, CTR_Amount, TradeDate, Value_date, Swap_No, Status, FE_Dealno, D"& _ 
                "raftNo, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         L"& _ 
                "EI_CODE, ClientType"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            OPICS_FX"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TradeDate DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MM_Statistic_Dataset.OPICS_FXDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MM_Statistic_Dataset.OPICS_FXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.OPICS_FXDataTable = New MM_Statistic_Dataset.OPICS_FXDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.OPICS_FXDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "OPICS_FX")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal TransactionStatus As String,  _
                    ByVal Deal_No As String,  _
                    ByVal Seq_No As String,  _
                    ByVal Customer As String,  _
                    ByVal P_S As String,  _
                    ByVal CCY As String,  _
                    ByVal CCY_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Rate As Global.System.Nullable(Of Double),  _
                    ByVal CTR As String,  _
                    ByVal CTR_Amount As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Value_date As Global.System.Nullable(Of Date),  _
                    ByVal Swap_No As String,  _
                    ByVal Status As String,  _
                    ByVal FE_Dealno As String,  _
                    ByVal DraftNo As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal ClientType As String) As Integer
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TransactionStatus,String)
            End If
            If (Deal_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Deal_No,String)
            End If
            If (Seq_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Seq_No,String)
            End If
            If (Customer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Customer,String)
            End If
            If (P_S Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(P_S,String)
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CCY,String)
            End If
            If (CCY_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CCY_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Rate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Rate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CTR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CTR,String)
            End If
            If (CTR_Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CTR_Amount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Value_date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Value_date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Swap_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Swap_No,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Status,String)
            End If
            If (FE_Dealno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(FE_Dealno,String)
            End If
            If (DraftNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DraftNo,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(LEI_CODE,String)
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ClientType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TransactionStatus As String,  _
                    ByVal Deal_No As String,  _
                    ByVal Seq_No As String,  _
                    ByVal Customer As String,  _
                    ByVal P_S As String,  _
                    ByVal CCY As String,  _
                    ByVal CCY_Amount As Global.System.Nullable(Of Double),  _
                    ByVal Rate As Global.System.Nullable(Of Double),  _
                    ByVal CTR As String,  _
                    ByVal CTR_Amount As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Value_date As Global.System.Nullable(Of Date),  _
                    ByVal Swap_No As String,  _
                    ByVal Status As String,  _
                    ByVal FE_Dealno As String,  _
                    ByVal DraftNo As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal ClientType As String,  _
                    ByVal Original_ID As Integer) As Integer
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TransactionStatus,String)
            End If
            If (Deal_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Deal_No,String)
            End If
            If (Seq_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Seq_No,String)
            End If
            If (Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Customer,String)
            End If
            If (P_S Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(P_S,String)
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CCY,String)
            End If
            If (CCY_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CCY_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Rate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Rate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CTR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CTR,String)
            End If
            If (CTR_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CTR_Amount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Value_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Value_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Swap_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Swap_No,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Status,String)
            End If
            If (FE_Dealno Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(FE_Dealno,String)
            End If
            If (DraftNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DraftNo,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(LEI_CODE,String)
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ClientType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MM_STATISTIC_DATETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MM_STATISTIC_DATE"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("MM_Statistic_Date", "MM_Statistic_Date")
            tableMapping.ColumnMappings.Add("BGMM_RepID", "BGMM_RepID")
            tableMapping.ColumnMappings.Add("UGMM_RepID", "UGMM_RepID")
            tableMapping.ColumnMappings.Add("FXSW_RepID", "FXSW_RepID")
            tableMapping.ColumnMappings.Add("EORW_RepID", "EORW_RepID")
            tableMapping.ColumnMappings.Add("BGMM_Result", "BGMM_Result")
            tableMapping.ColumnMappings.Add("UGMM_Result", "UGMM_Result")
            tableMapping.ColumnMappings.Add("FXSW_Result", "FXSW_Result")
            tableMapping.ColumnMappings.Add("EORW_Result", "EORW_Result")
            tableMapping.ColumnMappings.Add("ReportLocked", "ReportLocked")
            tableMapping.ColumnMappings.Add("BGMM_Result_Check", "BGMM_Result_Check")
            tableMapping.ColumnMappings.Add("UGMM_Result_Check", "UGMM_Result_Check")
            tableMapping.ColumnMappings.Add("FXSW_Result_Check", "FXSW_Result_Check")
            tableMapping.ColumnMappings.Add("EORW_Result_Check", "EORW_Result_Check")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MM_STATISTIC_DATE] WHERE (([ID] = @Original_ID) AND ((@IsNull_MM_Sta"& _ 
                "tistic_Date = 1 AND [MM_Statistic_Date] IS NULL) OR ([MM_Statistic_Date] = @Orig"& _ 
                "inal_MM_Statistic_Date)) AND ((@IsNull_BGMM_RepID = 1 AND [BGMM_RepID] IS NULL) "& _ 
                "OR ([BGMM_RepID] = @Original_BGMM_RepID)) AND ((@IsNull_UGMM_RepID = 1 AND [UGMM"& _ 
                "_RepID] IS NULL) OR ([UGMM_RepID] = @Original_UGMM_RepID)) AND ((@IsNull_FXSW_Re"& _ 
                "pID = 1 AND [FXSW_RepID] IS NULL) OR ([FXSW_RepID] = @Original_FXSW_RepID)) AND "& _ 
                "((@IsNull_EORW_RepID = 1 AND [EORW_RepID] IS NULL) OR ([EORW_RepID] = @Original_"& _ 
                "EORW_RepID)) AND ((@IsNull_BGMM_Result = 1 AND [BGMM_Result] IS NULL) OR ([BGMM_"& _ 
                "Result] = @Original_BGMM_Result)) AND ((@IsNull_UGMM_Result = 1 AND [UGMM_Result"& _ 
                "] IS NULL) OR ([UGMM_Result] = @Original_UGMM_Result)) AND ((@IsNull_FXSW_Result"& _ 
                " = 1 AND [FXSW_Result] IS NULL) OR ([FXSW_Result] = @Original_FXSW_Result)) AND "& _ 
                "((@IsNull_EORW_Result = 1 AND [EORW_Result] IS NULL) OR ([EORW_Result] = @Origin"& _ 
                "al_EORW_Result)) AND ((@IsNull_ReportLocked = 1 AND [ReportLocked] IS NULL) OR ("& _ 
                "[ReportLocked] = @Original_ReportLocked)) AND ((@IsNull_BGMM_Result_Check = 1 AN"& _ 
                "D [BGMM_Result_Check] IS NULL) OR ([BGMM_Result_Check] = @Original_BGMM_Result_C"& _ 
                "heck)) AND ((@IsNull_UGMM_Result_Check = 1 AND [UGMM_Result_Check] IS NULL) OR ("& _ 
                "[UGMM_Result_Check] = @Original_UGMM_Result_Check)) AND ((@IsNull_FXSW_Result_Ch"& _ 
                "eck = 1 AND [FXSW_Result_Check] IS NULL) OR ([FXSW_Result_Check] = @Original_FXS"& _ 
                "W_Result_Check)) AND ((@IsNull_EORW_Result_Check = 1 AND [EORW_Result_Check] IS "& _ 
                "NULL) OR ([EORW_Result_Check] = @Original_EORW_Result_Check)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MM_Statistic_Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MM_Statistic_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MM_Statistic_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BGMM_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UGMM_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FXSW_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FXSW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EORW_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EORW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BGMM_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UGMM_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FXSW_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FXSW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EORW_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EORW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReportLocked", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLocked", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReportLocked", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLocked", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BGMM_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UGMM_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FXSW_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FXSW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EORW_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EORW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MM_STATISTIC_DATE] ([MM_Statistic_Date], [BGMM_RepID], [UGMM_RepID],"& _ 
                " [FXSW_RepID], [EORW_RepID], [BGMM_Result], [UGMM_Result], [FXSW_Result], [EORW_"& _ 
                "Result], [ReportLocked], [BGMM_Result_Check], [UGMM_Result_Check], [FXSW_Result_"& _ 
                "Check], [EORW_Result_Check]) VALUES (@MM_Statistic_Date, @BGMM_RepID, @UGMM_RepI"& _ 
                "D, @FXSW_RepID, @EORW_RepID, @BGMM_Result, @UGMM_Result, @FXSW_Result, @EORW_Res"& _ 
                "ult, @ReportLocked, @BGMM_Result_Check, @UGMM_Result_Check, @FXSW_Result_Check, "& _ 
                "@EORW_Result_Check);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, MM_Statistic_Date, BGMM_RepID, UGMM_RepID, FXSW"& _ 
                "_RepID, EORW_RepID, BGMM_Result, UGMM_Result, FXSW_Result, EORW_Result, ReportLo"& _ 
                "cked, BGMM_Result_Check, UGMM_Result_Check, FXSW_Result_Check, EORW_Result_Check"& _ 
                " FROM MM_STATISTIC_DATE WHERE (ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MM_Statistic_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FXSW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EORW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FXSW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EORW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportLocked", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLocked", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FXSW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EORW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MM_STATISTIC_DATE] SET [MM_Statistic_Date] = @MM_Statistic_Date, [BGMM_Re"& _ 
                "pID] = @BGMM_RepID, [UGMM_RepID] = @UGMM_RepID, [FXSW_RepID] = @FXSW_RepID, [EOR"& _ 
                "W_RepID] = @EORW_RepID, [BGMM_Result] = @BGMM_Result, [UGMM_Result] = @UGMM_Resu"& _ 
                "lt, [FXSW_Result] = @FXSW_Result, [EORW_Result] = @EORW_Result, [ReportLocked] ="& _ 
                " @ReportLocked, [BGMM_Result_Check] = @BGMM_Result_Check, [UGMM_Result_Check] = "& _ 
                "@UGMM_Result_Check, [FXSW_Result_Check] = @FXSW_Result_Check, [EORW_Result_Check"& _ 
                "] = @EORW_Result_Check WHERE (([ID] = @Original_ID) AND ((@IsNull_MM_Statistic_D"& _ 
                "ate = 1 AND [MM_Statistic_Date] IS NULL) OR ([MM_Statistic_Date] = @Original_MM_"& _ 
                "Statistic_Date)) AND ((@IsNull_BGMM_RepID = 1 AND [BGMM_RepID] IS NULL) OR ([BGM"& _ 
                "M_RepID] = @Original_BGMM_RepID)) AND ((@IsNull_UGMM_RepID = 1 AND [UGMM_RepID] "& _ 
                "IS NULL) OR ([UGMM_RepID] = @Original_UGMM_RepID)) AND ((@IsNull_FXSW_RepID = 1 "& _ 
                "AND [FXSW_RepID] IS NULL) OR ([FXSW_RepID] = @Original_FXSW_RepID)) AND ((@IsNul"& _ 
                "l_EORW_RepID = 1 AND [EORW_RepID] IS NULL) OR ([EORW_RepID] = @Original_EORW_Rep"& _ 
                "ID)) AND ((@IsNull_BGMM_Result = 1 AND [BGMM_Result] IS NULL) OR ([BGMM_Result] "& _ 
                "= @Original_BGMM_Result)) AND ((@IsNull_UGMM_Result = 1 AND [UGMM_Result] IS NUL"& _ 
                "L) OR ([UGMM_Result] = @Original_UGMM_Result)) AND ((@IsNull_FXSW_Result = 1 AND"& _ 
                " [FXSW_Result] IS NULL) OR ([FXSW_Result] = @Original_FXSW_Result)) AND ((@IsNul"& _ 
                "l_EORW_Result = 1 AND [EORW_Result] IS NULL) OR ([EORW_Result] = @Original_EORW_"& _ 
                "Result)) AND ((@IsNull_ReportLocked = 1 AND [ReportLocked] IS NULL) OR ([ReportL"& _ 
                "ocked] = @Original_ReportLocked)) AND ((@IsNull_BGMM_Result_Check = 1 AND [BGMM_"& _ 
                "Result_Check] IS NULL) OR ([BGMM_Result_Check] = @Original_BGMM_Result_Check)) A"& _ 
                "ND ((@IsNull_UGMM_Result_Check = 1 AND [UGMM_Result_Check] IS NULL) OR ([UGMM_Re"& _ 
                "sult_Check] = @Original_UGMM_Result_Check)) AND ((@IsNull_FXSW_Result_Check = 1 "& _ 
                "AND [FXSW_Result_Check] IS NULL) OR ([FXSW_Result_Check] = @Original_FXSW_Result"& _ 
                "_Check)) AND ((@IsNull_EORW_Result_Check = 1 AND [EORW_Result_Check] IS NULL) OR"& _ 
                " ([EORW_Result_Check] = @Original_EORW_Result_Check)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, MM_Statistic"& _ 
                "_Date, BGMM_RepID, UGMM_RepID, FXSW_RepID, EORW_RepID, BGMM_Result, UGMM_Result,"& _ 
                " FXSW_Result, EORW_Result, ReportLocked, BGMM_Result_Check, UGMM_Result_Check, F"& _ 
                "XSW_Result_Check, EORW_Result_Check FROM MM_STATISTIC_DATE WHERE (ID = @ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MM_Statistic_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FXSW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EORW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_RepID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FXSW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EORW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportLocked", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLocked", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FXSW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EORW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result_Check", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MM_Statistic_Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MM_Statistic_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MM_Statistic_Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BGMM_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UGMM_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UGMM_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FXSW_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FXSW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EORW_RepID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_RepID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EORW_RepID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_RepID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BGMM_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UGMM_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UGMM_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FXSW_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FXSW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EORW_Result", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EORW_Result", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReportLocked", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLocked", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReportLocked", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLocked", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BGMM_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BGMM_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UGMM_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UGMM_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UGMM_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FXSW_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FXSW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FXSW_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EORW_Result_Check", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result_Check", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EORW_Result_Check", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EORW_Result_Check", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, MM_Statistic_Date, BGMM_RepID, UGMM_RepID, FXSW_RepID, EORW_Rep"& _ 
                "ID, BGMM_Result, UGMM_Result, FXSW_Result, EORW_Result, ReportLocked, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 BGMM_Result_Check, UGMM_Result_Check, FXSW_Result_Check, EORW_R"& _ 
                "esult_Check"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MM_STATISTIC_DATE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT BGMM_RepID, BGMM_Result, BGMM_Result_Check, EORW_RepID, EORW_Result, EORW_"& _ 
                "Result_Check, FXSW_RepID, FXSW_Result, FXSW_Result_Check, ID, MM_Statistic_Date,"& _ 
                " ReportLocked, UGMM_RepID, UGMM_Result, UGMM_Result_Check FROM MM_STATISTIC_DATE"& _ 
                " WHERE (MM_Statistic_Date = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable = New MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByStatisticDate(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable, ByVal Param1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByStatisticDate(ByVal Param1 As Global.System.Nullable(Of Date)) As MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable = New MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_DATEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "MM_STATISTIC_DATE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_MM_Statistic_Date As Global.System.Nullable(Of Date), ByVal Original_BGMM_RepID As String, ByVal Original_UGMM_RepID As String, ByVal Original_FXSW_RepID As String, ByVal Original_EORW_RepID As String, ByVal Original_BGMM_Result As Global.System.Nullable(Of Double), ByVal Original_UGMM_Result As Global.System.Nullable(Of Double), ByVal Original_FXSW_Result As Global.System.Nullable(Of Double), ByVal Original_EORW_Result As Global.System.Nullable(Of Double), ByVal Original_ReportLocked As Global.System.Nullable(Of Boolean), ByVal Original_BGMM_Result_Check As String, ByVal Original_UGMM_Result_Check As String, ByVal Original_FXSW_Result_Check As String, ByVal Original_EORW_Result_Check As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_MM_Statistic_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_BGMM_RepID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_BGMM_RepID,String)
            End If
            If (Original_UGMM_RepID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_UGMM_RepID,String)
            End If
            If (Original_FXSW_RepID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FXSW_RepID,String)
            End If
            If (Original_EORW_RepID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_EORW_RepID,String)
            End If
            If (Original_BGMM_Result.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_BGMM_Result.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_UGMM_Result.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_UGMM_Result.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_FXSW_Result.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_FXSW_Result.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_EORW_Result.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_EORW_Result.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_ReportLocked.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ReportLocked.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_BGMM_Result_Check Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_BGMM_Result_Check,String)
            End If
            If (Original_UGMM_Result_Check Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_UGMM_Result_Check,String)
            End If
            If (Original_FXSW_Result_Check Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_FXSW_Result_Check,String)
            End If
            If (Original_EORW_Result_Check Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_EORW_Result_Check,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal MM_Statistic_Date As Global.System.Nullable(Of Date), ByVal BGMM_RepID As String, ByVal UGMM_RepID As String, ByVal FXSW_RepID As String, ByVal EORW_RepID As String, ByVal BGMM_Result As Global.System.Nullable(Of Double), ByVal UGMM_Result As Global.System.Nullable(Of Double), ByVal FXSW_Result As Global.System.Nullable(Of Double), ByVal EORW_Result As Global.System.Nullable(Of Double), ByVal ReportLocked As Global.System.Nullable(Of Boolean), ByVal BGMM_Result_Check As String, ByVal UGMM_Result_Check As String, ByVal FXSW_Result_Check As String, ByVal EORW_Result_Check As String) As Integer
            If (MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(MM_Statistic_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BGMM_RepID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(BGMM_RepID,String)
            End If
            If (UGMM_RepID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(UGMM_RepID,String)
            End If
            If (FXSW_RepID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FXSW_RepID,String)
            End If
            If (EORW_RepID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(EORW_RepID,String)
            End If
            If (BGMM_Result.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(BGMM_Result.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (UGMM_Result.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(UGMM_Result.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (FXSW_Result.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(FXSW_Result.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (EORW_Result.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(EORW_Result.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ReportLocked.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ReportLocked.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BGMM_Result_Check Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BGMM_Result_Check,String)
            End If
            If (UGMM_Result_Check Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(UGMM_Result_Check,String)
            End If
            If (FXSW_Result_Check Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FXSW_Result_Check,String)
            End If
            If (EORW_Result_Check Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(EORW_Result_Check,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MM_Statistic_Date As Global.System.Nullable(Of Date),  _
                    ByVal BGMM_RepID As String,  _
                    ByVal UGMM_RepID As String,  _
                    ByVal FXSW_RepID As String,  _
                    ByVal EORW_RepID As String,  _
                    ByVal BGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal UGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal FXSW_Result As Global.System.Nullable(Of Double),  _
                    ByVal EORW_Result As Global.System.Nullable(Of Double),  _
                    ByVal ReportLocked As Global.System.Nullable(Of Boolean),  _
                    ByVal BGMM_Result_Check As String,  _
                    ByVal UGMM_Result_Check As String,  _
                    ByVal FXSW_Result_Check As String,  _
                    ByVal EORW_Result_Check As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_MM_Statistic_Date As Global.System.Nullable(Of Date),  _
                    ByVal Original_BGMM_RepID As String,  _
                    ByVal Original_UGMM_RepID As String,  _
                    ByVal Original_FXSW_RepID As String,  _
                    ByVal Original_EORW_RepID As String,  _
                    ByVal Original_BGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_UGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_FXSW_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_EORW_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_ReportLocked As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BGMM_Result_Check As String,  _
                    ByVal Original_UGMM_Result_Check As String,  _
                    ByVal Original_FXSW_Result_Check As String,  _
                    ByVal Original_EORW_Result_Check As String,  _
                    ByVal ID As Integer) As Integer
            If (MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(MM_Statistic_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (BGMM_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(BGMM_RepID,String)
            End If
            If (UGMM_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(UGMM_RepID,String)
            End If
            If (FXSW_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FXSW_RepID,String)
            End If
            If (EORW_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(EORW_RepID,String)
            End If
            If (BGMM_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(BGMM_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (UGMM_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(UGMM_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (FXSW_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(FXSW_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (EORW_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(EORW_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ReportLocked.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ReportLocked.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BGMM_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(BGMM_Result_Check,String)
            End If
            If (UGMM_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(UGMM_Result_Check,String)
            End If
            If (FXSW_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(FXSW_Result_Check,String)
            End If
            If (EORW_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(EORW_Result_Check,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ID,Integer)
            If (Original_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_MM_Statistic_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_BGMM_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_BGMM_RepID,String)
            End If
            If (Original_UGMM_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_UGMM_RepID,String)
            End If
            If (Original_FXSW_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_FXSW_RepID,String)
            End If
            If (Original_EORW_RepID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_EORW_RepID,String)
            End If
            If (Original_BGMM_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_BGMM_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_UGMM_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_UGMM_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_FXSW_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_FXSW_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_EORW_Result.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_EORW_Result.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_ReportLocked.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_ReportLocked.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_BGMM_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_BGMM_Result_Check,String)
            End If
            If (Original_UGMM_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_UGMM_Result_Check,String)
            End If
            If (Original_FXSW_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_FXSW_Result_Check,String)
            End If
            If (Original_EORW_Result_Check Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_EORW_Result_Check,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MM_Statistic_Date As Global.System.Nullable(Of Date),  _
                    ByVal BGMM_RepID As String,  _
                    ByVal UGMM_RepID As String,  _
                    ByVal FXSW_RepID As String,  _
                    ByVal EORW_RepID As String,  _
                    ByVal BGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal UGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal FXSW_Result As Global.System.Nullable(Of Double),  _
                    ByVal EORW_Result As Global.System.Nullable(Of Double),  _
                    ByVal ReportLocked As Global.System.Nullable(Of Boolean),  _
                    ByVal BGMM_Result_Check As String,  _
                    ByVal UGMM_Result_Check As String,  _
                    ByVal FXSW_Result_Check As String,  _
                    ByVal EORW_Result_Check As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_MM_Statistic_Date As Global.System.Nullable(Of Date),  _
                    ByVal Original_BGMM_RepID As String,  _
                    ByVal Original_UGMM_RepID As String,  _
                    ByVal Original_FXSW_RepID As String,  _
                    ByVal Original_EORW_RepID As String,  _
                    ByVal Original_BGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_UGMM_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_FXSW_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_EORW_Result As Global.System.Nullable(Of Double),  _
                    ByVal Original_ReportLocked As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BGMM_Result_Check As String,  _
                    ByVal Original_UGMM_Result_Check As String,  _
                    ByVal Original_FXSW_Result_Check As String,  _
                    ByVal Original_EORW_Result_Check As String) As Integer
            Return Me.Update(MM_Statistic_Date, BGMM_RepID, UGMM_RepID, FXSW_RepID, EORW_RepID, BGMM_Result, UGMM_Result, FXSW_Result, EORW_Result, ReportLocked, BGMM_Result_Check, UGMM_Result_Check, FXSW_Result_Check, EORW_Result_Check, Original_ID, Original_MM_Statistic_Date, Original_BGMM_RepID, Original_UGMM_RepID, Original_FXSW_RepID, Original_EORW_RepID, Original_BGMM_Result, Original_UGMM_Result, Original_FXSW_Result, Original_EORW_Result, Original_ReportLocked, Original_BGMM_Result_Check, Original_UGMM_Result_Check, Original_FXSW_Result_Check, Original_EORW_Result_Check, Original_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MM_STATISTIC_FXSWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MM_STATISTIC_FXSW"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Meldepflicht", "Meldepflicht")
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType")
            tableMapping.ColumnMappings.Add("TransactionStatus", "TransactionStatus")
            tableMapping.ColumnMappings.Add("PTI_Swap_Deal_No", "PTI_Swap_Deal_No")
            tableMapping.ColumnMappings.Add("TransactionCurrencyCodeEUR", "TransactionCurrencyCodeEUR")
            tableMapping.ColumnMappings.Add("TransactionNominalAmount", "TransactionNominalAmount")
            tableMapping.ColumnMappings.Add("TransactionForeignCurrencyCode", "TransactionForeignCurrencyCode")
            tableMapping.ColumnMappings.Add("SpotRate", "SpotRate")
            tableMapping.ColumnMappings.Add("SwapRate", "SwapRate")
            tableMapping.ColumnMappings.Add("TradeDate", "TradeDate")
            tableMapping.ColumnMappings.Add("Value_date", "Value_date")
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate")
            tableMapping.ColumnMappings.Add("SwapPoints", "SwapPoints")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Nr", "OCBS_Cust_Nr")
            tableMapping.ColumnMappings.Add("OCBS_Customer_Name", "OCBS_Customer_Name")
            tableMapping.ColumnMappings.Add("BIC_CODE", "BIC_CODE")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("CounterpartySector", "CounterpartySector")
            tableMapping.ColumnMappings.Add("CounterpartyCountryCode", "CounterpartyCountryCode")
            tableMapping.ColumnMappings.Add("Id_MM_Statistic_Date", "Id_MM_Statistic_Date")
            tableMapping.ColumnMappings.Add("ClientType", "ClientType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MM_STATISTIC_FXSW] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MM_STATISTIC_FXSW] ([Meldepflicht], [TransactionType], [TransactionS"& _ 
                "tatus], [PTI_Swap_Deal_No], [TransactionCurrencyCodeEUR], [TransactionNominalAmo"& _ 
                "unt], [TransactionForeignCurrencyCode], [SpotRate], [SwapRate], [TradeDate], [Va"& _ 
                "lue_date], [MaturityDate], [SwapPoints], [OCBS_Cust_Nr], [OCBS_Customer_Name], ["& _ 
                "BIC_CODE], [LEI_CODE], [CounterpartySector], [CounterpartyCountryCode], [Id_MM_S"& _ 
                "tatistic_Date], [ClientType]) VALUES (@Meldepflicht, @TransactionType, @Transact"& _ 
                "ionStatus, @PTI_Swap_Deal_No, @TransactionCurrencyCodeEUR, @TransactionNominalAm"& _ 
                "ount, @TransactionForeignCurrencyCode, @SpotRate, @SwapRate, @TradeDate, @Value_"& _ 
                "date, @MaturityDate, @SwapPoints, @OCBS_Cust_Nr, @OCBS_Customer_Name, @BIC_CODE,"& _ 
                " @LEI_CODE, @CounterpartySector, @CounterpartyCountryCode, @Id_MM_Statistic_Date"& _ 
                ", @ClientType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Swap_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Swap_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionCurrencyCodeEUR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionCurrencyCodeEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionNominalAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionNominalAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionForeignCurrencyCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionForeignCurrencyCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpotRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpotRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Value_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Value_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapPoints", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapPoints", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MM_STATISTIC_FXSW] SET [Meldepflicht] = @Meldepflicht, [TransactionType] "& _ 
                "= @TransactionType, [TransactionStatus] = @TransactionStatus, [PTI_Swap_Deal_No]"& _ 
                " = @PTI_Swap_Deal_No, [TransactionCurrencyCodeEUR] = @TransactionCurrencyCodeEUR"& _ 
                ", [TransactionNominalAmount] = @TransactionNominalAmount, [TransactionForeignCur"& _ 
                "rencyCode] = @TransactionForeignCurrencyCode, [SpotRate] = @SpotRate, [SwapRate]"& _ 
                " = @SwapRate, [TradeDate] = @TradeDate, [Value_date] = @Value_date, [MaturityDat"& _ 
                "e] = @MaturityDate, [SwapPoints] = @SwapPoints, [OCBS_Cust_Nr] = @OCBS_Cust_Nr, "& _ 
                "[OCBS_Customer_Name] = @OCBS_Customer_Name, [BIC_CODE] = @BIC_CODE, [LEI_CODE] ="& _ 
                " @LEI_CODE, [CounterpartySector] = @CounterpartySector, [CounterpartyCountryCode"& _ 
                "] = @CounterpartyCountryCode, [Id_MM_Statistic_Date] = @Id_MM_Statistic_Date, [C"& _ 
                "lientType] = @ClientType WHERE (([ID] = @Original_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Swap_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Swap_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionCurrencyCodeEUR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionCurrencyCodeEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionNominalAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionNominalAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionForeignCurrencyCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionForeignCurrencyCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpotRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpotRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Value_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Value_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SwapPoints", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SwapPoints", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, Meldepflicht, TransactionType, TransactionStatus, PTI_Swap_Deal"& _ 
                "_No, TransactionCurrencyCodeEUR, TransactionNominalAmount, TransactionForeignCur"& _ 
                "rencyCode, SpotRate, SwapRate, TradeDate, Value_date, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " MaturityDate, SwapPoints, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, LEI_CODE,"& _ 
                " CounterpartySector, CounterpartyCountryCode, Id_MM_Statistic_Date, ClientType"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "FROM            MM_STATISTIC_FXSW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT BIC_CODE, ClientType, CounterpartyCountryCode, CounterpartySector, ID, Id_"& _ 
                "MM_Statistic_Date, LEI_CODE, MaturityDate, Meldepflicht, OCBS_Cust_Nr, OCBS_Cust"& _ 
                "omer_Name, PTI_Swap_Deal_No, SpotRate, SwapPoints, SwapRate, TradeDate, Transact"& _ 
                "ionCurrencyCodeEUR, TransactionForeignCurrencyCode, TransactionNominalAmount, Tr"& _ 
                "ansactionStatus, TransactionType, Value_date FROM MM_STATISTIC_FXSW WHERE (Trade"& _ 
                "Date = @Param1) ORDER BY ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable = New MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTradeDate(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable, ByVal Param1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTradeDate(ByVal Param1 As Global.System.Nullable(Of Date)) As MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable = New MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_FXSWDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "MM_STATISTIC_FXSW")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal PTI_Swap_Deal_No As String,  _
                    ByVal TransactionCurrencyCodeEUR As String,  _
                    ByVal TransactionNominalAmount As Global.System.Nullable(Of Double),  _
                    ByVal TransactionForeignCurrencyCode As String,  _
                    ByVal SpotRate As Global.System.Nullable(Of Double),  _
                    ByVal SwapRate As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Value_date As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal SwapPoints As Global.System.Nullable(Of Double),  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TransactionType,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TransactionStatus,String)
            End If
            If (PTI_Swap_Deal_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PTI_Swap_Deal_No,String)
            End If
            If (TransactionCurrencyCodeEUR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TransactionCurrencyCodeEUR,String)
            End If
            If (TransactionNominalAmount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TransactionNominalAmount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TransactionForeignCurrencyCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TransactionForeignCurrencyCode,String)
            End If
            If (SpotRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SpotRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SwapRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SwapRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Value_date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Value_date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (SwapPoints.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SwapPoints.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(LEI_CODE,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CounterpartyCountryCode,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ClientType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal PTI_Swap_Deal_No As String,  _
                    ByVal TransactionCurrencyCodeEUR As String,  _
                    ByVal TransactionNominalAmount As Global.System.Nullable(Of Double),  _
                    ByVal TransactionForeignCurrencyCode As String,  _
                    ByVal SpotRate As Global.System.Nullable(Of Double),  _
                    ByVal SwapRate As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Value_date As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal SwapPoints As Global.System.Nullable(Of Double),  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String,  _
                    ByVal Original_ID As Integer) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TransactionType,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TransactionStatus,String)
            End If
            If (PTI_Swap_Deal_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PTI_Swap_Deal_No,String)
            End If
            If (TransactionCurrencyCodeEUR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TransactionCurrencyCodeEUR,String)
            End If
            If (TransactionNominalAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TransactionNominalAmount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TransactionForeignCurrencyCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TransactionForeignCurrencyCode,String)
            End If
            If (SpotRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SpotRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SwapRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SwapRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Value_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Value_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (SwapPoints.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SwapPoints.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(LEI_CODE,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CounterpartyCountryCode,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ClientType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MM_STATISTIC_UGMMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MM_STATISTIC_UGMM"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Meldepflicht", "Meldepflicht")
            tableMapping.ColumnMappings.Add("TransactionStatus", "TransactionStatus")
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType")
            tableMapping.ColumnMappings.Add("InstrumentType", "InstrumentType")
            tableMapping.ColumnMappings.Add("PTI_Deal_Nr", "PTI_Deal_Nr")
            tableMapping.ColumnMappings.Add("CounterpartySector", "CounterpartySector")
            tableMapping.ColumnMappings.Add("CounterpartyCountryCode", "CounterpartyCountryCode")
            tableMapping.ColumnMappings.Add("TradeDate", "TradeDate")
            tableMapping.ColumnMappings.Add("SettlementDate", "SettlementDate")
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate")
            tableMapping.ColumnMappings.Add("CCY", "CCY")
            tableMapping.ColumnMappings.Add("CCY_AMOUNT", "CCY_AMOUNT")
            tableMapping.ColumnMappings.Add("TransactionDealPrice", "TransactionDealPrice")
            tableMapping.ColumnMappings.Add("RateType", "RateType")
            tableMapping.ColumnMappings.Add("DealRate", "DealRate")
            tableMapping.ColumnMappings.Add("ReferenceRateIndex", "ReferenceRateIndex")
            tableMapping.ColumnMappings.Add("BasisPointSpread", "BasisPointSpread")
            tableMapping.ColumnMappings.Add("FUNDING_RATE", "FUNDING_RATE")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Nr", "OCBS_Cust_Nr")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Name", "OCBS_Cust_Name")
            tableMapping.ColumnMappings.Add("BIC_CODE", "BIC_CODE")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Id_MM_Statistic_Date", "Id_MM_Statistic_Date")
            tableMapping.ColumnMappings.Add("ClientType", "ClientType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MM_STATISTIC_UGMM] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MM_STATISTIC_UGMM] ([Meldepflicht], [TransactionStatus], [Transactio"& _ 
                "nType], [InstrumentType], [PTI_Deal_Nr], [CounterpartySector], [CounterpartyCoun"& _ 
                "tryCode], [TradeDate], [SettlementDate], [MaturityDate], [CCY], [CCY_AMOUNT], [T"& _ 
                "ransactionDealPrice], [RateType], [DealRate], [ReferenceRateIndex], [BasisPointS"& _ 
                "pread], [FUNDING_RATE], [OCBS_Cust_Nr], [OCBS_Cust_Name], [BIC_CODE], [LEI_CODE]"& _ 
                ", [Id_MM_Statistic_Date], [ClientType]) VALUES (@Meldepflicht, @TransactionStatu"& _ 
                "s, @TransactionType, @InstrumentType, @PTI_Deal_Nr, @CounterpartySector, @Counte"& _ 
                "rpartyCountryCode, @TradeDate, @SettlementDate, @MaturityDate, @CCY, @CCY_AMOUNT"& _ 
                ", @TransactionDealPrice, @RateType, @DealRate, @ReferenceRateIndex, @BasisPointS"& _ 
                "pread, @FUNDING_RATE, @OCBS_Cust_Nr, @OCBS_Cust_Name, @BIC_CODE, @LEI_CODE, @Id_"& _ 
                "MM_Statistic_Date, @ClientType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstrumentType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstrumentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Deal_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Deal_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SettlementDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SettlementDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_AMOUNT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionDealPrice", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionDealPrice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RateType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RateType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DealRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DealRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReferenceRateIndex", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceRateIndex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BasisPointSpread", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BasisPointSpread", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FUNDING_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FUNDING_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MM_STATISTIC_UGMM] SET [Meldepflicht] = @Meldepflicht, [TransactionStatus"& _ 
                "] = @TransactionStatus, [TransactionType] = @TransactionType, [InstrumentType] ="& _ 
                " @InstrumentType, [PTI_Deal_Nr] = @PTI_Deal_Nr, [CounterpartySector] = @Counterp"& _ 
                "artySector, [CounterpartyCountryCode] = @CounterpartyCountryCode, [TradeDate] = "& _ 
                "@TradeDate, [SettlementDate] = @SettlementDate, [MaturityDate] = @MaturityDate, "& _ 
                "[CCY] = @CCY, [CCY_AMOUNT] = @CCY_AMOUNT, [TransactionDealPrice] = @TransactionD"& _ 
                "ealPrice, [RateType] = @RateType, [DealRate] = @DealRate, [ReferenceRateIndex] ="& _ 
                " @ReferenceRateIndex, [BasisPointSpread] = @BasisPointSpread, [FUNDING_RATE] = @"& _ 
                "FUNDING_RATE, [OCBS_Cust_Nr] = @OCBS_Cust_Nr, [OCBS_Cust_Name] = @OCBS_Cust_Name"& _ 
                ", [BIC_CODE] = @BIC_CODE, [LEI_CODE] = @LEI_CODE, [Id_MM_Statistic_Date] = @Id_M"& _ 
                "M_Statistic_Date, [ClientType] = @ClientType WHERE (([ID] = @Original_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InstrumentType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InstrumentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Deal_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Deal_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SettlementDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SettlementDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_AMOUNT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionDealPrice", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionDealPrice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RateType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RateType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DealRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DealRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReferenceRateIndex", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceRateIndex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BasisPointSpread", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BasisPointSpread", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FUNDING_RATE", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FUNDING_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, Meldepflicht, TransactionStatus, TransactionType, InstrumentTyp"& _ 
                "e, PTI_Deal_Nr, CounterpartySector, CounterpartyCountryCode, TradeDate, Settleme"& _ 
                "ntDate, MaturityDate, CCY, CCY_AMOUNT, TransactionDealPrice, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        RateType, DealRate, ReferenceRateIndex, BasisPointSpread, FUNDING_RATE, "& _ 
                "OCBS_Cust_Nr, OCBS_Cust_Name, BIC_CODE, LEI_CODE, Id_MM_Statistic_Date, ClientTy"& _ 
                "pe"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MM_STATISTIC_UGMM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT BIC_CODE, BasisPointSpread, CCY, CCY_AMOUNT, ClientType, CounterpartyCount"& _ 
                "ryCode, CounterpartySector, DealRate, FUNDING_RATE, ID, Id_MM_Statistic_Date, In"& _ 
                "strumentType, LEI_CODE, MaturityDate, Meldepflicht, OCBS_Cust_Name, OCBS_Cust_Nr"& _ 
                ", PTI_Deal_Nr, RateType, ReferenceRateIndex, SettlementDate, TradeDate, Transact"& _ 
                "ionDealPrice, TransactionStatus, TransactionType FROM MM_STATISTIC_UGMM WHERE (T"& _ 
                "radeDate = @Param1) ORDER BY ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable = New MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTradeDate(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable, ByVal Param1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTradeDate(ByVal Param1 As Global.System.Nullable(Of Date)) As MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable = New MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_UGMMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "MM_STATISTIC_UGMM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal InstrumentType As String,  _
                    ByVal PTI_Deal_Nr As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal SettlementDate As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Global.System.Nullable(Of Double),  _
                    ByVal TransactionDealPrice As Global.System.Nullable(Of Double),  _
                    ByVal RateType As String,  _
                    ByVal DealRate As Global.System.Nullable(Of Double),  _
                    ByVal ReferenceRateIndex As String,  _
                    ByVal BasisPointSpread As Global.System.Nullable(Of Double),  _
                    ByVal FUNDING_RATE As Global.System.Nullable(Of Double),  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TransactionStatus,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TransactionType,String)
            End If
            If (InstrumentType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(InstrumentType,String)
            End If
            If (PTI_Deal_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PTI_Deal_Nr,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CounterpartyCountryCode,String)
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SettlementDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SettlementDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CCY,String)
            End If
            If (CCY_AMOUNT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CCY_AMOUNT.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TransactionDealPrice.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TransactionDealPrice.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RateType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(RateType,String)
            End If
            If (DealRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DealRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (ReferenceRateIndex Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ReferenceRateIndex,String)
            End If
            If (BasisPointSpread.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(BasisPointSpread.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FUNDING_RATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FUNDING_RATE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Cust_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(OCBS_Cust_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(LEI_CODE,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ClientType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal InstrumentType As String,  _
                    ByVal PTI_Deal_Nr As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal SettlementDate As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Global.System.Nullable(Of Double),  _
                    ByVal TransactionDealPrice As Global.System.Nullable(Of Double),  _
                    ByVal RateType As String,  _
                    ByVal DealRate As Global.System.Nullable(Of Double),  _
                    ByVal ReferenceRateIndex As String,  _
                    ByVal BasisPointSpread As Global.System.Nullable(Of Double),  _
                    ByVal FUNDING_RATE As Global.System.Nullable(Of Double),  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String,  _
                    ByVal Original_ID As Integer) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TransactionStatus,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TransactionType,String)
            End If
            If (InstrumentType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(InstrumentType,String)
            End If
            If (PTI_Deal_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PTI_Deal_Nr,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CounterpartyCountryCode,String)
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (SettlementDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SettlementDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CCY,String)
            End If
            If (CCY_AMOUNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CCY_AMOUNT.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TransactionDealPrice.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TransactionDealPrice.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RateType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(RateType,String)
            End If
            If (DealRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DealRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (ReferenceRateIndex Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ReferenceRateIndex,String)
            End If
            If (BasisPointSpread.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(BasisPointSpread.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FUNDING_RATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(FUNDING_RATE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Cust_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(OCBS_Cust_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(LEI_CODE,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ClientType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MM_STATISTIC_BGMMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MM_STATISTIC_BGMM"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Meldepflicht", "Meldepflicht")
            tableMapping.ColumnMappings.Add("TransactionStatus", "TransactionStatus")
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType")
            tableMapping.ColumnMappings.Add("PTI_Deal_Nr", "PTI_Deal_Nr")
            tableMapping.ColumnMappings.Add("CounterpartySector", "CounterpartySector")
            tableMapping.ColumnMappings.Add("CounterpartyCountryCode", "CounterpartyCountryCode")
            tableMapping.ColumnMappings.Add("TradeDate", "TradeDate")
            tableMapping.ColumnMappings.Add("SettlementDate", "SettlementDate")
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate")
            tableMapping.ColumnMappings.Add("CCY", "CCY")
            tableMapping.ColumnMappings.Add("CCY_AMOUNT", "CCY_AMOUNT")
            tableMapping.ColumnMappings.Add("TransactionDealPrice", "TransactionDealPrice")
            tableMapping.ColumnMappings.Add("RateType", "RateType")
            tableMapping.ColumnMappings.Add("DealRate", "DealRate")
            tableMapping.ColumnMappings.Add("ReferenceRateIndex", "ReferenceRateIndex")
            tableMapping.ColumnMappings.Add("BasisPointSpread", "BasisPointSpread")
            tableMapping.ColumnMappings.Add("Collateral_ISIN", "Collateral_ISIN")
            tableMapping.ColumnMappings.Add("CollateralNominalAmount", "CollateralNominalAmount")
            tableMapping.ColumnMappings.Add("CollateralHaircut", "CollateralHaircut")
            tableMapping.ColumnMappings.Add("SpecialCollateralIndicator", "SpecialCollateralIndicator")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Nr", "OCBS_Cust_Nr")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Name", "OCBS_Cust_Name")
            tableMapping.ColumnMappings.Add("BIC_CODE", "BIC_CODE")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Id_MM_Statistic_Date", "Id_MM_Statistic_Date")
            tableMapping.ColumnMappings.Add("ClientType", "ClientType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MM_STATISTIC_BGMM] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MM_STATISTIC_BGMM] ([Meldepflicht], [TransactionStatus], [Transactio"& _ 
                "nType], [PTI_Deal_Nr], [CounterpartySector], [CounterpartyCountryCode], [TradeDa"& _ 
                "te], [SettlementDate], [MaturityDate], [CCY], [CCY_AMOUNT], [TransactionDealPric"& _ 
                "e], [RateType], [DealRate], [ReferenceRateIndex], [BasisPointSpread], [Collatera"& _ 
                "l_ISIN], [CollateralNominalAmount], [CollateralHaircut], [SpecialCollateralIndic"& _ 
                "ator], [OCBS_Cust_Nr], [OCBS_Cust_Name], [BIC_CODE], [LEI_CODE], [Id_MM_Statisti"& _ 
                "c_Date], [ClientType]) VALUES (@Meldepflicht, @TransactionStatus, @TransactionTy"& _ 
                "pe, @PTI_Deal_Nr, @CounterpartySector, @CounterpartyCountryCode, @TradeDate, @Se"& _ 
                "ttlementDate, @MaturityDate, @CCY, @CCY_AMOUNT, @TransactionDealPrice, @RateType"& _ 
                ", @DealRate, @ReferenceRateIndex, @BasisPointSpread, @Collateral_ISIN, @Collater"& _ 
                "alNominalAmount, @CollateralHaircut, @SpecialCollateralIndicator, @OCBS_Cust_Nr,"& _ 
                " @OCBS_Cust_Name, @BIC_CODE, @LEI_CODE, @Id_MM_Statistic_Date, @ClientType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Deal_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Deal_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SettlementDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SettlementDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_AMOUNT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionDealPrice", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionDealPrice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RateType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RateType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DealRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DealRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReferenceRateIndex", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceRateIndex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BasisPointSpread", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BasisPointSpread", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Collateral_ISIN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Collateral_ISIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CollateralNominalAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CollateralNominalAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CollateralHaircut", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CollateralHaircut", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecialCollateralIndicator", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecialCollateralIndicator", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MM_STATISTIC_BGMM] SET [Meldepflicht] = @Meldepflicht, [TransactionStatus"& _ 
                "] = @TransactionStatus, [TransactionType] = @TransactionType, [PTI_Deal_Nr] = @P"& _ 
                "TI_Deal_Nr, [CounterpartySector] = @CounterpartySector, [CounterpartyCountryCode"& _ 
                "] = @CounterpartyCountryCode, [TradeDate] = @TradeDate, [SettlementDate] = @Sett"& _ 
                "lementDate, [MaturityDate] = @MaturityDate, [CCY] = @CCY, [CCY_AMOUNT] = @CCY_AM"& _ 
                "OUNT, [TransactionDealPrice] = @TransactionDealPrice, [RateType] = @RateType, [D"& _ 
                "ealRate] = @DealRate, [ReferenceRateIndex] = @ReferenceRateIndex, [BasisPointSpr"& _ 
                "ead] = @BasisPointSpread, [Collateral_ISIN] = @Collateral_ISIN, [CollateralNomin"& _ 
                "alAmount] = @CollateralNominalAmount, [CollateralHaircut] = @CollateralHaircut, "& _ 
                "[SpecialCollateralIndicator] = @SpecialCollateralIndicator, [OCBS_Cust_Nr] = @OC"& _ 
                "BS_Cust_Nr, [OCBS_Cust_Name] = @OCBS_Cust_Name, [BIC_CODE] = @BIC_CODE, [LEI_COD"& _ 
                "E] = @LEI_CODE, [Id_MM_Statistic_Date] = @Id_MM_Statistic_Date, [ClientType] = @"& _ 
                "ClientType WHERE (([ID] = @Original_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Deal_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Deal_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SettlementDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SettlementDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCY_AMOUNT", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCY_AMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionDealPrice", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionDealPrice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RateType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RateType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DealRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DealRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReferenceRateIndex", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReferenceRateIndex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BasisPointSpread", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BasisPointSpread", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Collateral_ISIN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Collateral_ISIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CollateralNominalAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CollateralNominalAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CollateralHaircut", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CollateralHaircut", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecialCollateralIndicator", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecialCollateralIndicator", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, Meldepflicht, TransactionStatus, TransactionType, PTI_Deal_Nr, "& _ 
                "CounterpartySector, CounterpartyCountryCode, TradeDate, SettlementDate, Maturity"& _ 
                "Date, CCY, CCY_AMOUNT, TransactionDealPrice, RateType, DealRate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            ReferenceRateIndex, BasisPointSpread, Collateral_ISIN, CollateralNom"& _ 
                "inalAmount, CollateralHaircut, SpecialCollateralIndicator, OCBS_Cust_Nr, OCBS_Cu"& _ 
                "st_Name, BIC_CODE, LEI_CODE, Id_MM_Statistic_Date, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Cl"& _ 
                "ientType"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MM_STATISTIC_BGMM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT BIC_CODE, BasisPointSpread, CCY, CCY_AMOUNT, ClientType, CollateralHaircut"& _ 
                ", CollateralNominalAmount, Collateral_ISIN, CounterpartyCountryCode, Counterpart"& _ 
                "ySector, DealRate, ID, Id_MM_Statistic_Date, LEI_CODE, MaturityDate, Meldepflich"& _ 
                "t, OCBS_Cust_Name, OCBS_Cust_Nr, PTI_Deal_Nr, RateType, ReferenceRateIndex, Sett"& _ 
                "lementDate, SpecialCollateralIndicator, TradeDate, TransactionDealPrice, Transac"& _ 
                "tionStatus, TransactionType FROM MM_STATISTIC_BGMM WHERE (TradeDate = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable = New MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTradeDate(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable, ByVal Param1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTradeDate(ByVal Param1 As Global.System.Nullable(Of Date)) As MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable = New MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_BGMMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "MM_STATISTIC_BGMM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal PTI_Deal_Nr As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal SettlementDate As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Global.System.Nullable(Of Double),  _
                    ByVal TransactionDealPrice As Global.System.Nullable(Of Double),  _
                    ByVal RateType As String,  _
                    ByVal DealRate As Global.System.Nullable(Of Double),  _
                    ByVal ReferenceRateIndex As String,  _
                    ByVal BasisPointSpread As Global.System.Nullable(Of Double),  _
                    ByVal Collateral_ISIN As String,  _
                    ByVal CollateralNominalAmount As Global.System.Nullable(Of Double),  _
                    ByVal CollateralHaircut As Global.System.Nullable(Of Double),  _
                    ByVal SpecialCollateralIndicator As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TransactionStatus,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TransactionType,String)
            End If
            If (PTI_Deal_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PTI_Deal_Nr,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CounterpartyCountryCode,String)
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SettlementDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SettlementDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CCY,String)
            End If
            If (CCY_AMOUNT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CCY_AMOUNT.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TransactionDealPrice.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TransactionDealPrice.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (RateType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RateType,String)
            End If
            If (DealRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(DealRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ReferenceRateIndex Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ReferenceRateIndex,String)
            End If
            If (BasisPointSpread.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BasisPointSpread.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Collateral_ISIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Collateral_ISIN,String)
            End If
            If (CollateralNominalAmount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CollateralNominalAmount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CollateralHaircut.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CollateralHaircut.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SpecialCollateralIndicator Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SpecialCollateralIndicator,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Cust_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(OCBS_Cust_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(LEI_CODE,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(ClientType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal TransactionType As String,  _
                    ByVal PTI_Deal_Nr As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal SettlementDate As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal CCY As String,  _
                    ByVal CCY_AMOUNT As Global.System.Nullable(Of Double),  _
                    ByVal TransactionDealPrice As Global.System.Nullable(Of Double),  _
                    ByVal RateType As String,  _
                    ByVal DealRate As Global.System.Nullable(Of Double),  _
                    ByVal ReferenceRateIndex As String,  _
                    ByVal BasisPointSpread As Global.System.Nullable(Of Double),  _
                    ByVal Collateral_ISIN As String,  _
                    ByVal CollateralNominalAmount As Global.System.Nullable(Of Double),  _
                    ByVal CollateralHaircut As Global.System.Nullable(Of Double),  _
                    ByVal SpecialCollateralIndicator As String,  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Cust_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String,  _
                    ByVal Original_ID As Integer) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TransactionStatus,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TransactionType,String)
            End If
            If (PTI_Deal_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PTI_Deal_Nr,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CounterpartyCountryCode,String)
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (SettlementDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SettlementDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CCY,String)
            End If
            If (CCY_AMOUNT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CCY_AMOUNT.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TransactionDealPrice.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(TransactionDealPrice.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (RateType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RateType,String)
            End If
            If (DealRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(DealRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ReferenceRateIndex Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ReferenceRateIndex,String)
            End If
            If (BasisPointSpread.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(BasisPointSpread.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Collateral_ISIN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Collateral_ISIN,String)
            End If
            If (CollateralNominalAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CollateralNominalAmount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CollateralHaircut.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CollateralHaircut.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SpecialCollateralIndicator Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(SpecialCollateralIndicator,String)
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Cust_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(OCBS_Cust_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(LEI_CODE,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(ClientType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MM_STATISTIC_EORWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MM_STATISTIC_EORW"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Meldepflicht", "Meldepflicht")
            tableMapping.ColumnMappings.Add("TransactionType", "TransactionType")
            tableMapping.ColumnMappings.Add("TransactionStatus", "TransactionStatus")
            tableMapping.ColumnMappings.Add("PTI_Swap_Deal_No", "PTI_Swap_Deal_No")
            tableMapping.ColumnMappings.Add("TransactionNominalAmount", "TransactionNominalAmount")
            tableMapping.ColumnMappings.Add("FixedInterestRate", "FixedInterestRate")
            tableMapping.ColumnMappings.Add("TradeDate", "TradeDate")
            tableMapping.ColumnMappings.Add("Start_date", "Start_date")
            tableMapping.ColumnMappings.Add("MaturityDate", "MaturityDate")
            tableMapping.ColumnMappings.Add("OCBS_Cust_Nr", "OCBS_Cust_Nr")
            tableMapping.ColumnMappings.Add("OCBS_Customer_Name", "OCBS_Customer_Name")
            tableMapping.ColumnMappings.Add("BIC_CODE", "BIC_CODE")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("CounterpartySector", "CounterpartySector")
            tableMapping.ColumnMappings.Add("CounterpartyCountryCode", "CounterpartyCountryCode")
            tableMapping.ColumnMappings.Add("Id_MM_Statistic_Date", "Id_MM_Statistic_Date")
            tableMapping.ColumnMappings.Add("ClientType", "ClientType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MM_STATISTIC_EORW] WHERE (([ID] = @Original_ID))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MM_STATISTIC_EORW] ([Meldepflicht], [TransactionType], [TransactionS"& _ 
                "tatus], [PTI_Swap_Deal_No], [TransactionNominalAmount], [FixedInterestRate], [Tr"& _ 
                "adeDate], [Start_date], [MaturityDate], [OCBS_Cust_Nr], [OCBS_Customer_Name], [B"& _ 
                "IC_CODE], [LEI_CODE], [CounterpartySector], [CounterpartyCountryCode], [Id_MM_St"& _ 
                "atistic_Date], [ClientType]) VALUES (@Meldepflicht, @TransactionType, @Transacti"& _ 
                "onStatus, @PTI_Swap_Deal_No, @TransactionNominalAmount, @FixedInterestRate, @Tra"& _ 
                "deDate, @Start_date, @MaturityDate, @OCBS_Cust_Nr, @OCBS_Customer_Name, @BIC_COD"& _ 
                "E, @LEI_CODE, @CounterpartySector, @CounterpartyCountryCode, @Id_MM_Statistic_Da"& _ 
                "te, @ClientType)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Swap_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Swap_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionNominalAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionNominalAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixedInterestRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedInterestRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Start_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Start_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MM_STATISTIC_EORW] SET [Meldepflicht] = @Meldepflicht, [TransactionType] "& _ 
                "= @TransactionType, [TransactionStatus] = @TransactionStatus, [PTI_Swap_Deal_No]"& _ 
                " = @PTI_Swap_Deal_No, [TransactionNominalAmount] = @TransactionNominalAmount, [F"& _ 
                "ixedInterestRate] = @FixedInterestRate, [TradeDate] = @TradeDate, [Start_date] ="& _ 
                " @Start_date, [MaturityDate] = @MaturityDate, [OCBS_Cust_Nr] = @OCBS_Cust_Nr, [O"& _ 
                "CBS_Customer_Name] = @OCBS_Customer_Name, [BIC_CODE] = @BIC_CODE, [LEI_CODE] = @"& _ 
                "LEI_CODE, [CounterpartySector] = @CounterpartySector, [CounterpartyCountryCode] "& _ 
                "= @CounterpartyCountryCode, [Id_MM_Statistic_Date] = @Id_MM_Statistic_Date, [Cli"& _ 
                "entType] = @ClientType WHERE (([ID] = @Original_ID))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Meldepflicht", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Meldepflicht", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTI_Swap_Deal_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTI_Swap_Deal_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TransactionNominalAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TransactionNominalAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixedInterestRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedInterestRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TradeDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Start_date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Start_date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Cust_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Cust_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCBS_Customer_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCBS_Customer_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartySector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartySector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CounterpartyCountryCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CounterpartyCountryCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_MM_Statistic_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_MM_Statistic_Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, Meldepflicht, TransactionType, TransactionStatus, PTI_Swap_Deal"& _ 
                "_No, TransactionNominalAmount, FixedInterestRate, TradeDate, Start_date, Maturit"& _ 
                "yDate, OCBS_Cust_Nr, OCBS_Customer_Name, BIC_CODE, LEI_CODE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        CounterpartySector, CounterpartyCountryCode, Id_MM_Statistic_Date, Clien"& _ 
                "tType"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MM_STATISTIC_EORW"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT BIC_CODE, ClientType, CounterpartyCountryCode, CounterpartySector, FixedIn"& _ 
                "terestRate, ID, Id_MM_Statistic_Date, LEI_CODE, MaturityDate, Meldepflicht, OCBS"& _ 
                "_Cust_Nr, OCBS_Customer_Name, PTI_Swap_Deal_No, Start_date, TradeDate, Transacti"& _ 
                "onNominalAmount, TransactionStatus, TransactionType FROM MM_STATISTIC_EORW WHERE"& _ 
                " (TradeDate = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TradeDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable = New MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTradeDate(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable, ByVal Param1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTradeDate(ByVal Param1 As Global.System.Nullable(Of Date)) As MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable = New MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MM_Statistic_Dataset.MM_STATISTIC_EORWDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MM_Statistic_Dataset) As Integer
            Return Me.Adapter.Update(dataSet, "MM_STATISTIC_EORW")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal PTI_Swap_Deal_No As String,  _
                    ByVal TransactionNominalAmount As Global.System.Nullable(Of Double),  _
                    ByVal FixedInterestRate As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Start_date As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TransactionType,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TransactionStatus,String)
            End If
            If (PTI_Swap_Deal_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PTI_Swap_Deal_No,String)
            End If
            If (TransactionNominalAmount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TransactionNominalAmount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FixedInterestRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FixedInterestRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Start_date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Start_date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(LEI_CODE,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CounterpartyCountryCode,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(ClientType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Meldepflicht As String,  _
                    ByVal TransactionType As String,  _
                    ByVal TransactionStatus As String,  _
                    ByVal PTI_Swap_Deal_No As String,  _
                    ByVal TransactionNominalAmount As Global.System.Nullable(Of Double),  _
                    ByVal FixedInterestRate As Global.System.Nullable(Of Double),  _
                    ByVal TradeDate As Global.System.Nullable(Of Date),  _
                    ByVal Start_date As Global.System.Nullable(Of Date),  _
                    ByVal MaturityDate As Global.System.Nullable(Of Date),  _
                    ByVal OCBS_Cust_Nr As String,  _
                    ByVal OCBS_Customer_Name As String,  _
                    ByVal BIC_CODE As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal CounterpartySector As String,  _
                    ByVal CounterpartyCountryCode As String,  _
                    ByVal Id_MM_Statistic_Date As Global.System.Nullable(Of Integer),  _
                    ByVal ClientType As String,  _
                    ByVal Original_ID As Integer) As Integer
            If (Meldepflicht Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Meldepflicht,String)
            End If
            If (TransactionType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TransactionType,String)
            End If
            If (TransactionStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TransactionStatus,String)
            End If
            If (PTI_Swap_Deal_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PTI_Swap_Deal_No,String)
            End If
            If (TransactionNominalAmount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TransactionNominalAmount.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FixedInterestRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FixedInterestRate.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TradeDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TradeDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Start_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Start_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(MaturityDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (OCBS_Cust_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(OCBS_Cust_Nr,String)
            End If
            If (OCBS_Customer_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(OCBS_Customer_Name,String)
            End If
            If (BIC_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BIC_CODE,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(LEI_CODE,String)
            End If
            If (CounterpartySector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CounterpartySector,String)
            End If
            If (CounterpartyCountryCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CounterpartyCountryCode,String)
            End If
            If (Id_MM_Statistic_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Id_MM_Statistic_Date.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (ClientType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(ClientType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _oPICS_MMTableAdapter As OPICS_MMTableAdapter
        
        Private _oPICS_FX_SWAPSTableAdapter As OPICS_FX_SWAPSTableAdapter
        
        Private _oPICS_FXTableAdapter As OPICS_FXTableAdapter
        
        Private _mM_STATISTIC_DATETableAdapter As MM_STATISTIC_DATETableAdapter
        
        Private _mM_STATISTIC_FXSWTableAdapter As MM_STATISTIC_FXSWTableAdapter
        
        Private _mM_STATISTIC_UGMMTableAdapter As MM_STATISTIC_UGMMTableAdapter
        
        Private _mM_STATISTIC_BGMMTableAdapter As MM_STATISTIC_BGMMTableAdapter
        
        Private _mM_STATISTIC_EORWTableAdapter As MM_STATISTIC_EORWTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property OPICS_MMTableAdapter() As OPICS_MMTableAdapter
            Get
                Return Me._oPICS_MMTableAdapter
            End Get
            Set
                Me._oPICS_MMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property OPICS_FX_SWAPSTableAdapter() As OPICS_FX_SWAPSTableAdapter
            Get
                Return Me._oPICS_FX_SWAPSTableAdapter
            End Get
            Set
                Me._oPICS_FX_SWAPSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property OPICS_FXTableAdapter() As OPICS_FXTableAdapter
            Get
                Return Me._oPICS_FXTableAdapter
            End Get
            Set
                Me._oPICS_FXTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MM_STATISTIC_DATETableAdapter() As MM_STATISTIC_DATETableAdapter
            Get
                Return Me._mM_STATISTIC_DATETableAdapter
            End Get
            Set
                Me._mM_STATISTIC_DATETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MM_STATISTIC_FXSWTableAdapter() As MM_STATISTIC_FXSWTableAdapter
            Get
                Return Me._mM_STATISTIC_FXSWTableAdapter
            End Get
            Set
                Me._mM_STATISTIC_FXSWTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MM_STATISTIC_UGMMTableAdapter() As MM_STATISTIC_UGMMTableAdapter
            Get
                Return Me._mM_STATISTIC_UGMMTableAdapter
            End Get
            Set
                Me._mM_STATISTIC_UGMMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MM_STATISTIC_BGMMTableAdapter() As MM_STATISTIC_BGMMTableAdapter
            Get
                Return Me._mM_STATISTIC_BGMMTableAdapter
            End Get
            Set
                Me._mM_STATISTIC_BGMMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MM_STATISTIC_EORWTableAdapter() As MM_STATISTIC_EORWTableAdapter
            Get
                Return Me._mM_STATISTIC_EORWTableAdapter
            End Get
            Set
                Me._mM_STATISTIC_EORWTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._oPICS_MMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._oPICS_MMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._oPICS_MMTableAdapter.Connection
                End If
                If ((Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._oPICS_FX_SWAPSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._oPICS_FX_SWAPSTableAdapter.Connection
                End If
                If ((Not (Me._oPICS_FXTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._oPICS_FXTableAdapter.Connection) Is Nothing)) Then
                    Return Me._oPICS_FXTableAdapter.Connection
                End If
                If ((Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mM_STATISTIC_DATETableAdapter.Connection) Is Nothing)) Then
                    Return Me._mM_STATISTIC_DATETableAdapter.Connection
                End If
                If ((Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mM_STATISTIC_FXSWTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mM_STATISTIC_FXSWTableAdapter.Connection
                End If
                If ((Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mM_STATISTIC_UGMMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mM_STATISTIC_UGMMTableAdapter.Connection
                End If
                If ((Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mM_STATISTIC_BGMMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mM_STATISTIC_BGMMTableAdapter.Connection
                End If
                If ((Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mM_STATISTIC_EORWTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mM_STATISTIC_EORWTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._oPICS_MMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._oPICS_FXTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As MM_Statistic_Dataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_DATE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_DATETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._oPICS_MMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.OPICS_MM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._oPICS_MMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.OPICS_FX_SWAPS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._oPICS_FX_SWAPSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._oPICS_FXTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.OPICS_FX.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._oPICS_FXTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_FXSW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_FXSWTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_UGMM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_UGMMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_BGMM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_BGMMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_EORW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_EORWTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As MM_Statistic_Dataset, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_DATE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_DATETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._oPICS_MMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.OPICS_MM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._oPICS_MMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.OPICS_FX_SWAPS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._oPICS_FX_SWAPSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._oPICS_FXTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.OPICS_FX.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._oPICS_FXTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_FXSW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_FXSWTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_UGMM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_UGMMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_BGMM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_BGMMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_EORW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_EORWTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As MM_Statistic_Dataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_EORW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_EORWTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_BGMM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_BGMMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_UGMM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_UGMMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_FXSW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_FXSWTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._oPICS_FXTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.OPICS_FX.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._oPICS_FXTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.OPICS_FX_SWAPS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._oPICS_FX_SWAPSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._oPICS_MMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.OPICS_MM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._oPICS_MMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MM_STATISTIC_DATE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mM_STATISTIC_DATETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As MM_Statistic_Dataset) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._oPICS_MMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._oPICS_MMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._oPICS_FX_SWAPSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._oPICS_FXTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._oPICS_FXTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mM_STATISTIC_DATETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mM_STATISTIC_FXSWTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mM_STATISTIC_UGMMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mM_STATISTIC_BGMMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mM_STATISTIC_EORWTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._oPICS_MMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._oPICS_MMTableAdapter, Me._oPICS_MMTableAdapter.Connection)
                    Me._oPICS_MMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._oPICS_MMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._oPICS_MMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._oPICS_MMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._oPICS_MMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._oPICS_FX_SWAPSTableAdapter, Me._oPICS_FX_SWAPSTableAdapter.Connection)
                    Me._oPICS_FX_SWAPSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._oPICS_FX_SWAPSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._oPICS_FX_SWAPSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._oPICS_FX_SWAPSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._oPICS_FX_SWAPSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._oPICS_FXTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._oPICS_FXTableAdapter, Me._oPICS_FXTableAdapter.Connection)
                    Me._oPICS_FXTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._oPICS_FXTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._oPICS_FXTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._oPICS_FXTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._oPICS_FXTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mM_STATISTIC_DATETableAdapter, Me._mM_STATISTIC_DATETableAdapter.Connection)
                    Me._mM_STATISTIC_DATETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_DATETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._mM_STATISTIC_DATETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mM_STATISTIC_DATETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mM_STATISTIC_DATETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mM_STATISTIC_FXSWTableAdapter, Me._mM_STATISTIC_FXSWTableAdapter.Connection)
                    Me._mM_STATISTIC_FXSWTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_FXSWTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._mM_STATISTIC_FXSWTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mM_STATISTIC_FXSWTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mM_STATISTIC_FXSWTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mM_STATISTIC_UGMMTableAdapter, Me._mM_STATISTIC_UGMMTableAdapter.Connection)
                    Me._mM_STATISTIC_UGMMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_UGMMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._mM_STATISTIC_UGMMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mM_STATISTIC_UGMMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mM_STATISTIC_UGMMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mM_STATISTIC_BGMMTableAdapter, Me._mM_STATISTIC_BGMMTableAdapter.Connection)
                    Me._mM_STATISTIC_BGMMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_BGMMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._mM_STATISTIC_BGMMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mM_STATISTIC_BGMMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mM_STATISTIC_BGMMTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mM_STATISTIC_EORWTableAdapter, Me._mM_STATISTIC_EORWTableAdapter.Connection)
                    Me._mM_STATISTIC_EORWTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_EORWTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._mM_STATISTIC_EORWTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mM_STATISTIC_EORWTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mM_STATISTIC_EORWTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._oPICS_MMTableAdapter) Is Nothing) Then
                    Me._oPICS_MMTableAdapter.Connection = CType(revertConnections(Me._oPICS_MMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._oPICS_MMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._oPICS_FX_SWAPSTableAdapter) Is Nothing) Then
                    Me._oPICS_FX_SWAPSTableAdapter.Connection = CType(revertConnections(Me._oPICS_FX_SWAPSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._oPICS_FX_SWAPSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._oPICS_FXTableAdapter) Is Nothing) Then
                    Me._oPICS_FXTableAdapter.Connection = CType(revertConnections(Me._oPICS_FXTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._oPICS_FXTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mM_STATISTIC_DATETableAdapter) Is Nothing) Then
                    Me._mM_STATISTIC_DATETableAdapter.Connection = CType(revertConnections(Me._mM_STATISTIC_DATETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_DATETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mM_STATISTIC_FXSWTableAdapter) Is Nothing) Then
                    Me._mM_STATISTIC_FXSWTableAdapter.Connection = CType(revertConnections(Me._mM_STATISTIC_FXSWTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_FXSWTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mM_STATISTIC_UGMMTableAdapter) Is Nothing) Then
                    Me._mM_STATISTIC_UGMMTableAdapter.Connection = CType(revertConnections(Me._mM_STATISTIC_UGMMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_UGMMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mM_STATISTIC_BGMMTableAdapter) Is Nothing) Then
                    Me._mM_STATISTIC_BGMMTableAdapter.Connection = CType(revertConnections(Me._mM_STATISTIC_BGMMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_BGMMTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mM_STATISTIC_EORWTableAdapter) Is Nothing) Then
                    Me._mM_STATISTIC_EORWTableAdapter.Connection = CType(revertConnections(Me._mM_STATISTIC_EORWTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._mM_STATISTIC_EORWTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
