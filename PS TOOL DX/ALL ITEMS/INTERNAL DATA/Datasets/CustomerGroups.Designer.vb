'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("CustomerGroups"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class CustomerGroups
    Inherits Global.System.Data.DataSet
    
    Private tableGROUP_CLIENT As GROUP_CLIENTDataTable
    
    Private tableGROUP_CLIENT_DETAILS As GROUP_CLIENT_DETAILSDataTable
    
    Private tableGROUP_INTER As GROUP_INTERDataTable
    
    Private tableGROUP_MASTER As GROUP_MASTERDataTable
    
    Private tableGROUP_ALL As GROUP_ALLDataTable
    
    Private tableGROUP_MASTER_ALL As GROUP_MASTER_ALLDataTable
    
    Private tableGROUP_INTER_ALL As GROUP_INTER_ALLDataTable
    
    Private relationFK_GROUP_CLIENT_GROUP_INTER As Global.System.Data.DataRelation
    
    Private relationFK_GROUP_CLIENT_DETAILS_GROUP_CLIENT As Global.System.Data.DataRelation
    
    Private relationFK_GROUP_INTER_GROUP_MASTER As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("GROUP_CLIENT")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_CLIENTDataTable(ds.Tables("GROUP_CLIENT")))
            End If
            If (Not (ds.Tables("GROUP_CLIENT_DETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_CLIENT_DETAILSDataTable(ds.Tables("GROUP_CLIENT_DETAILS")))
            End If
            If (Not (ds.Tables("GROUP_INTER")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_INTERDataTable(ds.Tables("GROUP_INTER")))
            End If
            If (Not (ds.Tables("GROUP_MASTER")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_MASTERDataTable(ds.Tables("GROUP_MASTER")))
            End If
            If (Not (ds.Tables("GROUP_ALL")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_ALLDataTable(ds.Tables("GROUP_ALL")))
            End If
            If (Not (ds.Tables("GROUP_MASTER_ALL")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_MASTER_ALLDataTable(ds.Tables("GROUP_MASTER_ALL")))
            End If
            If (Not (ds.Tables("GROUP_INTER_ALL")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_INTER_ALLDataTable(ds.Tables("GROUP_INTER_ALL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GROUP_CLIENT() As GROUP_CLIENTDataTable
        Get
            Return Me.tableGROUP_CLIENT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GROUP_CLIENT_DETAILS() As GROUP_CLIENT_DETAILSDataTable
        Get
            Return Me.tableGROUP_CLIENT_DETAILS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GROUP_INTER() As GROUP_INTERDataTable
        Get
            Return Me.tableGROUP_INTER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GROUP_MASTER() As GROUP_MASTERDataTable
        Get
            Return Me.tableGROUP_MASTER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GROUP_ALL() As GROUP_ALLDataTable
        Get
            Return Me.tableGROUP_ALL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GROUP_MASTER_ALL() As GROUP_MASTER_ALLDataTable
        Get
            Return Me.tableGROUP_MASTER_ALL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GROUP_INTER_ALL() As GROUP_INTER_ALLDataTable
        Get
            Return Me.tableGROUP_INTER_ALL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As CustomerGroups = CType(MyBase.Clone,CustomerGroups)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("GROUP_CLIENT")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_CLIENTDataTable(ds.Tables("GROUP_CLIENT")))
            End If
            If (Not (ds.Tables("GROUP_CLIENT_DETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_CLIENT_DETAILSDataTable(ds.Tables("GROUP_CLIENT_DETAILS")))
            End If
            If (Not (ds.Tables("GROUP_INTER")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_INTERDataTable(ds.Tables("GROUP_INTER")))
            End If
            If (Not (ds.Tables("GROUP_MASTER")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_MASTERDataTable(ds.Tables("GROUP_MASTER")))
            End If
            If (Not (ds.Tables("GROUP_ALL")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_ALLDataTable(ds.Tables("GROUP_ALL")))
            End If
            If (Not (ds.Tables("GROUP_MASTER_ALL")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_MASTER_ALLDataTable(ds.Tables("GROUP_MASTER_ALL")))
            End If
            If (Not (ds.Tables("GROUP_INTER_ALL")) Is Nothing) Then
                MyBase.Tables.Add(New GROUP_INTER_ALLDataTable(ds.Tables("GROUP_INTER_ALL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableGROUP_CLIENT = CType(MyBase.Tables("GROUP_CLIENT"),GROUP_CLIENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGROUP_CLIENT) Is Nothing) Then
                Me.tableGROUP_CLIENT.InitVars
            End If
        End If
        Me.tableGROUP_CLIENT_DETAILS = CType(MyBase.Tables("GROUP_CLIENT_DETAILS"),GROUP_CLIENT_DETAILSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGROUP_CLIENT_DETAILS) Is Nothing) Then
                Me.tableGROUP_CLIENT_DETAILS.InitVars
            End If
        End If
        Me.tableGROUP_INTER = CType(MyBase.Tables("GROUP_INTER"),GROUP_INTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGROUP_INTER) Is Nothing) Then
                Me.tableGROUP_INTER.InitVars
            End If
        End If
        Me.tableGROUP_MASTER = CType(MyBase.Tables("GROUP_MASTER"),GROUP_MASTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGROUP_MASTER) Is Nothing) Then
                Me.tableGROUP_MASTER.InitVars
            End If
        End If
        Me.tableGROUP_ALL = CType(MyBase.Tables("GROUP_ALL"),GROUP_ALLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGROUP_ALL) Is Nothing) Then
                Me.tableGROUP_ALL.InitVars
            End If
        End If
        Me.tableGROUP_MASTER_ALL = CType(MyBase.Tables("GROUP_MASTER_ALL"),GROUP_MASTER_ALLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGROUP_MASTER_ALL) Is Nothing) Then
                Me.tableGROUP_MASTER_ALL.InitVars
            End If
        End If
        Me.tableGROUP_INTER_ALL = CType(MyBase.Tables("GROUP_INTER_ALL"),GROUP_INTER_ALLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGROUP_INTER_ALL) Is Nothing) Then
                Me.tableGROUP_INTER_ALL.InitVars
            End If
        End If
        Me.relationFK_GROUP_CLIENT_GROUP_INTER = Me.Relations("FK_GROUP_CLIENT_GROUP_INTER")
        Me.relationFK_GROUP_CLIENT_DETAILS_GROUP_CLIENT = Me.Relations("FK_GROUP_CLIENT_DETAILS_GROUP_CLIENT")
        Me.relationFK_GROUP_INTER_GROUP_MASTER = Me.Relations("FK_GROUP_INTER_GROUP_MASTER")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "CustomerGroups"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/CustomerGroups.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableGROUP_CLIENT = New GROUP_CLIENTDataTable()
        MyBase.Tables.Add(Me.tableGROUP_CLIENT)
        Me.tableGROUP_CLIENT_DETAILS = New GROUP_CLIENT_DETAILSDataTable()
        MyBase.Tables.Add(Me.tableGROUP_CLIENT_DETAILS)
        Me.tableGROUP_INTER = New GROUP_INTERDataTable()
        MyBase.Tables.Add(Me.tableGROUP_INTER)
        Me.tableGROUP_MASTER = New GROUP_MASTERDataTable()
        MyBase.Tables.Add(Me.tableGROUP_MASTER)
        Me.tableGROUP_ALL = New GROUP_ALLDataTable()
        MyBase.Tables.Add(Me.tableGROUP_ALL)
        Me.tableGROUP_MASTER_ALL = New GROUP_MASTER_ALLDataTable()
        MyBase.Tables.Add(Me.tableGROUP_MASTER_ALL)
        Me.tableGROUP_INTER_ALL = New GROUP_INTER_ALLDataTable()
        MyBase.Tables.Add(Me.tableGROUP_INTER_ALL)
        Me.relationFK_GROUP_CLIENT_GROUP_INTER = New Global.System.Data.DataRelation("FK_GROUP_CLIENT_GROUP_INTER", New Global.System.Data.DataColumn() {Me.tableGROUP_INTER.InterGroupIDColumn}, New Global.System.Data.DataColumn() {Me.tableGROUP_CLIENT.Id_Inter_GroupColumn}, false)
        Me.Relations.Add(Me.relationFK_GROUP_CLIENT_GROUP_INTER)
        Me.relationFK_GROUP_CLIENT_DETAILS_GROUP_CLIENT = New Global.System.Data.DataRelation("FK_GROUP_CLIENT_DETAILS_GROUP_CLIENT", New Global.System.Data.DataColumn() {Me.tableGROUP_CLIENT.ClientNrColumn}, New Global.System.Data.DataColumn() {Me.tableGROUP_CLIENT_DETAILS.Id_ClientNrColumn}, false)
        Me.Relations.Add(Me.relationFK_GROUP_CLIENT_DETAILS_GROUP_CLIENT)
        Me.relationFK_GROUP_INTER_GROUP_MASTER = New Global.System.Data.DataRelation("FK_GROUP_INTER_GROUP_MASTER", New Global.System.Data.DataColumn() {Me.tableGROUP_MASTER.GroupMasterIDColumn}, New Global.System.Data.DataColumn() {Me.tableGROUP_INTER.Id_Master_GroupColumn}, false)
        Me.Relations.Add(Me.relationFK_GROUP_INTER_GROUP_MASTER)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGROUP_CLIENT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGROUP_CLIENT_DETAILS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGROUP_INTER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGROUP_MASTER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGROUP_ALL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGROUP_MASTER_ALL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeGROUP_INTER_ALL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As CustomerGroups = New CustomerGroups()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GROUP_CLIENTRowChangeEventHandler(ByVal sender As Object, ByVal e As GROUP_CLIENTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GROUP_CLIENT_DETAILSRowChangeEventHandler(ByVal sender As Object, ByVal e As GROUP_CLIENT_DETAILSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GROUP_INTERRowChangeEventHandler(ByVal sender As Object, ByVal e As GROUP_INTERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GROUP_MASTERRowChangeEventHandler(ByVal sender As Object, ByVal e As GROUP_MASTERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GROUP_ALLRowChangeEventHandler(ByVal sender As Object, ByVal e As GROUP_ALLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GROUP_MASTER_ALLRowChangeEventHandler(ByVal sender As Object, ByVal e As GROUP_MASTER_ALLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub GROUP_INTER_ALLRowChangeEventHandler(ByVal sender As Object, ByVal e As GROUP_INTER_ALLRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GROUP_CLIENTDataTable
        Inherits Global.System.Data.TypedTableBase(Of GROUP_CLIENTRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnClientNr As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnId_Inter_Group As Global.System.Data.DataColumn
        
        Private columnId_Master_Group As Global.System.Data.DataColumn
        
        Private columnInterGroupName As Global.System.Data.DataColumn
        
        Private columnMasterGroupName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GROUP_CLIENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_Inter_GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Inter_Group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_Master_GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Master_Group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InterGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MasterGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasterGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GROUP_CLIENTRow
            Get
                Return CType(Me.Rows(index),GROUP_CLIENTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENTRowChanging As GROUP_CLIENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENTRowChanged As GROUP_CLIENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENTRowDeleting As GROUP_CLIENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENTRowDeleted As GROUP_CLIENTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGROUP_CLIENTRow(ByVal row As GROUP_CLIENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGROUP_CLIENTRow(ByVal ClientNr As String, ByVal ClientName As String, ByVal parentGROUP_INTERRowByFK_GROUP_CLIENT_GROUP_INTER As GROUP_INTERRow, ByVal Id_Master_Group As String, ByVal InterGroupName As String, ByVal MasterGroupName As String) As GROUP_CLIENTRow
            Dim rowGROUP_CLIENTRow As GROUP_CLIENTRow = CType(Me.NewRow,GROUP_CLIENTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ClientNr, ClientName, Nothing, Id_Master_Group, InterGroupName, MasterGroupName}
            If (Not (parentGROUP_INTERRowByFK_GROUP_CLIENT_GROUP_INTER) Is Nothing) Then
                columnValuesArray(3) = parentGROUP_INTERRowByFK_GROUP_CLIENT_GROUP_INTER(1)
            End If
            rowGROUP_CLIENTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGROUP_CLIENTRow)
            Return rowGROUP_CLIENTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByClientNr(ByVal ClientNr As String) As GROUP_CLIENTRow
            Return CType(Me.Rows.Find(New Object() {ClientNr}),GROUP_CLIENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GROUP_CLIENTDataTable = CType(MyBase.Clone,GROUP_CLIENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GROUP_CLIENTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnClientNr = MyBase.Columns("ClientNr")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnId_Inter_Group = MyBase.Columns("Id_Inter_Group")
            Me.columnId_Master_Group = MyBase.Columns("Id_Master_Group")
            Me.columnInterGroupName = MyBase.Columns("InterGroupName")
            Me.columnMasterGroupName = MyBase.Columns("MasterGroupName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnClientNr = New Global.System.Data.DataColumn("ClientNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientNr)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnId_Inter_Group = New Global.System.Data.DataColumn("Id_Inter_Group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Inter_Group)
            Me.columnId_Master_Group = New Global.System.Data.DataColumn("Id_Master_Group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Master_Group)
            Me.columnInterGroupName = New Global.System.Data.DataColumn("InterGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterGroupName)
            Me.columnMasterGroupName = New Global.System.Data.DataColumn("MasterGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasterGroupName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnClientNr}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnClientNr.AllowDBNull = false
            Me.columnClientNr.Unique = true
            Me.columnClientNr.MaxLength = 50
            Me.columnClientName.MaxLength = 255
            Me.columnId_Inter_Group.MaxLength = 50
            Me.columnId_Master_Group.MaxLength = 50
            Me.columnInterGroupName.MaxLength = 255
            Me.columnMasterGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGROUP_CLIENTRow() As GROUP_CLIENTRow
            Return CType(Me.NewRow,GROUP_CLIENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GROUP_CLIENTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GROUP_CLIENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GROUP_CLIENTRowChangedEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENTRowChanged(Me, New GROUP_CLIENTRowChangeEvent(CType(e.Row,GROUP_CLIENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GROUP_CLIENTRowChangingEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENTRowChanging(Me, New GROUP_CLIENTRowChangeEvent(CType(e.Row,GROUP_CLIENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GROUP_CLIENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENTRowDeleted(Me, New GROUP_CLIENTRowChangeEvent(CType(e.Row,GROUP_CLIENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GROUP_CLIENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENTRowDeleting(Me, New GROUP_CLIENTRowChangeEvent(CType(e.Row,GROUP_CLIENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGROUP_CLIENTRow(ByVal row As GROUP_CLIENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CustomerGroups = New CustomerGroups()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GROUP_CLIENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GROUP_CLIENT_DETAILSDataTable
        Inherits Global.System.Data.TypedTableBase(Of GROUP_CLIENT_DETAILSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnClientNr As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnGroup_Type As Global.System.Data.DataColumn
        
        Private columnGroup_Name As Global.System.Data.DataColumn
        
        Private columnGroup_ID As Global.System.Data.DataColumn
        
        Private columnId_ClientNr As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GROUP_CLIENT_DETAILS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Group_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroup_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Group_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroup_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Group_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroup_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_ClientNrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_ClientNr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GROUP_CLIENT_DETAILSRow
            Get
                Return CType(Me.Rows(index),GROUP_CLIENT_DETAILSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENT_DETAILSRowChanging As GROUP_CLIENT_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENT_DETAILSRowChanged As GROUP_CLIENT_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENT_DETAILSRowDeleting As GROUP_CLIENT_DETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_CLIENT_DETAILSRowDeleted As GROUP_CLIENT_DETAILSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGROUP_CLIENT_DETAILSRow(ByVal row As GROUP_CLIENT_DETAILSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGROUP_CLIENT_DETAILSRow(ByVal ClientNr As String, ByVal ClientName As String, ByVal Group_Type As String, ByVal Group_Name As String, ByVal Group_ID As String, ByVal parentGROUP_CLIENTRowByFK_GROUP_CLIENT_DETAILS_GROUP_CLIENT As GROUP_CLIENTRow) As GROUP_CLIENT_DETAILSRow
            Dim rowGROUP_CLIENT_DETAILSRow As GROUP_CLIENT_DETAILSRow = CType(Me.NewRow,GROUP_CLIENT_DETAILSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ClientNr, ClientName, Group_Type, Group_Name, Group_ID, Nothing}
            If (Not (parentGROUP_CLIENTRowByFK_GROUP_CLIENT_DETAILS_GROUP_CLIENT) Is Nothing) Then
                columnValuesArray(6) = parentGROUP_CLIENTRowByFK_GROUP_CLIENT_DETAILS_GROUP_CLIENT(1)
            End If
            rowGROUP_CLIENT_DETAILSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGROUP_CLIENT_DETAILSRow)
            Return rowGROUP_CLIENT_DETAILSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As GROUP_CLIENT_DETAILSRow
            Return CType(Me.Rows.Find(New Object() {ID}),GROUP_CLIENT_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GROUP_CLIENT_DETAILSDataTable = CType(MyBase.Clone,GROUP_CLIENT_DETAILSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GROUP_CLIENT_DETAILSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnClientNr = MyBase.Columns("ClientNr")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnGroup_Type = MyBase.Columns("Group_Type")
            Me.columnGroup_Name = MyBase.Columns("Group_Name")
            Me.columnGroup_ID = MyBase.Columns("Group_ID")
            Me.columnId_ClientNr = MyBase.Columns("Id_ClientNr")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnClientNr = New Global.System.Data.DataColumn("ClientNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientNr)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnGroup_Type = New Global.System.Data.DataColumn("Group_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroup_Type)
            Me.columnGroup_Name = New Global.System.Data.DataColumn("Group_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroup_Name)
            Me.columnGroup_ID = New Global.System.Data.DataColumn("Group_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroup_ID)
            Me.columnId_ClientNr = New Global.System.Data.DataColumn("Id_ClientNr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_ClientNr)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnClientNr.AllowDBNull = false
            Me.columnClientNr.MaxLength = 50
            Me.columnClientName.MaxLength = 255
            Me.columnGroup_Type.MaxLength = 50
            Me.columnGroup_Name.MaxLength = 50
            Me.columnGroup_ID.MaxLength = 50
            Me.columnId_ClientNr.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGROUP_CLIENT_DETAILSRow() As GROUP_CLIENT_DETAILSRow
            Return CType(Me.NewRow,GROUP_CLIENT_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GROUP_CLIENT_DETAILSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GROUP_CLIENT_DETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GROUP_CLIENT_DETAILSRowChangedEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENT_DETAILSRowChanged(Me, New GROUP_CLIENT_DETAILSRowChangeEvent(CType(e.Row,GROUP_CLIENT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GROUP_CLIENT_DETAILSRowChangingEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENT_DETAILSRowChanging(Me, New GROUP_CLIENT_DETAILSRowChangeEvent(CType(e.Row,GROUP_CLIENT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GROUP_CLIENT_DETAILSRowDeletedEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENT_DETAILSRowDeleted(Me, New GROUP_CLIENT_DETAILSRowChangeEvent(CType(e.Row,GROUP_CLIENT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GROUP_CLIENT_DETAILSRowDeletingEvent) Is Nothing) Then
                RaiseEvent GROUP_CLIENT_DETAILSRowDeleting(Me, New GROUP_CLIENT_DETAILSRowChangeEvent(CType(e.Row,GROUP_CLIENT_DETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGROUP_CLIENT_DETAILSRow(ByVal row As GROUP_CLIENT_DETAILSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CustomerGroups = New CustomerGroups()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GROUP_CLIENT_DETAILSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GROUP_INTERDataTable
        Inherits Global.System.Data.TypedTableBase(Of GROUP_INTERRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnInterGroupID As Global.System.Data.DataColumn
        
        Private columnInterGroupName As Global.System.Data.DataColumn
        
        Private columnId_Master_Group As Global.System.Data.DataColumn
        
        Private columnMasterGroupName As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnClientStrasse As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Ort As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Nr As Global.System.Data.DataColumn
        
        Private columnClientCountryResidence As Global.System.Data.DataColumn
        
        Private columnClientCountryRisk As Global.System.Data.DataColumn
        
        Private columnClientBranch As Global.System.Data.DataColumn
        
        Private columnClientBranchName As Global.System.Data.DataColumn
        
        Private columnSectorKWG As Global.System.Data.DataColumn
        
        Private columnSectorKWG_Description As Global.System.Data.DataColumn
        
        Private columnSector_CRR As Global.System.Data.DataColumn
        
        Private columnSector_CRR_Description As Global.System.Data.DataColumn
        
        Private columnSector_BISTA As Global.System.Data.DataColumn
        
        Private columnSector_BISTA_Description As Global.System.Data.DataColumn
        
        Private columnSector_FINREP As Global.System.Data.DataColumn
        
        Private columnSector_FINREP_Description As Global.System.Data.DataColumn
        
        Private columnBIC11 As Global.System.Data.DataColumn
        
        Private columnBIC11_NAME As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnInt_Organ As Global.System.Data.DataColumn
        
        Private columnTax_Identification_Nr As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Description As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Value As Global.System.Data.DataColumn
        
        Private columnRIAD_Nr As Global.System.Data.DataColumn
        
        Private columnNUTS_3_Region As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector_Description As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Other As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Customer As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Valid As Global.System.Data.DataColumn
        
        Private columnClientNoM As Global.System.Data.DataColumn
        
        Private columnInterGroupNameShort As Global.System.Data.DataColumn
        
        Private columnGroupStatus As Global.System.Data.DataColumn
        
        Private columnEU_COUNTRY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GROUP_INTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InterGroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InterGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_Master_GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Master_Group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MasterGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasterGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientStrasseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientStrasse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_OrtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Ort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryResidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryResidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryRiskColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryRisk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranchName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWG_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRR_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTA_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREP_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Int_OrganColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt_Organ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tax_Identification_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTax_Identification_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RIAD_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIAD_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NUTS_3_RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUTS_3_Region
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_SectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_Sector_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_Code_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_FormColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_OtherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Other
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_CustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Customer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_ValidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Valid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNoMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientNoM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InterGroupNameShortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterGroupNameShort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EU_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEU_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GROUP_INTERRow
            Get
                Return CType(Me.Rows(index),GROUP_INTERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTERRowChanging As GROUP_INTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTERRowChanged As GROUP_INTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTERRowDeleting As GROUP_INTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTERRowDeleted As GROUP_INTERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGROUP_INTERRow(ByVal row As GROUP_INTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGROUP_INTERRow( _
                    ByVal InterGroupID As String,  _
                    ByVal InterGroupName As String,  _
                    ByVal parentGROUP_MASTERRowByFK_GROUP_INTER_GROUP_MASTER As GROUP_MASTERRow,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As GROUP_INTERRow
            Dim rowGROUP_INTERRow As GROUP_INTERRow = CType(Me.NewRow,GROUP_INTERRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, InterGroupID, InterGroupName, Nothing, MasterGroupName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientCountryRisk, ClientBranch, ClientBranchName, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, InterGroupNameShort, GroupStatus, EU_COUNTRY}
            If (Not (parentGROUP_MASTERRowByFK_GROUP_INTER_GROUP_MASTER) Is Nothing) Then
                columnValuesArray(3) = parentGROUP_MASTERRowByFK_GROUP_INTER_GROUP_MASTER(1)
            End If
            rowGROUP_INTERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGROUP_INTERRow)
            Return rowGROUP_INTERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByInterGroupID(ByVal InterGroupID As String) As GROUP_INTERRow
            Return CType(Me.Rows.Find(New Object() {InterGroupID}),GROUP_INTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GROUP_INTERDataTable = CType(MyBase.Clone,GROUP_INTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GROUP_INTERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnInterGroupID = MyBase.Columns("InterGroupID")
            Me.columnInterGroupName = MyBase.Columns("InterGroupName")
            Me.columnId_Master_Group = MyBase.Columns("Id_Master_Group")
            Me.columnMasterGroupName = MyBase.Columns("MasterGroupName")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnClientStrasse = MyBase.Columns("ClientStrasse")
            Me.columnClientPLZ_Ort = MyBase.Columns("ClientPLZ_Ort")
            Me.columnClientPLZ_Nr = MyBase.Columns("ClientPLZ_Nr")
            Me.columnClientCountryResidence = MyBase.Columns("ClientCountryResidence")
            Me.columnClientCountryRisk = MyBase.Columns("ClientCountryRisk")
            Me.columnClientBranch = MyBase.Columns("ClientBranch")
            Me.columnClientBranchName = MyBase.Columns("ClientBranchName")
            Me.columnSectorKWG = MyBase.Columns("SectorKWG")
            Me.columnSectorKWG_Description = MyBase.Columns("SectorKWG_Description")
            Me.columnSector_CRR = MyBase.Columns("Sector_CRR")
            Me.columnSector_CRR_Description = MyBase.Columns("Sector_CRR_Description")
            Me.columnSector_BISTA = MyBase.Columns("Sector_BISTA")
            Me.columnSector_BISTA_Description = MyBase.Columns("Sector_BISTA_Description")
            Me.columnSector_FINREP = MyBase.Columns("Sector_FINREP")
            Me.columnSector_FINREP_Description = MyBase.Columns("Sector_FINREP_Description")
            Me.columnBIC11 = MyBase.Columns("BIC11")
            Me.columnBIC11_NAME = MyBase.Columns("BIC11_NAME")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnInt_Organ = MyBase.Columns("Int_Organ")
            Me.columnTax_Identification_Nr = MyBase.Columns("Tax_Identification_Nr")
            Me.columnNational_Identifier_Type = MyBase.Columns("National_Identifier_Type")
            Me.columnNational_Identifier_Type_Description = MyBase.Columns("National_Identifier_Type_Description")
            Me.columnNational_Identifier_Type_Value = MyBase.Columns("National_Identifier_Type_Value")
            Me.columnRIAD_Nr = MyBase.Columns("RIAD_Nr")
            Me.columnNUTS_3_Region = MyBase.Columns("NUTS_3_Region")
            Me.columnInstitutional_Sector = MyBase.Columns("Institutional_Sector")
            Me.columnInstitutional_Sector_Description = MyBase.Columns("Institutional_Sector_Description")
            Me.columnNACE_Branch_Code = MyBase.Columns("NACE_Branch_Code")
            Me.columnNACE_Branch_Code_Description = MyBase.Columns("NACE_Branch_Code_Description")
            Me.columnLegal_Form = MyBase.Columns("Legal_Form")
            Me.columnLegal_Form_Description = MyBase.Columns("Legal_Form_Description")
            Me.columnLegal_Form_Other = MyBase.Columns("Legal_Form_Other")
            Me.columnAnaCredit_Customer = MyBase.Columns("AnaCredit_Customer")
            Me.columnAnaCredit_Valid = MyBase.Columns("AnaCredit_Valid")
            Me.columnClientNoM = MyBase.Columns("ClientNoM")
            Me.columnInterGroupNameShort = MyBase.Columns("InterGroupNameShort")
            Me.columnGroupStatus = MyBase.Columns("GroupStatus")
            Me.columnEU_COUNTRY = MyBase.Columns("EU_COUNTRY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnInterGroupID = New Global.System.Data.DataColumn("InterGroupID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterGroupID)
            Me.columnInterGroupName = New Global.System.Data.DataColumn("InterGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterGroupName)
            Me.columnId_Master_Group = New Global.System.Data.DataColumn("Id_Master_Group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Master_Group)
            Me.columnMasterGroupName = New Global.System.Data.DataColumn("MasterGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasterGroupName)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnClientStrasse = New Global.System.Data.DataColumn("ClientStrasse", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientStrasse)
            Me.columnClientPLZ_Ort = New Global.System.Data.DataColumn("ClientPLZ_Ort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Ort)
            Me.columnClientPLZ_Nr = New Global.System.Data.DataColumn("ClientPLZ_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Nr)
            Me.columnClientCountryResidence = New Global.System.Data.DataColumn("ClientCountryResidence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryResidence)
            Me.columnClientCountryRisk = New Global.System.Data.DataColumn("ClientCountryRisk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryRisk)
            Me.columnClientBranch = New Global.System.Data.DataColumn("ClientBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranch)
            Me.columnClientBranchName = New Global.System.Data.DataColumn("ClientBranchName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranchName)
            Me.columnSectorKWG = New Global.System.Data.DataColumn("SectorKWG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG)
            Me.columnSectorKWG_Description = New Global.System.Data.DataColumn("SectorKWG_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG_Description)
            Me.columnSector_CRR = New Global.System.Data.DataColumn("Sector_CRR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR)
            Me.columnSector_CRR_Description = New Global.System.Data.DataColumn("Sector_CRR_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR_Description)
            Me.columnSector_BISTA = New Global.System.Data.DataColumn("Sector_BISTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA)
            Me.columnSector_BISTA_Description = New Global.System.Data.DataColumn("Sector_BISTA_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA_Description)
            Me.columnSector_FINREP = New Global.System.Data.DataColumn("Sector_FINREP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP)
            Me.columnSector_FINREP_Description = New Global.System.Data.DataColumn("Sector_FINREP_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP_Description)
            Me.columnBIC11 = New Global.System.Data.DataColumn("BIC11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11)
            Me.columnBIC11_NAME = New Global.System.Data.DataColumn("BIC11_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11_NAME)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnInt_Organ = New Global.System.Data.DataColumn("Int_Organ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt_Organ)
            Me.columnTax_Identification_Nr = New Global.System.Data.DataColumn("Tax_Identification_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTax_Identification_Nr)
            Me.columnNational_Identifier_Type = New Global.System.Data.DataColumn("National_Identifier_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type)
            Me.columnNational_Identifier_Type_Description = New Global.System.Data.DataColumn("National_Identifier_Type_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Description)
            Me.columnNational_Identifier_Type_Value = New Global.System.Data.DataColumn("National_Identifier_Type_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Value)
            Me.columnRIAD_Nr = New Global.System.Data.DataColumn("RIAD_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIAD_Nr)
            Me.columnNUTS_3_Region = New Global.System.Data.DataColumn("NUTS_3_Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUTS_3_Region)
            Me.columnInstitutional_Sector = New Global.System.Data.DataColumn("Institutional_Sector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector)
            Me.columnInstitutional_Sector_Description = New Global.System.Data.DataColumn("Institutional_Sector_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector_Description)
            Me.columnNACE_Branch_Code = New Global.System.Data.DataColumn("NACE_Branch_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code)
            Me.columnNACE_Branch_Code_Description = New Global.System.Data.DataColumn("NACE_Branch_Code_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code_Description)
            Me.columnLegal_Form = New Global.System.Data.DataColumn("Legal_Form", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form)
            Me.columnLegal_Form_Description = New Global.System.Data.DataColumn("Legal_Form_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Description)
            Me.columnLegal_Form_Other = New Global.System.Data.DataColumn("Legal_Form_Other", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Other)
            Me.columnAnaCredit_Customer = New Global.System.Data.DataColumn("AnaCredit_Customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Customer)
            Me.columnAnaCredit_Valid = New Global.System.Data.DataColumn("AnaCredit_Valid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Valid)
            Me.columnClientNoM = New Global.System.Data.DataColumn("ClientNoM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientNoM)
            Me.columnInterGroupNameShort = New Global.System.Data.DataColumn("InterGroupNameShort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterGroupNameShort)
            Me.columnGroupStatus = New Global.System.Data.DataColumn("GroupStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupStatus)
            Me.columnEU_COUNTRY = New Global.System.Data.DataColumn("EU_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEU_COUNTRY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnInterGroupID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnInterGroupID.AllowDBNull = false
            Me.columnInterGroupID.Unique = true
            Me.columnInterGroupID.MaxLength = 50
            Me.columnInterGroupName.MaxLength = 255
            Me.columnId_Master_Group.MaxLength = 50
            Me.columnMasterGroupName.MaxLength = 255
            Me.columnClientName.MaxLength = 120
            Me.columnClientStrasse.MaxLength = 60
            Me.columnClientPLZ_Ort.MaxLength = 80
            Me.columnClientPLZ_Nr.MaxLength = 50
            Me.columnClientCountryResidence.MaxLength = 50
            Me.columnClientCountryRisk.MaxLength = 50
            Me.columnClientBranch.MaxLength = 50
            Me.columnClientBranchName.MaxLength = 255
            Me.columnSectorKWG.MaxLength = 50
            Me.columnSectorKWG_Description.MaxLength = 150
            Me.columnSector_CRR.MaxLength = 50
            Me.columnSector_CRR_Description.MaxLength = 150
            Me.columnSector_BISTA.MaxLength = 50
            Me.columnSector_BISTA_Description.MaxLength = 150
            Me.columnSector_FINREP.MaxLength = 50
            Me.columnSector_FINREP_Description.MaxLength = 150
            Me.columnBIC11.MaxLength = 50
            Me.columnBIC11_NAME.MaxLength = 255
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnInt_Organ.MaxLength = 10
            Me.columnTax_Identification_Nr.MaxLength = 100
            Me.columnNational_Identifier_Type.MaxLength = 50
            Me.columnNational_Identifier_Type_Description.MaxLength = 255
            Me.columnNational_Identifier_Type_Value.MaxLength = 50
            Me.columnRIAD_Nr.MaxLength = 50
            Me.columnNUTS_3_Region.MaxLength = 50
            Me.columnInstitutional_Sector.MaxLength = 50
            Me.columnInstitutional_Sector_Description.MaxLength = 100
            Me.columnNACE_Branch_Code.MaxLength = 50
            Me.columnNACE_Branch_Code_Description.MaxLength = 150
            Me.columnLegal_Form.MaxLength = 50
            Me.columnLegal_Form_Description.MaxLength = 100
            Me.columnLegal_Form_Other.MaxLength = 255
            Me.columnAnaCredit_Customer.MaxLength = 10
            Me.columnAnaCredit_Valid.MaxLength = 10
            Me.columnClientNoM.MaxLength = 255
            Me.columnInterGroupNameShort.MaxLength = 50
            Me.columnGroupStatus.MaxLength = 1
            Me.columnEU_COUNTRY.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGROUP_INTERRow() As GROUP_INTERRow
            Return CType(Me.NewRow,GROUP_INTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GROUP_INTERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GROUP_INTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GROUP_INTERRowChangedEvent) Is Nothing) Then
                RaiseEvent GROUP_INTERRowChanged(Me, New GROUP_INTERRowChangeEvent(CType(e.Row,GROUP_INTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GROUP_INTERRowChangingEvent) Is Nothing) Then
                RaiseEvent GROUP_INTERRowChanging(Me, New GROUP_INTERRowChangeEvent(CType(e.Row,GROUP_INTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GROUP_INTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent GROUP_INTERRowDeleted(Me, New GROUP_INTERRowChangeEvent(CType(e.Row,GROUP_INTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GROUP_INTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent GROUP_INTERRowDeleting(Me, New GROUP_INTERRowChangeEvent(CType(e.Row,GROUP_INTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGROUP_INTERRow(ByVal row As GROUP_INTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CustomerGroups = New CustomerGroups()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GROUP_INTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GROUP_MASTERDataTable
        Inherits Global.System.Data.TypedTableBase(Of GROUP_MASTERRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnGroupMasterID As Global.System.Data.DataColumn
        
        Private columnGroupMasterName As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnClientStrasse As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Ort As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Nr As Global.System.Data.DataColumn
        
        Private columnClientCountryResidence As Global.System.Data.DataColumn
        
        Private columnClientBranch As Global.System.Data.DataColumn
        
        Private columnClientBranchName As Global.System.Data.DataColumn
        
        Private columnClientCountryRisk As Global.System.Data.DataColumn
        
        Private columnSectorKWG As Global.System.Data.DataColumn
        
        Private columnSectorKWG_Description As Global.System.Data.DataColumn
        
        Private columnSector_CRR As Global.System.Data.DataColumn
        
        Private columnSector_CRR_Description As Global.System.Data.DataColumn
        
        Private columnSector_BISTA As Global.System.Data.DataColumn
        
        Private columnSector_BISTA_Description As Global.System.Data.DataColumn
        
        Private columnSector_FINREP As Global.System.Data.DataColumn
        
        Private columnSector_FINREP_Description As Global.System.Data.DataColumn
        
        Private columnBIC11 As Global.System.Data.DataColumn
        
        Private columnBIC11_NAME As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnInt_Organ As Global.System.Data.DataColumn
        
        Private columnTax_Identification_Nr As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Description As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Value As Global.System.Data.DataColumn
        
        Private columnRIAD_Nr As Global.System.Data.DataColumn
        
        Private columnNUTS_3_Region As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector_Description As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Other As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Customer As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Valid As Global.System.Data.DataColumn
        
        Private columnGroupMasterNameShort As Global.System.Data.DataColumn
        
        Private columnGroupStatus As Global.System.Data.DataColumn
        
        Private columnEU_COUNTRY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GROUP_MASTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupMasterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupMasterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupMasterNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupMasterName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientStrasseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientStrasse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_OrtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Ort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryResidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryResidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranchName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryRiskColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryRisk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWG_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRR_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTA_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREP_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Int_OrganColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt_Organ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tax_Identification_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTax_Identification_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RIAD_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIAD_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NUTS_3_RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUTS_3_Region
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_SectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_Sector_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_Code_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_FormColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_OtherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Other
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_CustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Customer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_ValidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Valid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupMasterNameShortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupMasterNameShort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EU_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEU_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GROUP_MASTERRow
            Get
                Return CType(Me.Rows(index),GROUP_MASTERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTERRowChanging As GROUP_MASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTERRowChanged As GROUP_MASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTERRowDeleting As GROUP_MASTERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTERRowDeleted As GROUP_MASTERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGROUP_MASTERRow(ByVal row As GROUP_MASTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGROUP_MASTERRow( _
                    ByVal GroupMasterID As String,  _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As GROUP_MASTERRow
            Dim rowGROUP_MASTERRow As GROUP_MASTERRow = CType(Me.NewRow,GROUP_MASTERRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, GroupMasterID, GroupMasterName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName, ClientCountryRisk, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, GroupMasterNameShort, GroupStatus, EU_COUNTRY}
            rowGROUP_MASTERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGROUP_MASTERRow)
            Return rowGROUP_MASTERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByGroupMasterID(ByVal GroupMasterID As String) As GROUP_MASTERRow
            Return CType(Me.Rows.Find(New Object() {GroupMasterID}),GROUP_MASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GROUP_MASTERDataTable = CType(MyBase.Clone,GROUP_MASTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GROUP_MASTERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnGroupMasterID = MyBase.Columns("GroupMasterID")
            Me.columnGroupMasterName = MyBase.Columns("GroupMasterName")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnClientStrasse = MyBase.Columns("ClientStrasse")
            Me.columnClientPLZ_Ort = MyBase.Columns("ClientPLZ_Ort")
            Me.columnClientPLZ_Nr = MyBase.Columns("ClientPLZ_Nr")
            Me.columnClientCountryResidence = MyBase.Columns("ClientCountryResidence")
            Me.columnClientBranch = MyBase.Columns("ClientBranch")
            Me.columnClientBranchName = MyBase.Columns("ClientBranchName")
            Me.columnClientCountryRisk = MyBase.Columns("ClientCountryRisk")
            Me.columnSectorKWG = MyBase.Columns("SectorKWG")
            Me.columnSectorKWG_Description = MyBase.Columns("SectorKWG_Description")
            Me.columnSector_CRR = MyBase.Columns("Sector_CRR")
            Me.columnSector_CRR_Description = MyBase.Columns("Sector_CRR_Description")
            Me.columnSector_BISTA = MyBase.Columns("Sector_BISTA")
            Me.columnSector_BISTA_Description = MyBase.Columns("Sector_BISTA_Description")
            Me.columnSector_FINREP = MyBase.Columns("Sector_FINREP")
            Me.columnSector_FINREP_Description = MyBase.Columns("Sector_FINREP_Description")
            Me.columnBIC11 = MyBase.Columns("BIC11")
            Me.columnBIC11_NAME = MyBase.Columns("BIC11_NAME")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnInt_Organ = MyBase.Columns("Int_Organ")
            Me.columnTax_Identification_Nr = MyBase.Columns("Tax_Identification_Nr")
            Me.columnNational_Identifier_Type = MyBase.Columns("National_Identifier_Type")
            Me.columnNational_Identifier_Type_Description = MyBase.Columns("National_Identifier_Type_Description")
            Me.columnNational_Identifier_Type_Value = MyBase.Columns("National_Identifier_Type_Value")
            Me.columnRIAD_Nr = MyBase.Columns("RIAD_Nr")
            Me.columnNUTS_3_Region = MyBase.Columns("NUTS_3_Region")
            Me.columnInstitutional_Sector = MyBase.Columns("Institutional_Sector")
            Me.columnInstitutional_Sector_Description = MyBase.Columns("Institutional_Sector_Description")
            Me.columnNACE_Branch_Code = MyBase.Columns("NACE_Branch_Code")
            Me.columnNACE_Branch_Code_Description = MyBase.Columns("NACE_Branch_Code_Description")
            Me.columnLegal_Form = MyBase.Columns("Legal_Form")
            Me.columnLegal_Form_Description = MyBase.Columns("Legal_Form_Description")
            Me.columnLegal_Form_Other = MyBase.Columns("Legal_Form_Other")
            Me.columnAnaCredit_Customer = MyBase.Columns("AnaCredit_Customer")
            Me.columnAnaCredit_Valid = MyBase.Columns("AnaCredit_Valid")
            Me.columnGroupMasterNameShort = MyBase.Columns("GroupMasterNameShort")
            Me.columnGroupStatus = MyBase.Columns("GroupStatus")
            Me.columnEU_COUNTRY = MyBase.Columns("EU_COUNTRY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnGroupMasterID = New Global.System.Data.DataColumn("GroupMasterID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupMasterID)
            Me.columnGroupMasterName = New Global.System.Data.DataColumn("GroupMasterName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupMasterName)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnClientStrasse = New Global.System.Data.DataColumn("ClientStrasse", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientStrasse)
            Me.columnClientPLZ_Ort = New Global.System.Data.DataColumn("ClientPLZ_Ort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Ort)
            Me.columnClientPLZ_Nr = New Global.System.Data.DataColumn("ClientPLZ_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Nr)
            Me.columnClientCountryResidence = New Global.System.Data.DataColumn("ClientCountryResidence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryResidence)
            Me.columnClientBranch = New Global.System.Data.DataColumn("ClientBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranch)
            Me.columnClientBranchName = New Global.System.Data.DataColumn("ClientBranchName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranchName)
            Me.columnClientCountryRisk = New Global.System.Data.DataColumn("ClientCountryRisk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryRisk)
            Me.columnSectorKWG = New Global.System.Data.DataColumn("SectorKWG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG)
            Me.columnSectorKWG_Description = New Global.System.Data.DataColumn("SectorKWG_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG_Description)
            Me.columnSector_CRR = New Global.System.Data.DataColumn("Sector_CRR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR)
            Me.columnSector_CRR_Description = New Global.System.Data.DataColumn("Sector_CRR_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR_Description)
            Me.columnSector_BISTA = New Global.System.Data.DataColumn("Sector_BISTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA)
            Me.columnSector_BISTA_Description = New Global.System.Data.DataColumn("Sector_BISTA_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA_Description)
            Me.columnSector_FINREP = New Global.System.Data.DataColumn("Sector_FINREP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP)
            Me.columnSector_FINREP_Description = New Global.System.Data.DataColumn("Sector_FINREP_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP_Description)
            Me.columnBIC11 = New Global.System.Data.DataColumn("BIC11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11)
            Me.columnBIC11_NAME = New Global.System.Data.DataColumn("BIC11_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11_NAME)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnInt_Organ = New Global.System.Data.DataColumn("Int_Organ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt_Organ)
            Me.columnTax_Identification_Nr = New Global.System.Data.DataColumn("Tax_Identification_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTax_Identification_Nr)
            Me.columnNational_Identifier_Type = New Global.System.Data.DataColumn("National_Identifier_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type)
            Me.columnNational_Identifier_Type_Description = New Global.System.Data.DataColumn("National_Identifier_Type_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Description)
            Me.columnNational_Identifier_Type_Value = New Global.System.Data.DataColumn("National_Identifier_Type_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Value)
            Me.columnRIAD_Nr = New Global.System.Data.DataColumn("RIAD_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIAD_Nr)
            Me.columnNUTS_3_Region = New Global.System.Data.DataColumn("NUTS_3_Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUTS_3_Region)
            Me.columnInstitutional_Sector = New Global.System.Data.DataColumn("Institutional_Sector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector)
            Me.columnInstitutional_Sector_Description = New Global.System.Data.DataColumn("Institutional_Sector_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector_Description)
            Me.columnNACE_Branch_Code = New Global.System.Data.DataColumn("NACE_Branch_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code)
            Me.columnNACE_Branch_Code_Description = New Global.System.Data.DataColumn("NACE_Branch_Code_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code_Description)
            Me.columnLegal_Form = New Global.System.Data.DataColumn("Legal_Form", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form)
            Me.columnLegal_Form_Description = New Global.System.Data.DataColumn("Legal_Form_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Description)
            Me.columnLegal_Form_Other = New Global.System.Data.DataColumn("Legal_Form_Other", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Other)
            Me.columnAnaCredit_Customer = New Global.System.Data.DataColumn("AnaCredit_Customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Customer)
            Me.columnAnaCredit_Valid = New Global.System.Data.DataColumn("AnaCredit_Valid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Valid)
            Me.columnGroupMasterNameShort = New Global.System.Data.DataColumn("GroupMasterNameShort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupMasterNameShort)
            Me.columnGroupStatus = New Global.System.Data.DataColumn("GroupStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupStatus)
            Me.columnEU_COUNTRY = New Global.System.Data.DataColumn("EU_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEU_COUNTRY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnGroupMasterID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnGroupMasterID.AllowDBNull = false
            Me.columnGroupMasterID.Unique = true
            Me.columnGroupMasterID.MaxLength = 50
            Me.columnGroupMasterName.MaxLength = 255
            Me.columnClientName.MaxLength = 120
            Me.columnClientStrasse.MaxLength = 60
            Me.columnClientPLZ_Ort.MaxLength = 80
            Me.columnClientPLZ_Nr.MaxLength = 50
            Me.columnClientCountryResidence.MaxLength = 50
            Me.columnClientBranch.MaxLength = 50
            Me.columnClientBranchName.MaxLength = 255
            Me.columnClientCountryRisk.MaxLength = 50
            Me.columnSectorKWG.MaxLength = 50
            Me.columnSectorKWG_Description.MaxLength = 150
            Me.columnSector_CRR.MaxLength = 50
            Me.columnSector_CRR_Description.MaxLength = 150
            Me.columnSector_BISTA.MaxLength = 50
            Me.columnSector_BISTA_Description.MaxLength = 150
            Me.columnSector_FINREP.MaxLength = 50
            Me.columnSector_FINREP_Description.MaxLength = 150
            Me.columnBIC11.MaxLength = 50
            Me.columnBIC11_NAME.MaxLength = 255
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnInt_Organ.MaxLength = 10
            Me.columnTax_Identification_Nr.MaxLength = 100
            Me.columnNational_Identifier_Type.MaxLength = 50
            Me.columnNational_Identifier_Type_Description.MaxLength = 255
            Me.columnNational_Identifier_Type_Value.MaxLength = 50
            Me.columnRIAD_Nr.MaxLength = 50
            Me.columnNUTS_3_Region.MaxLength = 50
            Me.columnInstitutional_Sector.MaxLength = 50
            Me.columnInstitutional_Sector_Description.MaxLength = 100
            Me.columnNACE_Branch_Code.MaxLength = 50
            Me.columnNACE_Branch_Code_Description.MaxLength = 150
            Me.columnLegal_Form.MaxLength = 50
            Me.columnLegal_Form_Description.MaxLength = 100
            Me.columnLegal_Form_Other.MaxLength = 255
            Me.columnAnaCredit_Customer.MaxLength = 10
            Me.columnAnaCredit_Valid.MaxLength = 10
            Me.columnGroupMasterNameShort.MaxLength = 50
            Me.columnGroupStatus.MaxLength = 1
            Me.columnEU_COUNTRY.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGROUP_MASTERRow() As GROUP_MASTERRow
            Return CType(Me.NewRow,GROUP_MASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GROUP_MASTERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GROUP_MASTERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GROUP_MASTERRowChangedEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTERRowChanged(Me, New GROUP_MASTERRowChangeEvent(CType(e.Row,GROUP_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GROUP_MASTERRowChangingEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTERRowChanging(Me, New GROUP_MASTERRowChangeEvent(CType(e.Row,GROUP_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GROUP_MASTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTERRowDeleted(Me, New GROUP_MASTERRowChangeEvent(CType(e.Row,GROUP_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GROUP_MASTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTERRowDeleting(Me, New GROUP_MASTERRowChangeEvent(CType(e.Row,GROUP_MASTERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGROUP_MASTERRow(ByVal row As GROUP_MASTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CustomerGroups = New CustomerGroups()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GROUP_MASTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GROUP_ALLDataTable
        Inherits Global.System.Data.TypedTableBase(Of GROUP_ALLRow)
        
        Private columnPARENTID As Global.System.Data.DataColumn
        
        Private columnGroupID As Global.System.Data.DataColumn
        
        Private columnGroupIDName As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GROUP_ALL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PARENTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupIDNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupIDName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GROUP_ALLRow
            Get
                Return CType(Me.Rows(index),GROUP_ALLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_ALLRowChanging As GROUP_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_ALLRowChanged As GROUP_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_ALLRowDeleting As GROUP_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_ALLRowDeleted As GROUP_ALLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGROUP_ALLRow(ByVal row As GROUP_ALLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGROUP_ALLRow(ByVal PARENTID As Integer, ByVal GroupID As String, ByVal GroupIDName As String, ByVal ID As String) As GROUP_ALLRow
            Dim rowGROUP_ALLRow As GROUP_ALLRow = CType(Me.NewRow,GROUP_ALLRow)
            Dim columnValuesArray() As Object = New Object() {PARENTID, GroupID, GroupIDName, ID}
            rowGROUP_ALLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGROUP_ALLRow)
            Return rowGROUP_ALLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GROUP_ALLDataTable = CType(MyBase.Clone,GROUP_ALLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GROUP_ALLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPARENTID = MyBase.Columns("PARENTID")
            Me.columnGroupID = MyBase.Columns("GroupID")
            Me.columnGroupIDName = MyBase.Columns("GroupIDName")
            Me.columnID = MyBase.Columns("ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPARENTID = New Global.System.Data.DataColumn("PARENTID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENTID)
            Me.columnGroupID = New Global.System.Data.DataColumn("GroupID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupID)
            Me.columnGroupIDName = New Global.System.Data.DataColumn("GroupIDName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupIDName)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnPARENTID.ReadOnly = true
            Me.columnGroupID.ReadOnly = true
            Me.columnGroupID.MaxLength = 50
            Me.columnGroupIDName.ReadOnly = true
            Me.columnGroupIDName.MaxLength = 255
            Me.columnID.ReadOnly = true
            Me.columnID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGROUP_ALLRow() As GROUP_ALLRow
            Return CType(Me.NewRow,GROUP_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GROUP_ALLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GROUP_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GROUP_ALLRowChangedEvent) Is Nothing) Then
                RaiseEvent GROUP_ALLRowChanged(Me, New GROUP_ALLRowChangeEvent(CType(e.Row,GROUP_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GROUP_ALLRowChangingEvent) Is Nothing) Then
                RaiseEvent GROUP_ALLRowChanging(Me, New GROUP_ALLRowChangeEvent(CType(e.Row,GROUP_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GROUP_ALLRowDeletedEvent) Is Nothing) Then
                RaiseEvent GROUP_ALLRowDeleted(Me, New GROUP_ALLRowChangeEvent(CType(e.Row,GROUP_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GROUP_ALLRowDeletingEvent) Is Nothing) Then
                RaiseEvent GROUP_ALLRowDeleting(Me, New GROUP_ALLRowChangeEvent(CType(e.Row,GROUP_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGROUP_ALLRow(ByVal row As GROUP_ALLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CustomerGroups = New CustomerGroups()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GROUP_ALLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GROUP_MASTER_ALLDataTable
        Inherits Global.System.Data.TypedTableBase(Of GROUP_MASTER_ALLRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnGroupMasterID As Global.System.Data.DataColumn
        
        Private columnGroupMasterName As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnClientStrasse As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Ort As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Nr As Global.System.Data.DataColumn
        
        Private columnClientCountryResidence As Global.System.Data.DataColumn
        
        Private columnClientBranch As Global.System.Data.DataColumn
        
        Private columnClientBranchName As Global.System.Data.DataColumn
        
        Private columnClientCountryRisk As Global.System.Data.DataColumn
        
        Private columnSectorKWG As Global.System.Data.DataColumn
        
        Private columnSectorKWG_Description As Global.System.Data.DataColumn
        
        Private columnSector_CRR As Global.System.Data.DataColumn
        
        Private columnSector_CRR_Description As Global.System.Data.DataColumn
        
        Private columnSector_BISTA As Global.System.Data.DataColumn
        
        Private columnSector_BISTA_Description As Global.System.Data.DataColumn
        
        Private columnSector_FINREP As Global.System.Data.DataColumn
        
        Private columnSector_FINREP_Description As Global.System.Data.DataColumn
        
        Private columnBIC11 As Global.System.Data.DataColumn
        
        Private columnBIC11_NAME As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnInt_Organ As Global.System.Data.DataColumn
        
        Private columnTax_Identification_Nr As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Description As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Value As Global.System.Data.DataColumn
        
        Private columnRIAD_Nr As Global.System.Data.DataColumn
        
        Private columnNUTS_3_Region As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector_Description As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Other As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Customer As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Valid As Global.System.Data.DataColumn
        
        Private columnGroupMasterNameShort As Global.System.Data.DataColumn
        
        Private columnGroupStatus As Global.System.Data.DataColumn
        
        Private columnEU_COUNTRY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GROUP_MASTER_ALL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupMasterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupMasterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupMasterNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupMasterName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientStrasseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientStrasse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_OrtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Ort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryResidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryResidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranchName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryRiskColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryRisk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWG_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRR_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTA_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREP_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Int_OrganColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt_Organ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tax_Identification_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTax_Identification_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RIAD_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIAD_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NUTS_3_RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUTS_3_Region
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_SectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_Sector_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_Code_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_FormColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_OtherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Other
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_CustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Customer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_ValidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Valid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupMasterNameShortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupMasterNameShort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EU_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEU_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GROUP_MASTER_ALLRow
            Get
                Return CType(Me.Rows(index),GROUP_MASTER_ALLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTER_ALLRowChanging As GROUP_MASTER_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTER_ALLRowChanged As GROUP_MASTER_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTER_ALLRowDeleting As GROUP_MASTER_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_MASTER_ALLRowDeleted As GROUP_MASTER_ALLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGROUP_MASTER_ALLRow(ByVal row As GROUP_MASTER_ALLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGROUP_MASTER_ALLRow( _
                    ByVal GroupMasterID As String,  _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As GROUP_MASTER_ALLRow
            Dim rowGROUP_MASTER_ALLRow As GROUP_MASTER_ALLRow = CType(Me.NewRow,GROUP_MASTER_ALLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, GroupMasterID, GroupMasterName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName, ClientCountryRisk, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, GroupMasterNameShort, GroupStatus, EU_COUNTRY}
            rowGROUP_MASTER_ALLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGROUP_MASTER_ALLRow)
            Return rowGROUP_MASTER_ALLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByGroupMasterID(ByVal GroupMasterID As String) As GROUP_MASTER_ALLRow
            Return CType(Me.Rows.Find(New Object() {GroupMasterID}),GROUP_MASTER_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GROUP_MASTER_ALLDataTable = CType(MyBase.Clone,GROUP_MASTER_ALLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GROUP_MASTER_ALLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnGroupMasterID = MyBase.Columns("GroupMasterID")
            Me.columnGroupMasterName = MyBase.Columns("GroupMasterName")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnClientStrasse = MyBase.Columns("ClientStrasse")
            Me.columnClientPLZ_Ort = MyBase.Columns("ClientPLZ_Ort")
            Me.columnClientPLZ_Nr = MyBase.Columns("ClientPLZ_Nr")
            Me.columnClientCountryResidence = MyBase.Columns("ClientCountryResidence")
            Me.columnClientBranch = MyBase.Columns("ClientBranch")
            Me.columnClientBranchName = MyBase.Columns("ClientBranchName")
            Me.columnClientCountryRisk = MyBase.Columns("ClientCountryRisk")
            Me.columnSectorKWG = MyBase.Columns("SectorKWG")
            Me.columnSectorKWG_Description = MyBase.Columns("SectorKWG_Description")
            Me.columnSector_CRR = MyBase.Columns("Sector_CRR")
            Me.columnSector_CRR_Description = MyBase.Columns("Sector_CRR_Description")
            Me.columnSector_BISTA = MyBase.Columns("Sector_BISTA")
            Me.columnSector_BISTA_Description = MyBase.Columns("Sector_BISTA_Description")
            Me.columnSector_FINREP = MyBase.Columns("Sector_FINREP")
            Me.columnSector_FINREP_Description = MyBase.Columns("Sector_FINREP_Description")
            Me.columnBIC11 = MyBase.Columns("BIC11")
            Me.columnBIC11_NAME = MyBase.Columns("BIC11_NAME")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnInt_Organ = MyBase.Columns("Int_Organ")
            Me.columnTax_Identification_Nr = MyBase.Columns("Tax_Identification_Nr")
            Me.columnNational_Identifier_Type = MyBase.Columns("National_Identifier_Type")
            Me.columnNational_Identifier_Type_Description = MyBase.Columns("National_Identifier_Type_Description")
            Me.columnNational_Identifier_Type_Value = MyBase.Columns("National_Identifier_Type_Value")
            Me.columnRIAD_Nr = MyBase.Columns("RIAD_Nr")
            Me.columnNUTS_3_Region = MyBase.Columns("NUTS_3_Region")
            Me.columnInstitutional_Sector = MyBase.Columns("Institutional_Sector")
            Me.columnInstitutional_Sector_Description = MyBase.Columns("Institutional_Sector_Description")
            Me.columnNACE_Branch_Code = MyBase.Columns("NACE_Branch_Code")
            Me.columnNACE_Branch_Code_Description = MyBase.Columns("NACE_Branch_Code_Description")
            Me.columnLegal_Form = MyBase.Columns("Legal_Form")
            Me.columnLegal_Form_Description = MyBase.Columns("Legal_Form_Description")
            Me.columnLegal_Form_Other = MyBase.Columns("Legal_Form_Other")
            Me.columnAnaCredit_Customer = MyBase.Columns("AnaCredit_Customer")
            Me.columnAnaCredit_Valid = MyBase.Columns("AnaCredit_Valid")
            Me.columnGroupMasterNameShort = MyBase.Columns("GroupMasterNameShort")
            Me.columnGroupStatus = MyBase.Columns("GroupStatus")
            Me.columnEU_COUNTRY = MyBase.Columns("EU_COUNTRY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnGroupMasterID = New Global.System.Data.DataColumn("GroupMasterID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupMasterID)
            Me.columnGroupMasterName = New Global.System.Data.DataColumn("GroupMasterName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupMasterName)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnClientStrasse = New Global.System.Data.DataColumn("ClientStrasse", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientStrasse)
            Me.columnClientPLZ_Ort = New Global.System.Data.DataColumn("ClientPLZ_Ort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Ort)
            Me.columnClientPLZ_Nr = New Global.System.Data.DataColumn("ClientPLZ_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Nr)
            Me.columnClientCountryResidence = New Global.System.Data.DataColumn("ClientCountryResidence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryResidence)
            Me.columnClientBranch = New Global.System.Data.DataColumn("ClientBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranch)
            Me.columnClientBranchName = New Global.System.Data.DataColumn("ClientBranchName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranchName)
            Me.columnClientCountryRisk = New Global.System.Data.DataColumn("ClientCountryRisk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryRisk)
            Me.columnSectorKWG = New Global.System.Data.DataColumn("SectorKWG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG)
            Me.columnSectorKWG_Description = New Global.System.Data.DataColumn("SectorKWG_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG_Description)
            Me.columnSector_CRR = New Global.System.Data.DataColumn("Sector_CRR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR)
            Me.columnSector_CRR_Description = New Global.System.Data.DataColumn("Sector_CRR_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR_Description)
            Me.columnSector_BISTA = New Global.System.Data.DataColumn("Sector_BISTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA)
            Me.columnSector_BISTA_Description = New Global.System.Data.DataColumn("Sector_BISTA_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA_Description)
            Me.columnSector_FINREP = New Global.System.Data.DataColumn("Sector_FINREP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP)
            Me.columnSector_FINREP_Description = New Global.System.Data.DataColumn("Sector_FINREP_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP_Description)
            Me.columnBIC11 = New Global.System.Data.DataColumn("BIC11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11)
            Me.columnBIC11_NAME = New Global.System.Data.DataColumn("BIC11_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11_NAME)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnInt_Organ = New Global.System.Data.DataColumn("Int_Organ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt_Organ)
            Me.columnTax_Identification_Nr = New Global.System.Data.DataColumn("Tax_Identification_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTax_Identification_Nr)
            Me.columnNational_Identifier_Type = New Global.System.Data.DataColumn("National_Identifier_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type)
            Me.columnNational_Identifier_Type_Description = New Global.System.Data.DataColumn("National_Identifier_Type_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Description)
            Me.columnNational_Identifier_Type_Value = New Global.System.Data.DataColumn("National_Identifier_Type_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Value)
            Me.columnRIAD_Nr = New Global.System.Data.DataColumn("RIAD_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIAD_Nr)
            Me.columnNUTS_3_Region = New Global.System.Data.DataColumn("NUTS_3_Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUTS_3_Region)
            Me.columnInstitutional_Sector = New Global.System.Data.DataColumn("Institutional_Sector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector)
            Me.columnInstitutional_Sector_Description = New Global.System.Data.DataColumn("Institutional_Sector_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector_Description)
            Me.columnNACE_Branch_Code = New Global.System.Data.DataColumn("NACE_Branch_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code)
            Me.columnNACE_Branch_Code_Description = New Global.System.Data.DataColumn("NACE_Branch_Code_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code_Description)
            Me.columnLegal_Form = New Global.System.Data.DataColumn("Legal_Form", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form)
            Me.columnLegal_Form_Description = New Global.System.Data.DataColumn("Legal_Form_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Description)
            Me.columnLegal_Form_Other = New Global.System.Data.DataColumn("Legal_Form_Other", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Other)
            Me.columnAnaCredit_Customer = New Global.System.Data.DataColumn("AnaCredit_Customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Customer)
            Me.columnAnaCredit_Valid = New Global.System.Data.DataColumn("AnaCredit_Valid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Valid)
            Me.columnGroupMasterNameShort = New Global.System.Data.DataColumn("GroupMasterNameShort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupMasterNameShort)
            Me.columnGroupStatus = New Global.System.Data.DataColumn("GroupStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupStatus)
            Me.columnEU_COUNTRY = New Global.System.Data.DataColumn("EU_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEU_COUNTRY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnGroupMasterID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnGroupMasterID.AllowDBNull = false
            Me.columnGroupMasterID.Unique = true
            Me.columnGroupMasterID.MaxLength = 50
            Me.columnGroupMasterName.MaxLength = 255
            Me.columnClientName.MaxLength = 120
            Me.columnClientStrasse.MaxLength = 60
            Me.columnClientPLZ_Ort.MaxLength = 80
            Me.columnClientPLZ_Nr.MaxLength = 50
            Me.columnClientCountryResidence.MaxLength = 50
            Me.columnClientBranch.MaxLength = 50
            Me.columnClientBranchName.MaxLength = 255
            Me.columnClientCountryRisk.MaxLength = 50
            Me.columnSectorKWG.MaxLength = 50
            Me.columnSectorKWG_Description.MaxLength = 150
            Me.columnSector_CRR.MaxLength = 50
            Me.columnSector_CRR_Description.MaxLength = 150
            Me.columnSector_BISTA.MaxLength = 50
            Me.columnSector_BISTA_Description.MaxLength = 150
            Me.columnSector_FINREP.MaxLength = 50
            Me.columnSector_FINREP_Description.MaxLength = 150
            Me.columnBIC11.MaxLength = 50
            Me.columnBIC11_NAME.MaxLength = 255
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnInt_Organ.MaxLength = 10
            Me.columnTax_Identification_Nr.MaxLength = 100
            Me.columnNational_Identifier_Type.MaxLength = 50
            Me.columnNational_Identifier_Type_Description.MaxLength = 255
            Me.columnNational_Identifier_Type_Value.MaxLength = 50
            Me.columnRIAD_Nr.MaxLength = 50
            Me.columnNUTS_3_Region.MaxLength = 50
            Me.columnInstitutional_Sector.MaxLength = 50
            Me.columnInstitutional_Sector_Description.MaxLength = 100
            Me.columnNACE_Branch_Code.MaxLength = 50
            Me.columnNACE_Branch_Code_Description.MaxLength = 150
            Me.columnLegal_Form.MaxLength = 50
            Me.columnLegal_Form_Description.MaxLength = 100
            Me.columnLegal_Form_Other.MaxLength = 255
            Me.columnAnaCredit_Customer.MaxLength = 10
            Me.columnAnaCredit_Valid.MaxLength = 10
            Me.columnGroupMasterNameShort.MaxLength = 50
            Me.columnGroupStatus.MaxLength = 1
            Me.columnEU_COUNTRY.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGROUP_MASTER_ALLRow() As GROUP_MASTER_ALLRow
            Return CType(Me.NewRow,GROUP_MASTER_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GROUP_MASTER_ALLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GROUP_MASTER_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GROUP_MASTER_ALLRowChangedEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTER_ALLRowChanged(Me, New GROUP_MASTER_ALLRowChangeEvent(CType(e.Row,GROUP_MASTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GROUP_MASTER_ALLRowChangingEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTER_ALLRowChanging(Me, New GROUP_MASTER_ALLRowChangeEvent(CType(e.Row,GROUP_MASTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GROUP_MASTER_ALLRowDeletedEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTER_ALLRowDeleted(Me, New GROUP_MASTER_ALLRowChangeEvent(CType(e.Row,GROUP_MASTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GROUP_MASTER_ALLRowDeletingEvent) Is Nothing) Then
                RaiseEvent GROUP_MASTER_ALLRowDeleting(Me, New GROUP_MASTER_ALLRowChangeEvent(CType(e.Row,GROUP_MASTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGROUP_MASTER_ALLRow(ByVal row As GROUP_MASTER_ALLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CustomerGroups = New CustomerGroups()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GROUP_MASTER_ALLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GROUP_INTER_ALLDataTable
        Inherits Global.System.Data.TypedTableBase(Of GROUP_INTER_ALLRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnInterGroupID As Global.System.Data.DataColumn
        
        Private columnInterGroupName As Global.System.Data.DataColumn
        
        Private columnId_Master_Group As Global.System.Data.DataColumn
        
        Private columnMasterGroupName As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnClientStrasse As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Ort As Global.System.Data.DataColumn
        
        Private columnClientPLZ_Nr As Global.System.Data.DataColumn
        
        Private columnClientCountryResidence As Global.System.Data.DataColumn
        
        Private columnClientCountryRisk As Global.System.Data.DataColumn
        
        Private columnClientBranch As Global.System.Data.DataColumn
        
        Private columnClientBranchName As Global.System.Data.DataColumn
        
        Private columnSectorKWG As Global.System.Data.DataColumn
        
        Private columnSectorKWG_Description As Global.System.Data.DataColumn
        
        Private columnSector_CRR As Global.System.Data.DataColumn
        
        Private columnSector_CRR_Description As Global.System.Data.DataColumn
        
        Private columnSector_BISTA As Global.System.Data.DataColumn
        
        Private columnSector_BISTA_Description As Global.System.Data.DataColumn
        
        Private columnSector_FINREP As Global.System.Data.DataColumn
        
        Private columnSector_FINREP_Description As Global.System.Data.DataColumn
        
        Private columnBIC11 As Global.System.Data.DataColumn
        
        Private columnBIC11_NAME As Global.System.Data.DataColumn
        
        Private columnLEI_CODE As Global.System.Data.DataColumn
        
        Private columnInt_Organ As Global.System.Data.DataColumn
        
        Private columnTax_Identification_Nr As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Description As Global.System.Data.DataColumn
        
        Private columnNational_Identifier_Type_Value As Global.System.Data.DataColumn
        
        Private columnRIAD_Nr As Global.System.Data.DataColumn
        
        Private columnNUTS_3_Region As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector As Global.System.Data.DataColumn
        
        Private columnInstitutional_Sector_Description As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code As Global.System.Data.DataColumn
        
        Private columnNACE_Branch_Code_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Description As Global.System.Data.DataColumn
        
        Private columnLegal_Form_Other As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Customer As Global.System.Data.DataColumn
        
        Private columnAnaCredit_Valid As Global.System.Data.DataColumn
        
        Private columnClientNoM As Global.System.Data.DataColumn
        
        Private columnInterGroupNameShort As Global.System.Data.DataColumn
        
        Private columnGroupStatus As Global.System.Data.DataColumn
        
        Private columnEU_COUNTRY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GROUP_INTER_ALL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InterGroupIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterGroupID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InterGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Id_Master_GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Master_Group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MasterGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasterGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientStrasseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientStrasse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_OrtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Ort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientPLZ_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientPLZ_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryResidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryResidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientCountryRiskColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientCountryRisk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientBranchNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientBranchName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SectorKWG_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectorKWG_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_CRR_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_CRR_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_BISTA_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_BISTA_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sector_FINREP_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSector_FINREP_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BIC11_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBIC11_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LEI_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEI_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Int_OrganColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt_Organ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tax_Identification_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTax_Identification_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property National_Identifier_Type_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNational_Identifier_Type_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RIAD_NrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIAD_Nr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NUTS_3_RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUTS_3_Region
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_SectorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Institutional_Sector_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitutional_Sector_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NACE_Branch_Code_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNACE_Branch_Code_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_FormColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Legal_Form_OtherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Form_Other
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_CustomerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Customer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AnaCredit_ValidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnaCredit_Valid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNoMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientNoM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InterGroupNameShortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInterGroupNameShort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GroupStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EU_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEU_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GROUP_INTER_ALLRow
            Get
                Return CType(Me.Rows(index),GROUP_INTER_ALLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTER_ALLRowChanging As GROUP_INTER_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTER_ALLRowChanged As GROUP_INTER_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTER_ALLRowDeleting As GROUP_INTER_ALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event GROUP_INTER_ALLRowDeleted As GROUP_INTER_ALLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddGROUP_INTER_ALLRow(ByVal row As GROUP_INTER_ALLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddGROUP_INTER_ALLRow( _
                    ByVal InterGroupID As String,  _
                    ByVal InterGroupName As String,  _
                    ByVal Id_Master_Group As String,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As GROUP_INTER_ALLRow
            Dim rowGROUP_INTER_ALLRow As GROUP_INTER_ALLRow = CType(Me.NewRow,GROUP_INTER_ALLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, InterGroupID, InterGroupName, Id_Master_Group, MasterGroupName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientCountryRisk, ClientBranch, ClientBranchName, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, InterGroupNameShort, GroupStatus, EU_COUNTRY}
            rowGROUP_INTER_ALLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGROUP_INTER_ALLRow)
            Return rowGROUP_INTER_ALLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByInterGroupID(ByVal InterGroupID As String) As GROUP_INTER_ALLRow
            Return CType(Me.Rows.Find(New Object() {InterGroupID}),GROUP_INTER_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GROUP_INTER_ALLDataTable = CType(MyBase.Clone,GROUP_INTER_ALLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GROUP_INTER_ALLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnInterGroupID = MyBase.Columns("InterGroupID")
            Me.columnInterGroupName = MyBase.Columns("InterGroupName")
            Me.columnId_Master_Group = MyBase.Columns("Id_Master_Group")
            Me.columnMasterGroupName = MyBase.Columns("MasterGroupName")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnClientStrasse = MyBase.Columns("ClientStrasse")
            Me.columnClientPLZ_Ort = MyBase.Columns("ClientPLZ_Ort")
            Me.columnClientPLZ_Nr = MyBase.Columns("ClientPLZ_Nr")
            Me.columnClientCountryResidence = MyBase.Columns("ClientCountryResidence")
            Me.columnClientCountryRisk = MyBase.Columns("ClientCountryRisk")
            Me.columnClientBranch = MyBase.Columns("ClientBranch")
            Me.columnClientBranchName = MyBase.Columns("ClientBranchName")
            Me.columnSectorKWG = MyBase.Columns("SectorKWG")
            Me.columnSectorKWG_Description = MyBase.Columns("SectorKWG_Description")
            Me.columnSector_CRR = MyBase.Columns("Sector_CRR")
            Me.columnSector_CRR_Description = MyBase.Columns("Sector_CRR_Description")
            Me.columnSector_BISTA = MyBase.Columns("Sector_BISTA")
            Me.columnSector_BISTA_Description = MyBase.Columns("Sector_BISTA_Description")
            Me.columnSector_FINREP = MyBase.Columns("Sector_FINREP")
            Me.columnSector_FINREP_Description = MyBase.Columns("Sector_FINREP_Description")
            Me.columnBIC11 = MyBase.Columns("BIC11")
            Me.columnBIC11_NAME = MyBase.Columns("BIC11_NAME")
            Me.columnLEI_CODE = MyBase.Columns("LEI_CODE")
            Me.columnInt_Organ = MyBase.Columns("Int_Organ")
            Me.columnTax_Identification_Nr = MyBase.Columns("Tax_Identification_Nr")
            Me.columnNational_Identifier_Type = MyBase.Columns("National_Identifier_Type")
            Me.columnNational_Identifier_Type_Description = MyBase.Columns("National_Identifier_Type_Description")
            Me.columnNational_Identifier_Type_Value = MyBase.Columns("National_Identifier_Type_Value")
            Me.columnRIAD_Nr = MyBase.Columns("RIAD_Nr")
            Me.columnNUTS_3_Region = MyBase.Columns("NUTS_3_Region")
            Me.columnInstitutional_Sector = MyBase.Columns("Institutional_Sector")
            Me.columnInstitutional_Sector_Description = MyBase.Columns("Institutional_Sector_Description")
            Me.columnNACE_Branch_Code = MyBase.Columns("NACE_Branch_Code")
            Me.columnNACE_Branch_Code_Description = MyBase.Columns("NACE_Branch_Code_Description")
            Me.columnLegal_Form = MyBase.Columns("Legal_Form")
            Me.columnLegal_Form_Description = MyBase.Columns("Legal_Form_Description")
            Me.columnLegal_Form_Other = MyBase.Columns("Legal_Form_Other")
            Me.columnAnaCredit_Customer = MyBase.Columns("AnaCredit_Customer")
            Me.columnAnaCredit_Valid = MyBase.Columns("AnaCredit_Valid")
            Me.columnClientNoM = MyBase.Columns("ClientNoM")
            Me.columnInterGroupNameShort = MyBase.Columns("InterGroupNameShort")
            Me.columnGroupStatus = MyBase.Columns("GroupStatus")
            Me.columnEU_COUNTRY = MyBase.Columns("EU_COUNTRY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnInterGroupID = New Global.System.Data.DataColumn("InterGroupID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterGroupID)
            Me.columnInterGroupName = New Global.System.Data.DataColumn("InterGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterGroupName)
            Me.columnId_Master_Group = New Global.System.Data.DataColumn("Id_Master_Group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Master_Group)
            Me.columnMasterGroupName = New Global.System.Data.DataColumn("MasterGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasterGroupName)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnClientStrasse = New Global.System.Data.DataColumn("ClientStrasse", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientStrasse)
            Me.columnClientPLZ_Ort = New Global.System.Data.DataColumn("ClientPLZ_Ort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Ort)
            Me.columnClientPLZ_Nr = New Global.System.Data.DataColumn("ClientPLZ_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientPLZ_Nr)
            Me.columnClientCountryResidence = New Global.System.Data.DataColumn("ClientCountryResidence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryResidence)
            Me.columnClientCountryRisk = New Global.System.Data.DataColumn("ClientCountryRisk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientCountryRisk)
            Me.columnClientBranch = New Global.System.Data.DataColumn("ClientBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranch)
            Me.columnClientBranchName = New Global.System.Data.DataColumn("ClientBranchName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientBranchName)
            Me.columnSectorKWG = New Global.System.Data.DataColumn("SectorKWG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG)
            Me.columnSectorKWG_Description = New Global.System.Data.DataColumn("SectorKWG_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectorKWG_Description)
            Me.columnSector_CRR = New Global.System.Data.DataColumn("Sector_CRR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR)
            Me.columnSector_CRR_Description = New Global.System.Data.DataColumn("Sector_CRR_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_CRR_Description)
            Me.columnSector_BISTA = New Global.System.Data.DataColumn("Sector_BISTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA)
            Me.columnSector_BISTA_Description = New Global.System.Data.DataColumn("Sector_BISTA_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_BISTA_Description)
            Me.columnSector_FINREP = New Global.System.Data.DataColumn("Sector_FINREP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP)
            Me.columnSector_FINREP_Description = New Global.System.Data.DataColumn("Sector_FINREP_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSector_FINREP_Description)
            Me.columnBIC11 = New Global.System.Data.DataColumn("BIC11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11)
            Me.columnBIC11_NAME = New Global.System.Data.DataColumn("BIC11_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBIC11_NAME)
            Me.columnLEI_CODE = New Global.System.Data.DataColumn("LEI_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEI_CODE)
            Me.columnInt_Organ = New Global.System.Data.DataColumn("Int_Organ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt_Organ)
            Me.columnTax_Identification_Nr = New Global.System.Data.DataColumn("Tax_Identification_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTax_Identification_Nr)
            Me.columnNational_Identifier_Type = New Global.System.Data.DataColumn("National_Identifier_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type)
            Me.columnNational_Identifier_Type_Description = New Global.System.Data.DataColumn("National_Identifier_Type_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Description)
            Me.columnNational_Identifier_Type_Value = New Global.System.Data.DataColumn("National_Identifier_Type_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNational_Identifier_Type_Value)
            Me.columnRIAD_Nr = New Global.System.Data.DataColumn("RIAD_Nr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIAD_Nr)
            Me.columnNUTS_3_Region = New Global.System.Data.DataColumn("NUTS_3_Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUTS_3_Region)
            Me.columnInstitutional_Sector = New Global.System.Data.DataColumn("Institutional_Sector", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector)
            Me.columnInstitutional_Sector_Description = New Global.System.Data.DataColumn("Institutional_Sector_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitutional_Sector_Description)
            Me.columnNACE_Branch_Code = New Global.System.Data.DataColumn("NACE_Branch_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code)
            Me.columnNACE_Branch_Code_Description = New Global.System.Data.DataColumn("NACE_Branch_Code_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNACE_Branch_Code_Description)
            Me.columnLegal_Form = New Global.System.Data.DataColumn("Legal_Form", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form)
            Me.columnLegal_Form_Description = New Global.System.Data.DataColumn("Legal_Form_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Description)
            Me.columnLegal_Form_Other = New Global.System.Data.DataColumn("Legal_Form_Other", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Form_Other)
            Me.columnAnaCredit_Customer = New Global.System.Data.DataColumn("AnaCredit_Customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Customer)
            Me.columnAnaCredit_Valid = New Global.System.Data.DataColumn("AnaCredit_Valid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnaCredit_Valid)
            Me.columnClientNoM = New Global.System.Data.DataColumn("ClientNoM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientNoM)
            Me.columnInterGroupNameShort = New Global.System.Data.DataColumn("InterGroupNameShort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInterGroupNameShort)
            Me.columnGroupStatus = New Global.System.Data.DataColumn("GroupStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupStatus)
            Me.columnEU_COUNTRY = New Global.System.Data.DataColumn("EU_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEU_COUNTRY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnInterGroupID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnInterGroupID.AllowDBNull = false
            Me.columnInterGroupID.Unique = true
            Me.columnInterGroupID.MaxLength = 50
            Me.columnInterGroupName.MaxLength = 255
            Me.columnId_Master_Group.MaxLength = 50
            Me.columnMasterGroupName.MaxLength = 255
            Me.columnClientName.MaxLength = 120
            Me.columnClientStrasse.MaxLength = 60
            Me.columnClientPLZ_Ort.MaxLength = 80
            Me.columnClientPLZ_Nr.MaxLength = 50
            Me.columnClientCountryResidence.MaxLength = 50
            Me.columnClientCountryRisk.MaxLength = 50
            Me.columnClientBranch.MaxLength = 50
            Me.columnClientBranchName.MaxLength = 255
            Me.columnSectorKWG.MaxLength = 50
            Me.columnSectorKWG_Description.MaxLength = 150
            Me.columnSector_CRR.MaxLength = 50
            Me.columnSector_CRR_Description.MaxLength = 150
            Me.columnSector_BISTA.MaxLength = 50
            Me.columnSector_BISTA_Description.MaxLength = 150
            Me.columnSector_FINREP.MaxLength = 50
            Me.columnSector_FINREP_Description.MaxLength = 150
            Me.columnBIC11.MaxLength = 50
            Me.columnBIC11_NAME.MaxLength = 255
            Me.columnLEI_CODE.MaxLength = 50
            Me.columnInt_Organ.MaxLength = 10
            Me.columnTax_Identification_Nr.MaxLength = 100
            Me.columnNational_Identifier_Type.MaxLength = 50
            Me.columnNational_Identifier_Type_Description.MaxLength = 255
            Me.columnNational_Identifier_Type_Value.MaxLength = 50
            Me.columnRIAD_Nr.MaxLength = 50
            Me.columnNUTS_3_Region.MaxLength = 50
            Me.columnInstitutional_Sector.MaxLength = 50
            Me.columnInstitutional_Sector_Description.MaxLength = 100
            Me.columnNACE_Branch_Code.MaxLength = 50
            Me.columnNACE_Branch_Code_Description.MaxLength = 150
            Me.columnLegal_Form.MaxLength = 50
            Me.columnLegal_Form_Description.MaxLength = 100
            Me.columnLegal_Form_Other.MaxLength = 255
            Me.columnAnaCredit_Customer.MaxLength = 10
            Me.columnAnaCredit_Valid.MaxLength = 10
            Me.columnClientNoM.MaxLength = 255
            Me.columnInterGroupNameShort.MaxLength = 50
            Me.columnGroupStatus.MaxLength = 1
            Me.columnEU_COUNTRY.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewGROUP_INTER_ALLRow() As GROUP_INTER_ALLRow
            Return CType(Me.NewRow,GROUP_INTER_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GROUP_INTER_ALLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GROUP_INTER_ALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GROUP_INTER_ALLRowChangedEvent) Is Nothing) Then
                RaiseEvent GROUP_INTER_ALLRowChanged(Me, New GROUP_INTER_ALLRowChangeEvent(CType(e.Row,GROUP_INTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GROUP_INTER_ALLRowChangingEvent) Is Nothing) Then
                RaiseEvent GROUP_INTER_ALLRowChanging(Me, New GROUP_INTER_ALLRowChangeEvent(CType(e.Row,GROUP_INTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GROUP_INTER_ALLRowDeletedEvent) Is Nothing) Then
                RaiseEvent GROUP_INTER_ALLRowDeleted(Me, New GROUP_INTER_ALLRowChangeEvent(CType(e.Row,GROUP_INTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GROUP_INTER_ALLRowDeletingEvent) Is Nothing) Then
                RaiseEvent GROUP_INTER_ALLRowDeleting(Me, New GROUP_INTER_ALLRowChangeEvent(CType(e.Row,GROUP_INTER_ALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveGROUP_INTER_ALLRow(ByVal row As GROUP_INTER_ALLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CustomerGroups = New CustomerGroups()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GROUP_INTER_ALLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GROUP_CLIENTRow
        Inherits Global.System.Data.DataRow
        
        Private tableGROUP_CLIENT As GROUP_CLIENTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGROUP_CLIENT = CType(Me.Table,GROUP_CLIENTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGROUP_CLIENT.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGROUP_CLIENT.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientNr() As String
            Get
                Return CType(Me(Me.tableGROUP_CLIENT.ClientNrColumn),String)
            End Get
            Set
                Me(Me.tableGROUP_CLIENT.ClientNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'GROUP_CLIENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_Inter_Group() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT.Id_Inter_GroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_Inter_Group' in table 'GROUP_CLIENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT.Id_Inter_GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_Master_Group() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT.Id_Master_GroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_Master_Group' in table 'GROUP_CLIENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT.Id_Master_GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InterGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT.InterGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InterGroupName' in table 'GROUP_CLIENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT.InterGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MasterGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT.MasterGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MasterGroupName' in table 'GROUP_CLIENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT.MasterGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GROUP_INTERRow() As GROUP_INTERRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_GROUP_CLIENT_GROUP_INTER")),GROUP_INTERRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_GROUP_CLIENT_GROUP_INTER"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableGROUP_CLIENT.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_Inter_GroupNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT.Id_Inter_GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_Inter_GroupNull()
            Me(Me.tableGROUP_CLIENT.Id_Inter_GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_Master_GroupNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT.Id_Master_GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_Master_GroupNull()
            Me(Me.tableGROUP_CLIENT.Id_Master_GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInterGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT.InterGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInterGroupNameNull()
            Me(Me.tableGROUP_CLIENT.InterGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMasterGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT.MasterGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMasterGroupNameNull()
            Me(Me.tableGROUP_CLIENT.MasterGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetGROUP_CLIENT_DETAILSRows() As GROUP_CLIENT_DETAILSRow()
            If (Me.Table.ChildRelations("FK_GROUP_CLIENT_DETAILS_GROUP_CLIENT") Is Nothing) Then
                Return New GROUP_CLIENT_DETAILSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_GROUP_CLIENT_DETAILS_GROUP_CLIENT")),GROUP_CLIENT_DETAILSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GROUP_CLIENT_DETAILSRow
        Inherits Global.System.Data.DataRow
        
        Private tableGROUP_CLIENT_DETAILS As GROUP_CLIENT_DETAILSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGROUP_CLIENT_DETAILS = CType(Me.Table,GROUP_CLIENT_DETAILSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGROUP_CLIENT_DETAILS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGROUP_CLIENT_DETAILS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientNr() As String
            Get
                Return CType(Me(Me.tableGROUP_CLIENT_DETAILS.ClientNrColumn),String)
            End Get
            Set
                Me(Me.tableGROUP_CLIENT_DETAILS.ClientNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT_DETAILS.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'GROUP_CLIENT_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT_DETAILS.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Group_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT_DETAILS.Group_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Group_Type' in table 'GROUP_CLIENT_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT_DETAILS.Group_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Group_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT_DETAILS.Group_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Group_Name' in table 'GROUP_CLIENT_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT_DETAILS.Group_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Group_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT_DETAILS.Group_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Group_ID' in table 'GROUP_CLIENT_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT_DETAILS.Group_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_ClientNr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_CLIENT_DETAILS.Id_ClientNrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_ClientNr' in table 'GROUP_CLIENT_DETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_CLIENT_DETAILS.Id_ClientNrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GROUP_CLIENTRow() As GROUP_CLIENTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_GROUP_CLIENT_DETAILS_GROUP_CLIENT")),GROUP_CLIENTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_GROUP_CLIENT_DETAILS_GROUP_CLIENT"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT_DETAILS.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableGROUP_CLIENT_DETAILS.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroup_TypeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT_DETAILS.Group_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroup_TypeNull()
            Me(Me.tableGROUP_CLIENT_DETAILS.Group_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroup_NameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT_DETAILS.Group_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroup_NameNull()
            Me(Me.tableGROUP_CLIENT_DETAILS.Group_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroup_IDNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT_DETAILS.Group_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroup_IDNull()
            Me(Me.tableGROUP_CLIENT_DETAILS.Group_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_ClientNrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_CLIENT_DETAILS.Id_ClientNrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_ClientNrNull()
            Me(Me.tableGROUP_CLIENT_DETAILS.Id_ClientNrColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GROUP_INTERRow
        Inherits Global.System.Data.DataRow
        
        Private tableGROUP_INTER As GROUP_INTERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGROUP_INTER = CType(Me.Table,GROUP_INTERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGROUP_INTER.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGROUP_INTER.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InterGroupID() As String
            Get
                Return CType(Me(Me.tableGROUP_INTER.InterGroupIDColumn),String)
            End Get
            Set
                Me(Me.tableGROUP_INTER.InterGroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InterGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.InterGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InterGroupName' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.InterGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_Master_Group() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Id_Master_GroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_Master_Group' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Id_Master_GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MasterGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.MasterGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MasterGroupName' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.MasterGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientStrasse() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientStrasseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientStrasse' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientStrasseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Ort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientPLZ_OrtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Ort' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientPLZ_OrtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientPLZ_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Nr' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientPLZ_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryResidence() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientCountryResidenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryResidence' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientCountryResidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryRisk() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientCountryRiskColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryRisk' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientCountryRiskColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranch' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranchName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientBranchNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranchName' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientBranchNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.SectorKWGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.SectorKWGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.SectorKWG_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG_Description' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.SectorKWG_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Sector_CRRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Sector_CRRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Sector_CRR_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR_Description' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Sector_CRR_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Sector_BISTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Sector_BISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Sector_BISTA_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA_Description' in table 'GROUP_INTER' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Sector_BISTA_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Sector_FINREPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Sector_FINREPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Sector_FINREP_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP_Description' in table 'GROUP_INTER' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Sector_FINREP_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.BIC11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.BIC11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.BIC11_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11_NAME' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.BIC11_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Int_Organ() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Int_OrganColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int_Organ' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Int_OrganColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tax_Identification_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Tax_Identification_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tax_Identification_Nr' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Tax_Identification_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.National_Identifier_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type' in table 'GROUP_INTER' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.National_Identifier_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.National_Identifier_Type_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Description' in table 'GROUP_INTER"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.National_Identifier_Type_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.National_Identifier_Type_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Value' in table 'GROUP_INTER' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.National_Identifier_Type_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RIAD_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.RIAD_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIAD_Nr' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.RIAD_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NUTS_3_Region() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.NUTS_3_RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUTS_3_Region' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.NUTS_3_RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Institutional_SectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Institutional_SectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Institutional_Sector_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector_Description' in table 'GROUP_INTER' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Institutional_Sector_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.NACE_Branch_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.NACE_Branch_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.NACE_Branch_Code_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code_Description' in table 'GROUP_INTER' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.NACE_Branch_Code_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Legal_FormColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Legal_FormColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Legal_Form_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Description' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Legal_Form_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Other() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.Legal_Form_OtherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Other' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.Legal_Form_OtherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Customer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.AnaCredit_CustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Customer' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.AnaCredit_CustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Valid() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.AnaCredit_ValidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Valid' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.AnaCredit_ValidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientNoM() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.ClientNoMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientNoM' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.ClientNoMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InterGroupNameShort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.InterGroupNameShortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InterGroupNameShort' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.InterGroupNameShortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.GroupStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupStatus' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.GroupStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EU_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER.EU_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EU_COUNTRY' in table 'GROUP_INTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER.EU_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GROUP_MASTERRow() As GROUP_MASTERRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_GROUP_INTER_GROUP_MASTER")),GROUP_MASTERRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_GROUP_INTER_GROUP_MASTER"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInterGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.InterGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInterGroupNameNull()
            Me(Me.tableGROUP_INTER.InterGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_Master_GroupNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Id_Master_GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_Master_GroupNull()
            Me(Me.tableGROUP_INTER.Id_Master_GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMasterGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.MasterGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMasterGroupNameNull()
            Me(Me.tableGROUP_INTER.MasterGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableGROUP_INTER.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientStrasseNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientStrasseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientStrasseNull()
            Me(Me.tableGROUP_INTER.ClientStrasseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_OrtNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientPLZ_OrtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_OrtNull()
            Me(Me.tableGROUP_INTER.ClientPLZ_OrtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientPLZ_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_NrNull()
            Me(Me.tableGROUP_INTER.ClientPLZ_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryResidenceNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientCountryResidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryResidenceNull()
            Me(Me.tableGROUP_INTER.ClientCountryResidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryRiskNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientCountryRiskColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryRiskNull()
            Me(Me.tableGROUP_INTER.ClientCountryRiskColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNull()
            Me(Me.tableGROUP_INTER.ClientBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientBranchNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNameNull()
            Me(Me.tableGROUP_INTER.ClientBranchNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWGNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.SectorKWGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWGNull()
            Me(Me.tableGROUP_INTER.SectorKWGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWG_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.SectorKWG_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWG_DescriptionNull()
            Me(Me.tableGROUP_INTER.SectorKWG_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRRNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Sector_CRRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRRNull()
            Me(Me.tableGROUP_INTER.Sector_CRRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRR_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Sector_CRR_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRR_DescriptionNull()
            Me(Me.tableGROUP_INTER.Sector_CRR_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTANull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Sector_BISTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTANull()
            Me(Me.tableGROUP_INTER.Sector_BISTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTA_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Sector_BISTA_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTA_DescriptionNull()
            Me(Me.tableGROUP_INTER.Sector_BISTA_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREPNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Sector_FINREPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREPNull()
            Me(Me.tableGROUP_INTER.Sector_FINREPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREP_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Sector_FINREP_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREP_DescriptionNull()
            Me(Me.tableGROUP_INTER.Sector_FINREP_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11Null() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.BIC11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11Null()
            Me(Me.tableGROUP_INTER.BIC11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11_NAMENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.BIC11_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11_NAMENull()
            Me(Me.tableGROUP_INTER.BIC11_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableGROUP_INTER.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInt_OrganNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Int_OrganColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInt_OrganNull()
            Me(Me.tableGROUP_INTER.Int_OrganColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTax_Identification_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Tax_Identification_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTax_Identification_NrNull()
            Me(Me.tableGROUP_INTER.Tax_Identification_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_TypeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.National_Identifier_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_TypeNull()
            Me(Me.tableGROUP_INTER.National_Identifier_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.National_Identifier_Type_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_DescriptionNull()
            Me(Me.tableGROUP_INTER.National_Identifier_Type_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_ValueNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.National_Identifier_Type_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_ValueNull()
            Me(Me.tableGROUP_INTER.National_Identifier_Type_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRIAD_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.RIAD_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRIAD_NrNull()
            Me(Me.tableGROUP_INTER.RIAD_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNUTS_3_RegionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.NUTS_3_RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNUTS_3_RegionNull()
            Me(Me.tableGROUP_INTER.NUTS_3_RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_SectorNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Institutional_SectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_SectorNull()
            Me(Me.tableGROUP_INTER.Institutional_SectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_Sector_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Institutional_Sector_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_Sector_DescriptionNull()
            Me(Me.tableGROUP_INTER.Institutional_Sector_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.NACE_Branch_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_CodeNull()
            Me(Me.tableGROUP_INTER.NACE_Branch_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_Code_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.NACE_Branch_Code_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_Code_DescriptionNull()
            Me(Me.tableGROUP_INTER.NACE_Branch_Code_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_FormNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Legal_FormColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_FormNull()
            Me(Me.tableGROUP_INTER.Legal_FormColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Legal_Form_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_DescriptionNull()
            Me(Me.tableGROUP_INTER.Legal_Form_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_OtherNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.Legal_Form_OtherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_OtherNull()
            Me(Me.tableGROUP_INTER.Legal_Form_OtherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_CustomerNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.AnaCredit_CustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_CustomerNull()
            Me(Me.tableGROUP_INTER.AnaCredit_CustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_ValidNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.AnaCredit_ValidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_ValidNull()
            Me(Me.tableGROUP_INTER.AnaCredit_ValidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNoMNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.ClientNoMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNoMNull()
            Me(Me.tableGROUP_INTER.ClientNoMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInterGroupNameShortNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.InterGroupNameShortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInterGroupNameShortNull()
            Me(Me.tableGROUP_INTER.InterGroupNameShortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupStatusNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.GroupStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupStatusNull()
            Me(Me.tableGROUP_INTER.GroupStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEU_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER.EU_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEU_COUNTRYNull()
            Me(Me.tableGROUP_INTER.EU_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetGROUP_CLIENTRows() As GROUP_CLIENTRow()
            If (Me.Table.ChildRelations("FK_GROUP_CLIENT_GROUP_INTER") Is Nothing) Then
                Return New GROUP_CLIENTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_GROUP_CLIENT_GROUP_INTER")),GROUP_CLIENTRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GROUP_MASTERRow
        Inherits Global.System.Data.DataRow
        
        Private tableGROUP_MASTER As GROUP_MASTERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGROUP_MASTER = CType(Me.Table,GROUP_MASTERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGROUP_MASTER.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGROUP_MASTER.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupMasterID() As String
            Get
                Return CType(Me(Me.tableGROUP_MASTER.GroupMasterIDColumn),String)
            End Get
            Set
                Me(Me.tableGROUP_MASTER.GroupMasterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupMasterName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.GroupMasterNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupMasterName' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.GroupMasterNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientStrasse() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientStrasseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientStrasse' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientStrasseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Ort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientPLZ_OrtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Ort' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientPLZ_OrtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientPLZ_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Nr' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientPLZ_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryResidence() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientCountryResidenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryResidence' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientCountryResidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranch' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranchName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientBranchNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranchName' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientBranchNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryRisk() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.ClientCountryRiskColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryRisk' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.ClientCountryRiskColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.SectorKWGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.SectorKWGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.SectorKWG_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG_Description' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.SectorKWG_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Sector_CRRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Sector_CRRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Sector_CRR_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR_Description' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Sector_CRR_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Sector_BISTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Sector_BISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Sector_BISTA_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA_Description' in table 'GROUP_MASTER' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Sector_BISTA_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Sector_FINREPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Sector_FINREPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Sector_FINREP_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP_Description' in table 'GROUP_MASTER' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Sector_FINREP_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.BIC11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.BIC11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.BIC11_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11_NAME' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.BIC11_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Int_Organ() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Int_OrganColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int_Organ' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Int_OrganColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tax_Identification_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Tax_Identification_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tax_Identification_Nr' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Tax_Identification_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.National_Identifier_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type' in table 'GROUP_MASTER' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.National_Identifier_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.National_Identifier_Type_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Description' in table 'GROUP_MASTE"& _ 
                            "R' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.National_Identifier_Type_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.National_Identifier_Type_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Value' in table 'GROUP_MASTER' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.National_Identifier_Type_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RIAD_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.RIAD_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIAD_Nr' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.RIAD_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NUTS_3_Region() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.NUTS_3_RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUTS_3_Region' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.NUTS_3_RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Institutional_SectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Institutional_SectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Institutional_Sector_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector_Description' in table 'GROUP_MASTER' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Institutional_Sector_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.NACE_Branch_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.NACE_Branch_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.NACE_Branch_Code_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code_Description' in table 'GROUP_MASTER' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.NACE_Branch_Code_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Legal_FormColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Legal_FormColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Legal_Form_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Description' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Legal_Form_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Other() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.Legal_Form_OtherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Other' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.Legal_Form_OtherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Customer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.AnaCredit_CustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Customer' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.AnaCredit_CustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Valid() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.AnaCredit_ValidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Valid' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.AnaCredit_ValidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupMasterNameShort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.GroupMasterNameShortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupMasterNameShort' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.GroupMasterNameShortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.GroupStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupStatus' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.GroupStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EU_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER.EU_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EU_COUNTRY' in table 'GROUP_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER.EU_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupMasterNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.GroupMasterNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupMasterNameNull()
            Me(Me.tableGROUP_MASTER.GroupMasterNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableGROUP_MASTER.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientStrasseNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientStrasseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientStrasseNull()
            Me(Me.tableGROUP_MASTER.ClientStrasseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_OrtNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientPLZ_OrtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_OrtNull()
            Me(Me.tableGROUP_MASTER.ClientPLZ_OrtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientPLZ_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_NrNull()
            Me(Me.tableGROUP_MASTER.ClientPLZ_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryResidenceNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientCountryResidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryResidenceNull()
            Me(Me.tableGROUP_MASTER.ClientCountryResidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNull()
            Me(Me.tableGROUP_MASTER.ClientBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientBranchNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNameNull()
            Me(Me.tableGROUP_MASTER.ClientBranchNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryRiskNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.ClientCountryRiskColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryRiskNull()
            Me(Me.tableGROUP_MASTER.ClientCountryRiskColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWGNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.SectorKWGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWGNull()
            Me(Me.tableGROUP_MASTER.SectorKWGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWG_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.SectorKWG_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWG_DescriptionNull()
            Me(Me.tableGROUP_MASTER.SectorKWG_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRRNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Sector_CRRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRRNull()
            Me(Me.tableGROUP_MASTER.Sector_CRRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRR_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Sector_CRR_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRR_DescriptionNull()
            Me(Me.tableGROUP_MASTER.Sector_CRR_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTANull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Sector_BISTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTANull()
            Me(Me.tableGROUP_MASTER.Sector_BISTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTA_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Sector_BISTA_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTA_DescriptionNull()
            Me(Me.tableGROUP_MASTER.Sector_BISTA_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREPNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Sector_FINREPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREPNull()
            Me(Me.tableGROUP_MASTER.Sector_FINREPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREP_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Sector_FINREP_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREP_DescriptionNull()
            Me(Me.tableGROUP_MASTER.Sector_FINREP_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11Null() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.BIC11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11Null()
            Me(Me.tableGROUP_MASTER.BIC11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11_NAMENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.BIC11_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11_NAMENull()
            Me(Me.tableGROUP_MASTER.BIC11_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableGROUP_MASTER.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInt_OrganNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Int_OrganColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInt_OrganNull()
            Me(Me.tableGROUP_MASTER.Int_OrganColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTax_Identification_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Tax_Identification_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTax_Identification_NrNull()
            Me(Me.tableGROUP_MASTER.Tax_Identification_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_TypeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.National_Identifier_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_TypeNull()
            Me(Me.tableGROUP_MASTER.National_Identifier_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.National_Identifier_Type_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_DescriptionNull()
            Me(Me.tableGROUP_MASTER.National_Identifier_Type_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_ValueNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.National_Identifier_Type_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_ValueNull()
            Me(Me.tableGROUP_MASTER.National_Identifier_Type_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRIAD_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.RIAD_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRIAD_NrNull()
            Me(Me.tableGROUP_MASTER.RIAD_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNUTS_3_RegionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.NUTS_3_RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNUTS_3_RegionNull()
            Me(Me.tableGROUP_MASTER.NUTS_3_RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_SectorNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Institutional_SectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_SectorNull()
            Me(Me.tableGROUP_MASTER.Institutional_SectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_Sector_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Institutional_Sector_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_Sector_DescriptionNull()
            Me(Me.tableGROUP_MASTER.Institutional_Sector_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.NACE_Branch_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_CodeNull()
            Me(Me.tableGROUP_MASTER.NACE_Branch_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_Code_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.NACE_Branch_Code_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_Code_DescriptionNull()
            Me(Me.tableGROUP_MASTER.NACE_Branch_Code_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_FormNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Legal_FormColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_FormNull()
            Me(Me.tableGROUP_MASTER.Legal_FormColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Legal_Form_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_DescriptionNull()
            Me(Me.tableGROUP_MASTER.Legal_Form_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_OtherNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.Legal_Form_OtherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_OtherNull()
            Me(Me.tableGROUP_MASTER.Legal_Form_OtherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_CustomerNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.AnaCredit_CustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_CustomerNull()
            Me(Me.tableGROUP_MASTER.AnaCredit_CustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_ValidNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.AnaCredit_ValidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_ValidNull()
            Me(Me.tableGROUP_MASTER.AnaCredit_ValidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupMasterNameShortNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.GroupMasterNameShortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupMasterNameShortNull()
            Me(Me.tableGROUP_MASTER.GroupMasterNameShortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupStatusNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.GroupStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupStatusNull()
            Me(Me.tableGROUP_MASTER.GroupStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEU_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER.EU_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEU_COUNTRYNull()
            Me(Me.tableGROUP_MASTER.EU_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetGROUP_INTERRows() As GROUP_INTERRow()
            If (Me.Table.ChildRelations("FK_GROUP_INTER_GROUP_MASTER") Is Nothing) Then
                Return New GROUP_INTERRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_GROUP_INTER_GROUP_MASTER")),GROUP_INTERRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GROUP_ALLRow
        Inherits Global.System.Data.DataRow
        
        Private tableGROUP_ALL As GROUP_ALLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGROUP_ALL = CType(Me.Table,GROUP_ALLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PARENTID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_ALL.PARENTIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARENTID' in table 'GROUP_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_ALL.PARENTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupID() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_ALL.GroupIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupID' in table 'GROUP_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_ALL.GroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupIDName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_ALL.GroupIDNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupIDName' in table 'GROUP_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_ALL.GroupIDNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_ALL.IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'GROUP_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_ALL.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPARENTIDNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_ALL.PARENTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPARENTIDNull()
            Me(Me.tableGROUP_ALL.PARENTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupIDNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_ALL.GroupIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupIDNull()
            Me(Me.tableGROUP_ALL.GroupIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupIDNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_ALL.GroupIDNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupIDNameNull()
            Me(Me.tableGROUP_ALL.GroupIDNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_ALL.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableGROUP_ALL.IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GROUP_MASTER_ALLRow
        Inherits Global.System.Data.DataRow
        
        Private tableGROUP_MASTER_ALL As GROUP_MASTER_ALLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGROUP_MASTER_ALL = CType(Me.Table,GROUP_MASTER_ALLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGROUP_MASTER_ALL.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupMasterID() As String
            Get
                Return CType(Me(Me.tableGROUP_MASTER_ALL.GroupMasterIDColumn),String)
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.GroupMasterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupMasterName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.GroupMasterNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupMasterName' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.GroupMasterNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientStrasse() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientStrasseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientStrasse' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientStrasseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Ort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientPLZ_OrtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Ort' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientPLZ_OrtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientPLZ_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Nr' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientPLZ_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryResidence() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientCountryResidenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryResidence' in table 'GROUP_MASTER_ALL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientCountryResidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranch' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranchName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientBranchNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranchName' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientBranchNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryRisk() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.ClientCountryRiskColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryRisk' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.ClientCountryRiskColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.SectorKWGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.SectorKWGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.SectorKWG_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG_Description' in table 'GROUP_MASTER_ALL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.SectorKWG_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Sector_CRRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Sector_CRRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Sector_CRR_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR_Description' in table 'GROUP_MASTER_ALL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Sector_CRR_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Sector_BISTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Sector_BISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Sector_BISTA_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA_Description' in table 'GROUP_MASTER_ALL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Sector_BISTA_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Sector_FINREPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Sector_FINREPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Sector_FINREP_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP_Description' in table 'GROUP_MASTER_ALL' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Sector_FINREP_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.BIC11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.BIC11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.BIC11_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11_NAME' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.BIC11_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Int_Organ() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Int_OrganColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int_Organ' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Int_OrganColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tax_Identification_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Tax_Identification_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tax_Identification_Nr' in table 'GROUP_MASTER_ALL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Tax_Identification_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.National_Identifier_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type' in table 'GROUP_MASTER_ALL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.National_Identifier_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Description' in table 'GROUP_MASTE"& _ 
                            "R_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Value' in table 'GROUP_MASTER_ALL'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RIAD_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.RIAD_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIAD_Nr' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.RIAD_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NUTS_3_Region() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.NUTS_3_RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUTS_3_Region' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.NUTS_3_RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Institutional_SectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector' in table 'GROUP_MASTER_ALL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Institutional_SectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Institutional_Sector_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector_Description' in table 'GROUP_MASTER_AL"& _ 
                            "L' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Institutional_Sector_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.NACE_Branch_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.NACE_Branch_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.NACE_Branch_Code_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code_Description' in table 'GROUP_MASTER_ALL' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.NACE_Branch_Code_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Legal_FormColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Legal_FormColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Legal_Form_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Description' in table 'GROUP_MASTER_ALL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Legal_Form_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Other() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.Legal_Form_OtherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Other' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.Legal_Form_OtherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Customer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.AnaCredit_CustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Customer' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.AnaCredit_CustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Valid() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.AnaCredit_ValidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Valid' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.AnaCredit_ValidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupMasterNameShort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.GroupMasterNameShortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupMasterNameShort' in table 'GROUP_MASTER_ALL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.GroupMasterNameShortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.GroupStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupStatus' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.GroupStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EU_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_MASTER_ALL.EU_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EU_COUNTRY' in table 'GROUP_MASTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_MASTER_ALL.EU_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupMasterNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.GroupMasterNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupMasterNameNull()
            Me(Me.tableGROUP_MASTER_ALL.GroupMasterNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientStrasseNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientStrasseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientStrasseNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientStrasseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_OrtNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientPLZ_OrtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_OrtNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientPLZ_OrtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientPLZ_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_NrNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientPLZ_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryResidenceNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientCountryResidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryResidenceNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientCountryResidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientBranchNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNameNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientBranchNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryRiskNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.ClientCountryRiskColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryRiskNull()
            Me(Me.tableGROUP_MASTER_ALL.ClientCountryRiskColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWGNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.SectorKWGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWGNull()
            Me(Me.tableGROUP_MASTER_ALL.SectorKWGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWG_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.SectorKWG_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWG_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.SectorKWG_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRRNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Sector_CRRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRRNull()
            Me(Me.tableGROUP_MASTER_ALL.Sector_CRRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRR_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Sector_CRR_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRR_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.Sector_CRR_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTANull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Sector_BISTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTANull()
            Me(Me.tableGROUP_MASTER_ALL.Sector_BISTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTA_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Sector_BISTA_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTA_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.Sector_BISTA_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREPNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Sector_FINREPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREPNull()
            Me(Me.tableGROUP_MASTER_ALL.Sector_FINREPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREP_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Sector_FINREP_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREP_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.Sector_FINREP_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11Null() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.BIC11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11Null()
            Me(Me.tableGROUP_MASTER_ALL.BIC11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11_NAMENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.BIC11_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11_NAMENull()
            Me(Me.tableGROUP_MASTER_ALL.BIC11_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableGROUP_MASTER_ALL.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInt_OrganNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Int_OrganColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInt_OrganNull()
            Me(Me.tableGROUP_MASTER_ALL.Int_OrganColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTax_Identification_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Tax_Identification_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTax_Identification_NrNull()
            Me(Me.tableGROUP_MASTER_ALL.Tax_Identification_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_TypeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.National_Identifier_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_TypeNull()
            Me(Me.tableGROUP_MASTER_ALL.National_Identifier_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_ValueNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_ValueNull()
            Me(Me.tableGROUP_MASTER_ALL.National_Identifier_Type_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRIAD_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.RIAD_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRIAD_NrNull()
            Me(Me.tableGROUP_MASTER_ALL.RIAD_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNUTS_3_RegionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.NUTS_3_RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNUTS_3_RegionNull()
            Me(Me.tableGROUP_MASTER_ALL.NUTS_3_RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_SectorNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Institutional_SectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_SectorNull()
            Me(Me.tableGROUP_MASTER_ALL.Institutional_SectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_Sector_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Institutional_Sector_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_Sector_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.Institutional_Sector_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.NACE_Branch_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_CodeNull()
            Me(Me.tableGROUP_MASTER_ALL.NACE_Branch_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_Code_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.NACE_Branch_Code_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_Code_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.NACE_Branch_Code_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_FormNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Legal_FormColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_FormNull()
            Me(Me.tableGROUP_MASTER_ALL.Legal_FormColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Legal_Form_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_DescriptionNull()
            Me(Me.tableGROUP_MASTER_ALL.Legal_Form_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_OtherNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.Legal_Form_OtherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_OtherNull()
            Me(Me.tableGROUP_MASTER_ALL.Legal_Form_OtherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_CustomerNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.AnaCredit_CustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_CustomerNull()
            Me(Me.tableGROUP_MASTER_ALL.AnaCredit_CustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_ValidNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.AnaCredit_ValidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_ValidNull()
            Me(Me.tableGROUP_MASTER_ALL.AnaCredit_ValidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupMasterNameShortNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.GroupMasterNameShortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupMasterNameShortNull()
            Me(Me.tableGROUP_MASTER_ALL.GroupMasterNameShortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupStatusNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.GroupStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupStatusNull()
            Me(Me.tableGROUP_MASTER_ALL.GroupStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEU_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_MASTER_ALL.EU_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEU_COUNTRYNull()
            Me(Me.tableGROUP_MASTER_ALL.EU_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GROUP_INTER_ALLRow
        Inherits Global.System.Data.DataRow
        
        Private tableGROUP_INTER_ALL As GROUP_INTER_ALLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGROUP_INTER_ALL = CType(Me.Table,GROUP_INTER_ALLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableGROUP_INTER_ALL.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InterGroupID() As String
            Get
                Return CType(Me(Me.tableGROUP_INTER_ALL.InterGroupIDColumn),String)
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.InterGroupIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InterGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.InterGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InterGroupName' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.InterGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id_Master_Group() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Id_Master_GroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Id_Master_Group' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Id_Master_GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MasterGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.MasterGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MasterGroupName' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.MasterGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientStrasse() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientStrasseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientStrasse' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientStrasseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Ort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientPLZ_OrtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Ort' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientPLZ_OrtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientPLZ_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientPLZ_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientPLZ_Nr' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientPLZ_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryResidence() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientCountryResidenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryResidence' in table 'GROUP_INTER_ALL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientCountryResidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientCountryRisk() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientCountryRiskColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientCountryRisk' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientCountryRiskColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranch' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientBranchName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientBranchNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientBranchName' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientBranchNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.SectorKWGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.SectorKWGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SectorKWG_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.SectorKWG_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectorKWG_Description' in table 'GROUP_INTER_ALL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.SectorKWG_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Sector_CRRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Sector_CRRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_CRR_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Sector_CRR_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_CRR_Description' in table 'GROUP_INTER_ALL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Sector_CRR_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Sector_BISTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Sector_BISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_BISTA_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Sector_BISTA_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_BISTA_Description' in table 'GROUP_INTER_ALL' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Sector_BISTA_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Sector_FINREPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Sector_FINREPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sector_FINREP_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Sector_FINREP_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sector_FINREP_Description' in table 'GROUP_INTER_ALL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Sector_FINREP_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.BIC11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.BIC11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BIC11_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.BIC11_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BIC11_NAME' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.BIC11_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LEI_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.LEI_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEI_CODE' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.LEI_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Int_Organ() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Int_OrganColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int_Organ' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Int_OrganColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tax_Identification_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Tax_Identification_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tax_Identification_Nr' in table 'GROUP_INTER_ALL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Tax_Identification_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.National_Identifier_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type' in table 'GROUP_INTER_ALL' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.National_Identifier_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.National_Identifier_Type_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Description' in table 'GROUP_INTER"& _ 
                            "_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.National_Identifier_Type_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property National_Identifier_Type_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.National_Identifier_Type_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'National_Identifier_Type_Value' in table 'GROUP_INTER_ALL' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.National_Identifier_Type_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RIAD_Nr() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.RIAD_NrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIAD_Nr' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.RIAD_NrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NUTS_3_Region() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.NUTS_3_RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUTS_3_Region' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.NUTS_3_RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Institutional_SectorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector' in table 'GROUP_INTER_ALL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Institutional_SectorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Institutional_Sector_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Institutional_Sector_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institutional_Sector_Description' in table 'GROUP_INTER_ALL"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Institutional_Sector_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.NACE_Branch_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.NACE_Branch_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NACE_Branch_Code_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.NACE_Branch_Code_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NACE_Branch_Code_Description' in table 'GROUP_INTER_ALL' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.NACE_Branch_Code_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Legal_FormColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Legal_FormColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Legal_Form_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Description' in table 'GROUP_INTER_ALL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Legal_Form_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Legal_Form_Other() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.Legal_Form_OtherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Legal_Form_Other' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.Legal_Form_OtherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Customer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.AnaCredit_CustomerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Customer' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.AnaCredit_CustomerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AnaCredit_Valid() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.AnaCredit_ValidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnaCredit_Valid' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.AnaCredit_ValidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientNoM() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.ClientNoMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientNoM' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.ClientNoMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InterGroupNameShort() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.InterGroupNameShortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InterGroupNameShort' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.InterGroupNameShortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GroupStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.GroupStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GroupStatus' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.GroupStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EU_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableGROUP_INTER_ALL.EU_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EU_COUNTRY' in table 'GROUP_INTER_ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGROUP_INTER_ALL.EU_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInterGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.InterGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInterGroupNameNull()
            Me(Me.tableGROUP_INTER_ALL.InterGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsId_Master_GroupNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Id_Master_GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetId_Master_GroupNull()
            Me(Me.tableGROUP_INTER_ALL.Id_Master_GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMasterGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.MasterGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMasterGroupNameNull()
            Me(Me.tableGROUP_INTER_ALL.MasterGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableGROUP_INTER_ALL.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientStrasseNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientStrasseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientStrasseNull()
            Me(Me.tableGROUP_INTER_ALL.ClientStrasseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_OrtNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientPLZ_OrtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_OrtNull()
            Me(Me.tableGROUP_INTER_ALL.ClientPLZ_OrtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientPLZ_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientPLZ_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientPLZ_NrNull()
            Me(Me.tableGROUP_INTER_ALL.ClientPLZ_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryResidenceNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientCountryResidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryResidenceNull()
            Me(Me.tableGROUP_INTER_ALL.ClientCountryResidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientCountryRiskNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientCountryRiskColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientCountryRiskNull()
            Me(Me.tableGROUP_INTER_ALL.ClientCountryRiskColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNull()
            Me(Me.tableGROUP_INTER_ALL.ClientBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientBranchNameNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientBranchNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientBranchNameNull()
            Me(Me.tableGROUP_INTER_ALL.ClientBranchNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWGNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.SectorKWGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWGNull()
            Me(Me.tableGROUP_INTER_ALL.SectorKWGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSectorKWG_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.SectorKWG_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSectorKWG_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.SectorKWG_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRRNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Sector_CRRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRRNull()
            Me(Me.tableGROUP_INTER_ALL.Sector_CRRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_CRR_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Sector_CRR_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_CRR_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.Sector_CRR_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTANull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Sector_BISTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTANull()
            Me(Me.tableGROUP_INTER_ALL.Sector_BISTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_BISTA_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Sector_BISTA_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_BISTA_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.Sector_BISTA_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREPNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Sector_FINREPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREPNull()
            Me(Me.tableGROUP_INTER_ALL.Sector_FINREPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSector_FINREP_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Sector_FINREP_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSector_FINREP_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.Sector_FINREP_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11Null() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.BIC11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11Null()
            Me(Me.tableGROUP_INTER_ALL.BIC11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBIC11_NAMENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.BIC11_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBIC11_NAMENull()
            Me(Me.tableGROUP_INTER_ALL.BIC11_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLEI_CODENull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.LEI_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLEI_CODENull()
            Me(Me.tableGROUP_INTER_ALL.LEI_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInt_OrganNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Int_OrganColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInt_OrganNull()
            Me(Me.tableGROUP_INTER_ALL.Int_OrganColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTax_Identification_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Tax_Identification_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTax_Identification_NrNull()
            Me(Me.tableGROUP_INTER_ALL.Tax_Identification_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_TypeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.National_Identifier_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_TypeNull()
            Me(Me.tableGROUP_INTER_ALL.National_Identifier_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.National_Identifier_Type_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.National_Identifier_Type_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNational_Identifier_Type_ValueNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.National_Identifier_Type_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNational_Identifier_Type_ValueNull()
            Me(Me.tableGROUP_INTER_ALL.National_Identifier_Type_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRIAD_NrNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.RIAD_NrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRIAD_NrNull()
            Me(Me.tableGROUP_INTER_ALL.RIAD_NrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNUTS_3_RegionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.NUTS_3_RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNUTS_3_RegionNull()
            Me(Me.tableGROUP_INTER_ALL.NUTS_3_RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_SectorNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Institutional_SectorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_SectorNull()
            Me(Me.tableGROUP_INTER_ALL.Institutional_SectorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInstitutional_Sector_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Institutional_Sector_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInstitutional_Sector_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.Institutional_Sector_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_CodeNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.NACE_Branch_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_CodeNull()
            Me(Me.tableGROUP_INTER_ALL.NACE_Branch_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNACE_Branch_Code_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.NACE_Branch_Code_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNACE_Branch_Code_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.NACE_Branch_Code_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_FormNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Legal_FormColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_FormNull()
            Me(Me.tableGROUP_INTER_ALL.Legal_FormColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Legal_Form_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_DescriptionNull()
            Me(Me.tableGROUP_INTER_ALL.Legal_Form_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLegal_Form_OtherNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.Legal_Form_OtherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLegal_Form_OtherNull()
            Me(Me.tableGROUP_INTER_ALL.Legal_Form_OtherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_CustomerNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.AnaCredit_CustomerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_CustomerNull()
            Me(Me.tableGROUP_INTER_ALL.AnaCredit_CustomerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAnaCredit_ValidNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.AnaCredit_ValidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAnaCredit_ValidNull()
            Me(Me.tableGROUP_INTER_ALL.AnaCredit_ValidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNoMNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.ClientNoMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNoMNull()
            Me(Me.tableGROUP_INTER_ALL.ClientNoMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInterGroupNameShortNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.InterGroupNameShortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInterGroupNameShortNull()
            Me(Me.tableGROUP_INTER_ALL.InterGroupNameShortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGroupStatusNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.GroupStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGroupStatusNull()
            Me(Me.tableGROUP_INTER_ALL.GroupStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEU_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableGROUP_INTER_ALL.EU_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEU_COUNTRYNull()
            Me(Me.tableGROUP_INTER_ALL.EU_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GROUP_CLIENTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GROUP_CLIENTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GROUP_CLIENTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GROUP_CLIENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GROUP_CLIENT_DETAILSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GROUP_CLIENT_DETAILSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GROUP_CLIENT_DETAILSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GROUP_CLIENT_DETAILSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GROUP_INTERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GROUP_INTERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GROUP_INTERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GROUP_INTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GROUP_MASTERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GROUP_MASTERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GROUP_MASTERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GROUP_MASTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GROUP_ALLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GROUP_ALLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GROUP_ALLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GROUP_ALLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GROUP_MASTER_ALLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GROUP_MASTER_ALLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GROUP_MASTER_ALLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GROUP_MASTER_ALLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class GROUP_INTER_ALLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GROUP_INTER_ALLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As GROUP_INTER_ALLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As GROUP_INTER_ALLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace CustomerGroupsTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GROUP_CLIENTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GROUP_CLIENT"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ClientNr", "ClientNr")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("Id_Inter_Group", "Id_Inter_Group")
            tableMapping.ColumnMappings.Add("Id_Master_Group", "Id_Master_Group")
            tableMapping.ColumnMappings.Add("InterGroupName", "InterGroupName")
            tableMapping.ColumnMappings.Add("MasterGroupName", "MasterGroupName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GROUP_CLIENT] WHERE (([ID] = @Original_ID) AND ([ClientNr] = @"& _ 
                "Original_ClientNr) AND ((@IsNull_ClientName = 1 AND [ClientName] IS NULL) OR ([C"& _ 
                "lientName] = @Original_ClientName)) AND ((@IsNull_Id_Inter_Group = 1 AND [Id_Int"& _ 
                "er_Group] IS NULL) OR ([Id_Inter_Group] = @Original_Id_Inter_Group)) AND ((@IsNu"& _ 
                "ll_Id_Master_Group = 1 AND [Id_Master_Group] IS NULL) OR ([Id_Master_Group] = @O"& _ 
                "riginal_Id_Master_Group)) AND ((@IsNull_InterGroupName = 1 AND [InterGroupName] "& _ 
                "IS NULL) OR ([InterGroupName] = @Original_InterGroupName)) AND ((@IsNull_MasterG"& _ 
                "roupName = 1 AND [MasterGroupName] IS NULL) OR ([MasterGroupName] = @Original_Ma"& _ 
                "sterGroupName)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Inter_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Inter_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Inter_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Inter_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Master_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GROUP_CLIENT] ([ClientNr], [ClientName], [Id_Inter_Group], [Id"& _ 
                "_Master_Group], [InterGroupName], [MasterGroupName]) VALUES (@ClientNr, @ClientN"& _ 
                "ame, @Id_Inter_Group, @Id_Master_Group, @InterGroupName, @MasterGroupName);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT ID, ClientNr, ClientName, Id_Inter_Group, Id_Master_Group, InterGroupName, M"& _ 
                "asterGroupName FROM GROUP_CLIENT WHERE (ClientNr = @ClientNr)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Inter_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Inter_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GROUP_CLIENT] SET [ClientNr] = @ClientNr, [ClientName] = @ClientNam"& _ 
                "e, [Id_Inter_Group] = @Id_Inter_Group, [Id_Master_Group] = @Id_Master_Group, [In"& _ 
                "terGroupName] = @InterGroupName, [MasterGroupName] = @MasterGroupName WHERE (([I"& _ 
                "D] = @Original_ID) AND ([ClientNr] = @Original_ClientNr) AND ((@IsNull_ClientNam"& _ 
                "e = 1 AND [ClientName] IS NULL) OR ([ClientName] = @Original_ClientName)) AND (("& _ 
                "@IsNull_Id_Inter_Group = 1 AND [Id_Inter_Group] IS NULL) OR ([Id_Inter_Group] = "& _ 
                "@Original_Id_Inter_Group)) AND ((@IsNull_Id_Master_Group = 1 AND [Id_Master_Grou"& _ 
                "p] IS NULL) OR ([Id_Master_Group] = @Original_Id_Master_Group)) AND ((@IsNull_In"& _ 
                "terGroupName = 1 AND [InterGroupName] IS NULL) OR ([InterGroupName] = @Original_"& _ 
                "InterGroupName)) AND ((@IsNull_MasterGroupName = 1 AND [MasterGroupName] IS NULL"& _ 
                ") OR ([MasterGroupName] = @Original_MasterGroupName)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, ClientNr, Cl"& _ 
                "ientName, Id_Inter_Group, Id_Master_Group, InterGroupName, MasterGroupName FROM "& _ 
                "GROUP_CLIENT WHERE (ClientNr = @ClientNr)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Inter_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Inter_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Inter_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Inter_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Inter_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Inter_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Master_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, ClientNr, ClientName, Id_Inter_Group, Id_Master_Group, InterGroupName,"& _ 
                " MasterGroupName FROM dbo.GROUP_CLIENT"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As CustomerGroups.GROUP_CLIENTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As CustomerGroups.GROUP_CLIENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CustomerGroups.GROUP_CLIENTDataTable = New CustomerGroups.GROUP_CLIENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As CustomerGroups.GROUP_CLIENTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As CustomerGroups) As Integer
            Return Me.Adapter.Update(dataSet, "GROUP_CLIENT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_ClientNr As String, ByVal Original_ClientName As String, ByVal Original_Id_Inter_Group As String, ByVal Original_Id_Master_Group As String, ByVal Original_InterGroupName As String, ByVal Original_MasterGroupName As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ClientNr")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ClientNr,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ClientName,String)
            End If
            If (Original_Id_Inter_Group Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Id_Inter_Group,String)
            End If
            If (Original_Id_Master_Group Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Id_Master_Group,String)
            End If
            If (Original_InterGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_InterGroupName,String)
            End If
            If (Original_MasterGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_MasterGroupName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ClientNr As String, ByVal ClientName As String, ByVal Id_Inter_Group As String, ByVal Id_Master_Group As String, ByVal InterGroupName As String, ByVal MasterGroupName As String) As Integer
            If (ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ClientNr")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ClientNr,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ClientName,String)
            End If
            If (Id_Inter_Group Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Id_Inter_Group,String)
            End If
            If (Id_Master_Group Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Id_Master_Group,String)
            End If
            If (InterGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(InterGroupName,String)
            End If
            If (MasterGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MasterGroupName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ClientNr As String, ByVal ClientName As String, ByVal Id_Inter_Group As String, ByVal Id_Master_Group As String, ByVal InterGroupName As String, ByVal MasterGroupName As String, ByVal Original_ID As Integer, ByVal Original_ClientNr As String, ByVal Original_ClientName As String, ByVal Original_Id_Inter_Group As String, ByVal Original_Id_Master_Group As String, ByVal Original_InterGroupName As String, ByVal Original_MasterGroupName As String) As Integer
            If (ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ClientNr")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ClientNr,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ClientName,String)
            End If
            If (Id_Inter_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Id_Inter_Group,String)
            End If
            If (Id_Master_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Id_Master_Group,String)
            End If
            If (InterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(InterGroupName,String)
            End If
            If (MasterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(MasterGroupName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID,Integer)
            If (Original_ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ClientNr")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ClientNr,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ClientName,String)
            End If
            If (Original_Id_Inter_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Id_Inter_Group,String)
            End If
            If (Original_Id_Master_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Id_Master_Group,String)
            End If
            If (Original_InterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_InterGroupName,String)
            End If
            If (Original_MasterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_MasterGroupName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ClientName As String, ByVal Id_Inter_Group As String, ByVal Id_Master_Group As String, ByVal InterGroupName As String, ByVal MasterGroupName As String, ByVal Original_ID As Integer, ByVal Original_ClientNr As String, ByVal Original_ClientName As String, ByVal Original_Id_Inter_Group As String, ByVal Original_Id_Master_Group As String, ByVal Original_InterGroupName As String, ByVal Original_MasterGroupName As String) As Integer
            Return Me.Update(Original_ClientNr, ClientName, Id_Inter_Group, Id_Master_Group, InterGroupName, MasterGroupName, Original_ID, Original_ClientNr, Original_ClientName, Original_Id_Inter_Group, Original_Id_Master_Group, Original_InterGroupName, Original_MasterGroupName)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GROUP_CLIENT_DETAILSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GROUP_CLIENT_DETAILS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ClientNr", "ClientNr")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("Group_Type", "Group_Type")
            tableMapping.ColumnMappings.Add("Group_Name", "Group_Name")
            tableMapping.ColumnMappings.Add("Group_ID", "Group_ID")
            tableMapping.ColumnMappings.Add("Id_ClientNr", "Id_ClientNr")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GROUP_CLIENT_DETAILS] WHERE (([ID] = @Original_ID) AND ([Clien"& _ 
                "tNr] = @Original_ClientNr) AND ((@IsNull_ClientName = 1 AND [ClientName] IS NULL"& _ 
                ") OR ([ClientName] = @Original_ClientName)) AND ((@IsNull_Group_Type = 1 AND [Gr"& _ 
                "oup_Type] IS NULL) OR ([Group_Type] = @Original_Group_Type)) AND ((@IsNull_Group"& _ 
                "_Name = 1 AND [Group_Name] IS NULL) OR ([Group_Name] = @Original_Group_Name)) AN"& _ 
                "D ((@IsNull_Group_ID = 1 AND [Group_ID] IS NULL) OR ([Group_ID] = @Original_Grou"& _ 
                "p_ID)) AND ((@IsNull_Id_ClientNr = 1 AND [Id_ClientNr] IS NULL) OR ([Id_ClientNr"& _ 
                "] = @Original_Id_ClientNr)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Group_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Group_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Group_Name", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Group_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Group_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Group_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_ClientNr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_ClientNr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_ClientNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GROUP_CLIENT_DETAILS] ([ClientNr], [ClientName], [Group_Type],"& _ 
                " [Group_Name], [Group_ID], [Id_ClientNr]) VALUES (@ClientNr, @ClientName, @Group"& _ 
                "_Type, @Group_Name, @Group_ID, @Id_ClientNr);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, ClientNr, ClientName, "& _ 
                "Group_Type, Group_Name, Group_ID, Id_ClientNr FROM GROUP_CLIENT_DETAILS WHERE (I"& _ 
                "D = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_ClientNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[GROUP_CLIENT_DETAILS] SET [ClientNr] = @ClientNr, [ClientName] = @C"& _ 
                "lientName, [Group_Type] = @Group_Type, [Group_Name] = @Group_Name, [Group_ID] = "& _ 
                "@Group_ID, [Id_ClientNr] = @Id_ClientNr WHERE (([ID] = @Original_ID) AND ([Clien"& _ 
                "tNr] = @Original_ClientNr) AND ((@IsNull_ClientName = 1 AND [ClientName] IS NULL"& _ 
                ") OR ([ClientName] = @Original_ClientName)) AND ((@IsNull_Group_Type = 1 AND [Gr"& _ 
                "oup_Type] IS NULL) OR ([Group_Type] = @Original_Group_Type)) AND ((@IsNull_Group"& _ 
                "_Name = 1 AND [Group_Name] IS NULL) OR ([Group_Name] = @Original_Group_Name)) AN"& _ 
                "D ((@IsNull_Group_ID = 1 AND [Group_ID] IS NULL) OR ([Group_ID] = @Original_Grou"& _ 
                "p_ID)) AND ((@IsNull_Id_ClientNr = 1 AND [Id_ClientNr] IS NULL) OR ([Id_ClientNr"& _ 
                "] = @Original_Id_ClientNr)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, ClientNr, ClientName, Group_Type, Grou"& _ 
                "p_Name, Group_ID, Id_ClientNr FROM GROUP_CLIENT_DETAILS WHERE (ID = @ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Group_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_ClientNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Group_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Group_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Group_Name", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Group_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Group_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Group_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Group_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_ClientNr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_ClientNr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_ClientNr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_ClientNr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, ClientNr, ClientName, Group_Type, Group_Name, Group_ID, Id_ClientNr FR"& _ 
                "OM dbo.GROUP_CLIENT_DETAILS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ID, ClientNr, ClientName, Group_Type, Group_Name, Group_ID, Id_Clie"& _ 
                "ntNr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GROUP_CLIENT_DETAILS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ClientNr = @Param1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"O"& _ 
                "RDER BY Group_Type DESC"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As CustomerGroups.GROUP_CLIENT_DETAILSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As CustomerGroups.GROUP_CLIENT_DETAILSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CustomerGroups.GROUP_CLIENT_DETAILSDataTable = New CustomerGroups.GROUP_CLIENT_DETAILSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByClientNr(ByVal dataTable As CustomerGroups.GROUP_CLIENT_DETAILSDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByClientNr(ByVal Param1 As String) As CustomerGroups.GROUP_CLIENT_DETAILSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            Dim dataTable As CustomerGroups.GROUP_CLIENT_DETAILSDataTable = New CustomerGroups.GROUP_CLIENT_DETAILSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As CustomerGroups.GROUP_CLIENT_DETAILSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As CustomerGroups) As Integer
            Return Me.Adapter.Update(dataSet, "GROUP_CLIENT_DETAILS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_ClientNr As String, ByVal Original_ClientName As String, ByVal Original_Group_Type As String, ByVal Original_Group_Name As String, ByVal Original_Group_ID As String, ByVal Original_Id_ClientNr As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ClientNr")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ClientNr,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ClientName,String)
            End If
            If (Original_Group_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Group_Type,String)
            End If
            If (Original_Group_Name Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Group_Name,String)
            End If
            If (Original_Group_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Group_ID,String)
            End If
            If (Original_Id_ClientNr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Id_ClientNr,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ClientNr As String, ByVal ClientName As String, ByVal Group_Type As String, ByVal Group_Name As String, ByVal Group_ID As String, ByVal Id_ClientNr As String) As Integer
            If (ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ClientNr")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ClientNr,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ClientName,String)
            End If
            If (Group_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Group_Type,String)
            End If
            If (Group_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Group_Name,String)
            End If
            If (Group_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Group_ID,String)
            End If
            If (Id_ClientNr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Id_ClientNr,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ClientNr As String, ByVal ClientName As String, ByVal Group_Type As String, ByVal Group_Name As String, ByVal Group_ID As String, ByVal Id_ClientNr As String, ByVal Original_ID As Integer, ByVal Original_ClientNr As String, ByVal Original_ClientName As String, ByVal Original_Group_Type As String, ByVal Original_Group_Name As String, ByVal Original_Group_ID As String, ByVal Original_Id_ClientNr As String, ByVal ID As Integer) As Integer
            If (ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ClientNr")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ClientNr,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ClientName,String)
            End If
            If (Group_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Group_Type,String)
            End If
            If (Group_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Group_Name,String)
            End If
            If (Group_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Group_ID,String)
            End If
            If (Id_ClientNr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Id_ClientNr,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ID,Integer)
            If (Original_ClientNr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ClientNr")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_ClientNr,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ClientName,String)
            End If
            If (Original_Group_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Group_Type,String)
            End If
            If (Original_Group_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Group_Name,String)
            End If
            If (Original_Group_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Group_ID,String)
            End If
            If (Original_Id_ClientNr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_Id_ClientNr,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ClientNr As String, ByVal ClientName As String, ByVal Group_Type As String, ByVal Group_Name As String, ByVal Group_ID As String, ByVal Id_ClientNr As String, ByVal Original_ID As Integer, ByVal Original_ClientNr As String, ByVal Original_ClientName As String, ByVal Original_Group_Type As String, ByVal Original_Group_Name As String, ByVal Original_Group_ID As String, ByVal Original_Id_ClientNr As String) As Integer
            Return Me.Update(ClientNr, ClientName, Group_Type, Group_Name, Group_ID, Id_ClientNr, Original_ID, Original_ClientNr, Original_ClientName, Original_Group_Type, Original_Group_Name, Original_Group_ID, Original_Id_ClientNr, Original_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GROUP_INTERTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GROUP_INTER"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("InterGroupID", "InterGroupID")
            tableMapping.ColumnMappings.Add("InterGroupName", "InterGroupName")
            tableMapping.ColumnMappings.Add("Id_Master_Group", "Id_Master_Group")
            tableMapping.ColumnMappings.Add("MasterGroupName", "MasterGroupName")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("ClientStrasse", "ClientStrasse")
            tableMapping.ColumnMappings.Add("ClientPLZ_Ort", "ClientPLZ_Ort")
            tableMapping.ColumnMappings.Add("ClientPLZ_Nr", "ClientPLZ_Nr")
            tableMapping.ColumnMappings.Add("ClientCountryResidence", "ClientCountryResidence")
            tableMapping.ColumnMappings.Add("ClientCountryRisk", "ClientCountryRisk")
            tableMapping.ColumnMappings.Add("ClientBranch", "ClientBranch")
            tableMapping.ColumnMappings.Add("ClientBranchName", "ClientBranchName")
            tableMapping.ColumnMappings.Add("SectorKWG", "SectorKWG")
            tableMapping.ColumnMappings.Add("SectorKWG_Description", "SectorKWG_Description")
            tableMapping.ColumnMappings.Add("Sector_CRR", "Sector_CRR")
            tableMapping.ColumnMappings.Add("Sector_CRR_Description", "Sector_CRR_Description")
            tableMapping.ColumnMappings.Add("Sector_BISTA", "Sector_BISTA")
            tableMapping.ColumnMappings.Add("Sector_BISTA_Description", "Sector_BISTA_Description")
            tableMapping.ColumnMappings.Add("Sector_FINREP", "Sector_FINREP")
            tableMapping.ColumnMappings.Add("Sector_FINREP_Description", "Sector_FINREP_Description")
            tableMapping.ColumnMappings.Add("BIC11", "BIC11")
            tableMapping.ColumnMappings.Add("BIC11_NAME", "BIC11_NAME")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Int_Organ", "Int_Organ")
            tableMapping.ColumnMappings.Add("Tax_Identification_Nr", "Tax_Identification_Nr")
            tableMapping.ColumnMappings.Add("National_Identifier_Type", "National_Identifier_Type")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Description", "National_Identifier_Type_Description")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Value", "National_Identifier_Type_Value")
            tableMapping.ColumnMappings.Add("RIAD_Nr", "RIAD_Nr")
            tableMapping.ColumnMappings.Add("NUTS_3_Region", "NUTS_3_Region")
            tableMapping.ColumnMappings.Add("Institutional_Sector", "Institutional_Sector")
            tableMapping.ColumnMappings.Add("Institutional_Sector_Description", "Institutional_Sector_Description")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code", "NACE_Branch_Code")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code_Description", "NACE_Branch_Code_Description")
            tableMapping.ColumnMappings.Add("Legal_Form", "Legal_Form")
            tableMapping.ColumnMappings.Add("Legal_Form_Description", "Legal_Form_Description")
            tableMapping.ColumnMappings.Add("Legal_Form_Other", "Legal_Form_Other")
            tableMapping.ColumnMappings.Add("AnaCredit_Customer", "AnaCredit_Customer")
            tableMapping.ColumnMappings.Add("AnaCredit_Valid", "AnaCredit_Valid")
            tableMapping.ColumnMappings.Add("ClientNoM", "ClientNoM")
            tableMapping.ColumnMappings.Add("InterGroupNameShort", "InterGroupNameShort")
            tableMapping.ColumnMappings.Add("GroupStatus", "GroupStatus")
            tableMapping.ColumnMappings.Add("EU_COUNTRY", "EU_COUNTRY")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [GROUP_INTER] WHERE (([ID] = @Original_ID) AND ([InterGroupID] = @Ori"& _ 
                "ginal_InterGroupID) AND ((@IsNull_InterGroupName = 1 AND [InterGroupName] IS NUL"& _ 
                "L) OR ([InterGroupName] = @Original_InterGroupName)) AND ((@IsNull_Id_Master_Gro"& _ 
                "up = 1 AND [Id_Master_Group] IS NULL) OR ([Id_Master_Group] = @Original_Id_Maste"& _ 
                "r_Group)) AND ((@IsNull_MasterGroupName = 1 AND [MasterGroupName] IS NULL) OR (["& _ 
                "MasterGroupName] = @Original_MasterGroupName)) AND ((@IsNull_ClientName = 1 AND "& _ 
                "[ClientName] IS NULL) OR ([ClientName] = @Original_ClientName)) AND ((@IsNull_Cl"& _ 
                "ientStrasse = 1 AND [ClientStrasse] IS NULL) OR ([ClientStrasse] = @Original_Cli"& _ 
                "entStrasse)) AND ((@IsNull_ClientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS NULL) OR ([C"& _ 
                "lientPLZ_Ort] = @Original_ClientPLZ_Ort)) AND ((@IsNull_ClientPLZ_Nr = 1 AND [Cl"& _ 
                "ientPLZ_Nr] IS NULL) OR ([ClientPLZ_Nr] = @Original_ClientPLZ_Nr)) AND ((@IsNull"& _ 
                "_ClientCountryResidence = 1 AND [ClientCountryResidence] IS NULL) OR ([ClientCou"& _ 
                "ntryResidence] = @Original_ClientCountryResidence)) AND ((@IsNull_ClientCountryR"& _ 
                "isk = 1 AND [ClientCountryRisk] IS NULL) OR ([ClientCountryRisk] = @Original_Cli"& _ 
                "entCountryRisk)) AND ((@IsNull_ClientBranch = 1 AND [ClientBranch] IS NULL) OR ("& _ 
                "[ClientBranch] = @Original_ClientBranch)) AND ((@IsNull_ClientBranchName = 1 AND"& _ 
                " [ClientBranchName] IS NULL) OR ([ClientBranchName] = @Original_ClientBranchName"& _ 
                ")) AND ((@IsNull_SectorKWG = 1 AND [SectorKWG] IS NULL) OR ([SectorKWG] = @Origi"& _ 
                "nal_SectorKWG)) AND ((@IsNull_SectorKWG_Description = 1 AND [SectorKWG_Descripti"& _ 
                "on] IS NULL) OR ([SectorKWG_Description] = @Original_SectorKWG_Description)) AND"& _ 
                " ((@IsNull_Sector_CRR = 1 AND [Sector_CRR] IS NULL) OR ([Sector_CRR] = @Original"& _ 
                "_Sector_CRR)) AND ((@IsNull_Sector_CRR_Description = 1 AND [Sector_CRR_Descripti"& _ 
                "on] IS NULL) OR ([Sector_CRR_Description] = @Original_Sector_CRR_Description)) A"& _ 
                "ND ((@IsNull_Sector_BISTA = 1 AND [Sector_BISTA] IS NULL) OR ([Sector_BISTA] = @"& _ 
                "Original_Sector_BISTA)) AND ((@IsNull_Sector_BISTA_Description = 1 AND [Sector_B"& _ 
                "ISTA_Description] IS NULL) OR ([Sector_BISTA_Description] = @Original_Sector_BIS"& _ 
                "TA_Description)) AND ((@IsNull_Sector_FINREP = 1 AND [Sector_FINREP] IS NULL) OR"& _ 
                " ([Sector_FINREP] = @Original_Sector_FINREP)) AND ((@IsNull_Sector_FINREP_Descri"& _ 
                "ption = 1 AND [Sector_FINREP_Description] IS NULL) OR ([Sector_FINREP_Descriptio"& _ 
                "n] = @Original_Sector_FINREP_Description)) AND ((@IsNull_BIC11 = 1 AND [BIC11] I"& _ 
                "S NULL) OR ([BIC11] = @Original_BIC11)) AND ((@IsNull_BIC11_NAME = 1 AND [BIC11_"& _ 
                "NAME] IS NULL) OR ([BIC11_NAME] = @Original_BIC11_NAME)) AND ((@IsNull_LEI_CODE "& _ 
                "= 1 AND [LEI_CODE] IS NULL) OR ([LEI_CODE] = @Original_LEI_CODE)) AND ((@IsNull_"& _ 
                "Int_Organ = 1 AND [Int_Organ] IS NULL) OR ([Int_Organ] = @Original_Int_Organ)) A"& _ 
                "ND ((@IsNull_Tax_Identification_Nr = 1 AND [Tax_Identification_Nr] IS NULL) OR ("& _ 
                "[Tax_Identification_Nr] = @Original_Tax_Identification_Nr)) AND ((@IsNull_Nation"& _ 
                "al_Identifier_Type = 1 AND [National_Identifier_Type] IS NULL) OR ([National_Ide"& _ 
                "ntifier_Type] = @Original_National_Identifier_Type)) AND ((@IsNull_National_Iden"& _ 
                "tifier_Type_Description = 1 AND [National_Identifier_Type_Description] IS NULL) "& _ 
                "OR ([National_Identifier_Type_Description] = @Original_National_Identifier_Type_"& _ 
                "Description)) AND ((@IsNull_National_Identifier_Type_Value = 1 AND [National_Ide"& _ 
                "ntifier_Type_Value] IS NULL) OR ([National_Identifier_Type_Value] = @Original_Na"& _ 
                "tional_Identifier_Type_Value)) AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_Nr] IS NULL) "& _ 
                "OR ([RIAD_Nr] = @Original_RIAD_Nr)) AND ((@IsNull_NUTS_3_Region = 1 AND [NUTS_3_"& _ 
                "Region] IS NULL) OR ([NUTS_3_Region] = @Original_NUTS_3_Region)) AND ((@IsNull_I"& _ 
                "nstitutional_Sector = 1 AND [Institutional_Sector] IS NULL) OR ([Institutional_S"& _ 
                "ector] = @Original_Institutional_Sector)) AND ((@IsNull_Institutional_Sector_Des"& _ 
                "cription = 1 AND [Institutional_Sector_Description] IS NULL) OR ([Institutional_"& _ 
                "Sector_Description] = @Original_Institutional_Sector_Description)) AND ((@IsNull"& _ 
                "_NACE_Branch_Code = 1 AND [NACE_Branch_Code] IS NULL) OR ([NACE_Branch_Code] = @"& _ 
                "Original_NACE_Branch_Code)) AND ((@IsNull_NACE_Branch_Code_Description = 1 AND ["& _ 
                "NACE_Branch_Code_Description] IS NULL) OR ([NACE_Branch_Code_Description] = @Ori"& _ 
                "ginal_NACE_Branch_Code_Description)) AND ((@IsNull_Legal_Form = 1 AND [Legal_For"& _ 
                "m] IS NULL) OR ([Legal_Form] = @Original_Legal_Form)) AND ((@IsNull_Legal_Form_D"& _ 
                "escription = 1 AND [Legal_Form_Description] IS NULL) OR ([Legal_Form_Description"& _ 
                "] = @Original_Legal_Form_Description)) AND ((@IsNull_Legal_Form_Other = 1 AND [L"& _ 
                "egal_Form_Other] IS NULL) OR ([Legal_Form_Other] = @Original_Legal_Form_Other)) "& _ 
                "AND ((@IsNull_AnaCredit_Customer = 1 AND [AnaCredit_Customer] IS NULL) OR ([AnaC"& _ 
                "redit_Customer] = @Original_AnaCredit_Customer)) AND ((@IsNull_AnaCredit_Valid ="& _ 
                " 1 AND [AnaCredit_Valid] IS NULL) OR ([AnaCredit_Valid] = @Original_AnaCredit_Va"& _ 
                "lid)) AND ((@IsNull_ClientNoM = 1 AND [ClientNoM] IS NULL) OR ([ClientNoM] = @Or"& _ 
                "iginal_ClientNoM)) AND ((@IsNull_InterGroupNameShort = 1 AND [InterGroupNameShor"& _ 
                "t] IS NULL) OR ([InterGroupNameShort] = @Original_InterGroupNameShort)) AND ((@I"& _ 
                "sNull_GroupStatus = 1 AND [GroupStatus] IS NULL) OR ([GroupStatus] = @Original_G"& _ 
                "roupStatus)) AND ((@IsNull_EU_COUNTRY = 1 AND [EU_COUNTRY] IS NULL) OR ([EU_COUN"& _ 
                "TRY] = @Original_EU_COUNTRY)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Master_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientNoM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GROUP_INTER] ([InterGroupID], [InterGroupName], [Id_Master_Group], ["& _ 
                "MasterGroupName], [ClientName], [ClientStrasse], [ClientPLZ_Ort], [ClientPLZ_Nr]"& _ 
                ", [ClientCountryResidence], [ClientCountryRisk], [ClientBranch], [ClientBranchNa"& _ 
                "me], [SectorKWG], [SectorKWG_Description], [Sector_CRR], [Sector_CRR_Description"& _ 
                "], [Sector_BISTA], [Sector_BISTA_Description], [Sector_FINREP], [Sector_FINREP_D"& _ 
                "escription], [BIC11], [BIC11_NAME], [LEI_CODE], [Int_Organ], [Tax_Identification"& _ 
                "_Nr], [National_Identifier_Type], [National_Identifier_Type_Description], [Natio"& _ 
                "nal_Identifier_Type_Value], [RIAD_Nr], [NUTS_3_Region], [Institutional_Sector], "& _ 
                "[Institutional_Sector_Description], [NACE_Branch_Code], [NACE_Branch_Code_Descri"& _ 
                "ption], [Legal_Form], [Legal_Form_Description], [Legal_Form_Other], [AnaCredit_C"& _ 
                "ustomer], [AnaCredit_Valid], [ClientNoM], [InterGroupNameShort], [GroupStatus], "& _ 
                "[EU_COUNTRY]) VALUES (@InterGroupID, @InterGroupName, @Id_Master_Group, @MasterG"& _ 
                "roupName, @ClientName, @ClientStrasse, @ClientPLZ_Ort, @ClientPLZ_Nr, @ClientCou"& _ 
                "ntryResidence, @ClientCountryRisk, @ClientBranch, @ClientBranchName, @SectorKWG,"& _ 
                " @SectorKWG_Description, @Sector_CRR, @Sector_CRR_Description, @Sector_BISTA, @S"& _ 
                "ector_BISTA_Description, @Sector_FINREP, @Sector_FINREP_Description, @BIC11, @BI"& _ 
                "C11_NAME, @LEI_CODE, @Int_Organ, @Tax_Identification_Nr, @National_Identifier_Ty"& _ 
                "pe, @National_Identifier_Type_Description, @National_Identifier_Type_Value, @RIA"& _ 
                "D_Nr, @NUTS_3_Region, @Institutional_Sector, @Institutional_Sector_Description, "& _ 
                "@NACE_Branch_Code, @NACE_Branch_Code_Description, @Legal_Form, @Legal_Form_Descr"& _ 
                "iption, @Legal_Form_Other, @AnaCredit_Customer, @AnaCredit_Valid, @ClientNoM, @I"& _ 
                "nterGroupNameShort, @GroupStatus, @EU_COUNTRY);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, InterGroupID, InterG"& _ 
                "roupName, Id_Master_Group, MasterGroupName, ClientName, ClientStrasse, ClientPLZ"& _ 
                "_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientCountryRisk, ClientBranch, Cli"& _ 
                "entBranchName, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Descript"& _ 
                "ion, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Descri"& _ 
                "ption, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_I"& _ 
                "dentifier_Type, National_Identifier_Type_Description, National_Identifier_Type_V"& _ 
                "alue, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Descrip"& _ 
                "tion, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Des"& _ 
                "cription, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, Inte"& _ 
                "rGroupNameShort, GroupStatus, EU_COUNTRY FROM GROUP_INTER WHERE (InterGroupID = "& _ 
                "@InterGroupID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [GROUP_INTER] SET [InterGroupID] = @InterGroupID, [InterGroupName] = @Inte"& _ 
                "rGroupName, [Id_Master_Group] = @Id_Master_Group, [MasterGroupName] = @MasterGro"& _ 
                "upName, [ClientName] = @ClientName, [ClientStrasse] = @ClientStrasse, [ClientPLZ"& _ 
                "_Ort] = @ClientPLZ_Ort, [ClientPLZ_Nr] = @ClientPLZ_Nr, [ClientCountryResidence]"& _ 
                " = @ClientCountryResidence, [ClientCountryRisk] = @ClientCountryRisk, [ClientBra"& _ 
                "nch] = @ClientBranch, [ClientBranchName] = @ClientBranchName, [SectorKWG] = @Sec"& _ 
                "torKWG, [SectorKWG_Description] = @SectorKWG_Description, [Sector_CRR] = @Sector"& _ 
                "_CRR, [Sector_CRR_Description] = @Sector_CRR_Description, [Sector_BISTA] = @Sect"& _ 
                "or_BISTA, [Sector_BISTA_Description] = @Sector_BISTA_Description, [Sector_FINREP"& _ 
                "] = @Sector_FINREP, [Sector_FINREP_Description] = @Sector_FINREP_Description, [B"& _ 
                "IC11] = @BIC11, [BIC11_NAME] = @BIC11_NAME, [LEI_CODE] = @LEI_CODE, [Int_Organ] "& _ 
                "= @Int_Organ, [Tax_Identification_Nr] = @Tax_Identification_Nr, [National_Identi"& _ 
                "fier_Type] = @National_Identifier_Type, [National_Identifier_Type_Description] ="& _ 
                " @National_Identifier_Type_Description, [National_Identifier_Type_Value] = @Nati"& _ 
                "onal_Identifier_Type_Value, [RIAD_Nr] = @RIAD_Nr, [NUTS_3_Region] = @NUTS_3_Regi"& _ 
                "on, [Institutional_Sector] = @Institutional_Sector, [Institutional_Sector_Descri"& _ 
                "ption] = @Institutional_Sector_Description, [NACE_Branch_Code] = @NACE_Branch_Co"& _ 
                "de, [NACE_Branch_Code_Description] = @NACE_Branch_Code_Description, [Legal_Form]"& _ 
                " = @Legal_Form, [Legal_Form_Description] = @Legal_Form_Description, [Legal_Form_"& _ 
                "Other] = @Legal_Form_Other, [AnaCredit_Customer] = @AnaCredit_Customer, [AnaCred"& _ 
                "it_Valid] = @AnaCredit_Valid, [ClientNoM] = @ClientNoM, [InterGroupNameShort] = "& _ 
                "@InterGroupNameShort, [GroupStatus] = @GroupStatus, [EU_COUNTRY] = @EU_COUNTRY W"& _ 
                "HERE (([ID] = @Original_ID) AND ([InterGroupID] = @Original_InterGroupID) AND (("& _ 
                "@IsNull_InterGroupName = 1 AND [InterGroupName] IS NULL) OR ([InterGroupName] = "& _ 
                "@Original_InterGroupName)) AND ((@IsNull_Id_Master_Group = 1 AND [Id_Master_Grou"& _ 
                "p] IS NULL) OR ([Id_Master_Group] = @Original_Id_Master_Group)) AND ((@IsNull_Ma"& _ 
                "sterGroupName = 1 AND [MasterGroupName] IS NULL) OR ([MasterGroupName] = @Origin"& _ 
                "al_MasterGroupName)) AND ((@IsNull_ClientName = 1 AND [ClientName] IS NULL) OR ("& _ 
                "[ClientName] = @Original_ClientName)) AND ((@IsNull_ClientStrasse = 1 AND [Clien"& _ 
                "tStrasse] IS NULL) OR ([ClientStrasse] = @Original_ClientStrasse)) AND ((@IsNull"& _ 
                "_ClientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS NULL) OR ([ClientPLZ_Ort] = @Original_"& _ 
                "ClientPLZ_Ort)) AND ((@IsNull_ClientPLZ_Nr = 1 AND [ClientPLZ_Nr] IS NULL) OR (["& _ 
                "ClientPLZ_Nr] = @Original_ClientPLZ_Nr)) AND ((@IsNull_ClientCountryResidence = "& _ 
                "1 AND [ClientCountryResidence] IS NULL) OR ([ClientCountryResidence] = @Original"& _ 
                "_ClientCountryResidence)) AND ((@IsNull_ClientCountryRisk = 1 AND [ClientCountry"& _ 
                "Risk] IS NULL) OR ([ClientCountryRisk] = @Original_ClientCountryRisk)) AND ((@Is"& _ 
                "Null_ClientBranch = 1 AND [ClientBranch] IS NULL) OR ([ClientBranch] = @Original"& _ 
                "_ClientBranch)) AND ((@IsNull_ClientBranchName = 1 AND [ClientBranchName] IS NUL"& _ 
                "L) OR ([ClientBranchName] = @Original_ClientBranchName)) AND ((@IsNull_SectorKWG"& _ 
                " = 1 AND [SectorKWG] IS NULL) OR ([SectorKWG] = @Original_SectorKWG)) AND ((@IsN"& _ 
                "ull_SectorKWG_Description = 1 AND [SectorKWG_Description] IS NULL) OR ([SectorKW"& _ 
                "G_Description] = @Original_SectorKWG_Description)) AND ((@IsNull_Sector_CRR = 1 "& _ 
                "AND [Sector_CRR] IS NULL) OR ([Sector_CRR] = @Original_Sector_CRR)) AND ((@IsNul"& _ 
                "l_Sector_CRR_Description = 1 AND [Sector_CRR_Description] IS NULL) OR ([Sector_C"& _ 
                "RR_Description] = @Original_Sector_CRR_Description)) AND ((@IsNull_Sector_BISTA "& _ 
                "= 1 AND [Sector_BISTA] IS NULL) OR ([Sector_BISTA] = @Original_Sector_BISTA)) AN"& _ 
                "D ((@IsNull_Sector_BISTA_Description = 1 AND [Sector_BISTA_Description] IS NULL)"& _ 
                " OR ([Sector_BISTA_Description] = @Original_Sector_BISTA_Description)) AND ((@Is"& _ 
                "Null_Sector_FINREP = 1 AND [Sector_FINREP] IS NULL) OR ([Sector_FINREP] = @Origi"& _ 
                "nal_Sector_FINREP)) AND ((@IsNull_Sector_FINREP_Description = 1 AND [Sector_FINR"& _ 
                "EP_Description] IS NULL) OR ([Sector_FINREP_Description] = @Original_Sector_FINR"& _ 
                "EP_Description)) AND ((@IsNull_BIC11 = 1 AND [BIC11] IS NULL) OR ([BIC11] = @Ori"& _ 
                "ginal_BIC11)) AND ((@IsNull_BIC11_NAME = 1 AND [BIC11_NAME] IS NULL) OR ([BIC11_"& _ 
                "NAME] = @Original_BIC11_NAME)) AND ((@IsNull_LEI_CODE = 1 AND [LEI_CODE] IS NULL"& _ 
                ") OR ([LEI_CODE] = @Original_LEI_CODE)) AND ((@IsNull_Int_Organ = 1 AND [Int_Org"& _ 
                "an] IS NULL) OR ([Int_Organ] = @Original_Int_Organ)) AND ((@IsNull_Tax_Identific"& _ 
                "ation_Nr = 1 AND [Tax_Identification_Nr] IS NULL) OR ([Tax_Identification_Nr] = "& _ 
                "@Original_Tax_Identification_Nr)) AND ((@IsNull_National_Identifier_Type = 1 AND"& _ 
                " [National_Identifier_Type] IS NULL) OR ([National_Identifier_Type] = @Original_"& _ 
                "National_Identifier_Type)) AND ((@IsNull_National_Identifier_Type_Description = "& _ 
                "1 AND [National_Identifier_Type_Description] IS NULL) OR ([National_Identifier_T"& _ 
                "ype_Description] = @Original_National_Identifier_Type_Description)) AND ((@IsNul"& _ 
                "l_National_Identifier_Type_Value = 1 AND [National_Identifier_Type_Value] IS NUL"& _ 
                "L) OR ([National_Identifier_Type_Value] = @Original_National_Identifier_Type_Val"& _ 
                "ue)) AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_Nr] IS NULL) OR ([RIAD_Nr] = @Original_"& _ 
                "RIAD_Nr)) AND ((@IsNull_NUTS_3_Region = 1 AND [NUTS_3_Region] IS NULL) OR ([NUTS"& _ 
                "_3_Region] = @Original_NUTS_3_Region)) AND ((@IsNull_Institutional_Sector = 1 AN"& _ 
                "D [Institutional_Sector] IS NULL) OR ([Institutional_Sector] = @Original_Institu"& _ 
                "tional_Sector)) AND ((@IsNull_Institutional_Sector_Description = 1 AND [Institut"& _ 
                "ional_Sector_Description] IS NULL) OR ([Institutional_Sector_Description] = @Ori"& _ 
                "ginal_Institutional_Sector_Description)) AND ((@IsNull_NACE_Branch_Code = 1 AND "& _ 
                "[NACE_Branch_Code] IS NULL) OR ([NACE_Branch_Code] = @Original_NACE_Branch_Code)"& _ 
                ") AND ((@IsNull_NACE_Branch_Code_Description = 1 AND [NACE_Branch_Code_Descripti"& _ 
                "on] IS NULL) OR ([NACE_Branch_Code_Description] = @Original_NACE_Branch_Code_Des"& _ 
                "cription)) AND ((@IsNull_Legal_Form = 1 AND [Legal_Form] IS NULL) OR ([Legal_For"& _ 
                "m] = @Original_Legal_Form)) AND ((@IsNull_Legal_Form_Description = 1 AND [Legal_"& _ 
                "Form_Description] IS NULL) OR ([Legal_Form_Description] = @Original_Legal_Form_D"& _ 
                "escription)) AND ((@IsNull_Legal_Form_Other = 1 AND [Legal_Form_Other] IS NULL) "& _ 
                "OR ([Legal_Form_Other] = @Original_Legal_Form_Other)) AND ((@IsNull_AnaCredit_Cu"& _ 
                "stomer = 1 AND [AnaCredit_Customer] IS NULL) OR ([AnaCredit_Customer] = @Origina"& _ 
                "l_AnaCredit_Customer)) AND ((@IsNull_AnaCredit_Valid = 1 AND [AnaCredit_Valid] I"& _ 
                "S NULL) OR ([AnaCredit_Valid] = @Original_AnaCredit_Valid)) AND ((@IsNull_Client"& _ 
                "NoM = 1 AND [ClientNoM] IS NULL) OR ([ClientNoM] = @Original_ClientNoM)) AND ((@"& _ 
                "IsNull_InterGroupNameShort = 1 AND [InterGroupNameShort] IS NULL) OR ([InterGrou"& _ 
                "pNameShort] = @Original_InterGroupNameShort)) AND ((@IsNull_GroupStatus = 1 AND "& _ 
                "[GroupStatus] IS NULL) OR ([GroupStatus] = @Original_GroupStatus)) AND ((@IsNull"& _ 
                "_EU_COUNTRY = 1 AND [EU_COUNTRY] IS NULL) OR ([EU_COUNTRY] = @Original_EU_COUNTR"& _ 
                "Y)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, InterGroupID, InterGroupName, Id_Master_Group, MasterGroupName"& _ 
                ", ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence"& _ 
                ", ClientCountryRisk, ClientBranch, ClientBranchName, SectorKWG, SectorKWG_Descri"& _ 
                "ption, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Descriptio"& _ 
                "n, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Or"& _ 
                "gan, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_D"& _ 
                "escription, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutiona"& _ 
                "l_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_D"& _ 
                "escription, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Cust"& _ 
                "omer, AnaCredit_Valid, ClientNoM, InterGroupNameShort, GroupStatus, EU_COUNTRY F"& _ 
                "ROM GROUP_INTER WHERE (InterGroupID = @InterGroupID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Master_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientNoM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, InterGroupID, InterGroupName, Id_Master_Group, MasterGroupName,"& _ 
                " ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ClientCountryRisk, ClientBranch, ClientBranchName, S"& _ 
                "ectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BIST"& _ 
                "A, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Sector_BISTA_Description, Sector_FINREP, Sector_FI"& _ 
                "NREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr,"& _ 
                " National_Identifier_Type, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         National_Identifier_Type_D"& _ 
                "escription, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutiona"& _ 
                "l_Sector, Institutional_Sector_Description, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NACE_Bran"& _ 
                "ch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal"& _ 
                "_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        InterGroupNameShort, GroupStatus, EU_COUNTRY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GROUP_INTE"& _ 
                "R"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT AnaCredit_Customer, AnaCredit_Valid, BIC11, BIC11_NAME, ClientBranch, Clie"& _ 
                "ntBranchName, ClientCountryResidence, ClientCountryRisk, ClientName, ClientNoM, "& _ 
                "ClientPLZ_Nr, ClientPLZ_Ort, ClientStrasse, EU_COUNTRY, GroupStatus, ID, Id_Mast"& _ 
                "er_Group, Institutional_Sector, Institutional_Sector_Description, Int_Organ, Int"& _ 
                "erGroupID, InterGroupName, InterGroupNameShort, LEI_CODE, Legal_Form, Legal_Form"& _ 
                "_Description, Legal_Form_Other, MasterGroupName, NACE_Branch_Code, NACE_Branch_C"& _ 
                "ode_Description, NUTS_3_Region, National_Identifier_Type, National_Identifier_Ty"& _ 
                "pe_Description, National_Identifier_Type_Value, RIAD_Nr, SectorKWG, SectorKWG_De"& _ 
                "scription, Sector_BISTA, Sector_BISTA_Description, Sector_CRR, Sector_CRR_Descri"& _ 
                "ption, Sector_FINREP, Sector_FINREP_Description, Tax_Identification_Nr FROM GROU"& _ 
                "P_INTER WHERE (InterGroupID = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As CustomerGroups.GROUP_INTERDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As CustomerGroups.GROUP_INTERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CustomerGroups.GROUP_INTERDataTable = New CustomerGroups.GROUP_INTERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGroupID(ByVal dataTable As CustomerGroups.GROUP_INTERDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGroupID(ByVal Param1 As String) As CustomerGroups.GROUP_INTERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            Dim dataTable As CustomerGroups.GROUP_INTERDataTable = New CustomerGroups.GROUP_INTERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As CustomerGroups.GROUP_INTERDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As CustomerGroups) As Integer
            Return Me.Adapter.Update(dataSet, "GROUP_INTER")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_InterGroupID As String,  _
                    ByVal Original_InterGroupName As String,  _
                    ByVal Original_Id_Master_Group As String,  _
                    ByVal Original_MasterGroupName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_ClientNoM As String,  _
                    ByVal Original_InterGroupNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_InterGroupID")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_InterGroupID,String)
            End If
            If (Original_InterGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_InterGroupName,String)
            End If
            If (Original_Id_Master_Group Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Id_Master_Group,String)
            End If
            If (Original_MasterGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_MasterGroupName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_ClientNoM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_ClientNoM,String)
            End If
            If (Original_InterGroupNameShort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_InterGroupNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal InterGroupID As String,  _
                    ByVal InterGroupName As String,  _
                    ByVal Id_Master_Group As String,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As Integer
            If (InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("InterGroupID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(InterGroupID,String)
            End If
            If (InterGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(InterGroupName,String)
            End If
            If (Id_Master_Group Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Id_Master_Group,String)
            End If
            If (MasterGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MasterGroupName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ClientBranchName,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(AnaCredit_Valid,String)
            End If
            If (ClientNoM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ClientNoM,String)
            End If
            If (InterGroupNameShort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(InterGroupNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal InterGroupID As String,  _
                    ByVal InterGroupName As String,  _
                    ByVal Id_Master_Group As String,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_InterGroupID As String,  _
                    ByVal Original_InterGroupName As String,  _
                    ByVal Original_Id_Master_Group As String,  _
                    ByVal Original_MasterGroupName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_ClientNoM As String,  _
                    ByVal Original_InterGroupNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            If (InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("InterGroupID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(InterGroupID,String)
            End If
            If (InterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(InterGroupName,String)
            End If
            If (Id_Master_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Id_Master_Group,String)
            End If
            If (MasterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MasterGroupName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ClientBranchName,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(AnaCredit_Valid,String)
            End If
            If (ClientNoM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ClientNoM,String)
            End If
            If (InterGroupNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(InterGroupNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(EU_COUNTRY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_ID,Integer)
            If (Original_InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_InterGroupID")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_InterGroupID,String)
            End If
            If (Original_InterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_InterGroupName,String)
            End If
            If (Original_Id_Master_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_Id_Master_Group,String)
            End If
            If (Original_MasterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_MasterGroupName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_ClientNoM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_ClientNoM,String)
            End If
            If (Original_InterGroupNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_InterGroupNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal InterGroupName As String,  _
                    ByVal Id_Master_Group As String,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_InterGroupID As String,  _
                    ByVal Original_InterGroupName As String,  _
                    ByVal Original_Id_Master_Group As String,  _
                    ByVal Original_MasterGroupName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_ClientNoM As String,  _
                    ByVal Original_InterGroupNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Return Me.Update(Original_InterGroupID, InterGroupName, Id_Master_Group, MasterGroupName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientCountryRisk, ClientBranch, ClientBranchName, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, InterGroupNameShort, GroupStatus, EU_COUNTRY, Original_ID, Original_InterGroupID, Original_InterGroupName, Original_Id_Master_Group, Original_MasterGroupName, Original_ClientName, Original_ClientStrasse, Original_ClientPLZ_Ort, Original_ClientPLZ_Nr, Original_ClientCountryResidence, Original_ClientCountryRisk, Original_ClientBranch, Original_ClientBranchName, Original_SectorKWG, Original_SectorKWG_Description, Original_Sector_CRR, Original_Sector_CRR_Description, Original_Sector_BISTA, Original_Sector_BISTA_Description, Original_Sector_FINREP, Original_Sector_FINREP_Description, Original_BIC11, Original_BIC11_NAME, Original_LEI_CODE, Original_Int_Organ, Original_Tax_Identification_Nr, Original_National_Identifier_Type, Original_National_Identifier_Type_Description, Original_National_Identifier_Type_Value, Original_RIAD_Nr, Original_NUTS_3_Region, Original_Institutional_Sector, Original_Institutional_Sector_Description, Original_NACE_Branch_Code, Original_NACE_Branch_Code_Description, Original_Legal_Form, Original_Legal_Form_Description, Original_Legal_Form_Other, Original_AnaCredit_Customer, Original_AnaCredit_Valid, Original_ClientNoM, Original_InterGroupNameShort, Original_GroupStatus, Original_EU_COUNTRY)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GROUP_MASTERTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GROUP_MASTER"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("GroupMasterID", "GroupMasterID")
            tableMapping.ColumnMappings.Add("GroupMasterName", "GroupMasterName")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("ClientStrasse", "ClientStrasse")
            tableMapping.ColumnMappings.Add("ClientPLZ_Ort", "ClientPLZ_Ort")
            tableMapping.ColumnMappings.Add("ClientPLZ_Nr", "ClientPLZ_Nr")
            tableMapping.ColumnMappings.Add("ClientCountryResidence", "ClientCountryResidence")
            tableMapping.ColumnMappings.Add("ClientBranch", "ClientBranch")
            tableMapping.ColumnMappings.Add("ClientBranchName", "ClientBranchName")
            tableMapping.ColumnMappings.Add("ClientCountryRisk", "ClientCountryRisk")
            tableMapping.ColumnMappings.Add("SectorKWG", "SectorKWG")
            tableMapping.ColumnMappings.Add("SectorKWG_Description", "SectorKWG_Description")
            tableMapping.ColumnMappings.Add("Sector_CRR", "Sector_CRR")
            tableMapping.ColumnMappings.Add("Sector_CRR_Description", "Sector_CRR_Description")
            tableMapping.ColumnMappings.Add("Sector_BISTA", "Sector_BISTA")
            tableMapping.ColumnMappings.Add("Sector_BISTA_Description", "Sector_BISTA_Description")
            tableMapping.ColumnMappings.Add("Sector_FINREP", "Sector_FINREP")
            tableMapping.ColumnMappings.Add("Sector_FINREP_Description", "Sector_FINREP_Description")
            tableMapping.ColumnMappings.Add("BIC11", "BIC11")
            tableMapping.ColumnMappings.Add("BIC11_NAME", "BIC11_NAME")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Int_Organ", "Int_Organ")
            tableMapping.ColumnMappings.Add("Tax_Identification_Nr", "Tax_Identification_Nr")
            tableMapping.ColumnMappings.Add("National_Identifier_Type", "National_Identifier_Type")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Description", "National_Identifier_Type_Description")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Value", "National_Identifier_Type_Value")
            tableMapping.ColumnMappings.Add("RIAD_Nr", "RIAD_Nr")
            tableMapping.ColumnMappings.Add("NUTS_3_Region", "NUTS_3_Region")
            tableMapping.ColumnMappings.Add("Institutional_Sector", "Institutional_Sector")
            tableMapping.ColumnMappings.Add("Institutional_Sector_Description", "Institutional_Sector_Description")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code", "NACE_Branch_Code")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code_Description", "NACE_Branch_Code_Description")
            tableMapping.ColumnMappings.Add("Legal_Form", "Legal_Form")
            tableMapping.ColumnMappings.Add("Legal_Form_Description", "Legal_Form_Description")
            tableMapping.ColumnMappings.Add("Legal_Form_Other", "Legal_Form_Other")
            tableMapping.ColumnMappings.Add("AnaCredit_Customer", "AnaCredit_Customer")
            tableMapping.ColumnMappings.Add("AnaCredit_Valid", "AnaCredit_Valid")
            tableMapping.ColumnMappings.Add("GroupMasterNameShort", "GroupMasterNameShort")
            tableMapping.ColumnMappings.Add("GroupStatus", "GroupStatus")
            tableMapping.ColumnMappings.Add("EU_COUNTRY", "EU_COUNTRY")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [GROUP_MASTER] WHERE (([ID] = @Original_ID) AND ([GroupMasterID] = @O"& _ 
                "riginal_GroupMasterID) AND ((@IsNull_GroupMasterName = 1 AND [GroupMasterName] I"& _ 
                "S NULL) OR ([GroupMasterName] = @Original_GroupMasterName)) AND ((@IsNull_Client"& _ 
                "Name = 1 AND [ClientName] IS NULL) OR ([ClientName] = @Original_ClientName)) AND"& _ 
                " ((@IsNull_ClientStrasse = 1 AND [ClientStrasse] IS NULL) OR ([ClientStrasse] = "& _ 
                "@Original_ClientStrasse)) AND ((@IsNull_ClientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS"& _ 
                " NULL) OR ([ClientPLZ_Ort] = @Original_ClientPLZ_Ort)) AND ((@IsNull_ClientPLZ_N"& _ 
                "r = 1 AND [ClientPLZ_Nr] IS NULL) OR ([ClientPLZ_Nr] = @Original_ClientPLZ_Nr)) "& _ 
                "AND ((@IsNull_ClientCountryResidence = 1 AND [ClientCountryResidence] IS NULL) O"& _ 
                "R ([ClientCountryResidence] = @Original_ClientCountryResidence)) AND ((@IsNull_C"& _ 
                "lientBranch = 1 AND [ClientBranch] IS NULL) OR ([ClientBranch] = @Original_Clien"& _ 
                "tBranch)) AND ((@IsNull_ClientBranchName = 1 AND [ClientBranchName] IS NULL) OR "& _ 
                "([ClientBranchName] = @Original_ClientBranchName)) AND ((@IsNull_ClientCountryRi"& _ 
                "sk = 1 AND [ClientCountryRisk] IS NULL) OR ([ClientCountryRisk] = @Original_Clie"& _ 
                "ntCountryRisk)) AND ((@IsNull_SectorKWG = 1 AND [SectorKWG] IS NULL) OR ([Sector"& _ 
                "KWG] = @Original_SectorKWG)) AND ((@IsNull_SectorKWG_Description = 1 AND [Sector"& _ 
                "KWG_Description] IS NULL) OR ([SectorKWG_Description] = @Original_SectorKWG_Desc"& _ 
                "ription)) AND ((@IsNull_Sector_CRR = 1 AND [Sector_CRR] IS NULL) OR ([Sector_CRR"& _ 
                "] = @Original_Sector_CRR)) AND ((@IsNull_Sector_CRR_Description = 1 AND [Sector_"& _ 
                "CRR_Description] IS NULL) OR ([Sector_CRR_Description] = @Original_Sector_CRR_De"& _ 
                "scription)) AND ((@IsNull_Sector_BISTA = 1 AND [Sector_BISTA] IS NULL) OR ([Sect"& _ 
                "or_BISTA] = @Original_Sector_BISTA)) AND ((@IsNull_Sector_BISTA_Description = 1 "& _ 
                "AND [Sector_BISTA_Description] IS NULL) OR ([Sector_BISTA_Description] = @Origin"& _ 
                "al_Sector_BISTA_Description)) AND ((@IsNull_Sector_FINREP = 1 AND [Sector_FINREP"& _ 
                "] IS NULL) OR ([Sector_FINREP] = @Original_Sector_FINREP)) AND ((@IsNull_Sector_"& _ 
                "FINREP_Description = 1 AND [Sector_FINREP_Description] IS NULL) OR ([Sector_FINR"& _ 
                "EP_Description] = @Original_Sector_FINREP_Description)) AND ((@IsNull_BIC11 = 1 "& _ 
                "AND [BIC11] IS NULL) OR ([BIC11] = @Original_BIC11)) AND ((@IsNull_BIC11_NAME = "& _ 
                "1 AND [BIC11_NAME] IS NULL) OR ([BIC11_NAME] = @Original_BIC11_NAME)) AND ((@IsN"& _ 
                "ull_LEI_CODE = 1 AND [LEI_CODE] IS NULL) OR ([LEI_CODE] = @Original_LEI_CODE)) A"& _ 
                "ND ((@IsNull_Int_Organ = 1 AND [Int_Organ] IS NULL) OR ([Int_Organ] = @Original_"& _ 
                "Int_Organ)) AND ((@IsNull_Tax_Identification_Nr = 1 AND [Tax_Identification_Nr] "& _ 
                "IS NULL) OR ([Tax_Identification_Nr] = @Original_Tax_Identification_Nr)) AND ((@"& _ 
                "IsNull_National_Identifier_Type = 1 AND [National_Identifier_Type] IS NULL) OR ("& _ 
                "[National_Identifier_Type] = @Original_National_Identifier_Type)) AND ((@IsNull_"& _ 
                "National_Identifier_Type_Description = 1 AND [National_Identifier_Type_Descripti"& _ 
                "on] IS NULL) OR ([National_Identifier_Type_Description] = @Original_National_Ide"& _ 
                "ntifier_Type_Description)) AND ((@IsNull_National_Identifier_Type_Value = 1 AND "& _ 
                "[National_Identifier_Type_Value] IS NULL) OR ([National_Identifier_Type_Value] ="& _ 
                " @Original_National_Identifier_Type_Value)) AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_"& _ 
                "Nr] IS NULL) OR ([RIAD_Nr] = @Original_RIAD_Nr)) AND ((@IsNull_NUTS_3_Region = 1"& _ 
                " AND [NUTS_3_Region] IS NULL) OR ([NUTS_3_Region] = @Original_NUTS_3_Region)) AN"& _ 
                "D ((@IsNull_Institutional_Sector = 1 AND [Institutional_Sector] IS NULL) OR ([In"& _ 
                "stitutional_Sector] = @Original_Institutional_Sector)) AND ((@IsNull_Institution"& _ 
                "al_Sector_Description = 1 AND [Institutional_Sector_Description] IS NULL) OR ([I"& _ 
                "nstitutional_Sector_Description] = @Original_Institutional_Sector_Description)) "& _ 
                "AND ((@IsNull_NACE_Branch_Code = 1 AND [NACE_Branch_Code] IS NULL) OR ([NACE_Bra"& _ 
                "nch_Code] = @Original_NACE_Branch_Code)) AND ((@IsNull_NACE_Branch_Code_Descript"& _ 
                "ion = 1 AND [NACE_Branch_Code_Description] IS NULL) OR ([NACE_Branch_Code_Descri"& _ 
                "ption] = @Original_NACE_Branch_Code_Description)) AND ((@IsNull_Legal_Form = 1 A"& _ 
                "ND [Legal_Form] IS NULL) OR ([Legal_Form] = @Original_Legal_Form)) AND ((@IsNull"& _ 
                "_Legal_Form_Description = 1 AND [Legal_Form_Description] IS NULL) OR ([Legal_For"& _ 
                "m_Description] = @Original_Legal_Form_Description)) AND ((@IsNull_Legal_Form_Oth"& _ 
                "er = 1 AND [Legal_Form_Other] IS NULL) OR ([Legal_Form_Other] = @Original_Legal_"& _ 
                "Form_Other)) AND ((@IsNull_AnaCredit_Customer = 1 AND [AnaCredit_Customer] IS NU"& _ 
                "LL) OR ([AnaCredit_Customer] = @Original_AnaCredit_Customer)) AND ((@IsNull_AnaC"& _ 
                "redit_Valid = 1 AND [AnaCredit_Valid] IS NULL) OR ([AnaCredit_Valid] = @Original"& _ 
                "_AnaCredit_Valid)) AND ((@IsNull_GroupMasterNameShort = 1 AND [GroupMasterNameSh"& _ 
                "ort] IS NULL) OR ([GroupMasterNameShort] = @Original_GroupMasterNameShort)) AND "& _ 
                "((@IsNull_GroupStatus = 1 AND [GroupStatus] IS NULL) OR ([GroupStatus] = @Origin"& _ 
                "al_GroupStatus)) AND ((@IsNull_EU_COUNTRY = 1 AND [EU_COUNTRY] IS NULL) OR ([EU_"& _ 
                "COUNTRY] = @Original_EU_COUNTRY)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GROUP_MASTER] ([GroupMasterID], [GroupMasterName], [ClientName], [Cl"& _ 
                "ientStrasse], [ClientPLZ_Ort], [ClientPLZ_Nr], [ClientCountryResidence], [Client"& _ 
                "Branch], [ClientBranchName], [ClientCountryRisk], [SectorKWG], [SectorKWG_Descri"& _ 
                "ption], [Sector_CRR], [Sector_CRR_Description], [Sector_BISTA], [Sector_BISTA_De"& _ 
                "scription], [Sector_FINREP], [Sector_FINREP_Description], [BIC11], [BIC11_NAME],"& _ 
                " [LEI_CODE], [Int_Organ], [Tax_Identification_Nr], [National_Identifier_Type], ["& _ 
                "National_Identifier_Type_Description], [National_Identifier_Type_Value], [RIAD_N"& _ 
                "r], [NUTS_3_Region], [Institutional_Sector], [Institutional_Sector_Description],"& _ 
                " [NACE_Branch_Code], [NACE_Branch_Code_Description], [Legal_Form], [Legal_Form_D"& _ 
                "escription], [Legal_Form_Other], [AnaCredit_Customer], [AnaCredit_Valid], [Group"& _ 
                "MasterNameShort], [GroupStatus], [EU_COUNTRY]) VALUES (@GroupMasterID, @GroupMas"& _ 
                "terName, @ClientName, @ClientStrasse, @ClientPLZ_Ort, @ClientPLZ_Nr, @ClientCoun"& _ 
                "tryResidence, @ClientBranch, @ClientBranchName, @ClientCountryRisk, @SectorKWG, "& _ 
                "@SectorKWG_Description, @Sector_CRR, @Sector_CRR_Description, @Sector_BISTA, @Se"& _ 
                "ctor_BISTA_Description, @Sector_FINREP, @Sector_FINREP_Description, @BIC11, @BIC"& _ 
                "11_NAME, @LEI_CODE, @Int_Organ, @Tax_Identification_Nr, @National_Identifier_Typ"& _ 
                "e, @National_Identifier_Type_Description, @National_Identifier_Type_Value, @RIAD"& _ 
                "_Nr, @NUTS_3_Region, @Institutional_Sector, @Institutional_Sector_Description, @"& _ 
                "NACE_Branch_Code, @NACE_Branch_Code_Description, @Legal_Form, @Legal_Form_Descri"& _ 
                "ption, @Legal_Form_Other, @AnaCredit_Customer, @AnaCredit_Valid, @GroupMasterNam"& _ 
                "eShort, @GroupStatus, @EU_COUNTRY);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, GroupMasterID, GroupMasterName, "& _ 
                "ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, "& _ 
                "ClientBranch, ClientBranchName, ClientCountryRisk, SectorKWG, SectorKWG_Descript"& _ 
                "ion, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description,"& _ 
                " Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Orga"& _ 
                "n, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Des"& _ 
                "cription, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_"& _ 
                "Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Des"& _ 
                "cription, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Custom"& _ 
                "er, AnaCredit_Valid, GroupMasterNameShort, GroupStatus, EU_COUNTRY FROM GROUP_MA"& _ 
                "STER WHERE (GroupMasterID = @GroupMasterID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [GROUP_MASTER] SET [GroupMasterID] = @GroupMasterID, [GroupMasterName] = @"& _ 
                "GroupMasterName, [ClientName] = @ClientName, [ClientStrasse] = @ClientStrasse, ["& _ 
                "ClientPLZ_Ort] = @ClientPLZ_Ort, [ClientPLZ_Nr] = @ClientPLZ_Nr, [ClientCountryR"& _ 
                "esidence] = @ClientCountryResidence, [ClientBranch] = @ClientBranch, [ClientBran"& _ 
                "chName] = @ClientBranchName, [ClientCountryRisk] = @ClientCountryRisk, [SectorKW"& _ 
                "G] = @SectorKWG, [SectorKWG_Description] = @SectorKWG_Description, [Sector_CRR] "& _ 
                "= @Sector_CRR, [Sector_CRR_Description] = @Sector_CRR_Description, [Sector_BISTA"& _ 
                "] = @Sector_BISTA, [Sector_BISTA_Description] = @Sector_BISTA_Description, [Sect"& _ 
                "or_FINREP] = @Sector_FINREP, [Sector_FINREP_Description] = @Sector_FINREP_Descri"& _ 
                "ption, [BIC11] = @BIC11, [BIC11_NAME] = @BIC11_NAME, [LEI_CODE] = @LEI_CODE, [In"& _ 
                "t_Organ] = @Int_Organ, [Tax_Identification_Nr] = @Tax_Identification_Nr, [Nation"& _ 
                "al_Identifier_Type] = @National_Identifier_Type, [National_Identifier_Type_Descr"& _ 
                "iption] = @National_Identifier_Type_Description, [National_Identifier_Type_Value"& _ 
                "] = @National_Identifier_Type_Value, [RIAD_Nr] = @RIAD_Nr, [NUTS_3_Region] = @NU"& _ 
                "TS_3_Region, [Institutional_Sector] = @Institutional_Sector, [Institutional_Sect"& _ 
                "or_Description] = @Institutional_Sector_Description, [NACE_Branch_Code] = @NACE_"& _ 
                "Branch_Code, [NACE_Branch_Code_Description] = @NACE_Branch_Code_Description, [Le"& _ 
                "gal_Form] = @Legal_Form, [Legal_Form_Description] = @Legal_Form_Description, [Le"& _ 
                "gal_Form_Other] = @Legal_Form_Other, [AnaCredit_Customer] = @AnaCredit_Customer,"& _ 
                " [AnaCredit_Valid] = @AnaCredit_Valid, [GroupMasterNameShort] = @GroupMasterName"& _ 
                "Short, [GroupStatus] = @GroupStatus, [EU_COUNTRY] = @EU_COUNTRY WHERE (([ID] = @"& _ 
                "Original_ID) AND ([GroupMasterID] = @Original_GroupMasterID) AND ((@IsNull_Group"& _ 
                "MasterName = 1 AND [GroupMasterName] IS NULL) OR ([GroupMasterName] = @Original_"& _ 
                "GroupMasterName)) AND ((@IsNull_ClientName = 1 AND [ClientName] IS NULL) OR ([Cl"& _ 
                "ientName] = @Original_ClientName)) AND ((@IsNull_ClientStrasse = 1 AND [ClientSt"& _ 
                "rasse] IS NULL) OR ([ClientStrasse] = @Original_ClientStrasse)) AND ((@IsNull_Cl"& _ 
                "ientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS NULL) OR ([ClientPLZ_Ort] = @Original_Cli"& _ 
                "entPLZ_Ort)) AND ((@IsNull_ClientPLZ_Nr = 1 AND [ClientPLZ_Nr] IS NULL) OR ([Cli"& _ 
                "entPLZ_Nr] = @Original_ClientPLZ_Nr)) AND ((@IsNull_ClientCountryResidence = 1 A"& _ 
                "ND [ClientCountryResidence] IS NULL) OR ([ClientCountryResidence] = @Original_Cl"& _ 
                "ientCountryResidence)) AND ((@IsNull_ClientBranch = 1 AND [ClientBranch] IS NULL"& _ 
                ") OR ([ClientBranch] = @Original_ClientBranch)) AND ((@IsNull_ClientBranchName ="& _ 
                " 1 AND [ClientBranchName] IS NULL) OR ([ClientBranchName] = @Original_ClientBran"& _ 
                "chName)) AND ((@IsNull_ClientCountryRisk = 1 AND [ClientCountryRisk] IS NULL) OR"& _ 
                " ([ClientCountryRisk] = @Original_ClientCountryRisk)) AND ((@IsNull_SectorKWG = "& _ 
                "1 AND [SectorKWG] IS NULL) OR ([SectorKWG] = @Original_SectorKWG)) AND ((@IsNull"& _ 
                "_SectorKWG_Description = 1 AND [SectorKWG_Description] IS NULL) OR ([SectorKWG_D"& _ 
                "escription] = @Original_SectorKWG_Description)) AND ((@IsNull_Sector_CRR = 1 AND"& _ 
                " [Sector_CRR] IS NULL) OR ([Sector_CRR] = @Original_Sector_CRR)) AND ((@IsNull_S"& _ 
                "ector_CRR_Description = 1 AND [Sector_CRR_Description] IS NULL) OR ([Sector_CRR_"& _ 
                "Description] = @Original_Sector_CRR_Description)) AND ((@IsNull_Sector_BISTA = 1"& _ 
                " AND [Sector_BISTA] IS NULL) OR ([Sector_BISTA] = @Original_Sector_BISTA)) AND ("& _ 
                "(@IsNull_Sector_BISTA_Description = 1 AND [Sector_BISTA_Description] IS NULL) OR"& _ 
                " ([Sector_BISTA_Description] = @Original_Sector_BISTA_Description)) AND ((@IsNul"& _ 
                "l_Sector_FINREP = 1 AND [Sector_FINREP] IS NULL) OR ([Sector_FINREP] = @Original"& _ 
                "_Sector_FINREP)) AND ((@IsNull_Sector_FINREP_Description = 1 AND [Sector_FINREP_"& _ 
                "Description] IS NULL) OR ([Sector_FINREP_Description] = @Original_Sector_FINREP_"& _ 
                "Description)) AND ((@IsNull_BIC11 = 1 AND [BIC11] IS NULL) OR ([BIC11] = @Origin"& _ 
                "al_BIC11)) AND ((@IsNull_BIC11_NAME = 1 AND [BIC11_NAME] IS NULL) OR ([BIC11_NAM"& _ 
                "E] = @Original_BIC11_NAME)) AND ((@IsNull_LEI_CODE = 1 AND [LEI_CODE] IS NULL) O"& _ 
                "R ([LEI_CODE] = @Original_LEI_CODE)) AND ((@IsNull_Int_Organ = 1 AND [Int_Organ]"& _ 
                " IS NULL) OR ([Int_Organ] = @Original_Int_Organ)) AND ((@IsNull_Tax_Identificati"& _ 
                "on_Nr = 1 AND [Tax_Identification_Nr] IS NULL) OR ([Tax_Identification_Nr] = @Or"& _ 
                "iginal_Tax_Identification_Nr)) AND ((@IsNull_National_Identifier_Type = 1 AND [N"& _ 
                "ational_Identifier_Type] IS NULL) OR ([National_Identifier_Type] = @Original_Nat"& _ 
                "ional_Identifier_Type)) AND ((@IsNull_National_Identifier_Type_Description = 1 A"& _ 
                "ND [National_Identifier_Type_Description] IS NULL) OR ([National_Identifier_Type"& _ 
                "_Description] = @Original_National_Identifier_Type_Description)) AND ((@IsNull_N"& _ 
                "ational_Identifier_Type_Value = 1 AND [National_Identifier_Type_Value] IS NULL) "& _ 
                "OR ([National_Identifier_Type_Value] = @Original_National_Identifier_Type_Value)"& _ 
                ") AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_Nr] IS NULL) OR ([RIAD_Nr] = @Original_RIA"& _ 
                "D_Nr)) AND ((@IsNull_NUTS_3_Region = 1 AND [NUTS_3_Region] IS NULL) OR ([NUTS_3_"& _ 
                "Region] = @Original_NUTS_3_Region)) AND ((@IsNull_Institutional_Sector = 1 AND ["& _ 
                "Institutional_Sector] IS NULL) OR ([Institutional_Sector] = @Original_Institutio"& _ 
                "nal_Sector)) AND ((@IsNull_Institutional_Sector_Description = 1 AND [Institution"& _ 
                "al_Sector_Description] IS NULL) OR ([Institutional_Sector_Description] = @Origin"& _ 
                "al_Institutional_Sector_Description)) AND ((@IsNull_NACE_Branch_Code = 1 AND [NA"& _ 
                "CE_Branch_Code] IS NULL) OR ([NACE_Branch_Code] = @Original_NACE_Branch_Code)) A"& _ 
                "ND ((@IsNull_NACE_Branch_Code_Description = 1 AND [NACE_Branch_Code_Description]"& _ 
                " IS NULL) OR ([NACE_Branch_Code_Description] = @Original_NACE_Branch_Code_Descri"& _ 
                "ption)) AND ((@IsNull_Legal_Form = 1 AND [Legal_Form] IS NULL) OR ([Legal_Form] "& _ 
                "= @Original_Legal_Form)) AND ((@IsNull_Legal_Form_Description = 1 AND [Legal_For"& _ 
                "m_Description] IS NULL) OR ([Legal_Form_Description] = @Original_Legal_Form_Desc"& _ 
                "ription)) AND ((@IsNull_Legal_Form_Other = 1 AND [Legal_Form_Other] IS NULL) OR "& _ 
                "([Legal_Form_Other] = @Original_Legal_Form_Other)) AND ((@IsNull_AnaCredit_Custo"& _ 
                "mer = 1 AND [AnaCredit_Customer] IS NULL) OR ([AnaCredit_Customer] = @Original_A"& _ 
                "naCredit_Customer)) AND ((@IsNull_AnaCredit_Valid = 1 AND [AnaCredit_Valid] IS N"& _ 
                "ULL) OR ([AnaCredit_Valid] = @Original_AnaCredit_Valid)) AND ((@IsNull_GroupMast"& _ 
                "erNameShort = 1 AND [GroupMasterNameShort] IS NULL) OR ([GroupMasterNameShort] ="& _ 
                " @Original_GroupMasterNameShort)) AND ((@IsNull_GroupStatus = 1 AND [GroupStatus"& _ 
                "] IS NULL) OR ([GroupStatus] = @Original_GroupStatus)) AND ((@IsNull_EU_COUNTRY "& _ 
                "= 1 AND [EU_COUNTRY] IS NULL) OR ([EU_COUNTRY] = @Original_EU_COUNTRY)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T ID, GroupMasterID, GroupMasterName, ClientName, ClientStrasse, ClientPLZ_Ort, "& _ 
                "ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName, ClientCoun"& _ 
                "tryRisk, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, S"& _ 
                "ector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description,"& _ 
                " BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identif"& _ 
                "ier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, "& _ 
                "RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, "& _ 
                "NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Descripti"& _ 
                "on, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, GroupMasterNameShort,"& _ 
                " GroupStatus, EU_COUNTRY FROM GROUP_MASTER WHERE (GroupMasterID = @GroupMasterID"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, GroupMasterID, GroupMasterName, ClientName, ClientStrasse, Clie"& _ 
                "ntPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ClientCountryRisk, SectorKWG, SectorKWG_Description,"& _ 
                " Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sec"& _ 
                "tor_FINREP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Sector_FINREP_Description, BIC11, BIC11_N"& _ 
                "AME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, Natio"& _ 
                "nal_Identifier_Type_Description, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         National_Identifier_"& _ 
                "Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_D"& _ 
                "escription, NACE_Branch_Code, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NACE_Branch_Code_Descri"& _ 
                "ption, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer,"& _ 
                " AnaCredit_Valid, GroupMasterNameShort, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GroupStatus, "& _ 
                "EU_COUNTRY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GROUP_MASTER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT AnaCredit_Customer, AnaCredit_Valid, BIC11, BIC11_NAME, ClientBranch, Clie"& _ 
                "ntBranchName, ClientCountryResidence, ClientCountryRisk, ClientName, ClientPLZ_N"& _ 
                "r, ClientPLZ_Ort, ClientStrasse, EU_COUNTRY, GroupMasterID, GroupMasterName, Gro"& _ 
                "upMasterNameShort, GroupStatus, ID, Institutional_Sector, Institutional_Sector_D"& _ 
                "escription, Int_Organ, LEI_CODE, Legal_Form, Legal_Form_Description, Legal_Form_"& _ 
                "Other, NACE_Branch_Code, NACE_Branch_Code_Description, NUTS_3_Region, National_I"& _ 
                "dentifier_Type, National_Identifier_Type_Description, National_Identifier_Type_V"& _ 
                "alue, RIAD_Nr, SectorKWG, SectorKWG_Description, Sector_BISTA, Sector_BISTA_Desc"& _ 
                "ription, Sector_CRR, Sector_CRR_Description, Sector_FINREP, Sector_FINREP_Descri"& _ 
                "ption, Tax_Identification_Nr FROM GROUP_MASTER WHERE (GroupMasterID = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As CustomerGroups.GROUP_MASTERDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As CustomerGroups.GROUP_MASTERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CustomerGroups.GROUP_MASTERDataTable = New CustomerGroups.GROUP_MASTERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGroupID(ByVal dataTable As CustomerGroups.GROUP_MASTERDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGroupID(ByVal Param1 As String) As CustomerGroups.GROUP_MASTERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            Dim dataTable As CustomerGroups.GROUP_MASTERDataTable = New CustomerGroups.GROUP_MASTERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As CustomerGroups.GROUP_MASTERDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As CustomerGroups) As Integer
            Return Me.Adapter.Update(dataSet, "GROUP_MASTER")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_GroupMasterID As String,  _
                    ByVal Original_GroupMasterName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_GroupMasterNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GroupMasterID")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_GroupMasterID,String)
            End If
            If (Original_GroupMasterName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_GroupMasterName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_GroupMasterNameShort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_GroupMasterNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal GroupMasterID As String,  _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As Integer
            If (GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GroupMasterID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(GroupMasterID,String)
            End If
            If (GroupMasterName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(GroupMasterName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ClientBranchName,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(AnaCredit_Valid,String)
            End If
            If (GroupMasterNameShort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(GroupMasterNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal GroupMasterID As String,  _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_GroupMasterID As String,  _
                    ByVal Original_GroupMasterName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_GroupMasterNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            If (GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GroupMasterID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(GroupMasterID,String)
            End If
            If (GroupMasterName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(GroupMasterName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ClientBranchName,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(AnaCredit_Valid,String)
            End If
            If (GroupMasterNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(GroupMasterNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(EU_COUNTRY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_ID,Integer)
            If (Original_GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GroupMasterID")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_GroupMasterID,String)
            End If
            If (Original_GroupMasterName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_GroupMasterName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_GroupMasterNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_GroupMasterNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_GroupMasterID As String,  _
                    ByVal Original_GroupMasterName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_GroupMasterNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Return Me.Update(Original_GroupMasterID, GroupMasterName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName, ClientCountryRisk, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, GroupMasterNameShort, GroupStatus, EU_COUNTRY, Original_ID, Original_GroupMasterID, Original_GroupMasterName, Original_ClientName, Original_ClientStrasse, Original_ClientPLZ_Ort, Original_ClientPLZ_Nr, Original_ClientCountryResidence, Original_ClientBranch, Original_ClientBranchName, Original_ClientCountryRisk, Original_SectorKWG, Original_SectorKWG_Description, Original_Sector_CRR, Original_Sector_CRR_Description, Original_Sector_BISTA, Original_Sector_BISTA_Description, Original_Sector_FINREP, Original_Sector_FINREP_Description, Original_BIC11, Original_BIC11_NAME, Original_LEI_CODE, Original_Int_Organ, Original_Tax_Identification_Nr, Original_National_Identifier_Type, Original_National_Identifier_Type_Description, Original_National_Identifier_Type_Value, Original_RIAD_Nr, Original_NUTS_3_Region, Original_Institutional_Sector, Original_Institutional_Sector_Description, Original_NACE_Branch_Code, Original_NACE_Branch_Code_Description, Original_Legal_Form, Original_Legal_Form_Description, Original_Legal_Form_Other, Original_AnaCredit_Customer, Original_AnaCredit_Valid, Original_GroupMasterNameShort, Original_GroupStatus, Original_EU_COUNTRY)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GROUP_ALL_TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GROUP_ALL"
            tableMapping.ColumnMappings.Add("PARENTID", "PARENTID")
            tableMapping.ColumnMappings.Add("GroupID", "GroupID")
            tableMapping.ColumnMappings.Add("GroupIDName", "GroupIDName")
            tableMapping.ColumnMappings.Add("ID", "ID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        GroupMasterID AS 'ID', 0 AS 'PARENTID', GroupMasterID AS 'GroupID',"& _ 
                " GroupMasterName AS 'GroupIDName'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GROUP_MASTER AS A"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"UNION ALL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT        A.InterGroupID AS 'ID', B.GroupMasterID AS 'PARENTID', A.InterGro"& _ 
                "upID AS 'GroupID', A.InterGroupName AS 'GroupIDName'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GROUP_INTE"& _ 
                "R AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GROUP_MASTER AS B ON A.Id_Master_Gro"& _ 
                "up = B.GroupMasterID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As CustomerGroups.GROUP_ALLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As CustomerGroups.GROUP_ALLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CustomerGroups.GROUP_ALLDataTable = New CustomerGroups.GROUP_ALLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GROUP_MASTER_ALLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GROUP_MASTER_ALL"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("GroupMasterID", "GroupMasterID")
            tableMapping.ColumnMappings.Add("GroupMasterName", "GroupMasterName")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("ClientStrasse", "ClientStrasse")
            tableMapping.ColumnMappings.Add("ClientPLZ_Ort", "ClientPLZ_Ort")
            tableMapping.ColumnMappings.Add("ClientPLZ_Nr", "ClientPLZ_Nr")
            tableMapping.ColumnMappings.Add("ClientCountryResidence", "ClientCountryResidence")
            tableMapping.ColumnMappings.Add("ClientBranch", "ClientBranch")
            tableMapping.ColumnMappings.Add("ClientBranchName", "ClientBranchName")
            tableMapping.ColumnMappings.Add("ClientCountryRisk", "ClientCountryRisk")
            tableMapping.ColumnMappings.Add("SectorKWG", "SectorKWG")
            tableMapping.ColumnMappings.Add("SectorKWG_Description", "SectorKWG_Description")
            tableMapping.ColumnMappings.Add("Sector_CRR", "Sector_CRR")
            tableMapping.ColumnMappings.Add("Sector_CRR_Description", "Sector_CRR_Description")
            tableMapping.ColumnMappings.Add("Sector_BISTA", "Sector_BISTA")
            tableMapping.ColumnMappings.Add("Sector_BISTA_Description", "Sector_BISTA_Description")
            tableMapping.ColumnMappings.Add("Sector_FINREP", "Sector_FINREP")
            tableMapping.ColumnMappings.Add("Sector_FINREP_Description", "Sector_FINREP_Description")
            tableMapping.ColumnMappings.Add("BIC11", "BIC11")
            tableMapping.ColumnMappings.Add("BIC11_NAME", "BIC11_NAME")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Int_Organ", "Int_Organ")
            tableMapping.ColumnMappings.Add("Tax_Identification_Nr", "Tax_Identification_Nr")
            tableMapping.ColumnMappings.Add("National_Identifier_Type", "National_Identifier_Type")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Description", "National_Identifier_Type_Description")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Value", "National_Identifier_Type_Value")
            tableMapping.ColumnMappings.Add("RIAD_Nr", "RIAD_Nr")
            tableMapping.ColumnMappings.Add("NUTS_3_Region", "NUTS_3_Region")
            tableMapping.ColumnMappings.Add("Institutional_Sector", "Institutional_Sector")
            tableMapping.ColumnMappings.Add("Institutional_Sector_Description", "Institutional_Sector_Description")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code", "NACE_Branch_Code")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code_Description", "NACE_Branch_Code_Description")
            tableMapping.ColumnMappings.Add("Legal_Form", "Legal_Form")
            tableMapping.ColumnMappings.Add("Legal_Form_Description", "Legal_Form_Description")
            tableMapping.ColumnMappings.Add("Legal_Form_Other", "Legal_Form_Other")
            tableMapping.ColumnMappings.Add("AnaCredit_Customer", "AnaCredit_Customer")
            tableMapping.ColumnMappings.Add("AnaCredit_Valid", "AnaCredit_Valid")
            tableMapping.ColumnMappings.Add("GroupMasterNameShort", "GroupMasterNameShort")
            tableMapping.ColumnMappings.Add("GroupStatus", "GroupStatus")
            tableMapping.ColumnMappings.Add("EU_COUNTRY", "EU_COUNTRY")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [GROUP_MASTER] WHERE (([ID] = @Original_ID) AND ([GroupMasterID] = @O"& _ 
                "riginal_GroupMasterID) AND ((@IsNull_GroupMasterName = 1 AND [GroupMasterName] I"& _ 
                "S NULL) OR ([GroupMasterName] = @Original_GroupMasterName)) AND ((@IsNull_Client"& _ 
                "Name = 1 AND [ClientName] IS NULL) OR ([ClientName] = @Original_ClientName)) AND"& _ 
                " ((@IsNull_ClientStrasse = 1 AND [ClientStrasse] IS NULL) OR ([ClientStrasse] = "& _ 
                "@Original_ClientStrasse)) AND ((@IsNull_ClientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS"& _ 
                " NULL) OR ([ClientPLZ_Ort] = @Original_ClientPLZ_Ort)) AND ((@IsNull_ClientPLZ_N"& _ 
                "r = 1 AND [ClientPLZ_Nr] IS NULL) OR ([ClientPLZ_Nr] = @Original_ClientPLZ_Nr)) "& _ 
                "AND ((@IsNull_ClientCountryResidence = 1 AND [ClientCountryResidence] IS NULL) O"& _ 
                "R ([ClientCountryResidence] = @Original_ClientCountryResidence)) AND ((@IsNull_C"& _ 
                "lientBranch = 1 AND [ClientBranch] IS NULL) OR ([ClientBranch] = @Original_Clien"& _ 
                "tBranch)) AND ((@IsNull_ClientBranchName = 1 AND [ClientBranchName] IS NULL) OR "& _ 
                "([ClientBranchName] = @Original_ClientBranchName)) AND ((@IsNull_ClientCountryRi"& _ 
                "sk = 1 AND [ClientCountryRisk] IS NULL) OR ([ClientCountryRisk] = @Original_Clie"& _ 
                "ntCountryRisk)) AND ((@IsNull_SectorKWG = 1 AND [SectorKWG] IS NULL) OR ([Sector"& _ 
                "KWG] = @Original_SectorKWG)) AND ((@IsNull_SectorKWG_Description = 1 AND [Sector"& _ 
                "KWG_Description] IS NULL) OR ([SectorKWG_Description] = @Original_SectorKWG_Desc"& _ 
                "ription)) AND ((@IsNull_Sector_CRR = 1 AND [Sector_CRR] IS NULL) OR ([Sector_CRR"& _ 
                "] = @Original_Sector_CRR)) AND ((@IsNull_Sector_CRR_Description = 1 AND [Sector_"& _ 
                "CRR_Description] IS NULL) OR ([Sector_CRR_Description] = @Original_Sector_CRR_De"& _ 
                "scription)) AND ((@IsNull_Sector_BISTA = 1 AND [Sector_BISTA] IS NULL) OR ([Sect"& _ 
                "or_BISTA] = @Original_Sector_BISTA)) AND ((@IsNull_Sector_BISTA_Description = 1 "& _ 
                "AND [Sector_BISTA_Description] IS NULL) OR ([Sector_BISTA_Description] = @Origin"& _ 
                "al_Sector_BISTA_Description)) AND ((@IsNull_Sector_FINREP = 1 AND [Sector_FINREP"& _ 
                "] IS NULL) OR ([Sector_FINREP] = @Original_Sector_FINREP)) AND ((@IsNull_Sector_"& _ 
                "FINREP_Description = 1 AND [Sector_FINREP_Description] IS NULL) OR ([Sector_FINR"& _ 
                "EP_Description] = @Original_Sector_FINREP_Description)) AND ((@IsNull_BIC11 = 1 "& _ 
                "AND [BIC11] IS NULL) OR ([BIC11] = @Original_BIC11)) AND ((@IsNull_BIC11_NAME = "& _ 
                "1 AND [BIC11_NAME] IS NULL) OR ([BIC11_NAME] = @Original_BIC11_NAME)) AND ((@IsN"& _ 
                "ull_LEI_CODE = 1 AND [LEI_CODE] IS NULL) OR ([LEI_CODE] = @Original_LEI_CODE)) A"& _ 
                "ND ((@IsNull_Int_Organ = 1 AND [Int_Organ] IS NULL) OR ([Int_Organ] = @Original_"& _ 
                "Int_Organ)) AND ((@IsNull_Tax_Identification_Nr = 1 AND [Tax_Identification_Nr] "& _ 
                "IS NULL) OR ([Tax_Identification_Nr] = @Original_Tax_Identification_Nr)) AND ((@"& _ 
                "IsNull_National_Identifier_Type = 1 AND [National_Identifier_Type] IS NULL) OR ("& _ 
                "[National_Identifier_Type] = @Original_National_Identifier_Type)) AND ((@IsNull_"& _ 
                "National_Identifier_Type_Description = 1 AND [National_Identifier_Type_Descripti"& _ 
                "on] IS NULL) OR ([National_Identifier_Type_Description] = @Original_National_Ide"& _ 
                "ntifier_Type_Description)) AND ((@IsNull_National_Identifier_Type_Value = 1 AND "& _ 
                "[National_Identifier_Type_Value] IS NULL) OR ([National_Identifier_Type_Value] ="& _ 
                " @Original_National_Identifier_Type_Value)) AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_"& _ 
                "Nr] IS NULL) OR ([RIAD_Nr] = @Original_RIAD_Nr)) AND ((@IsNull_NUTS_3_Region = 1"& _ 
                " AND [NUTS_3_Region] IS NULL) OR ([NUTS_3_Region] = @Original_NUTS_3_Region)) AN"& _ 
                "D ((@IsNull_Institutional_Sector = 1 AND [Institutional_Sector] IS NULL) OR ([In"& _ 
                "stitutional_Sector] = @Original_Institutional_Sector)) AND ((@IsNull_Institution"& _ 
                "al_Sector_Description = 1 AND [Institutional_Sector_Description] IS NULL) OR ([I"& _ 
                "nstitutional_Sector_Description] = @Original_Institutional_Sector_Description)) "& _ 
                "AND ((@IsNull_NACE_Branch_Code = 1 AND [NACE_Branch_Code] IS NULL) OR ([NACE_Bra"& _ 
                "nch_Code] = @Original_NACE_Branch_Code)) AND ((@IsNull_NACE_Branch_Code_Descript"& _ 
                "ion = 1 AND [NACE_Branch_Code_Description] IS NULL) OR ([NACE_Branch_Code_Descri"& _ 
                "ption] = @Original_NACE_Branch_Code_Description)) AND ((@IsNull_Legal_Form = 1 A"& _ 
                "ND [Legal_Form] IS NULL) OR ([Legal_Form] = @Original_Legal_Form)) AND ((@IsNull"& _ 
                "_Legal_Form_Description = 1 AND [Legal_Form_Description] IS NULL) OR ([Legal_For"& _ 
                "m_Description] = @Original_Legal_Form_Description)) AND ((@IsNull_Legal_Form_Oth"& _ 
                "er = 1 AND [Legal_Form_Other] IS NULL) OR ([Legal_Form_Other] = @Original_Legal_"& _ 
                "Form_Other)) AND ((@IsNull_AnaCredit_Customer = 1 AND [AnaCredit_Customer] IS NU"& _ 
                "LL) OR ([AnaCredit_Customer] = @Original_AnaCredit_Customer)) AND ((@IsNull_AnaC"& _ 
                "redit_Valid = 1 AND [AnaCredit_Valid] IS NULL) OR ([AnaCredit_Valid] = @Original"& _ 
                "_AnaCredit_Valid)) AND ((@IsNull_GroupMasterNameShort = 1 AND [GroupMasterNameSh"& _ 
                "ort] IS NULL) OR ([GroupMasterNameShort] = @Original_GroupMasterNameShort)) AND "& _ 
                "((@IsNull_GroupStatus = 1 AND [GroupStatus] IS NULL) OR ([GroupStatus] = @Origin"& _ 
                "al_GroupStatus)) AND ((@IsNull_EU_COUNTRY = 1 AND [EU_COUNTRY] IS NULL) OR ([EU_"& _ 
                "COUNTRY] = @Original_EU_COUNTRY)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GROUP_MASTER] ([GroupMasterID], [GroupMasterName], [ClientName], [Cl"& _ 
                "ientStrasse], [ClientPLZ_Ort], [ClientPLZ_Nr], [ClientCountryResidence], [Client"& _ 
                "Branch], [ClientBranchName], [ClientCountryRisk], [SectorKWG], [SectorKWG_Descri"& _ 
                "ption], [Sector_CRR], [Sector_CRR_Description], [Sector_BISTA], [Sector_BISTA_De"& _ 
                "scription], [Sector_FINREP], [Sector_FINREP_Description], [BIC11], [BIC11_NAME],"& _ 
                " [LEI_CODE], [Int_Organ], [Tax_Identification_Nr], [National_Identifier_Type], ["& _ 
                "National_Identifier_Type_Description], [National_Identifier_Type_Value], [RIAD_N"& _ 
                "r], [NUTS_3_Region], [Institutional_Sector], [Institutional_Sector_Description],"& _ 
                " [NACE_Branch_Code], [NACE_Branch_Code_Description], [Legal_Form], [Legal_Form_D"& _ 
                "escription], [Legal_Form_Other], [AnaCredit_Customer], [AnaCredit_Valid], [Group"& _ 
                "MasterNameShort], [GroupStatus], [EU_COUNTRY]) VALUES (@GroupMasterID, @GroupMas"& _ 
                "terName, @ClientName, @ClientStrasse, @ClientPLZ_Ort, @ClientPLZ_Nr, @ClientCoun"& _ 
                "tryResidence, @ClientBranch, @ClientBranchName, @ClientCountryRisk, @SectorKWG, "& _ 
                "@SectorKWG_Description, @Sector_CRR, @Sector_CRR_Description, @Sector_BISTA, @Se"& _ 
                "ctor_BISTA_Description, @Sector_FINREP, @Sector_FINREP_Description, @BIC11, @BIC"& _ 
                "11_NAME, @LEI_CODE, @Int_Organ, @Tax_Identification_Nr, @National_Identifier_Typ"& _ 
                "e, @National_Identifier_Type_Description, @National_Identifier_Type_Value, @RIAD"& _ 
                "_Nr, @NUTS_3_Region, @Institutional_Sector, @Institutional_Sector_Description, @"& _ 
                "NACE_Branch_Code, @NACE_Branch_Code_Description, @Legal_Form, @Legal_Form_Descri"& _ 
                "ption, @Legal_Form_Other, @AnaCredit_Customer, @AnaCredit_Valid, @GroupMasterNam"& _ 
                "eShort, @GroupStatus, @EU_COUNTRY);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, GroupMasterID, GroupMasterName, "& _ 
                "ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, "& _ 
                "ClientBranch, ClientBranchName, ClientCountryRisk, SectorKWG, SectorKWG_Descript"& _ 
                "ion, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description,"& _ 
                " Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Orga"& _ 
                "n, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Des"& _ 
                "cription, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_"& _ 
                "Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Des"& _ 
                "cription, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Custom"& _ 
                "er, AnaCredit_Valid, GroupMasterNameShort, GroupStatus, EU_COUNTRY FROM GROUP_MA"& _ 
                "STER WHERE (GroupMasterID = @GroupMasterID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [GROUP_MASTER] SET [GroupMasterID] = @GroupMasterID, [GroupMasterName] = @"& _ 
                "GroupMasterName, [ClientName] = @ClientName, [ClientStrasse] = @ClientStrasse, ["& _ 
                "ClientPLZ_Ort] = @ClientPLZ_Ort, [ClientPLZ_Nr] = @ClientPLZ_Nr, [ClientCountryR"& _ 
                "esidence] = @ClientCountryResidence, [ClientBranch] = @ClientBranch, [ClientBran"& _ 
                "chName] = @ClientBranchName, [ClientCountryRisk] = @ClientCountryRisk, [SectorKW"& _ 
                "G] = @SectorKWG, [SectorKWG_Description] = @SectorKWG_Description, [Sector_CRR] "& _ 
                "= @Sector_CRR, [Sector_CRR_Description] = @Sector_CRR_Description, [Sector_BISTA"& _ 
                "] = @Sector_BISTA, [Sector_BISTA_Description] = @Sector_BISTA_Description, [Sect"& _ 
                "or_FINREP] = @Sector_FINREP, [Sector_FINREP_Description] = @Sector_FINREP_Descri"& _ 
                "ption, [BIC11] = @BIC11, [BIC11_NAME] = @BIC11_NAME, [LEI_CODE] = @LEI_CODE, [In"& _ 
                "t_Organ] = @Int_Organ, [Tax_Identification_Nr] = @Tax_Identification_Nr, [Nation"& _ 
                "al_Identifier_Type] = @National_Identifier_Type, [National_Identifier_Type_Descr"& _ 
                "iption] = @National_Identifier_Type_Description, [National_Identifier_Type_Value"& _ 
                "] = @National_Identifier_Type_Value, [RIAD_Nr] = @RIAD_Nr, [NUTS_3_Region] = @NU"& _ 
                "TS_3_Region, [Institutional_Sector] = @Institutional_Sector, [Institutional_Sect"& _ 
                "or_Description] = @Institutional_Sector_Description, [NACE_Branch_Code] = @NACE_"& _ 
                "Branch_Code, [NACE_Branch_Code_Description] = @NACE_Branch_Code_Description, [Le"& _ 
                "gal_Form] = @Legal_Form, [Legal_Form_Description] = @Legal_Form_Description, [Le"& _ 
                "gal_Form_Other] = @Legal_Form_Other, [AnaCredit_Customer] = @AnaCredit_Customer,"& _ 
                " [AnaCredit_Valid] = @AnaCredit_Valid, [GroupMasterNameShort] = @GroupMasterName"& _ 
                "Short, [GroupStatus] = @GroupStatus, [EU_COUNTRY] = @EU_COUNTRY WHERE (([ID] = @"& _ 
                "Original_ID) AND ([GroupMasterID] = @Original_GroupMasterID) AND ((@IsNull_Group"& _ 
                "MasterName = 1 AND [GroupMasterName] IS NULL) OR ([GroupMasterName] = @Original_"& _ 
                "GroupMasterName)) AND ((@IsNull_ClientName = 1 AND [ClientName] IS NULL) OR ([Cl"& _ 
                "ientName] = @Original_ClientName)) AND ((@IsNull_ClientStrasse = 1 AND [ClientSt"& _ 
                "rasse] IS NULL) OR ([ClientStrasse] = @Original_ClientStrasse)) AND ((@IsNull_Cl"& _ 
                "ientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS NULL) OR ([ClientPLZ_Ort] = @Original_Cli"& _ 
                "entPLZ_Ort)) AND ((@IsNull_ClientPLZ_Nr = 1 AND [ClientPLZ_Nr] IS NULL) OR ([Cli"& _ 
                "entPLZ_Nr] = @Original_ClientPLZ_Nr)) AND ((@IsNull_ClientCountryResidence = 1 A"& _ 
                "ND [ClientCountryResidence] IS NULL) OR ([ClientCountryResidence] = @Original_Cl"& _ 
                "ientCountryResidence)) AND ((@IsNull_ClientBranch = 1 AND [ClientBranch] IS NULL"& _ 
                ") OR ([ClientBranch] = @Original_ClientBranch)) AND ((@IsNull_ClientBranchName ="& _ 
                " 1 AND [ClientBranchName] IS NULL) OR ([ClientBranchName] = @Original_ClientBran"& _ 
                "chName)) AND ((@IsNull_ClientCountryRisk = 1 AND [ClientCountryRisk] IS NULL) OR"& _ 
                " ([ClientCountryRisk] = @Original_ClientCountryRisk)) AND ((@IsNull_SectorKWG = "& _ 
                "1 AND [SectorKWG] IS NULL) OR ([SectorKWG] = @Original_SectorKWG)) AND ((@IsNull"& _ 
                "_SectorKWG_Description = 1 AND [SectorKWG_Description] IS NULL) OR ([SectorKWG_D"& _ 
                "escription] = @Original_SectorKWG_Description)) AND ((@IsNull_Sector_CRR = 1 AND"& _ 
                " [Sector_CRR] IS NULL) OR ([Sector_CRR] = @Original_Sector_CRR)) AND ((@IsNull_S"& _ 
                "ector_CRR_Description = 1 AND [Sector_CRR_Description] IS NULL) OR ([Sector_CRR_"& _ 
                "Description] = @Original_Sector_CRR_Description)) AND ((@IsNull_Sector_BISTA = 1"& _ 
                " AND [Sector_BISTA] IS NULL) OR ([Sector_BISTA] = @Original_Sector_BISTA)) AND ("& _ 
                "(@IsNull_Sector_BISTA_Description = 1 AND [Sector_BISTA_Description] IS NULL) OR"& _ 
                " ([Sector_BISTA_Description] = @Original_Sector_BISTA_Description)) AND ((@IsNul"& _ 
                "l_Sector_FINREP = 1 AND [Sector_FINREP] IS NULL) OR ([Sector_FINREP] = @Original"& _ 
                "_Sector_FINREP)) AND ((@IsNull_Sector_FINREP_Description = 1 AND [Sector_FINREP_"& _ 
                "Description] IS NULL) OR ([Sector_FINREP_Description] = @Original_Sector_FINREP_"& _ 
                "Description)) AND ((@IsNull_BIC11 = 1 AND [BIC11] IS NULL) OR ([BIC11] = @Origin"& _ 
                "al_BIC11)) AND ((@IsNull_BIC11_NAME = 1 AND [BIC11_NAME] IS NULL) OR ([BIC11_NAM"& _ 
                "E] = @Original_BIC11_NAME)) AND ((@IsNull_LEI_CODE = 1 AND [LEI_CODE] IS NULL) O"& _ 
                "R ([LEI_CODE] = @Original_LEI_CODE)) AND ((@IsNull_Int_Organ = 1 AND [Int_Organ]"& _ 
                " IS NULL) OR ([Int_Organ] = @Original_Int_Organ)) AND ((@IsNull_Tax_Identificati"& _ 
                "on_Nr = 1 AND [Tax_Identification_Nr] IS NULL) OR ([Tax_Identification_Nr] = @Or"& _ 
                "iginal_Tax_Identification_Nr)) AND ((@IsNull_National_Identifier_Type = 1 AND [N"& _ 
                "ational_Identifier_Type] IS NULL) OR ([National_Identifier_Type] = @Original_Nat"& _ 
                "ional_Identifier_Type)) AND ((@IsNull_National_Identifier_Type_Description = 1 A"& _ 
                "ND [National_Identifier_Type_Description] IS NULL) OR ([National_Identifier_Type"& _ 
                "_Description] = @Original_National_Identifier_Type_Description)) AND ((@IsNull_N"& _ 
                "ational_Identifier_Type_Value = 1 AND [National_Identifier_Type_Value] IS NULL) "& _ 
                "OR ([National_Identifier_Type_Value] = @Original_National_Identifier_Type_Value)"& _ 
                ") AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_Nr] IS NULL) OR ([RIAD_Nr] = @Original_RIA"& _ 
                "D_Nr)) AND ((@IsNull_NUTS_3_Region = 1 AND [NUTS_3_Region] IS NULL) OR ([NUTS_3_"& _ 
                "Region] = @Original_NUTS_3_Region)) AND ((@IsNull_Institutional_Sector = 1 AND ["& _ 
                "Institutional_Sector] IS NULL) OR ([Institutional_Sector] = @Original_Institutio"& _ 
                "nal_Sector)) AND ((@IsNull_Institutional_Sector_Description = 1 AND [Institution"& _ 
                "al_Sector_Description] IS NULL) OR ([Institutional_Sector_Description] = @Origin"& _ 
                "al_Institutional_Sector_Description)) AND ((@IsNull_NACE_Branch_Code = 1 AND [NA"& _ 
                "CE_Branch_Code] IS NULL) OR ([NACE_Branch_Code] = @Original_NACE_Branch_Code)) A"& _ 
                "ND ((@IsNull_NACE_Branch_Code_Description = 1 AND [NACE_Branch_Code_Description]"& _ 
                " IS NULL) OR ([NACE_Branch_Code_Description] = @Original_NACE_Branch_Code_Descri"& _ 
                "ption)) AND ((@IsNull_Legal_Form = 1 AND [Legal_Form] IS NULL) OR ([Legal_Form] "& _ 
                "= @Original_Legal_Form)) AND ((@IsNull_Legal_Form_Description = 1 AND [Legal_For"& _ 
                "m_Description] IS NULL) OR ([Legal_Form_Description] = @Original_Legal_Form_Desc"& _ 
                "ription)) AND ((@IsNull_Legal_Form_Other = 1 AND [Legal_Form_Other] IS NULL) OR "& _ 
                "([Legal_Form_Other] = @Original_Legal_Form_Other)) AND ((@IsNull_AnaCredit_Custo"& _ 
                "mer = 1 AND [AnaCredit_Customer] IS NULL) OR ([AnaCredit_Customer] = @Original_A"& _ 
                "naCredit_Customer)) AND ((@IsNull_AnaCredit_Valid = 1 AND [AnaCredit_Valid] IS N"& _ 
                "ULL) OR ([AnaCredit_Valid] = @Original_AnaCredit_Valid)) AND ((@IsNull_GroupMast"& _ 
                "erNameShort = 1 AND [GroupMasterNameShort] IS NULL) OR ([GroupMasterNameShort] ="& _ 
                " @Original_GroupMasterNameShort)) AND ((@IsNull_GroupStatus = 1 AND [GroupStatus"& _ 
                "] IS NULL) OR ([GroupStatus] = @Original_GroupStatus)) AND ((@IsNull_EU_COUNTRY "& _ 
                "= 1 AND [EU_COUNTRY] IS NULL) OR ([EU_COUNTRY] = @Original_EU_COUNTRY)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T ID, GroupMasterID, GroupMasterName, ClientName, ClientStrasse, ClientPLZ_Ort, "& _ 
                "ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName, ClientCoun"& _ 
                "tryRisk, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, S"& _ 
                "ector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description,"& _ 
                " BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identif"& _ 
                "ier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, "& _ 
                "RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, "& _ 
                "NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Descripti"& _ 
                "on, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, GroupMasterNameShort,"& _ 
                " GroupStatus, EU_COUNTRY FROM GROUP_MASTER WHERE (GroupMasterID = @GroupMasterID"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupMasterNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupMasterNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, GroupMasterID, GroupMasterName, ClientName, ClientStrasse, Clie"& _ 
                "ntPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ClientCountryRisk, SectorKWG, SectorKWG_Description,"& _ 
                " Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sec"& _ 
                "tor_FINREP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Sector_FINREP_Description, BIC11, BIC11_N"& _ 
                "AME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, Natio"& _ 
                "nal_Identifier_Type_Description, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         National_Identifier_"& _ 
                "Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_D"& _ 
                "escription, NACE_Branch_Code, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NACE_Branch_Code_Descri"& _ 
                "ption, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer,"& _ 
                " AnaCredit_Valid, GroupMasterNameShort, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GroupStatus, "& _ 
                "EU_COUNTRY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GROUP_MASTER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT AnaCredit_Customer, AnaCredit_Valid, BIC11, BIC11_NAME, ClientBranch, Clie"& _ 
                "ntBranchName, ClientCountryResidence, ClientCountryRisk, ClientName, ClientPLZ_N"& _ 
                "r, ClientPLZ_Ort, ClientStrasse, EU_COUNTRY, GroupMasterID, GroupMasterName, Gro"& _ 
                "upMasterNameShort, GroupStatus, ID, Institutional_Sector, Institutional_Sector_D"& _ 
                "escription, Int_Organ, LEI_CODE, Legal_Form, Legal_Form_Description, Legal_Form_"& _ 
                "Other, NACE_Branch_Code, NACE_Branch_Code_Description, NUTS_3_Region, National_I"& _ 
                "dentifier_Type, National_Identifier_Type_Description, National_Identifier_Type_V"& _ 
                "alue, RIAD_Nr, SectorKWG, SectorKWG_Description, Sector_BISTA, Sector_BISTA_Desc"& _ 
                "ription, Sector_CRR, Sector_CRR_Description, Sector_FINREP, Sector_FINREP_Descri"& _ 
                "ption, Tax_Identification_Nr FROM GROUP_MASTER WHERE (GroupMasterID = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupMasterID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As CustomerGroups.GROUP_MASTER_ALLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As CustomerGroups.GROUP_MASTER_ALLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CustomerGroups.GROUP_MASTER_ALLDataTable = New CustomerGroups.GROUP_MASTER_ALLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGroupID(ByVal dataTable As CustomerGroups.GROUP_MASTER_ALLDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGroupID(ByVal Param1 As String) As CustomerGroups.GROUP_MASTER_ALLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            Dim dataTable As CustomerGroups.GROUP_MASTER_ALLDataTable = New CustomerGroups.GROUP_MASTER_ALLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As CustomerGroups.GROUP_MASTER_ALLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As CustomerGroups) As Integer
            Return Me.Adapter.Update(dataSet, "GROUP_MASTER_ALL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_GroupMasterID As String,  _
                    ByVal Original_GroupMasterName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_GroupMasterNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GroupMasterID")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_GroupMasterID,String)
            End If
            If (Original_GroupMasterName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_GroupMasterName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_GroupMasterNameShort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_GroupMasterNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal GroupMasterID As String,  _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As Integer
            If (GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GroupMasterID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(GroupMasterID,String)
            End If
            If (GroupMasterName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(GroupMasterName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ClientBranchName,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(AnaCredit_Valid,String)
            End If
            If (GroupMasterNameShort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(GroupMasterNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal GroupMasterID As String,  _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_GroupMasterID As String,  _
                    ByVal Original_GroupMasterName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_GroupMasterNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            If (GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GroupMasterID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(GroupMasterID,String)
            End If
            If (GroupMasterName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(GroupMasterName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ClientBranchName,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(AnaCredit_Valid,String)
            End If
            If (GroupMasterNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(GroupMasterNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(EU_COUNTRY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_ID,Integer)
            If (Original_GroupMasterID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GroupMasterID")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_GroupMasterID,String)
            End If
            If (Original_GroupMasterName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_GroupMasterName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_GroupMasterNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_GroupMasterNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal GroupMasterName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal GroupMasterNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_GroupMasterID As String,  _
                    ByVal Original_GroupMasterName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_GroupMasterNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Return Me.Update(Original_GroupMasterID, GroupMasterName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientBranch, ClientBranchName, ClientCountryRisk, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, GroupMasterNameShort, GroupStatus, EU_COUNTRY, Original_ID, Original_GroupMasterID, Original_GroupMasterName, Original_ClientName, Original_ClientStrasse, Original_ClientPLZ_Ort, Original_ClientPLZ_Nr, Original_ClientCountryResidence, Original_ClientBranch, Original_ClientBranchName, Original_ClientCountryRisk, Original_SectorKWG, Original_SectorKWG_Description, Original_Sector_CRR, Original_Sector_CRR_Description, Original_Sector_BISTA, Original_Sector_BISTA_Description, Original_Sector_FINREP, Original_Sector_FINREP_Description, Original_BIC11, Original_BIC11_NAME, Original_LEI_CODE, Original_Int_Organ, Original_Tax_Identification_Nr, Original_National_Identifier_Type, Original_National_Identifier_Type_Description, Original_National_Identifier_Type_Value, Original_RIAD_Nr, Original_NUTS_3_Region, Original_Institutional_Sector, Original_Institutional_Sector_Description, Original_NACE_Branch_Code, Original_NACE_Branch_Code_Description, Original_Legal_Form, Original_Legal_Form_Description, Original_Legal_Form_Other, Original_AnaCredit_Customer, Original_AnaCredit_Valid, Original_GroupMasterNameShort, Original_GroupStatus, Original_EU_COUNTRY)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GROUP_INTER_ALLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GROUP_INTER_ALL"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("InterGroupID", "InterGroupID")
            tableMapping.ColumnMappings.Add("InterGroupName", "InterGroupName")
            tableMapping.ColumnMappings.Add("Id_Master_Group", "Id_Master_Group")
            tableMapping.ColumnMappings.Add("MasterGroupName", "MasterGroupName")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("ClientStrasse", "ClientStrasse")
            tableMapping.ColumnMappings.Add("ClientPLZ_Ort", "ClientPLZ_Ort")
            tableMapping.ColumnMappings.Add("ClientPLZ_Nr", "ClientPLZ_Nr")
            tableMapping.ColumnMappings.Add("ClientCountryResidence", "ClientCountryResidence")
            tableMapping.ColumnMappings.Add("ClientCountryRisk", "ClientCountryRisk")
            tableMapping.ColumnMappings.Add("ClientBranch", "ClientBranch")
            tableMapping.ColumnMappings.Add("ClientBranchName", "ClientBranchName")
            tableMapping.ColumnMappings.Add("SectorKWG", "SectorKWG")
            tableMapping.ColumnMappings.Add("SectorKWG_Description", "SectorKWG_Description")
            tableMapping.ColumnMappings.Add("Sector_CRR", "Sector_CRR")
            tableMapping.ColumnMappings.Add("Sector_CRR_Description", "Sector_CRR_Description")
            tableMapping.ColumnMappings.Add("Sector_BISTA", "Sector_BISTA")
            tableMapping.ColumnMappings.Add("Sector_BISTA_Description", "Sector_BISTA_Description")
            tableMapping.ColumnMappings.Add("Sector_FINREP", "Sector_FINREP")
            tableMapping.ColumnMappings.Add("Sector_FINREP_Description", "Sector_FINREP_Description")
            tableMapping.ColumnMappings.Add("BIC11", "BIC11")
            tableMapping.ColumnMappings.Add("BIC11_NAME", "BIC11_NAME")
            tableMapping.ColumnMappings.Add("LEI_CODE", "LEI_CODE")
            tableMapping.ColumnMappings.Add("Int_Organ", "Int_Organ")
            tableMapping.ColumnMappings.Add("Tax_Identification_Nr", "Tax_Identification_Nr")
            tableMapping.ColumnMappings.Add("National_Identifier_Type", "National_Identifier_Type")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Description", "National_Identifier_Type_Description")
            tableMapping.ColumnMappings.Add("National_Identifier_Type_Value", "National_Identifier_Type_Value")
            tableMapping.ColumnMappings.Add("RIAD_Nr", "RIAD_Nr")
            tableMapping.ColumnMappings.Add("NUTS_3_Region", "NUTS_3_Region")
            tableMapping.ColumnMappings.Add("Institutional_Sector", "Institutional_Sector")
            tableMapping.ColumnMappings.Add("Institutional_Sector_Description", "Institutional_Sector_Description")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code", "NACE_Branch_Code")
            tableMapping.ColumnMappings.Add("NACE_Branch_Code_Description", "NACE_Branch_Code_Description")
            tableMapping.ColumnMappings.Add("Legal_Form", "Legal_Form")
            tableMapping.ColumnMappings.Add("Legal_Form_Description", "Legal_Form_Description")
            tableMapping.ColumnMappings.Add("Legal_Form_Other", "Legal_Form_Other")
            tableMapping.ColumnMappings.Add("AnaCredit_Customer", "AnaCredit_Customer")
            tableMapping.ColumnMappings.Add("AnaCredit_Valid", "AnaCredit_Valid")
            tableMapping.ColumnMappings.Add("ClientNoM", "ClientNoM")
            tableMapping.ColumnMappings.Add("InterGroupNameShort", "InterGroupNameShort")
            tableMapping.ColumnMappings.Add("GroupStatus", "GroupStatus")
            tableMapping.ColumnMappings.Add("EU_COUNTRY", "EU_COUNTRY")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [GROUP_INTER] WHERE (([ID] = @Original_ID) AND ([InterGroupID] = @Ori"& _ 
                "ginal_InterGroupID) AND ((@IsNull_InterGroupName = 1 AND [InterGroupName] IS NUL"& _ 
                "L) OR ([InterGroupName] = @Original_InterGroupName)) AND ((@IsNull_Id_Master_Gro"& _ 
                "up = 1 AND [Id_Master_Group] IS NULL) OR ([Id_Master_Group] = @Original_Id_Maste"& _ 
                "r_Group)) AND ((@IsNull_MasterGroupName = 1 AND [MasterGroupName] IS NULL) OR (["& _ 
                "MasterGroupName] = @Original_MasterGroupName)) AND ((@IsNull_ClientName = 1 AND "& _ 
                "[ClientName] IS NULL) OR ([ClientName] = @Original_ClientName)) AND ((@IsNull_Cl"& _ 
                "ientStrasse = 1 AND [ClientStrasse] IS NULL) OR ([ClientStrasse] = @Original_Cli"& _ 
                "entStrasse)) AND ((@IsNull_ClientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS NULL) OR ([C"& _ 
                "lientPLZ_Ort] = @Original_ClientPLZ_Ort)) AND ((@IsNull_ClientPLZ_Nr = 1 AND [Cl"& _ 
                "ientPLZ_Nr] IS NULL) OR ([ClientPLZ_Nr] = @Original_ClientPLZ_Nr)) AND ((@IsNull"& _ 
                "_ClientCountryResidence = 1 AND [ClientCountryResidence] IS NULL) OR ([ClientCou"& _ 
                "ntryResidence] = @Original_ClientCountryResidence)) AND ((@IsNull_ClientCountryR"& _ 
                "isk = 1 AND [ClientCountryRisk] IS NULL) OR ([ClientCountryRisk] = @Original_Cli"& _ 
                "entCountryRisk)) AND ((@IsNull_ClientBranch = 1 AND [ClientBranch] IS NULL) OR ("& _ 
                "[ClientBranch] = @Original_ClientBranch)) AND ((@IsNull_ClientBranchName = 1 AND"& _ 
                " [ClientBranchName] IS NULL) OR ([ClientBranchName] = @Original_ClientBranchName"& _ 
                ")) AND ((@IsNull_SectorKWG = 1 AND [SectorKWG] IS NULL) OR ([SectorKWG] = @Origi"& _ 
                "nal_SectorKWG)) AND ((@IsNull_SectorKWG_Description = 1 AND [SectorKWG_Descripti"& _ 
                "on] IS NULL) OR ([SectorKWG_Description] = @Original_SectorKWG_Description)) AND"& _ 
                " ((@IsNull_Sector_CRR = 1 AND [Sector_CRR] IS NULL) OR ([Sector_CRR] = @Original"& _ 
                "_Sector_CRR)) AND ((@IsNull_Sector_CRR_Description = 1 AND [Sector_CRR_Descripti"& _ 
                "on] IS NULL) OR ([Sector_CRR_Description] = @Original_Sector_CRR_Description)) A"& _ 
                "ND ((@IsNull_Sector_BISTA = 1 AND [Sector_BISTA] IS NULL) OR ([Sector_BISTA] = @"& _ 
                "Original_Sector_BISTA)) AND ((@IsNull_Sector_BISTA_Description = 1 AND [Sector_B"& _ 
                "ISTA_Description] IS NULL) OR ([Sector_BISTA_Description] = @Original_Sector_BIS"& _ 
                "TA_Description)) AND ((@IsNull_Sector_FINREP = 1 AND [Sector_FINREP] IS NULL) OR"& _ 
                " ([Sector_FINREP] = @Original_Sector_FINREP)) AND ((@IsNull_Sector_FINREP_Descri"& _ 
                "ption = 1 AND [Sector_FINREP_Description] IS NULL) OR ([Sector_FINREP_Descriptio"& _ 
                "n] = @Original_Sector_FINREP_Description)) AND ((@IsNull_BIC11 = 1 AND [BIC11] I"& _ 
                "S NULL) OR ([BIC11] = @Original_BIC11)) AND ((@IsNull_BIC11_NAME = 1 AND [BIC11_"& _ 
                "NAME] IS NULL) OR ([BIC11_NAME] = @Original_BIC11_NAME)) AND ((@IsNull_LEI_CODE "& _ 
                "= 1 AND [LEI_CODE] IS NULL) OR ([LEI_CODE] = @Original_LEI_CODE)) AND ((@IsNull_"& _ 
                "Int_Organ = 1 AND [Int_Organ] IS NULL) OR ([Int_Organ] = @Original_Int_Organ)) A"& _ 
                "ND ((@IsNull_Tax_Identification_Nr = 1 AND [Tax_Identification_Nr] IS NULL) OR ("& _ 
                "[Tax_Identification_Nr] = @Original_Tax_Identification_Nr)) AND ((@IsNull_Nation"& _ 
                "al_Identifier_Type = 1 AND [National_Identifier_Type] IS NULL) OR ([National_Ide"& _ 
                "ntifier_Type] = @Original_National_Identifier_Type)) AND ((@IsNull_National_Iden"& _ 
                "tifier_Type_Description = 1 AND [National_Identifier_Type_Description] IS NULL) "& _ 
                "OR ([National_Identifier_Type_Description] = @Original_National_Identifier_Type_"& _ 
                "Description)) AND ((@IsNull_National_Identifier_Type_Value = 1 AND [National_Ide"& _ 
                "ntifier_Type_Value] IS NULL) OR ([National_Identifier_Type_Value] = @Original_Na"& _ 
                "tional_Identifier_Type_Value)) AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_Nr] IS NULL) "& _ 
                "OR ([RIAD_Nr] = @Original_RIAD_Nr)) AND ((@IsNull_NUTS_3_Region = 1 AND [NUTS_3_"& _ 
                "Region] IS NULL) OR ([NUTS_3_Region] = @Original_NUTS_3_Region)) AND ((@IsNull_I"& _ 
                "nstitutional_Sector = 1 AND [Institutional_Sector] IS NULL) OR ([Institutional_S"& _ 
                "ector] = @Original_Institutional_Sector)) AND ((@IsNull_Institutional_Sector_Des"& _ 
                "cription = 1 AND [Institutional_Sector_Description] IS NULL) OR ([Institutional_"& _ 
                "Sector_Description] = @Original_Institutional_Sector_Description)) AND ((@IsNull"& _ 
                "_NACE_Branch_Code = 1 AND [NACE_Branch_Code] IS NULL) OR ([NACE_Branch_Code] = @"& _ 
                "Original_NACE_Branch_Code)) AND ((@IsNull_NACE_Branch_Code_Description = 1 AND ["& _ 
                "NACE_Branch_Code_Description] IS NULL) OR ([NACE_Branch_Code_Description] = @Ori"& _ 
                "ginal_NACE_Branch_Code_Description)) AND ((@IsNull_Legal_Form = 1 AND [Legal_For"& _ 
                "m] IS NULL) OR ([Legal_Form] = @Original_Legal_Form)) AND ((@IsNull_Legal_Form_D"& _ 
                "escription = 1 AND [Legal_Form_Description] IS NULL) OR ([Legal_Form_Description"& _ 
                "] = @Original_Legal_Form_Description)) AND ((@IsNull_Legal_Form_Other = 1 AND [L"& _ 
                "egal_Form_Other] IS NULL) OR ([Legal_Form_Other] = @Original_Legal_Form_Other)) "& _ 
                "AND ((@IsNull_AnaCredit_Customer = 1 AND [AnaCredit_Customer] IS NULL) OR ([AnaC"& _ 
                "redit_Customer] = @Original_AnaCredit_Customer)) AND ((@IsNull_AnaCredit_Valid ="& _ 
                " 1 AND [AnaCredit_Valid] IS NULL) OR ([AnaCredit_Valid] = @Original_AnaCredit_Va"& _ 
                "lid)) AND ((@IsNull_ClientNoM = 1 AND [ClientNoM] IS NULL) OR ([ClientNoM] = @Or"& _ 
                "iginal_ClientNoM)) AND ((@IsNull_InterGroupNameShort = 1 AND [InterGroupNameShor"& _ 
                "t] IS NULL) OR ([InterGroupNameShort] = @Original_InterGroupNameShort)) AND ((@I"& _ 
                "sNull_GroupStatus = 1 AND [GroupStatus] IS NULL) OR ([GroupStatus] = @Original_G"& _ 
                "roupStatus)) AND ((@IsNull_EU_COUNTRY = 1 AND [EU_COUNTRY] IS NULL) OR ([EU_COUN"& _ 
                "TRY] = @Original_EU_COUNTRY)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Master_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientNoM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GROUP_INTER] ([InterGroupID], [InterGroupName], [Id_Master_Group], ["& _ 
                "MasterGroupName], [ClientName], [ClientStrasse], [ClientPLZ_Ort], [ClientPLZ_Nr]"& _ 
                ", [ClientCountryResidence], [ClientCountryRisk], [ClientBranch], [ClientBranchNa"& _ 
                "me], [SectorKWG], [SectorKWG_Description], [Sector_CRR], [Sector_CRR_Description"& _ 
                "], [Sector_BISTA], [Sector_BISTA_Description], [Sector_FINREP], [Sector_FINREP_D"& _ 
                "escription], [BIC11], [BIC11_NAME], [LEI_CODE], [Int_Organ], [Tax_Identification"& _ 
                "_Nr], [National_Identifier_Type], [National_Identifier_Type_Description], [Natio"& _ 
                "nal_Identifier_Type_Value], [RIAD_Nr], [NUTS_3_Region], [Institutional_Sector], "& _ 
                "[Institutional_Sector_Description], [NACE_Branch_Code], [NACE_Branch_Code_Descri"& _ 
                "ption], [Legal_Form], [Legal_Form_Description], [Legal_Form_Other], [AnaCredit_C"& _ 
                "ustomer], [AnaCredit_Valid], [ClientNoM], [InterGroupNameShort], [GroupStatus], "& _ 
                "[EU_COUNTRY]) VALUES (@InterGroupID, @InterGroupName, @Id_Master_Group, @MasterG"& _ 
                "roupName, @ClientName, @ClientStrasse, @ClientPLZ_Ort, @ClientPLZ_Nr, @ClientCou"& _ 
                "ntryResidence, @ClientCountryRisk, @ClientBranch, @ClientBranchName, @SectorKWG,"& _ 
                " @SectorKWG_Description, @Sector_CRR, @Sector_CRR_Description, @Sector_BISTA, @S"& _ 
                "ector_BISTA_Description, @Sector_FINREP, @Sector_FINREP_Description, @BIC11, @BI"& _ 
                "C11_NAME, @LEI_CODE, @Int_Organ, @Tax_Identification_Nr, @National_Identifier_Ty"& _ 
                "pe, @National_Identifier_Type_Description, @National_Identifier_Type_Value, @RIA"& _ 
                "D_Nr, @NUTS_3_Region, @Institutional_Sector, @Institutional_Sector_Description, "& _ 
                "@NACE_Branch_Code, @NACE_Branch_Code_Description, @Legal_Form, @Legal_Form_Descr"& _ 
                "iption, @Legal_Form_Other, @AnaCredit_Customer, @AnaCredit_Valid, @ClientNoM, @I"& _ 
                "nterGroupNameShort, @GroupStatus, @EU_COUNTRY);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, InterGroupID, InterG"& _ 
                "roupName, Id_Master_Group, MasterGroupName, ClientName, ClientStrasse, ClientPLZ"& _ 
                "_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientCountryRisk, ClientBranch, Cli"& _ 
                "entBranchName, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Descript"& _ 
                "ion, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Descri"& _ 
                "ption, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_I"& _ 
                "dentifier_Type, National_Identifier_Type_Description, National_Identifier_Type_V"& _ 
                "alue, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Descrip"& _ 
                "tion, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Des"& _ 
                "cription, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, Inte"& _ 
                "rGroupNameShort, GroupStatus, EU_COUNTRY FROM GROUP_INTER WHERE (InterGroupID = "& _ 
                "@InterGroupID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [GROUP_INTER] SET [InterGroupID] = @InterGroupID, [InterGroupName] = @Inte"& _ 
                "rGroupName, [Id_Master_Group] = @Id_Master_Group, [MasterGroupName] = @MasterGro"& _ 
                "upName, [ClientName] = @ClientName, [ClientStrasse] = @ClientStrasse, [ClientPLZ"& _ 
                "_Ort] = @ClientPLZ_Ort, [ClientPLZ_Nr] = @ClientPLZ_Nr, [ClientCountryResidence]"& _ 
                " = @ClientCountryResidence, [ClientCountryRisk] = @ClientCountryRisk, [ClientBra"& _ 
                "nch] = @ClientBranch, [ClientBranchName] = @ClientBranchName, [SectorKWG] = @Sec"& _ 
                "torKWG, [SectorKWG_Description] = @SectorKWG_Description, [Sector_CRR] = @Sector"& _ 
                "_CRR, [Sector_CRR_Description] = @Sector_CRR_Description, [Sector_BISTA] = @Sect"& _ 
                "or_BISTA, [Sector_BISTA_Description] = @Sector_BISTA_Description, [Sector_FINREP"& _ 
                "] = @Sector_FINREP, [Sector_FINREP_Description] = @Sector_FINREP_Description, [B"& _ 
                "IC11] = @BIC11, [BIC11_NAME] = @BIC11_NAME, [LEI_CODE] = @LEI_CODE, [Int_Organ] "& _ 
                "= @Int_Organ, [Tax_Identification_Nr] = @Tax_Identification_Nr, [National_Identi"& _ 
                "fier_Type] = @National_Identifier_Type, [National_Identifier_Type_Description] ="& _ 
                " @National_Identifier_Type_Description, [National_Identifier_Type_Value] = @Nati"& _ 
                "onal_Identifier_Type_Value, [RIAD_Nr] = @RIAD_Nr, [NUTS_3_Region] = @NUTS_3_Regi"& _ 
                "on, [Institutional_Sector] = @Institutional_Sector, [Institutional_Sector_Descri"& _ 
                "ption] = @Institutional_Sector_Description, [NACE_Branch_Code] = @NACE_Branch_Co"& _ 
                "de, [NACE_Branch_Code_Description] = @NACE_Branch_Code_Description, [Legal_Form]"& _ 
                " = @Legal_Form, [Legal_Form_Description] = @Legal_Form_Description, [Legal_Form_"& _ 
                "Other] = @Legal_Form_Other, [AnaCredit_Customer] = @AnaCredit_Customer, [AnaCred"& _ 
                "it_Valid] = @AnaCredit_Valid, [ClientNoM] = @ClientNoM, [InterGroupNameShort] = "& _ 
                "@InterGroupNameShort, [GroupStatus] = @GroupStatus, [EU_COUNTRY] = @EU_COUNTRY W"& _ 
                "HERE (([ID] = @Original_ID) AND ([InterGroupID] = @Original_InterGroupID) AND (("& _ 
                "@IsNull_InterGroupName = 1 AND [InterGroupName] IS NULL) OR ([InterGroupName] = "& _ 
                "@Original_InterGroupName)) AND ((@IsNull_Id_Master_Group = 1 AND [Id_Master_Grou"& _ 
                "p] IS NULL) OR ([Id_Master_Group] = @Original_Id_Master_Group)) AND ((@IsNull_Ma"& _ 
                "sterGroupName = 1 AND [MasterGroupName] IS NULL) OR ([MasterGroupName] = @Origin"& _ 
                "al_MasterGroupName)) AND ((@IsNull_ClientName = 1 AND [ClientName] IS NULL) OR ("& _ 
                "[ClientName] = @Original_ClientName)) AND ((@IsNull_ClientStrasse = 1 AND [Clien"& _ 
                "tStrasse] IS NULL) OR ([ClientStrasse] = @Original_ClientStrasse)) AND ((@IsNull"& _ 
                "_ClientPLZ_Ort = 1 AND [ClientPLZ_Ort] IS NULL) OR ([ClientPLZ_Ort] = @Original_"& _ 
                "ClientPLZ_Ort)) AND ((@IsNull_ClientPLZ_Nr = 1 AND [ClientPLZ_Nr] IS NULL) OR (["& _ 
                "ClientPLZ_Nr] = @Original_ClientPLZ_Nr)) AND ((@IsNull_ClientCountryResidence = "& _ 
                "1 AND [ClientCountryResidence] IS NULL) OR ([ClientCountryResidence] = @Original"& _ 
                "_ClientCountryResidence)) AND ((@IsNull_ClientCountryRisk = 1 AND [ClientCountry"& _ 
                "Risk] IS NULL) OR ([ClientCountryRisk] = @Original_ClientCountryRisk)) AND ((@Is"& _ 
                "Null_ClientBranch = 1 AND [ClientBranch] IS NULL) OR ([ClientBranch] = @Original"& _ 
                "_ClientBranch)) AND ((@IsNull_ClientBranchName = 1 AND [ClientBranchName] IS NUL"& _ 
                "L) OR ([ClientBranchName] = @Original_ClientBranchName)) AND ((@IsNull_SectorKWG"& _ 
                " = 1 AND [SectorKWG] IS NULL) OR ([SectorKWG] = @Original_SectorKWG)) AND ((@IsN"& _ 
                "ull_SectorKWG_Description = 1 AND [SectorKWG_Description] IS NULL) OR ([SectorKW"& _ 
                "G_Description] = @Original_SectorKWG_Description)) AND ((@IsNull_Sector_CRR = 1 "& _ 
                "AND [Sector_CRR] IS NULL) OR ([Sector_CRR] = @Original_Sector_CRR)) AND ((@IsNul"& _ 
                "l_Sector_CRR_Description = 1 AND [Sector_CRR_Description] IS NULL) OR ([Sector_C"& _ 
                "RR_Description] = @Original_Sector_CRR_Description)) AND ((@IsNull_Sector_BISTA "& _ 
                "= 1 AND [Sector_BISTA] IS NULL) OR ([Sector_BISTA] = @Original_Sector_BISTA)) AN"& _ 
                "D ((@IsNull_Sector_BISTA_Description = 1 AND [Sector_BISTA_Description] IS NULL)"& _ 
                " OR ([Sector_BISTA_Description] = @Original_Sector_BISTA_Description)) AND ((@Is"& _ 
                "Null_Sector_FINREP = 1 AND [Sector_FINREP] IS NULL) OR ([Sector_FINREP] = @Origi"& _ 
                "nal_Sector_FINREP)) AND ((@IsNull_Sector_FINREP_Description = 1 AND [Sector_FINR"& _ 
                "EP_Description] IS NULL) OR ([Sector_FINREP_Description] = @Original_Sector_FINR"& _ 
                "EP_Description)) AND ((@IsNull_BIC11 = 1 AND [BIC11] IS NULL) OR ([BIC11] = @Ori"& _ 
                "ginal_BIC11)) AND ((@IsNull_BIC11_NAME = 1 AND [BIC11_NAME] IS NULL) OR ([BIC11_"& _ 
                "NAME] = @Original_BIC11_NAME)) AND ((@IsNull_LEI_CODE = 1 AND [LEI_CODE] IS NULL"& _ 
                ") OR ([LEI_CODE] = @Original_LEI_CODE)) AND ((@IsNull_Int_Organ = 1 AND [Int_Org"& _ 
                "an] IS NULL) OR ([Int_Organ] = @Original_Int_Organ)) AND ((@IsNull_Tax_Identific"& _ 
                "ation_Nr = 1 AND [Tax_Identification_Nr] IS NULL) OR ([Tax_Identification_Nr] = "& _ 
                "@Original_Tax_Identification_Nr)) AND ((@IsNull_National_Identifier_Type = 1 AND"& _ 
                " [National_Identifier_Type] IS NULL) OR ([National_Identifier_Type] = @Original_"& _ 
                "National_Identifier_Type)) AND ((@IsNull_National_Identifier_Type_Description = "& _ 
                "1 AND [National_Identifier_Type_Description] IS NULL) OR ([National_Identifier_T"& _ 
                "ype_Description] = @Original_National_Identifier_Type_Description)) AND ((@IsNul"& _ 
                "l_National_Identifier_Type_Value = 1 AND [National_Identifier_Type_Value] IS NUL"& _ 
                "L) OR ([National_Identifier_Type_Value] = @Original_National_Identifier_Type_Val"& _ 
                "ue)) AND ((@IsNull_RIAD_Nr = 1 AND [RIAD_Nr] IS NULL) OR ([RIAD_Nr] = @Original_"& _ 
                "RIAD_Nr)) AND ((@IsNull_NUTS_3_Region = 1 AND [NUTS_3_Region] IS NULL) OR ([NUTS"& _ 
                "_3_Region] = @Original_NUTS_3_Region)) AND ((@IsNull_Institutional_Sector = 1 AN"& _ 
                "D [Institutional_Sector] IS NULL) OR ([Institutional_Sector] = @Original_Institu"& _ 
                "tional_Sector)) AND ((@IsNull_Institutional_Sector_Description = 1 AND [Institut"& _ 
                "ional_Sector_Description] IS NULL) OR ([Institutional_Sector_Description] = @Ori"& _ 
                "ginal_Institutional_Sector_Description)) AND ((@IsNull_NACE_Branch_Code = 1 AND "& _ 
                "[NACE_Branch_Code] IS NULL) OR ([NACE_Branch_Code] = @Original_NACE_Branch_Code)"& _ 
                ") AND ((@IsNull_NACE_Branch_Code_Description = 1 AND [NACE_Branch_Code_Descripti"& _ 
                "on] IS NULL) OR ([NACE_Branch_Code_Description] = @Original_NACE_Branch_Code_Des"& _ 
                "cription)) AND ((@IsNull_Legal_Form = 1 AND [Legal_Form] IS NULL) OR ([Legal_For"& _ 
                "m] = @Original_Legal_Form)) AND ((@IsNull_Legal_Form_Description = 1 AND [Legal_"& _ 
                "Form_Description] IS NULL) OR ([Legal_Form_Description] = @Original_Legal_Form_D"& _ 
                "escription)) AND ((@IsNull_Legal_Form_Other = 1 AND [Legal_Form_Other] IS NULL) "& _ 
                "OR ([Legal_Form_Other] = @Original_Legal_Form_Other)) AND ((@IsNull_AnaCredit_Cu"& _ 
                "stomer = 1 AND [AnaCredit_Customer] IS NULL) OR ([AnaCredit_Customer] = @Origina"& _ 
                "l_AnaCredit_Customer)) AND ((@IsNull_AnaCredit_Valid = 1 AND [AnaCredit_Valid] I"& _ 
                "S NULL) OR ([AnaCredit_Valid] = @Original_AnaCredit_Valid)) AND ((@IsNull_Client"& _ 
                "NoM = 1 AND [ClientNoM] IS NULL) OR ([ClientNoM] = @Original_ClientNoM)) AND ((@"& _ 
                "IsNull_InterGroupNameShort = 1 AND [InterGroupNameShort] IS NULL) OR ([InterGrou"& _ 
                "pNameShort] = @Original_InterGroupNameShort)) AND ((@IsNull_GroupStatus = 1 AND "& _ 
                "[GroupStatus] IS NULL) OR ([GroupStatus] = @Original_GroupStatus)) AND ((@IsNull"& _ 
                "_EU_COUNTRY = 1 AND [EU_COUNTRY] IS NULL) OR ([EU_COUNTRY] = @Original_EU_COUNTR"& _ 
                "Y)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, InterGroupID, InterGroupName, Id_Master_Group, MasterGroupName"& _ 
                ", ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence"& _ 
                ", ClientCountryRisk, ClientBranch, ClientBranchName, SectorKWG, SectorKWG_Descri"& _ 
                "ption, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Descriptio"& _ 
                "n, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Or"& _ 
                "gan, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_D"& _ 
                "escription, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutiona"& _ 
                "l_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_D"& _ 
                "escription, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Cust"& _ 
                "omer, AnaCredit_Valid, ClientNoM, InterGroupNameShort, GroupStatus, EU_COUNTRY F"& _ 
                "ROM GROUP_INTER WHERE (InterGroupID = @InterGroupID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Id_Master_Group", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Master_Group", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Master_Group", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MasterGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MasterGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MasterGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientStrasse", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientStrasse", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientStrasse", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Ort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Ort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Ort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientPLZ_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientPLZ_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientPLZ_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryResidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryResidence", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryResidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientCountryRisk", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientCountryRisk", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientCountryRisk", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranch", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranch", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranch", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientBranchName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientBranchName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientBranchName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SectorKWG_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SectorKWG_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SectorKWG_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_CRR_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_CRR_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_CRR_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_BISTA_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_BISTA_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_BISTA_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sector_FINREP_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sector_FINREP_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sector_FINREP_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BIC11_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BIC11_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BIC11_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEI_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEI_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEI_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Int_Organ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Int_Organ", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int_Organ", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tax_Identification_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tax_Identification_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tax_Identification_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_National_Identifier_Type_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_National_Identifier_Type_Value", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "National_Identifier_Type_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIAD_Nr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIAD_Nr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIAD_Nr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUTS_3_Region", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUTS_3_Region", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUTS_3_Region", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Institutional_Sector_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Institutional_Sector_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institutional_Sector_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NACE_Branch_Code_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NACE_Branch_Code_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Description", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Description", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Legal_Form_Other", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Legal_Form_Other", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Legal_Form_Other", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Customer", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Customer", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Customer", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AnaCredit_Valid", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AnaCredit_Valid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnaCredit_Valid", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientNoM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientNoM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientNoM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InterGroupNameShort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InterGroupNameShort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupNameShort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GroupStatus", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GroupStatus", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GroupStatus", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EU_COUNTRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EU_COUNTRY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EU_COUNTRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, InterGroupID, InterGroupName, Id_Master_Group, MasterGroupName,"& _ 
                " ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ClientCountryRisk, ClientBranch, ClientBranchName, S"& _ 
                "ectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BIST"& _ 
                "A, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Sector_BISTA_Description, Sector_FINREP, Sector_FI"& _ 
                "NREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr,"& _ 
                " National_Identifier_Type, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         National_Identifier_Type_D"& _ 
                "escription, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutiona"& _ 
                "l_Sector, Institutional_Sector_Description, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NACE_Bran"& _ 
                "ch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal"& _ 
                "_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        InterGroupNameShort, GroupStatus, EU_COUNTRY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GROUP_INTE"& _ 
                "R"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT AnaCredit_Customer, AnaCredit_Valid, BIC11, BIC11_NAME, ClientBranch, Clie"& _ 
                "ntBranchName, ClientCountryResidence, ClientCountryRisk, ClientName, ClientNoM, "& _ 
                "ClientPLZ_Nr, ClientPLZ_Ort, ClientStrasse, EU_COUNTRY, GroupStatus, ID, Id_Mast"& _ 
                "er_Group, Institutional_Sector, Institutional_Sector_Description, Int_Organ, Int"& _ 
                "erGroupID, InterGroupName, InterGroupNameShort, LEI_CODE, Legal_Form, Legal_Form"& _ 
                "_Description, Legal_Form_Other, MasterGroupName, NACE_Branch_Code, NACE_Branch_C"& _ 
                "ode_Description, NUTS_3_Region, National_Identifier_Type, National_Identifier_Ty"& _ 
                "pe_Description, National_Identifier_Type_Value, RIAD_Nr, SectorKWG, SectorKWG_De"& _ 
                "scription, Sector_BISTA, Sector_BISTA_Description, Sector_CRR, Sector_CRR_Descri"& _ 
                "ption, Sector_FINREP, Sector_FINREP_Description, Tax_Identification_Nr FROM GROU"& _ 
                "P_INTER WHERE (InterGroupID = @Param1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "InterGroupID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As CustomerGroups.GROUP_INTER_ALLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As CustomerGroups.GROUP_INTER_ALLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CustomerGroups.GROUP_INTER_ALLDataTable = New CustomerGroups.GROUP_INTER_ALLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGroupID(ByVal dataTable As CustomerGroups.GROUP_INTER_ALLDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGroupID(ByVal Param1 As String) As CustomerGroups.GROUP_INTER_ALLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            Dim dataTable As CustomerGroups.GROUP_INTER_ALLDataTable = New CustomerGroups.GROUP_INTER_ALLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As CustomerGroups.GROUP_INTER_ALLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As CustomerGroups) As Integer
            Return Me.Adapter.Update(dataSet, "GROUP_INTER_ALL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_InterGroupID As String,  _
                    ByVal Original_InterGroupName As String,  _
                    ByVal Original_Id_Master_Group As String,  _
                    ByVal Original_MasterGroupName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_ClientNoM As String,  _
                    ByVal Original_InterGroupNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_InterGroupID")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_InterGroupID,String)
            End If
            If (Original_InterGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_InterGroupName,String)
            End If
            If (Original_Id_Master_Group Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Id_Master_Group,String)
            End If
            If (Original_MasterGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_MasterGroupName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_ClientNoM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_ClientNoM,String)
            End If
            If (Original_InterGroupNameShort Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_InterGroupNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal InterGroupID As String,  _
                    ByVal InterGroupName As String,  _
                    ByVal Id_Master_Group As String,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String) As Integer
            If (InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("InterGroupID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(InterGroupID,String)
            End If
            If (InterGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(InterGroupName,String)
            End If
            If (Id_Master_Group Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Id_Master_Group,String)
            End If
            If (MasterGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MasterGroupName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ClientBranchName,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(AnaCredit_Valid,String)
            End If
            If (ClientNoM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ClientNoM,String)
            End If
            If (InterGroupNameShort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(InterGroupNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal InterGroupID As String,  _
                    ByVal InterGroupName As String,  _
                    ByVal Id_Master_Group As String,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_InterGroupID As String,  _
                    ByVal Original_InterGroupName As String,  _
                    ByVal Original_Id_Master_Group As String,  _
                    ByVal Original_MasterGroupName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_ClientNoM As String,  _
                    ByVal Original_InterGroupNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            If (InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("InterGroupID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(InterGroupID,String)
            End If
            If (InterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(InterGroupName,String)
            End If
            If (Id_Master_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Id_Master_Group,String)
            End If
            If (MasterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MasterGroupName,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ClientName,String)
            End If
            If (ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ClientStrasse,String)
            End If
            If (ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ClientPLZ_Ort,String)
            End If
            If (ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ClientPLZ_Nr,String)
            End If
            If (ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ClientCountryResidence,String)
            End If
            If (ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ClientCountryRisk,String)
            End If
            If (ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ClientBranch,String)
            End If
            If (ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ClientBranchName,String)
            End If
            If (SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(SectorKWG,String)
            End If
            If (SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SectorKWG_Description,String)
            End If
            If (Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Sector_CRR,String)
            End If
            If (Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Sector_CRR_Description,String)
            End If
            If (Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Sector_BISTA,String)
            End If
            If (Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Sector_BISTA_Description,String)
            End If
            If (Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Sector_FINREP,String)
            End If
            If (Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Sector_FINREP_Description,String)
            End If
            If (BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(BIC11,String)
            End If
            If (BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(BIC11_NAME,String)
            End If
            If (LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(LEI_CODE,String)
            End If
            If (Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Int_Organ,String)
            End If
            If (Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Tax_Identification_Nr,String)
            End If
            If (National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(National_Identifier_Type,String)
            End If
            If (National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(National_Identifier_Type_Description,String)
            End If
            If (National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(National_Identifier_Type_Value,String)
            End If
            If (RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RIAD_Nr,String)
            End If
            If (NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(NUTS_3_Region,String)
            End If
            If (Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Institutional_Sector,String)
            End If
            If (Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Institutional_Sector_Description,String)
            End If
            If (NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(NACE_Branch_Code,String)
            End If
            If (NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(NACE_Branch_Code_Description,String)
            End If
            If (Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Legal_Form,String)
            End If
            If (Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Legal_Form_Description,String)
            End If
            If (Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Legal_Form_Other,String)
            End If
            If (AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(AnaCredit_Customer,String)
            End If
            If (AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(AnaCredit_Valid,String)
            End If
            If (ClientNoM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ClientNoM,String)
            End If
            If (InterGroupNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(InterGroupNameShort,String)
            End If
            If (GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(GroupStatus,String)
            End If
            If (EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(EU_COUNTRY,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_ID,Integer)
            If (Original_InterGroupID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_InterGroupID")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_InterGroupID,String)
            End If
            If (Original_InterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_InterGroupName,String)
            End If
            If (Original_Id_Master_Group Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_Id_Master_Group,String)
            End If
            If (Original_MasterGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_MasterGroupName,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientStrasse Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ClientStrasse,String)
            End If
            If (Original_ClientPLZ_Ort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_ClientPLZ_Ort,String)
            End If
            If (Original_ClientPLZ_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_ClientPLZ_Nr,String)
            End If
            If (Original_ClientCountryResidence Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ClientCountryResidence,String)
            End If
            If (Original_ClientCountryRisk Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_ClientCountryRisk,String)
            End If
            If (Original_ClientBranch Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_ClientBranch,String)
            End If
            If (Original_ClientBranchName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_ClientBranchName,String)
            End If
            If (Original_SectorKWG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_SectorKWG,String)
            End If
            If (Original_SectorKWG_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_SectorKWG_Description,String)
            End If
            If (Original_Sector_CRR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_Sector_CRR,String)
            End If
            If (Original_Sector_CRR_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_Sector_CRR_Description,String)
            End If
            If (Original_Sector_BISTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_Sector_BISTA,String)
            End If
            If (Original_Sector_BISTA_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_Sector_BISTA_Description,String)
            End If
            If (Original_Sector_FINREP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_Sector_FINREP,String)
            End If
            If (Original_Sector_FINREP_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_Sector_FINREP_Description,String)
            End If
            If (Original_BIC11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_BIC11,String)
            End If
            If (Original_BIC11_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_BIC11_NAME,String)
            End If
            If (Original_LEI_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_LEI_CODE,String)
            End If
            If (Original_Int_Organ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_Int_Organ,String)
            End If
            If (Original_Tax_Identification_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_Tax_Identification_Nr,String)
            End If
            If (Original_National_Identifier_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_National_Identifier_Type,String)
            End If
            If (Original_National_Identifier_Type_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_National_Identifier_Type_Description,String)
            End If
            If (Original_National_Identifier_Type_Value Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_National_Identifier_Type_Value,String)
            End If
            If (Original_RIAD_Nr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_RIAD_Nr,String)
            End If
            If (Original_NUTS_3_Region Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_NUTS_3_Region,String)
            End If
            If (Original_Institutional_Sector Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_Institutional_Sector,String)
            End If
            If (Original_Institutional_Sector_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_Institutional_Sector_Description,String)
            End If
            If (Original_NACE_Branch_Code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_NACE_Branch_Code,String)
            End If
            If (Original_NACE_Branch_Code_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_NACE_Branch_Code_Description,String)
            End If
            If (Original_Legal_Form Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_Legal_Form,String)
            End If
            If (Original_Legal_Form_Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_Legal_Form_Description,String)
            End If
            If (Original_Legal_Form_Other Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_Legal_Form_Other,String)
            End If
            If (Original_AnaCredit_Customer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_AnaCredit_Customer,String)
            End If
            If (Original_AnaCredit_Valid Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_AnaCredit_Valid,String)
            End If
            If (Original_ClientNoM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_ClientNoM,String)
            End If
            If (Original_InterGroupNameShort Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_InterGroupNameShort,String)
            End If
            If (Original_GroupStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_GroupStatus,String)
            End If
            If (Original_EU_COUNTRY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_EU_COUNTRY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal InterGroupName As String,  _
                    ByVal Id_Master_Group As String,  _
                    ByVal MasterGroupName As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientStrasse As String,  _
                    ByVal ClientPLZ_Ort As String,  _
                    ByVal ClientPLZ_Nr As String,  _
                    ByVal ClientCountryResidence As String,  _
                    ByVal ClientCountryRisk As String,  _
                    ByVal ClientBranch As String,  _
                    ByVal ClientBranchName As String,  _
                    ByVal SectorKWG As String,  _
                    ByVal SectorKWG_Description As String,  _
                    ByVal Sector_CRR As String,  _
                    ByVal Sector_CRR_Description As String,  _
                    ByVal Sector_BISTA As String,  _
                    ByVal Sector_BISTA_Description As String,  _
                    ByVal Sector_FINREP As String,  _
                    ByVal Sector_FINREP_Description As String,  _
                    ByVal BIC11 As String,  _
                    ByVal BIC11_NAME As String,  _
                    ByVal LEI_CODE As String,  _
                    ByVal Int_Organ As String,  _
                    ByVal Tax_Identification_Nr As String,  _
                    ByVal National_Identifier_Type As String,  _
                    ByVal National_Identifier_Type_Description As String,  _
                    ByVal National_Identifier_Type_Value As String,  _
                    ByVal RIAD_Nr As String,  _
                    ByVal NUTS_3_Region As String,  _
                    ByVal Institutional_Sector As String,  _
                    ByVal Institutional_Sector_Description As String,  _
                    ByVal NACE_Branch_Code As String,  _
                    ByVal NACE_Branch_Code_Description As String,  _
                    ByVal Legal_Form As String,  _
                    ByVal Legal_Form_Description As String,  _
                    ByVal Legal_Form_Other As String,  _
                    ByVal AnaCredit_Customer As String,  _
                    ByVal AnaCredit_Valid As String,  _
                    ByVal ClientNoM As String,  _
                    ByVal InterGroupNameShort As String,  _
                    ByVal GroupStatus As String,  _
                    ByVal EU_COUNTRY As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_InterGroupID As String,  _
                    ByVal Original_InterGroupName As String,  _
                    ByVal Original_Id_Master_Group As String,  _
                    ByVal Original_MasterGroupName As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientStrasse As String,  _
                    ByVal Original_ClientPLZ_Ort As String,  _
                    ByVal Original_ClientPLZ_Nr As String,  _
                    ByVal Original_ClientCountryResidence As String,  _
                    ByVal Original_ClientCountryRisk As String,  _
                    ByVal Original_ClientBranch As String,  _
                    ByVal Original_ClientBranchName As String,  _
                    ByVal Original_SectorKWG As String,  _
                    ByVal Original_SectorKWG_Description As String,  _
                    ByVal Original_Sector_CRR As String,  _
                    ByVal Original_Sector_CRR_Description As String,  _
                    ByVal Original_Sector_BISTA As String,  _
                    ByVal Original_Sector_BISTA_Description As String,  _
                    ByVal Original_Sector_FINREP As String,  _
                    ByVal Original_Sector_FINREP_Description As String,  _
                    ByVal Original_BIC11 As String,  _
                    ByVal Original_BIC11_NAME As String,  _
                    ByVal Original_LEI_CODE As String,  _
                    ByVal Original_Int_Organ As String,  _
                    ByVal Original_Tax_Identification_Nr As String,  _
                    ByVal Original_National_Identifier_Type As String,  _
                    ByVal Original_National_Identifier_Type_Description As String,  _
                    ByVal Original_National_Identifier_Type_Value As String,  _
                    ByVal Original_RIAD_Nr As String,  _
                    ByVal Original_NUTS_3_Region As String,  _
                    ByVal Original_Institutional_Sector As String,  _
                    ByVal Original_Institutional_Sector_Description As String,  _
                    ByVal Original_NACE_Branch_Code As String,  _
                    ByVal Original_NACE_Branch_Code_Description As String,  _
                    ByVal Original_Legal_Form As String,  _
                    ByVal Original_Legal_Form_Description As String,  _
                    ByVal Original_Legal_Form_Other As String,  _
                    ByVal Original_AnaCredit_Customer As String,  _
                    ByVal Original_AnaCredit_Valid As String,  _
                    ByVal Original_ClientNoM As String,  _
                    ByVal Original_InterGroupNameShort As String,  _
                    ByVal Original_GroupStatus As String,  _
                    ByVal Original_EU_COUNTRY As String) As Integer
            Return Me.Update(Original_InterGroupID, InterGroupName, Id_Master_Group, MasterGroupName, ClientName, ClientStrasse, ClientPLZ_Ort, ClientPLZ_Nr, ClientCountryResidence, ClientCountryRisk, ClientBranch, ClientBranchName, SectorKWG, SectorKWG_Description, Sector_CRR, Sector_CRR_Description, Sector_BISTA, Sector_BISTA_Description, Sector_FINREP, Sector_FINREP_Description, BIC11, BIC11_NAME, LEI_CODE, Int_Organ, Tax_Identification_Nr, National_Identifier_Type, National_Identifier_Type_Description, National_Identifier_Type_Value, RIAD_Nr, NUTS_3_Region, Institutional_Sector, Institutional_Sector_Description, NACE_Branch_Code, NACE_Branch_Code_Description, Legal_Form, Legal_Form_Description, Legal_Form_Other, AnaCredit_Customer, AnaCredit_Valid, ClientNoM, InterGroupNameShort, GroupStatus, EU_COUNTRY, Original_ID, Original_InterGroupID, Original_InterGroupName, Original_Id_Master_Group, Original_MasterGroupName, Original_ClientName, Original_ClientStrasse, Original_ClientPLZ_Ort, Original_ClientPLZ_Nr, Original_ClientCountryResidence, Original_ClientCountryRisk, Original_ClientBranch, Original_ClientBranchName, Original_SectorKWG, Original_SectorKWG_Description, Original_Sector_CRR, Original_Sector_CRR_Description, Original_Sector_BISTA, Original_Sector_BISTA_Description, Original_Sector_FINREP, Original_Sector_FINREP_Description, Original_BIC11, Original_BIC11_NAME, Original_LEI_CODE, Original_Int_Organ, Original_Tax_Identification_Nr, Original_National_Identifier_Type, Original_National_Identifier_Type_Description, Original_National_Identifier_Type_Value, Original_RIAD_Nr, Original_NUTS_3_Region, Original_Institutional_Sector, Original_Institutional_Sector_Description, Original_NACE_Branch_Code, Original_NACE_Branch_Code_Description, Original_Legal_Form, Original_Legal_Form_Description, Original_Legal_Form_Other, Original_AnaCredit_Customer, Original_AnaCredit_Valid, Original_ClientNoM, Original_InterGroupNameShort, Original_GroupStatus, Original_EU_COUNTRY)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _gROUP_CLIENTTableAdapter As GROUP_CLIENTTableAdapter
        
        Private _gROUP_CLIENT_DETAILSTableAdapter As GROUP_CLIENT_DETAILSTableAdapter
        
        Private _gROUP_INTERTableAdapter As GROUP_INTERTableAdapter
        
        Private _gROUP_MASTERTableAdapter As GROUP_MASTERTableAdapter
        
        Private _gROUP_MASTER_ALLTableAdapter As GROUP_MASTER_ALLTableAdapter
        
        Private _gROUP_INTER_ALLTableAdapter As GROUP_INTER_ALLTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GROUP_CLIENTTableAdapter() As GROUP_CLIENTTableAdapter
            Get
                Return Me._gROUP_CLIENTTableAdapter
            End Get
            Set
                Me._gROUP_CLIENTTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GROUP_CLIENT_DETAILSTableAdapter() As GROUP_CLIENT_DETAILSTableAdapter
            Get
                Return Me._gROUP_CLIENT_DETAILSTableAdapter
            End Get
            Set
                Me._gROUP_CLIENT_DETAILSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GROUP_INTERTableAdapter() As GROUP_INTERTableAdapter
            Get
                Return Me._gROUP_INTERTableAdapter
            End Get
            Set
                Me._gROUP_INTERTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GROUP_MASTERTableAdapter() As GROUP_MASTERTableAdapter
            Get
                Return Me._gROUP_MASTERTableAdapter
            End Get
            Set
                Me._gROUP_MASTERTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GROUP_MASTER_ALLTableAdapter() As GROUP_MASTER_ALLTableAdapter
            Get
                Return Me._gROUP_MASTER_ALLTableAdapter
            End Get
            Set
                Me._gROUP_MASTER_ALLTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GROUP_INTER_ALLTableAdapter() As GROUP_INTER_ALLTableAdapter
            Get
                Return Me._gROUP_INTER_ALLTableAdapter
            End Get
            Set
                Me._gROUP_INTER_ALLTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._gROUP_CLIENTTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gROUP_CLIENTTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gROUP_CLIENTTableAdapter.Connection
                End If
                If ((Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gROUP_CLIENT_DETAILSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gROUP_CLIENT_DETAILSTableAdapter.Connection
                End If
                If ((Not (Me._gROUP_INTERTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gROUP_INTERTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gROUP_INTERTableAdapter.Connection
                End If
                If ((Not (Me._gROUP_MASTERTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gROUP_MASTERTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gROUP_MASTERTableAdapter.Connection
                End If
                If ((Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gROUP_MASTER_ALLTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gROUP_MASTER_ALLTableAdapter.Connection
                End If
                If ((Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gROUP_INTER_ALLTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gROUP_INTER_ALLTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._gROUP_CLIENTTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gROUP_INTERTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gROUP_MASTERTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As CustomerGroups, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._gROUP_MASTERTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GROUP_MASTER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gROUP_MASTERTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gROUP_INTERTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GROUP_INTER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gROUP_INTERTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gROUP_CLIENTTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GROUP_CLIENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gROUP_CLIENTTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GROUP_CLIENT_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gROUP_CLIENT_DETAILSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GROUP_MASTER_ALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gROUP_MASTER_ALLTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GROUP_INTER_ALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gROUP_INTER_ALLTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As CustomerGroups, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._gROUP_MASTERTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GROUP_MASTER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gROUP_MASTERTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gROUP_INTERTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GROUP_INTER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gROUP_INTERTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gROUP_CLIENTTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GROUP_CLIENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gROUP_CLIENTTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GROUP_CLIENT_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gROUP_CLIENT_DETAILSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GROUP_MASTER_ALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gROUP_MASTER_ALLTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GROUP_INTER_ALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gROUP_INTER_ALLTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As CustomerGroups, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GROUP_INTER_ALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gROUP_INTER_ALLTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GROUP_MASTER_ALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gROUP_MASTER_ALLTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GROUP_CLIENT_DETAILS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gROUP_CLIENT_DETAILSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gROUP_CLIENTTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GROUP_CLIENT.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gROUP_CLIENTTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gROUP_INTERTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GROUP_INTER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gROUP_INTERTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gROUP_MASTERTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GROUP_MASTER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gROUP_MASTERTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As CustomerGroups) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._gROUP_CLIENTTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gROUP_CLIENTTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gROUP_CLIENT_DETAILSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gROUP_INTERTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gROUP_INTERTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gROUP_MASTERTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gROUP_MASTERTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gROUP_MASTER_ALLTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gROUP_INTER_ALLTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._gROUP_CLIENTTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gROUP_CLIENTTableAdapter, Me._gROUP_CLIENTTableAdapter.Connection)
                    Me._gROUP_CLIENTTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_CLIENTTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gROUP_CLIENTTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gROUP_CLIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gROUP_CLIENTTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gROUP_CLIENT_DETAILSTableAdapter, Me._gROUP_CLIENT_DETAILSTableAdapter.Connection)
                    Me._gROUP_CLIENT_DETAILSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_CLIENT_DETAILSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gROUP_CLIENT_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gROUP_CLIENT_DETAILSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gROUP_CLIENT_DETAILSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gROUP_INTERTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gROUP_INTERTableAdapter, Me._gROUP_INTERTableAdapter.Connection)
                    Me._gROUP_INTERTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_INTERTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gROUP_INTERTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gROUP_INTERTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gROUP_INTERTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gROUP_MASTERTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gROUP_MASTERTableAdapter, Me._gROUP_MASTERTableAdapter.Connection)
                    Me._gROUP_MASTERTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_MASTERTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gROUP_MASTERTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gROUP_MASTERTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gROUP_MASTERTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gROUP_MASTER_ALLTableAdapter, Me._gROUP_MASTER_ALLTableAdapter.Connection)
                    Me._gROUP_MASTER_ALLTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_MASTER_ALLTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gROUP_MASTER_ALLTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gROUP_MASTER_ALLTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gROUP_MASTER_ALLTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gROUP_INTER_ALLTableAdapter, Me._gROUP_INTER_ALLTableAdapter.Connection)
                    Me._gROUP_INTER_ALLTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_INTER_ALLTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gROUP_INTER_ALLTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gROUP_INTER_ALLTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gROUP_INTER_ALLTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._gROUP_CLIENTTableAdapter) Is Nothing) Then
                    Me._gROUP_CLIENTTableAdapter.Connection = CType(revertConnections(Me._gROUP_CLIENTTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_CLIENTTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gROUP_CLIENT_DETAILSTableAdapter) Is Nothing) Then
                    Me._gROUP_CLIENT_DETAILSTableAdapter.Connection = CType(revertConnections(Me._gROUP_CLIENT_DETAILSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_CLIENT_DETAILSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gROUP_INTERTableAdapter) Is Nothing) Then
                    Me._gROUP_INTERTableAdapter.Connection = CType(revertConnections(Me._gROUP_INTERTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_INTERTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gROUP_MASTERTableAdapter) Is Nothing) Then
                    Me._gROUP_MASTERTableAdapter.Connection = CType(revertConnections(Me._gROUP_MASTERTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_MASTERTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gROUP_MASTER_ALLTableAdapter) Is Nothing) Then
                    Me._gROUP_MASTER_ALLTableAdapter.Connection = CType(revertConnections(Me._gROUP_MASTER_ALLTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_MASTER_ALLTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gROUP_INTER_ALLTableAdapter) Is Nothing) Then
                    Me._gROUP_INTER_ALLTableAdapter.Connection = CType(revertConnections(Me._gROUP_INTER_ALLTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gROUP_INTER_ALLTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
